intent,snippet
Python - Ignore letter case,"rules.lower() == rulesa.lower()
"
boost::python passing reference of python::list,"#include <iostream> // std::cout
#include <utility>  // std::make_pair
#include <boost/foreach.hpp>
#include <boost/python.hpp>
#include <boost/python/stl_iterator.hpp>
#include <boost/thread.hpp>

boost::python::list list;

/// @brief Store handle to the list.
///
/// @param pylist Python list for which a handle will be maintained.
void set(const boost::python::list& pylist)
{
  list = pylist;
}

// Iterate over the current list, printing all ints.
void display()
{
  std::cout << ""in display"" << std::endl;
  typedef boost::python::stl_input_iterator<int> iterator_type;
  BOOST_FOREACH(const iterator_type::value_type& data, 
                std::make_pair(iterator_type(list), // begin
                               iterator_type()))    // end
  {
    std::cout << data << std::endl;
  }
}

/// @brief RAII class used to lock and unlock the GIL.
class gil_lock
{
public:
  gil_lock()  { state_ = PyGILState_Ensure(); }
  ~gil_lock() { PyGILState_Release(state_);   }
private:
  PyGILState_STATE state_;
}; 

/// @brief Entry point for delayed display thread.
///
/// @param Delay in seconds.
void display_in_main(unsigned int seconds)
{
  boost::this_thread::sleep_for(boost::chrono::seconds(seconds));
  gil_lock lock; // Acquire GIL.
  display();     // Can safely modify python objects.
  // GIL released when lock goes out of scope.
}

/// @brief Schedule the list to be displayed.
///
/// @param Delay in seconds.
void display_in(unsigned int seconds)
{
  // Start detached thread.
  boost::thread(&display_in_main, seconds).detach();
}

BOOST_PYTHON_MODULE(example) {
  PyEval_InitThreads(); // Initialize GIL to support non-python threads.

  namespace python = boost::python;
  python::def(""set"",        &set);
  python::def(""display"",    &display);
  python::def(""display_in"", &display_in);
}
"
Making multiple if statements less verbose,"for x in soup.find_all('a'):
    for k, v in categories.iteritems():
        if v in x['href']:
            return k
"
Good practice default values,"brands['Suzuki']
"
Django Releationship between multiple fields,">>> from myapp.models import object_a, object_b, Other
>>> a = object_a()
>>> a.foo = 'test'
>>> a.bar = 'value'
>>> a.save()
>>> b = object_b()
>>> b.foop = 'random'
>>> b.barp = 'values'
>>> b.save()
"
How to create a memoryview for a non-contiguous memory location?,"a = bytearray(b""Hello World"") # put your records into byte arrays like this
b = bytearray(b""Stack Overflow"")
complexStructure = bytearray(a[0:6]+b[0:]) # Slice and join arrays to form
                                           # new array with just data from your
                                           # high level entity
print complexStructure
"
Pausing from within a tkinter function,"def interval_screen():
    ...
    i_screen.after(3000, maker_screen)

def masker_screen():
    ...
    m_screen.after(3000, lambda: scale_screen(event = None))
"
common lisp equivalent of a python idiom," (defpackage ""MY-PACKAGE""
   (:use ""CL"")
   (:import-from ""SPLIT-SEQUENCE"" ""SPLIT-SEQUENCE""))
"
Generating numpy arrays for scikit linear regression model,"from sklearn.linear_model import LinearRegression

model = LinearRegression()
model.fit(X, y)
"
how can i tell if a string contains ONLY digits and spaces in python using regex,"/^[0-9 ]+$/
"
How to find the iteration index in this loop,"animations = {
    action : {
        direction : (
            (duration, (i * len(directions) + j, x)) for x in frames
        ) for j, direction in enumerate(directions)
    } for i, action in enumerate(actions)
}
"
Trying to post to a form that uses frames and retrieve the data using python,">gi|532319|pir|TVFV2E|TVFV2E envelope protein
ELRLRYCAPAGFALLKCNDADYDGFKTNCSNVSVVH
CTNLMNTTVTTGLLLNGSYSENRTQIWQKHRTSNDS
ALILLNKHYNLTVTCKRPGNKTVLPVTIMAGLVFHSQ
KYNLRLRQAWCHFPSNWKGAWKEVKEEIVNLPKER
YRGTNDPKRIFFQRQWGDPETANLWFNCHGEFFYCK
MDWFLNYLNNLTVDADHNECKNTSGTKSGNKRAPG
PCVQRTYVACHIRSVIIWLETISKKTYAPPREGHLECT
STVTGMTVELNYIPKNRTNVTLSPQIESIWAAELDRY
KLVEITPIGFAPTEVRRYTGGHERQKRVPFVXXXXXX
XXXXXXXXXXXXXXXXVQSQHLLAGILQQQKNL
LAAVEAQQQMLKLTIWGVK
"
How to sort a list of tuples by the alphabetical ordering of one of its elements,">>> import operator
>>> sorted(my_list, key=operator.itemgetter(2), reverse=True)
"
Sparsify a kernel/similarity matrix in matlab,"A (Before) =
     1     2     3     4     5
     9     8     6     4     5
     3     1     7     8     9
     5     6     2     6     7

A (After) =
     0     0     0     4     5
     9     8     0     0     0
     0     0     0     8     9
     0     6     0     0     7
"
Python lists with irregular format,">>> d = dict([(0,0),(1,0),(2,0),(3,0)])
>>> print(d)
{0: 0, 1: 0, 2: 0, 3: 0}
>>> d.update([(0, 0.73578249201070511), (3, 0.25197028613750805)])
>>> print(d)
{0: 0.7357824920107051, 1: 0, 2: 0, 3: 0.25197028613750805}
"
Python Read from Stdin with Arguments,"$ pip install docopt
"
Matplotlib scatter plot with 2 y-points per x-point,"plt.plot(x, [i for (i,j) in y], 'rs', markersize = 12 )
plt.plot(x, [j for (i,j) in y], 'bo', markeresize = 8)
"
Render template located in a unregistered folder in Django,"return render(request, 'demo/index.html')
"
"Optimise comparison between two lists, giving indices that differ","[i for i, (o, n) in enumerate(izip_longest(old, new)) 
                          if o != n and i not in ignore]
"
how to get dict value by regex in python,"result = []
for d in dict1:
    for x in dict1[d]:
        if regex.search(d):
            result.append(x)
"
Check if current user has permission for pyramid service?,"for method, view, args in service.definitions:
    if 'permission' in args:
        # Now start looking at permission to see if they match what's given by the parent ACL in the resource class
        # Also, the special ""__no_permission_required__"" value means we should not have a Security Requirement Object
        if args['permission'] == NO_PERMISSION_REQUIRED :
            # Interesting....
"
Using tkinter to assign a global variable and destroy the gui,"import sys
from Tkinter import *

def assign(value):
    global x
    x = value
    mGui.destroy()

mGui = Tk()
mGui.geometry(""500x100+500+300"")
mGui.title(""Attribute Selection Window"")

frame1 = Frame(mGui)
frame1.pack()

mLabel = Label(frame1, text = ""Please select one of the following attributes to assign to the selected Convwks feature:"").grid(row=0, column=0)

frame2 = Frame(mGui)
frame2.pack()


mButton = Button(frame2, text = ""CON"", command = lambda: assign(""CON"")).grid(row=0, column=0, padx=10)
mButton = Button(frame2, text = ""MS"", command = lambda: assign(""MS"")).grid(row=0, column=1, padx=10)
mButton = Button(frame2, text = ""DRN"", command = lambda: assign(""DRN"")).grid(row=0, column=2, padx=10)
mGui.mainloop()     #FOR WINDOWS ONLY
"
Preserving argument default values while method chaining,">>> def wrapper(param1, *stuff, **kargs):
...  print(param1)
...  print(stuff)
...  print(args)
...
>>> wrapper(3, 4, 5, foo=2)
3
(4, 5)
{'foo': 2}
"
"Sorting a dictionary by its value, and then its key if values are equal then outputting a list","sorted_pairs = sorted(sorted(map.iteritems()), key=operator.itemgetter(1), reverse=True)
"
More Efficient way to parse JSON and convert to CSV in Python,"for files in zip_files:
    with zipfile.ZipFile(files, 'r') as myzip:
        dfs = []
        for logfile in myzip.namelist():
            list1, list2 = [], []
            with myzip.open(logfile) as f:
                for line in f:
                    try:
                        parsed = json.loads(line[:-2])
                    except ValueError as e: # Presumably we only wish to catch json value errors
                        pass
                    else:
                        if (""key1"" in parsed
                            and ""val1"" in parsed['key1']['key2']
                            and ""val2"" in parsed['key3']):
                            list1.append(parsed['key1'])
                            list2.append(parsed['key3'])
            # Build a temporary dataframe to filter the duplicates:
            tmp = pd.DataFrame(list2).join(pd.DataFrame(list1))
            tmp['col1'] = tmp['col1'].apply(lambda x: ','.join(str(i) for i in x))
            tmp.drop_duplicates(inplace=True)
            dfs.append(tmp)

        # Write only once
        pd.concat(dfs, ignore_index=True).to_csv(csvout, header=None, index=False)
"
Convert list of list into one big list pyhton,"new_list = [list2[k] for k in list1]
"
What is the syntax to insert one list into another list in python?,">>> x = [1,2,3]
>>> y = [4,5,6]
>>> x + y
[1, 2, 3, 4, 5, 6]
>>> x.extend(y)
>>> x
[1, 2, 3, 4, 5, 6] 
"
"Pandas concatenate, with no duplicate indices or columns","# Obtain a sliced version of df1, showing only
# the columns and rows shared with the df4
df1_sliced = \
    result.loc[result.index.isin(df4.index),
               result.columns.isin(df4.columns)]
df4_sliced = \
    df4.loc[df4.index.isin(df1.index),
            df4.columns.isin(df1.columns)]

# Obtain a mask of the conflicts in the current segment
# as compared with all previously loaded data.  That is:
# NaN NaN = False
# NaN 2   = False
# 2   2   = False
# 2   3   = True
# 2   NaN = True
data_conflicts = (pd.notnull(df1_sliced) & 
                  (df1_sliced != df4_sliced))

if data_conflicts.any().any():
    raise AssertionError(""Data from this segment conflicted ""
                         ""with previously loaded data:\n"", 
                         data_conflicts)
"
Parsing a generic data file in python,"d = {}
for line in data:
    key, value = line.split(':')
    d[key] = value
"
Measure distance between data set of 5D,"for row in S.iterrows():
    M = np.matrix( [row[1]['x'], row[1]['center']] )
    print pdist(M, 'euclidean')
"
Get entities from NLTK.tree result,">>> from nltk import Tree
>>> parsed_tree = Tree('ROOT', [Tree('S', [Tree('NP', [Tree('NN', ['Tsunami']), Tree('NNS', ['earthquakes'])]), Tree('VP', [Tree('VBP', ['have']), Tree('ADVP', [Tree('RB', ['also'])]), Tree('VP', [Tree('VBN', ['been']), Tree('VP', [Tree('VBN', ['linked']), Tree('PP', [Tree('TO', ['to']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NN', ['presence'])]), Tree('PP', [Tree('IN', ['of']), Tree('NP', [Tree('NP', [Tree('DT', ['a']), Tree('JJ', ['thin']), Tree('NN', ['layer'])]), Tree('PP', [Tree('IN', ['of']), Tree('S', [Tree('VP', [Tree('VBN', ['subducted']), Tree('NP', [Tree('NP', [Tree('JJ', ['sedimentary']), Tree('NN', ['rock'])]), Tree('PP', [Tree('IN', ['along']), Tree('NP', [Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('JJS', ['uppermost']), Tree('NN', ['part'])]), Tree('PP', [Tree('IN', ['of']), Tree('NP', [Tree('DT', ['the']), Tree('NN', ['plate']), Tree('NN', ['interface'])])])]), Tree(',', [',']), Tree('UCP', [Tree('RB', ['as']), Tree('S', [Tree('VP', [Tree('VBZ', ['is']), Tree('VP', [Tree('VBN', ['thought']), Tree('S', [Tree('VP', [Tree('TO', ['to']), Tree('VP', [Tree('VB', ['be']), Tree('ADJP', [Tree('JJ', ['present']), Tree('PP', [Tree('IN', ['in']), Tree('NP', [Tree('NP', [Tree('NNS', ['areas'])]), Tree('PP', [Tree('IN', ['of']), Tree('NP', [Tree('JJ', ['significant']), Tree('NN', ['topography'])])])])])]), Tree('PP', [Tree('IN', ['at']), Tree('NP', [Tree('NP', [Tree('DT', ['the']), Tree('NN', ['top'])]), Tree('PP', [Tree('IN', ['of']), Tree('NP', [Tree('DT', ['the']), Tree('JJ', ['oceanic']), Tree('NN', ['crust'])])])])])])])])])])]), Tree(',', [',']), Tree('CC', ['and']), Tree('SBAR', [Tree('WHADVP', [Tree('WRB', ['where'])]), Tree('S', [Tree('NP', [Tree('NN', ['propagation'])]), Tree('VP', [Tree('VBD', ['was']), Tree('PP', [Tree('IN', ['in']), Tree('NP', [Tree('DT', ['an']), Tree('JJ', ['up-dip']), Tree('NN', ['direction'])])]), Tree(',', [',']), Tree('ADVP', [Tree('RB', ['possibly'])])])])])])])])]), Tree('S', [Tree('VP', [Tree('VBG', ['reaching']), Tree('NP', [Tree('DT', ['the']), Tree('NN', ['seafloor'])])])])])])])])])])])])])]), Tree('.', ['.'])])])

>>> np = ["" "".join(i.leaves()) for i in parsed_tree.subtrees() if i.label() == 'NP']
>>> np
['Tsunami earthquakes', 'the presence of a thin layer of subducted sedimentary rock along the uppermost part of the plate interface , as is thought to be present in areas of significant topography at the top of the oceanic crust , and where propagation was in an up-dip direction , possibly reaching the seafloor', 'the presence', 'a thin layer of subducted sedimentary rock along the uppermost part of the plate interface , as is thought to be present in areas of significant topography at the top of the oceanic crust , and where propagation was in an up-dip direction , possibly reaching the seafloor', 'a thin layer', 'sedimentary rock along the uppermost part of the plate interface , as is thought to be present in areas of significant topography at the top of the oceanic crust , and where propagation was in an up-dip direction , possibly', 'sedimentary rock', 'the uppermost part of the plate interface , as is thought to be present in areas of significant topography at the top of the oceanic crust , and where propagation was in an up-dip direction , possibly', 'the uppermost part of the plate interface', 'the uppermost part', 'the plate interface', 'areas of significant topography', 'areas', 'significant topography', 'the top of the oceanic crust', 'the top', 'the oceanic crust', 'propagation', 'an up-dip direction', 'the seafloor']
"
get the path in a file inside {} by python,"f = open(""t.txt"")

import re

identifier=None
brace_level=0
section=None
clause=None
req_clause_found=False
def in_req_clause(): return section=='WFS' and clause=='trees'

for l in (l.strip() for l in f):
    if req_clause_found and not in_req_clause(): break

    m=re.match(r'[A-Z]+',l)    #adjust if section names can be different
    if m and section is None:
        identifier=m.group(0)
        continue
    m=re.match(r'\{(\s|$)',l)
    if m:
        brace_level+=1
        if identifier is not None and brace_level==1:
            section=identifier
            identifier=None
        continue
    else: identifier=None
    m=re.match(r'\}(\s|$)',l)
    if m:
        brace_level-=1
        if brace_level==0: section=None
        clause=None
        continue
    m=re.match(r'-([A-Za-z]+)',l)   #adjust if clause names can be different
    if m and brace_level==1:
        clause=m.group(1)
        continue
    m=re.match(r'""(.*)""$',l)
    if m and in_req_clause():
        print m.group(1)
        req_clause_found=True
        continue
"
How to invert alternate bits of a number,"n ^ sum(2**i for i in range(0, len(bin(n))-2, 2))
"
Getting a list from a config file with ConfigParser in Python,"[filters]
filtersToCheck = foo,192.168.1.2,barbaz
"
"Django-Tastypie-MongoEngine, How To Serialize Data - Create Response Method When Using prepend_urls","class HelperMethods:
    @staticmethod
    def obj_to_dict(object):
        return_data = {}
        for property, value in vars(object).iteritems():
            return_data[property] = value

        return return_data['_data']

    @staticmethod
    def obj_to_list(objects):
        return_data = []
        for object in objects:
            return_data.append(HelperMethods.obj_to_dict(object))
        return return_data
"
I want to create a program that can analyze downloaded text file in python,"print words.count('hello')
"
Convert file into string then Rebuild that String and make it a file again,"#read from a file
with open(""path/to/file"", ""rb"") as read_file:
    contents = read_file.read()
#write to a file
with open(""path/to/file"", ""wb"") as write_file:
    write_file.write(contents)
"
Fill array from raw_input,"my_array = []
for i in xrange(number_of_times):
    my_array.append(raw_input('Input: '))

print my_array  # Shows you the results
"
Understanding Python Attributes and Methods,">>> foo = type(42)
>>> foo
<type 'int'>
"
PyQt5 signal-slot decorator example,"def factory(QClass, cls_name, signal_type):
    return type(cls_name, (QClass,), {'signal': pyqtSignal(signal_type)})

MySlider = factory(QSlider, 'MySlider', int)
self.sld = MySlider(Qt.Horizontal)
self.sld.signal.connect(self.on_signal)
"
printing parts of a string while skipping others in Python,"print ''.join([myVariable[i] for i in [0, 3, 4, 6, 7]])
"
Python parsing through a line using for loop?,"
>>> lines = """"""X-DSPAM-Confidence: 1
X-DSPAM-Confidence: 5
Nothing on this line
X-DSPAM-Confidence: 4""""""

>>> for line in lines.splitlines():
    print line


X-DSPAM-Confidence: 1
X-DSPAM-Confidence: 5
Nothing on this line
X-DSPAM-Confidence: 4
"
How do I pass in variables into python import path,"wim@wim-imac:/tmp$ python -i -c """"
>>> from importlib import import_module
>>> mod_a_b_c = import_module('a.b.c')
>>> mod_a_b_c.d
'd in b'
>>> mod_a_y_c = import_module('a.y.c')
>>> mod_a_y_c.d
'd in y'
"
Basic Python imports question,"import pkg1.util as util
"
Nx3 column data to 2d matrix for image processing,"data = np.loadtxt('file.txt', [('x',float), ('y',float), ('value',float)])
"
Making a Tkinter calculator that gives back percent at a given point in a interval,"rpmMax = rpmMaxSet.get()
rpmMin = rpmMinSet.get()
rpmPoint = rpmPointSet.get()
newrpmMax = rpmMax- rpmMin
result = rpmPoint / newrpmMax
"
Python sum of ASCII values of all characters in a string,">>> sum(bytearray(""abcdefgh""))
804
"
Python: search through values of dict for regex,">>> 'foo' in 'blah blah'
False
>>> 'foo' in 'blah foo blah'
True
"
Do not print stack-trace using Pool python,"import asyncio
from asyncio.subprocess import PIPE

loop = asyncio.get_event_loop()

@asyncio.coroutine
def worker(some_element):
    process = yield from asyncio.create_subprocess_exec(*SOME_COMMAND, stdout=PIPE)
    try:
        cmd_res = yield from process.communicate()
    except KeyboardInterrupt:
        process.terminate()
        return
    try:
        pass # Process your result here
    except KeyboardInterrupt:
        return

# Start all workers
workers = []
for element in some_list:
    w = worker(element)
    workers.append(w)
    asyncio.async(w)

# Run until everything complete
loop.run_until_complete(asyncio.wait(workers))
"
Using a file to store optparse arguments,"(<Values at 0x2182c88: {'flag': 'japan.png', 'language': 'Japanese'}>, [])
"
Finding Interfaces,"list_pairs = permutations(d.values(), 2)
item_pairs = chain.from_iterable(product(lst1, lst2) for lst1, lst2 in list_pairs)
distances = [dist(e1, e2) for e1, e2 in item_pairs]
"
How to visualize scalar 2D data with Matplotlib?,"from pylab import *
origin = 'lower'

delta = 0.025

x = y = arange(-3.0, 3.01, delta)
X, Y = meshgrid(x, y)
Z1 = bivariate_normal(X, Y, 1.0, 1.0, 0.0, 0.0)
Z2 = bivariate_normal(X, Y, 1.5, 0.5, 1, 1)
Z = 10 * (Z1 - Z2)

nr, nc = Z.shape

CS = contourf(
    X, Y, Z,
    levels = linspace(Z.min(), Z.max(), len(x)),
    ls = '-',
    cmap=cm.bone,
    origin=origin)

CS1 = contour(
    CS,
    levels = linspace(Z.min(), Z.max(), len(x)),
    ls = '-',
    cmap=cm.bone,
    origin=origin)

show()
"
_sha import in python hashlib,"    if COMPILED_WITH_PYDEBUG or not have_usable_openssl:
        # The _sha module implements the SHA1 hash algorithm.
        exts.append( Extension('_sha', ['shamodule.c']) )
        # The _md5 module implements the RSA Data Security, Inc. MD5
        # Message-Digest Algorithm, described in RFC 1321.  The
        # necessary files md5.c and md5.h are included here.
        exts.append( Extension('_md5',
                        sources = ['md5module.c', 'md5.c'],
                        depends = ['md5.h']) )
"
SQLAlchemy: print the actual query,"# coding: UTF-8
from datetime import datetime
from decimal import Decimal

from literalquery import literalquery


def test():
    from sqlalchemy.sql import table, column, select

    mytable = table('mytable', column('mycol'))
    values = (
        5,
        u'snowman: ☃',
        b'UTF-8 snowman: \xe2\x98\x83',
        datetime.now(),
        Decimal('3.14159'),
        10 ** 20,  # a long integer
    )

    statement = select([mytable]).where(mytable.c.mycol.in_(values)).limit(1)
    print(literalquery(statement))


if __name__ == '__main__':
    test()
"
"Extract items from n-line chunks in a file, count frequency of items for each chunk, Python","file_contents = open(file).readlines()  #file as list
""""""use zip to get the entire file as list of 5-line chunk tuples"""""" 
five_line_increments = zip(*[iter(file_contents)]*5) 
for chunk in five_line_increments:  #for each 5-line chunk...
    word_freq = {} #word frequencies for each chunk
    for sentence in chunk:          #...and for each sentence in that chunk
        words = """".join(sentence.split('\t')[3]).strip('\n').split(', ') #get the ITEMS column at index 3 and put them in list
        for word in words:
            if word not in word_freq:
                word_freq[word] = 1
            else:
                word_freq[word] += 1


    print word_freq
"
Django Query Set Results,"try:
    output = Sample.objects.get(pk=1)
except Sample.DoesNotExist:
    # Do something about non-existent row
"
Elegant way to use regex to match order-indifferent groups of characters while limiting how may times a given character can appear?,"(?!([ABD]?C){3}|([ABC]?D){2})([ABCD]{4})
"
Map string positions to list positions,"from itertools import chain

wordlist = [""ONE"",""TWO"",""THREE"",""FOUR""]
string = ''.join(wordlist) # ""ONETWOTHREEFOUR""
stringpositions = [6,7,8,0,4]

# construct a list that maps every position in string to a single source word    
which_word = list(chain( [ii]*len(w) for ii, w in enumerate(wordlist) ))

# it's now trivial to use which_word to construct the set of words 
# represented in the list stringpositions
words_used = set( which_word[pos] for pos in stringpositions )

print ""which_word="", which_word
print ""words_used="", words_used
"
SQLAlchemy Relationships with Single Table Inheritance,"SELECT student.id AS student_id 
FROM student 
WHERE (SELECT sum(""transaction"".amount) AS sum_1 
FROM ""transaction"" 
WHERE ""transaction"".student_id = student.id) > ?
2014-04-19 19:38:10,866 INFO sqlalchemy.engine.base.Engine (400,)
[<__main__.Student object at 0x101f2e4d0>, <__main__.Student object at 0x101f2e6d0>]
"
Python removing duplicate lines,"ips_1 = set()

with open(""C:\\users\\joey\\desktop\\access.log"",'r') as bestand:
    for line in bestand:
        try:
            ips1.add(linprint splittedlinee.split('sftp-session')[1].split(""["")[1].split(""]"")[0])
        except Exception:
            continue

ips_2 = set()
with open(""C:\\users\\joey\\desktop\\exit_nodes.csv"",'r') as bestand:
    for line in bestand:
        ips_2.add(line)
"
How to pass a variable from python script to wix?,"candle -dVariableNameForPath=""C:\my path to"" my.wxs
"
Improving a python snippet,"from bs4 import BeautifulSoup

html = """""" <div class='pagination'>
    <a href='webpage-category/page/1'>1</a>
    <a href='webpage-category/page/2'>2</a>
</div>""""""

soup = BeautifulSoup(html)

link = soup.find('div', {'class': 'pagination'}).find('a')['href']

print '/'.join(link.split('/')[:-1])
"
Django Iterating Json Response In Template,"data = [{'name': cards['name']} for cards in jsonList]
"
Mimic curl in python,"""1"","" 800 Wilshire Blvd,  Los Angeles,  CA,  90017"",""Match"",""Exact"",""800 Wilshire Blvd, LOS ANGELES, CA, 90017"",""-118.25818,34.049366"",""141617176"",""L""
"
"Confusion with python global variables, pygame event","if e.type == pygame.QUIT:
   print 'Close!'
   self.isRunning = 0
   running = 0
"
Python BeautifulSoup Print Info in CSV,"Name,ZipCodes
1ST ST,(43512)
E 1ST ST,(43512)
W 1ST ST,(43512)
2ND ST,(43512)
E 2ND ST,(43512)
W 2ND ST,(43512)
3 RIVERS CT,(43512)
3RD ST,(43512)
E 3RD ST,(43512)
...
"
Python how to eliminate 3 or more consequent letter,">>> import re
>>> a = 'foooooooo baaaar'
>>> reg = re.compile( r""(.)\1\1{2,}"")
>>> reg.sub(r'\1\1', a)
'foo baar'
"
how to count how many times a user logs in?,"from django.contrib.auth.signals import user_logged_in

class UserProfile(models.Model):
    ...
    login_count = models.PositiveIntegerField(default=0)

def login_user(sender, request, user, **kwargs):
    user.userprofile.login_count = user.userprofile.login_count + 1
    user.userprofile.save()

user_logged_in.connect(login_user)
"
How do I add children to a StatusBar in Glade3?,"context_id = statusbar.get_context_id(""progress_message"")
statusbar.push(context_id, ""Almost done..."")
"
Python recursive no 'in' work around,"def has_repeats(L):
    if len(L) <= 1:
        return False
    if L.index(L[-1]) != len(L) - 1:
        return True
    return has_repeats(L[:-1])
"
Python Tkinter update when entry is changed,"def callback(*args):
    print ""variable changed!""

var = DoubleVar()
var.trace(""w"", callback)
"
Reading specific data from a text file,"with open('path-to-file.txt') as infile:
  for line in infile:
    # code here to deal with line.
"
svg image - zoom and borders,"<g class=""land fr"" id=""fr"" 
 transform=""matrix(1.229834,0,0,1.1888568,-278.10861,-149.0924)"" 
 style=""fill-opacity:1;stroke:#ffffff;stroke-width:10;
       stroke-miterlimit:3.97446823;stroke-dasharray:none;stroke-opacity:1;
       fill:#00ff00"">
"
How to find out if variable item contains specific words in Python?,"print (j.__name__)
"
Creating a table out of data in python,"your_list = ['bread', 'milk', 'sugar', 'tea']

print(""{0:20}    {1:20}    {2:20}    {3:20}\n"".format('Column 1', 'Column 2', 'Column 3', 'Column 4'))
print(""{0:20}    {1:20}    {2:20}    {3:20}\n"".format(your_list[0], your_list[1], your_list[2], your_list[3]))
"
Sampling from a bounded domain zipf distribution,"import numpy as np
import scipy.stats as stats
import matplotlib.pyplot as plt

N = 7
x = np.arange(1, N+1)
a = 1.1
weights = x ** (-a)
weights /= weights.sum()
bounded_zipf = stats.rv_discrete(name='bounded_zipf', values=(x, weights))

sample = bounded_zipf.rvs(size=10000)
plt.hist(sample, bins=np.arange(1, N+2))
plt.show()
"
"PHP calling Python, returning multiple values","exec(""python test.py"", $output);
var_dump($output);
"
"Is there any way to do ""logical"" transformations between Japanese kana characters with different diacritical marks?",">>> import unicodedata
>>> print(ascii(unicodedata.normalize('NFD', '\u304c')))
'\u304b\u3099'
"
Pandas keep column value if True else False,"df['name'] = df.name.mask(df.flag=='False', False)
          name   flag
0     John Doe   True
1        False  False
2  Chris Smith   True
"
How to remove the line breaks in front of a tag in Xpath,"In [299]: tree.xpath('normalize-space(//*[text()=""Smiles""]/..//br[1]/preceding-sibling::text())')
Out[299]: 'CC=O'
"
Sort by name and rank,"def sort(names, rank):
    lst=[]
    for index, name in enumerate(names):
        lst.append((int(rank[index]), name))
    lst.sort(key=lambda x: (-x[0],len(x[1]),  ord(x[1][0])))
    output = []
    for row in lst:
        output.append(row[1] + "" "" + str(row[0]))
    return output
"
How to group strings with similar beginnings in a sorted list?,"print '\n'.join('\t' * p + '\\'.join(x[p:]) for p, x in eachWithPrefix(x.split('\\') for x in v))
"
Plotting a Discriminant Function for Normal Densities via Matplotlib,"import pylab as pl
import numpy as np

D = 2

M1 = np.array([0.0, 0.0])
M2 = np.array([1.0, 1.0])

C1 = np.array([[2.0, 0.4], [0.4, 1.0]])
C2 = np.array([[1.0, 0.6], [0.6, 2.0]])

X, Y = np.mgrid[-2:2:100j, -2:2:100j]
points = np.c_[X.ravel(), Y.ravel()]

invC = np.linalg.inv(C1)
v = points - M1
g1 = -0.5*np.sum(np.dot(v, invC) * v, axis=1) - D*0.5*np.log(2*np.pi) - 0.5*np.log(np.linalg.det(C1))
g1.shape = 100, 100

invC = np.linalg.inv(C2)
v = points - M2
g2 = -0.5*np.sum(np.dot(v, invC) * v, axis=1) - D*0.5*np.log(2*np.pi) - 0.5*np.log(np.linalg.det(C2))
g2.shape = 100, 100

fig, axes = pl.subplots(1, 3, figsize=(15, 5))
ax1, ax2, ax3 = axes.ravel()
for ax in axes.ravel():
    ax.set_aspect(""equal"")

ax1.pcolormesh(X, Y, g1)
ax2.pcolormesh(X, Y, g2)
ax3.pcolormesh(X, Y, g1 > g2)
"
Lookahead assertion with dot,"
(?<=\.[0-9])0
"
Good ways to sort a queryset? - Django,"import operator

auths = Author.objects.order_by('-score')[:30]
ordered = sorted(auths, key=operator.attrgetter('last_name'))
"
Processing ember.js tagged html with python,"if request.function in ['action1', 'action2', 'action3']:
    response.delimiters = ['{%', '%}']
"
Extracting links with regex from source code; Python,"\<meta content=""(http:\/\/www\.telegraaf\.nl.*\.html)""
"
Beautifulsoup removing HTML tags when parsing XML,"html = BeautifulSoup(html1, features=""xml"")
"
Why does python scrapy yields duplicated items in my code?,"yield scrapy.Request(""http://www.ebay.com/sch/Cars-Trucks-/6001/i.html?_pgn=""+str(i)+""&_skc=50&rt=nc"", 
                     callback=self.parse, 
                     dont_filter=True)
"
How to just keep punctuation with a string in python?,">>> re.sub(r'[^{}]+'.format(punctuation),'',s)
';==://'
"
How to print specific part of a file?,"Task:
- [ ] Learn chapter-1
- [ ] Learn chapter-1

%-----------------------------------------
"
Customize compile function in python?,"import __future__

code_to_execute = compile(
    code_to_execute_in_string, '', 'exec',
    flags=__future__.print_function.compiler_flag)
"
Python numpy grid transformation using universal functions,"new_matrix[t, conv[t, z, y, x], y, x] = temp[t, z, y, x]
"
Pandas DatetimeIndex vs to_datetime discrepancies,"In [12]: s.dt.tz_localize('US/Eastern')
Out[12]: 
0          2016-05-03 13:30:58-04:00
1   2016-05-03 13:30:58.100000-04:00
2   2016-05-03 13:30:58.200000-04:00
dtype: datetime64[ns, US/Eastern]
"
Importing/Exporting a nested dictionary from a CSV file,"# export2
with open('userdata_exported.csv', 'w') as f:
    writer = csv.writer(f)
    rows = ([key] + [value for item in values.items() for value in item]
            for key, values in data.items())
    writer.writerows(rows)
"
Flatten / Remove hierarchical column headers,"df.groupby(['id', 'category']).sum()
"
Python Counter doesn't count,">>> from collections import defauldict
>>> a = {}
>>> a['notexist']
Traceback (most recent call last):
File ""<stdin>"", line 1, in <module>
KeyError: 'notexist'
>>> b = defaultdict(int)
>>> b['notexist']
0
"
python __repr__,"class MyClass(object):
    def __init__(self, version):
        self.version = version
    def __repr__(self):
        return self.version

myObjs = {}
o = MyClass(""1"")
myObjs[o] = o
print type(o)                                                                   
print o.__class__                                                               
print myObjs                                                                    
print type(myObjs[o])
"
Sorting a complex datastructure,">>> probabilities
[((0.5, 1.0), 2), ((1.0, 2.0), 3), ((3.0, 1.0), 1)]
"
Rendering dynamic images with google app engine,"import base64

def getData(request,key):
    forum = Topic.get(key)
    picData = forum.creator.portfolio_set
    pictureSrc = ''
    if picData:
        picture = picData[0].userpic
        pictureSrc = ""data:image;base64,%s""%base64.b64encode(picture)

    return render_to_response(request,""forum.html"",{""forum"":forum,""pic"":pictureSrc })
"
Ask for a regx for re.sub in python,">>> re.sub(r'(?<!#)=(.*?)(?=\s*#|$)', r'= Hello', s, 1)
'log_File = Hello   ### the path for log'
"
"Parsing XML with Python xml.sax: How does one ""keep track"" of where in the tree you are?","class Exact(xml.sax.handler.ContentHandler):
    def __init__(self, stdpath):
        self.stdpath = stdpath

        self.thisrow = {}
        self.curpath = []
        self.getvalue = None

        self.conn = MySQLConnect()
        self.table = None
        self.numrows = 0

    def __del__(self):
        self.conn.close()

        print '%s rows affected' % self.numrows

    def startElement(self, name, att):
        self.curpath.append(name)

    def characters(self, data):
        if self.getValue is not None:
            self.thisrow[self.getValue.strip()] = data.strip()
            self.getValue = None

    def endElement(self, name):
        self.curpath.pop()

        if name == self.stdpath[len(self.stdpath) - 1]:
            self.EndRow()
            self.thisrow = { }

    def EndRow(self):
        self.numrows += MySQLInsert(self.conn, self.thisrow, True, self.table)
        #for k, v in self.thisrow.iteritems():
        #   print '%s: %s,' % (k, v),
        #print ''

    def curPath(self, full=False):
        if full:
            return ' > '.join(self.curpath)
        else:
            return ' > '.join(self.curpath).replace(' > '.join(self.stdpath) + ' > ', '')
"
Python Google Calendar sort by date,"hits.sort()

for x in hits:
    d = x[0]
    date = ""%d/%d/%d""%(getattr(d,'month'),getattr(d,'day'), getattr(d,'year'))
    final = str(date)+""\t\t""+str(x[1])

    print final
"
How to Preserve Whitespace (Regex),"import re

value = 'h&(()^%el!!l000o w@0or!ld'
value = ''.join(re.findall('[a-zA-Z\s]+',value))
print value
"
"Sorting a matrix by one of its fields, given a list with sorted values","matrix = [('col_b', 'number') , ('col_a','varchar')]
colmnList = ['col_a', 'col_b']

# Sort the matrix using as creiteria the position of the element in colmnList
sorted_matrix = sorted(matrix, key = lambda item: colmnList.index(item[0]))

print(matrix)
print(sorted_matrix)

>>> [('col_b', 'number'), ('col_a', 'varchar')]
>>> [('col_a', 'varchar'), ('col_b', 'number')]
"
add a character in front of every element in a list,"edited = []
for i in range(len(factors)):
    if i%2:#for odd indices
        edited.append(factors[i])
    else:
        edited.append(-factors[i])
"
Parsing nested key from dict (generated from json),"dictFromJSON = {
""dark"" : {
   ""web1.example.com"" : ""failure message""
},
""contacted"" : {
   ""web2.example.com"" : 1
}
}
"
How do you programmatically set an attribute in Python?,">>> help(setattr)
Help on built-in function setattr in module __builtin__:

setattr(...)
    setattr(object, name, value)

    Set a named attribute on an object; setattr(x, 'y', v) is equivalent to
    ``x.y = v''.
"
Convert a 2d matrix to a 3d one hot matrix numpy,"In [98]: a
Out[98]: 
array([[1, 7, 5, 3],
       [2, 4, 1, 4]])

In [99]: N = a.size
    ...: L = a.max()
    ...: data = np.ones(N,dtype=int)
    ...: sparse_out = coo_matrix((data,(np.arange(N),a.ravel()-1)), shape=(N,L))
    ...: 

In [100]: sparse_out.todense()
Out[100]: 
matrix([[1, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 1],
        [0, 0, 0, 0, 1, 0, 0],
        [0, 0, 1, 0, 0, 0, 0],
        [0, 1, 0, 0, 0, 0, 0],
        [0, 0, 0, 1, 0, 0, 0],
        [1, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 1, 0, 0, 0]])
"
Scheme to Python: most elegant translation of a recursive procedure?,"def recursivefun(word):
    if len(word) == 2:
        return word
    else:
        x = []
        x.append(word)
        x.extend(recursivefun(word[1:]))
        x.append(word)
        return x

print recursivefun(""banana"")
"
Pandas Python: How to create lapse since today column?,"In [42]: datetime.now().date() - pd.DatetimeIndex(df['Date']).normalize().to_series()
Out[42]:
2013-10-15   38 days, 00:00:00
2013-10-14   39 days, 00:00:00
2013-10-14   39 days, 00:00:00
dtype: timedelta64[ns]
"
Python pandas: how to get hour from timestamp in dataframe?,">>> df.index.hour == 8
array([True, False], dtype=bool)
"
python using variables from another file,"from vardata import verb_list, other_list
import random

print random.choice(verb_list) 
"
How to delete or mask entries of a numpy array relative to another entry,"Mask

In [102]:
mask = np.array([False]).repeat(len(X))
mask
Out[102]:
array([False, False, False, False, False, False, False, False, False], dtype=bool)

In [103]:
mask[arr_final] = True
mask
Out[103]:
array([ True,  True, False,  True,  True,  True, False,  True,  True], dtype=bool)

In [104]:
mask
X[mask]
Out[104]:
array([['1', '2', 'Bye'],
       ['1', '2', 'Zero'],
       ['1', '2', 'Two'],
       ['5', '7', 'Bye'],
       ['500', '600', 'Three'],
       ['12', '40', 'Five'],
       ['5', '7', 'Bye']], 
      dtype='|S11')
"
Getting completely wrong fit from python scipy.optimize.curve_fit,"values = np.array('0.400    0.400   0.397   0.395   0.396   0.394   0.392   0.390   0.395   0.393   0.392   0.392   0.390   0.388   0.390   0.388   0.385   0.383   0.388   0.387   0.387   0.387   0.385   0.386   0.387   0.379   0.379   0.378   0.375   0.376   0.374   0.373   0.372   0.368   0.373   0.370   0.371   0.370   0.370   0.370   0.367   0.368   0.368   0.365   0.365   0.366   0.364   0.361   0.361   0.356   0.355   0.357   0.354   0.353   0.350   0.351   0.353   0.355   0.350   0.354   0.352   0.351   0.348   0.348   0.347   0.345   0.346   0.343   0.348   0.346   0.344   0.343   0.342   0.341   0.346   0.346   0.345   0.343   0.348   0.345   0.346   0.342   0.344   0.344   0.340   0.341   0.345   0.345   0.343   0.339   0.343   0.344   0.343   0.346   0.344   0.344   0.345   0.347   0.344   0.344   0.338   0.340   0.343   0.340   0.342   0.336   0.334   0.336   0.337   0.338   0.338   0.343   0.342   0.342   0.336   0.334   0.336   0.330   0.325   0.324   0.323   0.319   0.323   0.322   0.318   0.314   0.314   0.319   0.315   0.316   0.313   0.315   0.314   0.314   0.315   0.313   0.308   0.312   0.311   0.310   0.312   0.311'
                  ' 0.311   0.309   0.309   0.316   0.317   0.312   0.309   0.311   0.308   0.310   0.312'.split('\t'), dtype=float)
"
"How to reverse geocode serverside with python, json and google maps?",">>> mydata = jsondata['results'][0]['address_components']
>>> types = ['locality', 'administrative_area_level_1']
>>> geonames = filter(lambda x: len(set(x['types']).intersection(types)), mydata)
"
python list.iteritems replacement,"j = 0
l2 = []
for i in range(len(l)):
    if condition(l[i]):
        l[j] = l[i]
        j += 1
    else:
        l2.append(l[i])
del l[j:]
"
complicated list and dictionary lookup in python,">>> from itertools import chain
>>> dol_values = set(chain.from_iterable(dol.itervalues()))
>>> dol_values
set(['Item 3', 'Item 2', 'Item 1', 'Item 21', 'Item 4'])
>>> [tup + (True,) if tup[0] in dol_values else tup for tup in lot]
[('Item 1', 43, True), ('Item 4', 82, True), ('Item 12', 33), ('Item 10', 21)]
"
Calculating year over year growth by group in Pandas,"df = df.set_index('date')
"
Filter numpy array by comparing elements to elements in prior row without looping,"x2 = np.pad(x[:-2], (2, 0), mode='constant', constant_values=(np.nan,))  
"
Modify actual element value in array numpy,"for label in labels_class
"
What's the most pythonic way to apply a function on every word in a string with multiple types of white space characters?,"re.sub(r'[^\s]+', lambda m: f(m.group(0)), s)
"
"Automatically stop ""tail -f catalina.out"" when exception found or server is running","#! /usr/bin/env python
import subprocess
import sys

def main(argv):
    filename = argv[1]
    match=argv[2]
    p = subprocess.Popen(['tail', '-n', '0', '-f', filename], stdout=subprocess.PIPE)
    while True :
        line = p.stdout.readline()
        print line ,
        if match in line :
            break
    p.terminate()

if __name__ == ""__main__"":
    main(sys.argv)
"
Make a blinking busy indicator on python shell,"import time

i = '*'
while True:
    print('{}\r'.format(i), end='')
    i = ' ' if i=='*' else '*'
    time.sleep(0.5)
"
Editing and duplicating xml block with elementTree,"from lxml import etree
e = etree.Element('root')
etree.SubElement(e, 'child1')
etree.SubElement(e, 'child2')

from copy import copy
f = copy(e)
f[0].tag = 'newchild1'
etree.dump(e)
<root>
  <child1/>
  <child2/>
</root>

etree.dump(f)
<root>
  <newchild1/>
  <child2/>
</root>
"
Merge XML files and delete duplicate rows,"<FF_IT_AP_P_S table=""XCHLIB.ITAP00000"">
    <row>
        <APITEM type=""1"" typename=""char"">AK-S30         </APITEM>
        <APQAVL type=""2"" typename=""numeric"">20</APQAVL>
    </row>
    <row>
        <APITEM type=""1"" typename=""char"">90500H         </APITEM>
        <APQAVL type=""2"" typename=""numeric"">2159</APQAVL>
    </row>
    <row>
        <APITEM type=""1"" typename=""char"">AP60218        </APITEM>
        <APQAVL type=""2"" typename=""numeric"">68</APQAVL>
    </row>
    <row>
        <APITEM type=""1"" typename=""char"">ATIGLOW200P    </APITEM>
        <APQAVL type=""2"" typename=""numeric"">23</APQAVL>
    </row>
    <row>
        <APITEM type=""1"" typename=""char"">ATIGLOW201P    </APITEM>
        <APQAVL type=""2"" typename=""numeric"">6</APQAVL>
    </row>
    <row>
        <APITEM type=""1"" typename=""char"">ATIGOMNIHA300  </APITEM>
        <APQAVL type=""2"" typename=""numeric"">5</APQAVL>
    </row>
    <row>
        <APITEM type=""1"" typename=""char"">90451R         </APITEM>
        <APQAVL type=""2"" typename=""numeric"">392</APQAVL>
    </row>
    <row>
        <DLITEM type=""1"" typename=""char"">S3H5V242412PHC </DLITEM>
    </row>
    <row>
        <DLITEM type=""1"" typename=""char"">APX82424411    </DLITEM>
    </row>
    <row>
        <DLITEM type=""1"" typename=""char"">APX81224411    </DLITEM>
    </row>
    <row>
        <DLITEM type=""1"" typename=""char"">5-93801        </DLITEM>
    </row>
    <row>
        <PRITEM type=""1"" typename=""char"">03-020-07128   </PRITEM>
        <PRPRICE type=""2"" typename=""numeric"">41.77</PRPRICE>
    </row>
    <row>
        <PRITEM type=""1"" typename=""char"">01-005-10001   </PRITEM>
        <PRPRICE type=""2"" typename=""numeric"">178.48</PRPRICE>
    </row>
    <row>
        <PRITEM type=""1"" typename=""char"">01-147-02038   </PRITEM>
        <PRPRICE type=""2"" typename=""numeric"">228.97</PRPRICE>
    </row>
    <row>
        <PRITEM type=""1"" typename=""char"">01-147-22026   </PRITEM>
        <PRPRICE type=""2"" typename=""numeric"">228.97</PRPRICE>
    </row>
    <row>
        <PRITEM type=""1"" typename=""char"">03-045-18025   </PRITEM>
        <PRPRICE type=""2"" typename=""numeric"">65.50</PRPRICE>
    </row>
</FF_IT_AP_P_S>
"
Python regex list using list,"re.compile(""("" + ""|"".join(regex_strings) + "")"")
"
Python: How to check if a variable is equal to one string or another string,"if (var is 'stringone') or 'stringtwo':
    dosomething()
"
self.attr resets between tests in unittest.TestCase,"import unittest

class TestNightlife(unittest.TestCase):
    _my_param = 0

    def test_a(self):
        print 'object id: %d' % id(self)
        print 'test A = %d' % self._my_param
        self._my_param = 1

    def test_b(self):
        print 'object id: %d' % id(self)
        print 'test B = %d' % self._my_param
        self._my_param = 2

if __name__ == ""__main__"":
    unittest.main()
"
Left pad hex list,"8c 00
"
Python 2.7: Using reduce to verify that elements are in a list,"b = [""b"", ""z"", ""a""]
reduce(lambda x,y: (x in a) and (y in a), b)
"
When is del useful in python?,"   foo = None
"
Python strip() function - remove characters before/after string,"numbers = re.findall('(?P<number>\d+\.\d+)', str(self.lostfeatures))
"
Finding the top 10 and converting it from centimeters to inches - Python,"with open('veggies_2016.txt') as fobj:
"
Somewhat complex list comprehension,"exclude = ('q','tap')
info = [i for i in info if not i[1].startswith(exclude)]
"
Duplicate a list in a Pandas Dataframe into a new row,"   IndexBudgetCode   AssociateID
0  Nexusapp_341800  ppc_fli_1111
1  Nexusweb_120000  ooc_htl_1010
2  Primweb_1900000  ppc_fli_9999
3  Primweb_1900000  ppc_fli_1777
"
sorting a list containing dates as a substring,"lambda s: datetime.strptime(s[-11:-1], '%m/%d/%Y')
"
How to get the level of the logging record in a custom logging.Handler in Python?,">>> dir(rec)
['__doc__', '__init__', '__module__', '__str__', 'args', 'created',
 'exc_info', 'exc_text', 'filename', 'funcName', 'getMessage', 'levelname',
 'levelno', 'lineno', 'module', 'msecs', 'msg', 'name', 'pathname', 'process',
 'processName', 'relativeCreated', 'thread', 'threadName']
>>> rec.levelno
1
>>> rec.levelname
'Level 1'
"
Python - lexical analysis and tokenization,"========================== stuff ===========================
('identifier', 'property')
('dot', '.')
('open_variable', '${')
('identifier', 'general')
('dot', '.')
('identifier', 'name')
('close_curly', '}')
('dot', '.')
('identifier', 'ip')
('whitespace', ' ')
('equals', '=')
('whitespace', ' ')
('open_variable', '${')
('identifier', 'general')
('dot', '.')
('identifier', 'ip')
('close_curly', '}')
========================== stuff2 ==========================
('newline', '\n')
('identifier', 'general')
('whitespace', ' ')
('open_curly', '{')
('newline', '\n')
('whitespace', '  ')
('identifier', 'name')
('whitespace', ' ')
('equals', '=')
('whitespace', ' ')
('identifier', 'myname')
('newline', '\n')
('whitespace', '  ')
('identifier', 'ip')
('whitespace', ' ')
('equals', '=')
('whitespace', ' ')
('integer', '127')
('dot', '.')
('integer', '0')
('dot', '.')
('integer', '0')
('dot', '.')
('integer', '1')
('newline', '\n')
('close_curly', '}')
('newline', '\n')
"
Order tuple elements,"b=""""""KLM75, Amsterdam, 14:35, 60, 50
AF111, Paris, 14:20, 50, 64
LH333, Frankfurt, 14:10, 112, 203
KLM71, Madrid, 14:55, 120, 100
TAP103, Salvador, 15:20, 174, 210
LH123, Berlin, 15:10, 115, 210""""""

print(sorted(b.split('\n'),key=lambda x:x.split(',')[2]))
['LH333, Frankfurt, 14:10, 112, 203', 'AF111, Paris, 14:20, 50, 64', 'KLM75, Amsterdam, 14:35, 60, 50', 'KLM71, Madrid, 14:55, 120, 100', 'LH123, Berlin, 15:10, 115, 210', 'TAP103, Salvador, 15:20, 174, 210']
"
Why are values of a two-level dictionary all pointing to the same object in Python 2.7?,"two_tier_dict_init(tier1, tier2, lambda: ""I am shared but immutable"")
"
Getting a python traceback without an exception,">>> import traceback
>>> def what():
...    traceback.print_stack()
... 
>>> def hey():
...    what()
... 
>>> hey()
  File ""<stdin>"", line 1, in <module>
  File ""<stdin>"", line 2, in hey
  File ""<stdin>"", line 2, in what
"
How to install scikit-learn for Portable Python?,"App\Scripts\easy_install.exe scikit-learn 

enter code here`enter code here`enter code here`
"
parse a date to utc unixtime,"import datetime as DT
from dateutil import parser
datestring = ""2009-01-10""
date = parser.parse(datestring)
epoch = DT.datetime(1970, 1, 1)
timestamp = (date - epoch).total_seconds()
print(timestamp)
"
Pandas best practice to select multiple column data,"import pandas as pd

df = pd.DataFrame({'x':[1, 2, 3], 'y':[5, 6, 7], 'z':['a', 'b', 'c']})
"
PyQt4 Local Directory view with option to select folders,"model = CheckableDirModel()
tree = QtGui.QTreeView()
tree.setModel(model)
"
export list from bash script to python,"${PYTHONPATH} plot.py ${TDATES}
"
Get the latest files from Location using Python,"['DataLogs_20141126_AP.CSV', 'DataLogs_20141126_UK_EARLY.CSV', 'DataLogs_20141126_CAN.CSV', 'DataLogs_20141126_US.CSV', 'DataLogs_20141126_EUR.CSV', 'DataLogs_20141126_US_2.CSV']
"
python: datetime within module always provides date of first call,"def __init__( self, von=None, bis=None, somemore=something ):
    if von is None:
        von = _today()
    if bis is None:
        bis = _today()
"
Multiprocessing with python3 only runs once,"from concurrent.futures import ProcessPoolExecutor

def Processor(data_entry):
    return data_entry*2

def perform_distributed_processing(dbList, threads, processor_factory):
    with ProcessPoolExecutor(processes=threads) as executor:
        yield from executor.map(processor_factory, dbList)

if __name__ == '__main__':
    # Use this as a substitute for the database in the example
    dbList = [i for i in range(300)]
    for result in perform_distributed_processing(dbList, 8, Processor):
        print(result)
"
Python Minidom XML parsing interchangable upper and lower case node names,"a1 = doc.getElementsByTagName('a')
a2 = doc.getElementsByTagName('A')

#do stuff with a1 and a2
"
how to Change dictionary values in python file,"import json

with open('data.json', 'r') as f:
    data = json.load(f)

data['person']['name'] = 'JSON!'

with open('data.json', 'w') as f:
    json.dump(data, f, indent=2)
"
How do you use credentials saved by the browser in auto login script in python 2.7?,"from selenium import webdriver
from selenium.webdriver.chrome.options import Options

options = webdriver.ChromeOptions() 
options.add_argument(""user-data-dir=C:\\Path"") #Path to your chrome profile
w = webdriver.Chrome(executable_path=""C:\\Users\\chromedriver.exe"", chrome_options=options)
"
A faster strptime?,"datetime.date(int(a[:4]), int(a[5:7]), int(a[8:10]))   # 1.06us
"
Issue with generating ttk checkboxes in loops and passing arguments,"i = 0

def foo():
    # here i will be lookup in the global namespace *when foo will be executed*
    print i

foo() # => 0
i = 1
foo() # => 1

# if we want to force the ""evaluation"" of i at function definition,
# we have to put it in the function definition
def bar(i=i):
    # here i is the function argument, and it default value is the value of the ""global i"" at the time the function was defined
    print i

bar() # => 1
i=2
bar() # => 1
foo() # => 2
"
Square matrix length of path in Python,"array([[ 0.,  2.,  1.],
       [ 2.,  0.,  1.],
       [ 1.,  1.,  0.]])
"
How to get stats from a scrapy run?,"stats = crawler.stats.get_stats()
"
Python add object to list inside same object method,"class People(object):
    def __init__(self, people=()):
        self._members = list(people)

    # add other methods/special methods like __len__ etc.

    def add(self, person):
        self._members.append(person)
    def remove(self, person):
        self._members.remove(person)


people = People()
people.add(john)
people.add(jack)


# Change list to set?

class People(object):
    def __init__(self, people=()):
        self._members = set(people)
    def add(self, person):
        self._members.add(person)
    def remove(self, person):
        self._members.remove(person)
"
Complete a task during certain time frames within a python script,"global clearscreen
"
how to slice a dataframe having date field as index?,"import pandas as pd
import numpy as np
import io
import datetime as dt

temp=u""""""TRX_DATE;A
2013-07-05;1
2013-08-06;1
2015-09-05;2
2015-10-08;2
2015-11-05;2
2015-11-25;2
2015-12-06;3""""""

df = pd.read_csv(io.StringIO(temp), sep="";"", parse_dates=[0])
print df
#    TRX_DATE  A
#0 2013-07-05  1
#1 2013-08-06  1
#2 2015-09-05  2
#3 2015-10-08  2
#4 2015-11-05  2
#5 2015-11-25  2
#6 2015-12-06  3

print df.dtypes
#TRX_DATE    datetime64[ns]
#A                    int64
#dtype: object

currentdate = dt.date.today()
print currentdate
#2015-11-06

startdate = currentdate - pd.Timedelta(days=30)
print startdate
#2015-10-07

dflast30 = df[(df.TRX_DATE >= startdate) & (df.TRX_DATE <= currentdate)]
print dflast30
#    TRX_DATE  A
#3 2015-10-08  2
#4 2015-11-05  2
"
Matplotlib 3D Scatter Plot with Colorbar,"fig.colorbar(p)
"
How to execute a command from a virtual environment using `crontab` or `gnome-terminal`,"#/bin/sh
set -e
export WORKON_HOME=~/.virtualenvs
source /usr/local/bin/virtualenvwrapper.sh
workon my_project
exec python task.py
"
Rearrange a pandas data frame to create a 2d ratings matrix,"print (df.pivot_table(index='business_id', columns='user_id', values='stars').fillna(0))
user_id                 H1kH6QZV7Le4zqTRNxo  KBLW4wJA_fwoWmMhiHR  \
business_id                                                        
vcNAWiLM4dR7D2nwwJ7nCA                    2                    4   

user_id                 Qrs3EICADUKNFoUq2iH  Xqd0DzHaiyRqVH3WRG7  \
business_id                                                        
vcNAWiLM4dR7D2nwwJ7nCA                    1                    5   

user_id                 zvJCcrpm2yOZrxKffwG  
business_id                                  
vcNAWiLM4dR7D2nwwJ7nCA                    4  
"
How to optimize the memory and time usage of the following algorithm in python,"from cProfile import Profile
p = Profile()

p.runctx('my_function(args)', {'my_function': my_function, 'args': my_data}, {})
p.print_stats()
"
Calculating the factorial without trailing zeros efficiently?,"def calculate_factorial_multi2(number):
    prime = [True]*(number + 1)
    result = 1
    factor2 = 0
    factor5 = 0
    for i in xrange (2, number+1):
        if prime[i]:
            #update prime table
            j = i+i
            while j <= number:
                prime[j] = False
                j += i
            #calculate the number of i in factors of n!
            sum = 0
            t = i
            while t <= number:
                sum += number/t
                t *= i
            if i == 2:
                factor2 = sum
            elif i == 5:
                factor5 = sum
            else:
                result *= i**sum

    return (result << (factor2 - factor5))*(10**factor5)
"
Is it possible to move / merge messages between RabbitMQ queues?,"sudo rabbitmq-plugins enable rabbitmq_shovel_management
"
Force LaTeX font to match default matplotlib font,"fig.suptitle(r'H$_{two}$ Emission from GJ832')
"
How to create sort of DB View in Django (derived models without any db table),"Story.objects.create(..., type=""bf"") # ID 1
Story.objects.create(..., type=""bf"")  
Story.objects.create(..., type=""cm"")
Story.objects.create(..., type=""dl"")

Story.objects.all() # [ID 1, ID 2, ID 3, ID 4]
BeforeCommitedStory.objects.all() # [ID 1, ID 2]
CommitedStory.objects.all() # [ID 3]
DeletedStory.objects.all() # [ID 4]
"
How to make Tkinter button to be placed in particular position?,"from tkinter import *
import tkinter as tk
from tkinter.ttk import Combobox,Treeview,Scrollbar

class MainMenu(Frame):
    def __init__(self, master):
        """""" Initialize the frame. """"""
        super(MainMenu, self).__init__(master)
        self.grid()
        self.create_GUI()

    def create_GUI(self):
        frame1 = tk.LabelFrame(self, text=""frame1"", width=300, height=130, bd=5)
        frame1.grid(row=0, column=0, columnspan=3, padx=8)
        #the frame is not needed but it is a good thing to use as can group
        #parts of your interface together

        self.text1 = Entry(frame1)
        #note if you were not using frames would just put self here
        self.text1.grid(row = 1, column = 0)

        self.text2 = Label(frame1, text = """",height = 10)
        self.text2.grid(row = 2 , column = 0)

        self.text3 = Entry(frame1)
        self.text3.grid(row = 3, column = 0)



root = Tk()
root.title(""hi"")
root.geometry(""500x500"")
root.configure(bg=""white"")
app = MainMenu(root)
root.mainloop()
"
Python:How to recursively store all the value of hash of hash into a string ?,"dailo37123.1231.231023haro haro1002HongKong7UK
"
Using pandas Combining/merging 2 different Excel files/sheets,"data = data.iloc[:-2]
"
Pad an integer using a regular expression,"^(\d{2})\.(\d{1})[\.](.*)
"
How to get week start dates and week number of each week in a year considering start day of the week is Monday in python?,"
>>> import datetime
>>> dt = datetime.date(2013,12,30)
>>> dt.isocalendar()
(2014, 1, 1)
>>> dt.strftime(""%U"")
'52'
"
Can you dynamically combine multiple conditional functions into one in Python?,"return lambda x: all( [ f(x) for f in f_array ] )
"
"Verifying If key or value exists in dictionary, works for char and fails for number","d = {'a':1, 'b':3, 8:'c'}

x = input()
from string import digits
if x in digits:
    x = int(x)
if x in d.values():
    print('In a dictionary', x)


>>> 
c
In a dictionary c

>>> 
3
In a dictionary 3
"
Implimentation of E-test for Poisson in Python,"'''Test for ratio of Poisson intensities in two independent samples

Author: Josef Perktold
License: BSD-3

destination statsmodels

'''


from __future__ import division
import numpy as np
from scipy import stats


# copied from statsmodels.stats.weightstats
def _zstat_generic2(value, std_diff, alternative):
    '''generic (normal) z-test to save typing

    can be used as ztest based on summary statistics
    '''
    zstat = value / std_diff
    if alternative in ['two-sided', '2-sided', '2s']:
        pvalue = stats.norm.sf(np.abs(zstat))*2
    elif alternative in ['larger', 'l']:
        pvalue = stats.norm.sf(zstat)
    elif alternative in ['smaller', 's']:
        pvalue = stats.norm.cdf(zstat)
    else:
        raise ValueError('invalid alternative')
    return zstat, pvalue


def poisson_twosample(count1, exposure1, count2, exposure2, ratio_null=1,
                      method='score', alternative='2-sided'):
    '''test for ratio of two sample Poisson intensities

    If the two Poisson rates are g1 and g2, then the Null hypothesis is

    H0: g1 / g2 = ratio_null

    against one of the following alternatives

    H1_2-sided: g1 / g2 != ratio_null
    H1_larger: g1 / g2 > ratio_null
    H1_smaller: g1 / g2 < ratio_null

    Parameters
    ----------
    count1: int
        Number of events in first sample
    exposure1: float
        Total exposure (time * subjects) in first sample
    count2: int
        Number of events in first sample
    exposure2: float
        Total exposure (time * subjects) in first sample
    ratio: float
        ratio of the two Poisson rates under the Null hypothesis. Default is 1.
    method: string
        Method for the test statistic and the p-value. Defaults to `'score'`.
        Current Methods are based on Gu et. al 2008
        Implemented are 'wald', 'score' and 'sqrt' based asymptotic normal
        distribution, and the exact conditional test 'exact-cond', and its mid-point
        version 'cond-midp', see Notes
    alternative : string
        The alternative hypothesis, H1, has to be one of the following

           'two-sided': H1: ratio of rates is not equal to ratio_null (default)
           'larger' :   H1: ratio of rates is larger than ratio_null
           'smaller' :  H1: ratio of rates is smaller than ratio_null

    Returns
    -------
    stat, pvalue two-sided

    not yet
    #results : Results instance
    #    The resulting test statistics and p-values are available as attributes.


    Notes
    -----
    'wald': method W1A, wald test, variance based on separate estimates
    'score': method W2A, score test, variance based on estimate under Null
    'wald-log': W3A
    'score-log' W4A
    'sqrt': W5A, based on variance stabilizing square root transformation
    'exact-cond': exact conditional test based on binomial distribution
    'cond-midp': midpoint-pvalue of exact conditional test

    The latter two are only verified for one-sided example.

    References
    ----------
    Gu, Ng, Tang, Schucany 2008: Testing the Ratio of Two Poisson Rates,
    Biometrical Journal 50 (2008) 2, 2008

    '''

    # shortcut names
    y1, n1, y2, n2 = count1, exposure1, count2, exposure2
    d = n2 / n1
    r = ratio_null
    r_d = r / d

    if method in ['score']:
        stat = (y1 - y2 * r_d) / np.sqrt((y1 + y2) * r_d)
        dist = 'normal'
    elif method in ['wald']:
        stat = (y1 - y2 * r_d) / np.sqrt(y1 + y2 * r_d**2)
        dist = 'normal'
    elif method in ['sqrt']:
        stat = 2 * (np.sqrt(y1 + 3 / 8.) - np.sqrt((y2 + 3 / 8.) * r_d))
        stat /= np.sqrt(1 + r_d)
        dist = 'normal'
    elif method in ['exact-cond', 'cond-midp']:
        from statsmodels.stats import proportion
        bp = r_d / (1 + r_d)
        y_total = y1 + y2
        stat = None
        pvalue = proportion.binom_test(y1, y_total, prop=bp, alternative=alternative)
        if method in ['cond-midp']:
            # not inplace in case we still want binom pvalue
            pvalue = pvalue - 0.5 * stats.binom.pmf(y1, y_total, bp)

        dist = 'binomial'

    if dist == 'normal':
        return _zstat_generic2(stat, 1, alternative)
    else:
        return stat, pvalue


from numpy.testing import assert_allclose

# testing against two examples in Gu et al

print('\ntwo-sided')
# example 1
count1, n1, count2, n2 = 60, 51477.5, 30, 54308.7

s1, pv1 = poisson_twosample(count1, n1, count2, n2, method='wald')
pv1r = 0.000356
assert_allclose(pv1, pv1r*2, rtol=0, atol=5e-6)
print('wald', s1, pv1 / 2)   # one sided in the ""right"" direction

s2, pv2 = poisson_twosample(count1, n1, count2, n2, method='score')
pv2r = 0.000316
assert_allclose(pv2, pv2r*2, rtol=0, atol=5e-6)
print('score', s2, pv2 / 2)   # one sided in the ""right"" direction

s2, pv2 = poisson_twosample(count1, n1, count2, n2, method='sqrt')
pv2r = 0.000285
assert_allclose(pv2, pv2r*2, rtol=0, atol=5e-6)
print('sqrt', s2, pv2 / 2)   # one sided in the ""right"" direction

print('\ntwo-sided')
# example2
# I don't know why it's only 2.5 decimal agreement, rounding?
count1, n1, count2, n2 = 41, 28010, 15, 19017
s1, pv1 = poisson_twosample(count1, n1, count2, n2, method='wald', ratio_null=1.5)
pv1r = 0.2309
assert_allclose(pv1, pv1r*2, rtol=0, atol=5e-3)
print('wald', s1, pv1 / 2)   # one sided in the ""right"" direction

s2, pv2 = poisson_twosample(count1, n1, count2, n2, method='score', ratio_null=1.5)
pv2r = 0.2398
assert_allclose(pv2, pv2r*2, rtol=0, atol=5e-3)
print('score', s2, pv2 / 2)   # one sided in the ""right"" direction

s2, pv2 = poisson_twosample(count1, n1, count2, n2, method='sqrt', ratio_null=1.5)
pv2r = 0.2499
assert_allclose(pv2, pv2r*2, rtol=0, atol=5e-3)
print('sqrt', s2, pv2 / 2)   # one sided in the ""right"" direction

print('\none-sided')
# example 1 onesided
count1, n1, count2, n2 = 60, 51477.5, 30, 54308.7

s1, pv1 = poisson_twosample(count1, n1, count2, n2, method='wald', alternative='larger')
pv1r = 0.000356
assert_allclose(pv1, pv1r, rtol=0, atol=5e-6)
print('wald', s1, pv1)   # one sided in the ""right"" direction

s2, pv2 = poisson_twosample(count1, n1, count2, n2, method='score', alternative='larger')
pv2r = 0.000316
assert_allclose(pv2, pv2r, rtol=0, atol=5e-6)
print('score', s2, pv2)   # one sided in the ""right"" direction

s2, pv2 = poisson_twosample(count1, n1, count2, n2, method='sqrt', alternative='larger')
pv2r = 0.000285
assert_allclose(pv2, pv2r, rtol=0, atol=5e-6)
print('sqrt', s2, pv2)   # one sided in the ""right"" direction

# 'exact-cond', 'cond-midp'

s2, pv2 = poisson_twosample(count1, n1, count2, n2, method='exact-cond',
                            ratio_null=1, alternative='larger')
pv2r = 0.000428  # typo in Gu et al, switched pvalues between C and M
assert_allclose(pv2, pv2r, rtol=0, atol=5e-4)
print('exact-cond', s2, pv2)   # one sided in the ""right"" direction

s2, pv2 = poisson_twosample(count1, n1, count2, n2, method='cond-midp',
                            ratio_null=1, alternative='larger')
pv2r = 0.000310
assert_allclose(pv2, pv2r, rtol=0, atol=5e-4)
print('cond-midp', s2, pv2)   # one sided in the ""right"" direction


print('\none-sided')
# example2 onesided
# I don't know why it's only 2.5 decimal agreement, rounding?
count1, n1, count2, n2 = 41, 28010, 15, 19017
s1, pv1 = poisson_twosample(count1, n1, count2, n2, method='wald',
                            ratio_null=1.5, alternative='larger')
pv1r = 0.2309
assert_allclose(pv1, pv1r, rtol=0, atol=5e-4)
print('wald', s1, pv1)   # one sided in the ""right"" direction

s2, pv2 = poisson_twosample(count1, n1, count2, n2, method='score',
                            ratio_null=1.5, alternative='larger')
pv2r = 0.2398
assert_allclose(pv2, pv2r, rtol=0, atol=5e-4)
print('score', s2, pv2)   # one sided in the ""right"" direction

s2, pv2 = poisson_twosample(count1, n1, count2, n2, method='sqrt',
                            ratio_null=1.5, alternative='larger')
pv2r = 0.2499
assert_allclose(pv2, pv2r, rtol=0, atol=5e-4)
print('score', s2, pv2)   # one sided in the ""right"" direction

# 'exact-cond', 'cond-midp'

s2, pv2 = poisson_twosample(count1, n1, count2, n2, method='exact-cond',
                            ratio_null=1.5, alternative='larger')
pv2r = 0.2913
assert_allclose(pv2, pv2r, rtol=0, atol=5e-4)
print('exact-cond', s2, pv2)   # one sided in the ""right"" direction

s2, pv2 = poisson_twosample(count1, n1, count2, n2, method='cond-midp',
                            ratio_null=1.5, alternative='larger')
pv2r = 0.2450
assert_allclose(pv2, pv2r, rtol=0, atol=5e-4)
print('cond-midp', s2, pv2)   # one sided in the ""right"" direction
"
How can I pairwise sum two equal-length tuples,"tuple(sum(t) for t in zip((0,-1,7), (3,4,-7)))
"
Plotting non-standard axes,"ax.set_xticks([-2,-1,0,1,2])
ax.set_xticklabels([358,359,0,1,2])
"
All combinations fourteen item array,"itertools.product([0, 1], repeat=14)
"
Python code to quickly reduce the resolution of an image using numpy,"In [39]: a = np.arange(16, dtype=np.uint8).reshape(4,4)

In [40]: a
Out[40]: 
array([[ 0,  1,  2,  3],
       [ 4,  5,  6,  7],
       [ 8,  9, 10, 11],
       [12, 13, 14, 15]], dtype=uint8)

In [41]: imresize(a, (2,2), mode='P')
Out[41]: 
array([[ 0,  2],
       [ 8, 10]], dtype=uint8)

In [42]: imresize(a, (2,2), mode='L')
Out[42]: 
array([[0, 1],
       [6, 7]], dtype=uint8)
"
2d dictionary with multiple keys per value,">>> d2_dict['fresh_food', 'food']['eggs'] = 'delicious'
>>> d2_dict
defaultdict(<type 'dict'>, {('canned_food', 'food'): {'spam': 'delicious'},
('fresh_food', 'food'): {'eggs': 'delicious'}})
"
python in-line for loops,">>> def myprint(x):
...     print x
... 
>>> _=[ myprint(x) for x in range(5)]
0
1
2
3
4
"
cx_Oracle returns empty query when using bindings,"SQL> variable v char(15)
SQL> exec :v := '1';

PL/SQL procedure successfully completed.

SQL> select name from people where sin = :v;

NAME
----------------------------------------
a
"
"Python parsing, convert string to list of integers",">>> num=raw_input (""enter the numbers : "")
enter the numbers : 1234424
>>> [int(num[i:i+2]) for i in range(0,len(num),2)]
[12, 34, 42, 4]
"
How would you find text in a string in python and then look for a number after it?,"import re
numbers = []
for line in log:
    digit_match = re.search(""(\d+)$"", line)
    if digit_match is not None:
        numbers.append(int(digit_match.group(1)))
"
django - How to cross check ModelAdmin and its inlines?,"def is_cross_valid(self, form, formsets):
  return True
"
Beautiful Soup 4 CSS sibling selector,"targetText2 = text.select("".Book-Title- ~ .Text"")
"
Python Selenium Get HTML Text in Variables,"TextOFFilm = movieText.text

TextOFTopix = movieTopic.text
"
Read from text file and assign data to new variable,"from re import compile

# your code to choose file

line_format = compile(r""\s*\(\s*'([^']*)'\s*,\s*(\d+)\s*,\s*(\d+)\s*\)"")
file = open(emp_choice + "".txt"")
line = file.readline()   # read the first line only
match = line_format.match(line)
if match:
    name, weeks_worked, weekly_payment = match.groups()
else:
    raise Exception('Could not match %s' % line)

# your code to update information
"
Generic way to create nested dictionary from flat list in python,"#!/usr/bin/env python3
from itertools import groupby
from pprint import pprint

x = [
        {""foo"":""A"", ""bar"":""R"", ""baz"":""X""},
        {""foo"":""A"", ""bar"":""R"", ""baz"":""Y""},
        {""foo"":""B"", ""bar"":""S"", ""baz"":""X""},
        {""foo"":""A"", ""bar"":""S"", ""baz"":""Y""},
        {""foo"":""C"", ""bar"":""R"", ""baz"":""Y""},
    ]


def fun(x, l):
    ks = ['foo', 'bar', 'baz']
    kn = ks[l]
    kk = lambda i:i[kn]
    for k,g in groupby(sorted(x, key=kk), key=kk):
        kg = [dict((k,v) for k,v in i.items() if k!=kn) for i in g]
        d = {}
        d[kn] = k
        if l<len(ks)-1:
            d[ks[l+1]+'s'] = list(fun(kg, l+1))
        yield d

pprint(list(fun(x, 0)))
"
How do I catch errors with scrapy so I can do something when I get User Timeout error?,"$ scrapy runspider errbacks.py --set DOWNLOAD_TIMEOUT=5 --set RETRY_TIMES=1
2015-06-30 23:45:55 [scrapy] INFO: Scrapy 1.0.0 started (bot: scrapybot)
2015-06-30 23:45:55 [scrapy] INFO: Optional features available: ssl, http11
2015-06-30 23:45:55 [scrapy] INFO: Overridden settings: {'DOWNLOAD_TIMEOUT': '5', 'RETRY_TIMES': '1'}
2015-06-30 23:45:56 [scrapy] INFO: Enabled extensions: CloseSpider, TelnetConsole, LogStats, CoreStats, SpiderState
2015-06-30 23:45:56 [scrapy] INFO: Enabled downloader middlewares: HttpAuthMiddleware, DownloadTimeoutMiddleware, UserAgentMiddleware, RetryMiddleware, DefaultHeadersMiddleware, MetaRefreshMiddleware, HttpCompressionMiddleware, RedirectMiddleware, CookiesMiddleware, ChunkedTransferMiddleware, DownloaderStats
2015-06-30 23:45:56 [scrapy] INFO: Enabled spider middlewares: HttpErrorMiddleware, OffsiteMiddleware, RefererMiddleware, UrlLengthMiddleware, DepthMiddleware
2015-06-30 23:45:56 [scrapy] INFO: Enabled item pipelines: 
2015-06-30 23:45:56 [scrapy] INFO: Spider opened
2015-06-30 23:45:56 [scrapy] INFO: Crawled 0 pages (at 0 pages/min), scraped 0 items (at 0 items/min)
2015-06-30 23:45:56 [scrapy] DEBUG: Telnet console listening on 127.0.0.1:6023
2015-06-30 23:45:56 [scrapy] DEBUG: Retrying <GET http://www.httphttpbinbin.org/> (failed 1 times): DNS lookup failed: address 'www.httphttpbinbin.org' not found: [Errno -5] No address associated with hostname.
2015-06-30 23:45:56 [scrapy] DEBUG: Gave up retrying <GET http://www.httphttpbinbin.org/> (failed 2 times): DNS lookup failed: address 'www.httphttpbinbin.org' not found: [Errno -5] No address associated with hostname.
2015-06-30 23:45:56 [errbacks] ERROR: <twisted.python.failure.Failure <class 'twisted.internet.error.DNSLookupError'>>
2015-06-30 23:45:56 [errbacks] ERROR: DNSLookupError on http://www.httphttpbinbin.org/
2015-06-30 23:45:56 [scrapy] DEBUG: Crawled (200) <GET http://www.httpbin.org/> (referer: None)
2015-06-30 23:45:56 [scrapy] DEBUG: Crawled (404) <GET http://www.httpbin.org/status/404> (referer: None)
2015-06-30 23:45:56 [errbacks] ERROR: Got successful response from http://www.httpbin.org/
2015-06-30 23:45:56 [errbacks] ERROR: <twisted.python.failure.Failure <class 'scrapy.spidermiddlewares.httperror.HttpError'>>
2015-06-30 23:45:56 [errbacks] ERROR: HttpError on http://www.httpbin.org/status/404
2015-06-30 23:45:56 [scrapy] DEBUG: Retrying <GET http://www.httpbin.org/status/500> (failed 1 times): 500 Internal Server Error
2015-06-30 23:45:57 [scrapy] DEBUG: Gave up retrying <GET http://www.httpbin.org/status/500> (failed 2 times): 500 Internal Server Error
2015-06-30 23:45:57 [scrapy] DEBUG: Crawled (500) <GET http://www.httpbin.org/status/500> (referer: None)
2015-06-30 23:45:57 [errbacks] ERROR: <twisted.python.failure.Failure <class 'scrapy.spidermiddlewares.httperror.HttpError'>>
2015-06-30 23:45:57 [errbacks] ERROR: HttpError on http://www.httpbin.org/status/500
2015-06-30 23:46:01 [scrapy] DEBUG: Retrying <GET http://www.httpbin.org:12345/> (failed 1 times): User timeout caused connection failure.
2015-06-30 23:46:06 [scrapy] DEBUG: Gave up retrying <GET http://www.httpbin.org:12345/> (failed 2 times): User timeout caused connection failure.
2015-06-30 23:46:06 [errbacks] ERROR: <twisted.python.failure.Failure <class 'twisted.internet.error.TimeoutError'>>
2015-06-30 23:46:06 [errbacks] ERROR: TimeoutError on http://www.httpbin.org:12345/
2015-06-30 23:46:06 [scrapy] INFO: Closing spider (finished)
2015-06-30 23:46:06 [scrapy] INFO: Dumping Scrapy stats:
{'downloader/exception_count': 4,
 'downloader/exception_type_count/twisted.internet.error.DNSLookupError': 2,
 'downloader/exception_type_count/twisted.internet.error.TimeoutError': 2,
 'downloader/request_bytes': 1748,
 'downloader/request_count': 8,
 'downloader/request_method_count/GET': 8,
 'downloader/response_bytes': 12506,
 'downloader/response_count': 4,
 'downloader/response_status_count/200': 1,
 'downloader/response_status_count/404': 1,
 'downloader/response_status_count/500': 2,
 'finish_reason': 'finished',
 'finish_time': datetime.datetime(2015, 6, 30, 21, 46, 6, 537191),
 'log_count/DEBUG': 10,
 'log_count/ERROR': 9,
 'log_count/INFO': 7,
 'response_received_count': 3,
 'scheduler/dequeued': 8,
 'scheduler/dequeued/memory': 8,
 'scheduler/enqueued': 8,
 'scheduler/enqueued/memory': 8,
 'start_time': datetime.datetime(2015, 6, 30, 21, 45, 56, 322235)}
2015-06-30 23:46:06 [scrapy] INFO: Spider closed (finished)
"
How to iterate through dictionary in our preferred keys order in python 2.7?,"for k in my_key_order:
    print dct[k]
"
How to get hard disk serial number using Python,"static struct hd_driveid hd;
int fd;

if ((fd = open(""/dev/hda"", O_RDONLY | O_NONBLOCK)) < 0) {
    printf(""ERROR opening /dev/hda\n"");
    exit(1);
}

if (!ioctl(fd, HDIO_GET_IDENTITY, &hd)) {
    printf(""%.20s\n"", hd.serial_no);
} else if (errno == -ENOMSG) {
    printf(""No serial number available\n"");
} else {
    perror(""ERROR: HDIO_GET_IDENTITY"");
    exit(1);
}
"
wxPython Button to load multiple images,"def loadImage(self, event):
    self.image_file = next(self.images)
    image_file = os.path.join(IMAGE_DIR, self.image_file)
    bmp = wx.Image(image_file, wx.BITMAP_TYPE_ANY).ConvertToBitmap()
    wx.StaticBitmap(self.panel, -1, bmp, pos=(200, 50), size=(417, 133))
"
Check if a list is a rotation of another list that works with duplicates,"In [4]: a = [3,1,2,3,4]   
In [5]: b =[3,4,3,1,2]   
In [6]: cyclic_equiv(a,b)
Out[6]: True    
In [7]: b =[3,4,3,2,1]    
In [8]: cyclic_equiv(a,b)
Out[8]: False    
In [9]: b =[3,4,3,2]    
In [10]: cyclic_equiv(a,b)
Out[10]: False
In [11]: cyclic_equiv([1,2,3],[1,2,3])
Out[11]: True
In [12]: cyclic_equiv([3,1,2],[1,2,3])
Out[12]: True
"
Subclassing dict: should dict.__init__() be called?,"class MyContainer(dict):
    def newmethod1(self, args):
        pass

    def newmethod2(self, args2):
        pass


def createImageDb(directory):
    d = MyContainer()
    # fill the container
    return d
"
"How to sum other columns when using ""Group by"" in a Tree View?","class your_class(osv.osv):
    # ...        

    def read_group(self, cr, uid, domain, fields, groupby, offset=0, limit=None, context=None, orderby=False, lazy=True):
        res = super(your_class, self).read_group(cr, uid, domain, fields, groupby, offset, limit=limit, context=context, orderby=orderby, lazy=lazy)
        if 'amount_pending' in fields:
            for line in res:
                if '__domain' in line:
                    lines = self.search(cr, uid, line['__domain'], context=context)
                    pending_value = 0.0
                    for current_account in self.browse(cr, uid, lines, context=context):
                        pending_value += current_account.amount_pending
                    line['amount_pending'] = pending_value
        if 'amount_payed' in fields:
            for line in res:
                if '__domain' in line:
                    lines = self.search(cr, uid, line['__domain'], context=context)
                    payed_value = 0.0
                    for current_account in self.browse(cr, uid, lines, context=context):
                        payed_value += current_account.amount_payed
                    line['amount_payed'] = payed_value
        return res
"
"Accessing Another Column By Value ,Pandas","In [17]:

import io
import pandas as pd
temp = """"""Type      Name           Category              
Bird      Flappy_Bird    Air      
Bird      Pigeon         Air    
Pokemon   Jerry          Aquatic      
Pokemon   Mudkip         Aquatic
Animal    Lion           Terrestrial""""""

df = pd.read_csv(io.StringIO(temp), sep='\s+')
df
Out[17]:
      Type         Name     Category
0     Bird  Flappy_Bird          Air
1     Bird       Pigeon          Air
2  Pokemon        Jerry      Aquatic
3  Pokemon       Mudkip      Aquatic
4   Animal         Lion  Terrestrial

[5 rows x 3 columns]
In [19]:

df.loc[df.Name == 'Pigeon','Category']
Out[19]:
1    Air
Name: Category, dtype: object
"
How do you split a string into quoted sentence and numbers using python,"import re

tgt='21357.53 84898.10 Mckenzie Meadows Golf Course 80912.48 84102.38'

nums=[m.group() for m in re.finditer(r'[\d\.]+',tgt)]
words=[m.group() for m in re.finditer(r'[a-zA-Z]+',tgt)]
print '""{}"" {}'.format(' '.join(words),' '.join(nums))
"
"Retrieve ""id"" as list from browse record of many2many field?","list_id = [br.id for br in user_obj.browse(cr, uid, uid).company_ids]
"
How to take multiple slices of a line from a file in python?,"for line in fileObj:
   splitline = line.rstrip().split(',')
   date, name, time, data1 = splitline[0:4]
   data2, data3 = splitline[18:20] 
"
Initialising a large dict with unknown keys? Is there a better way than this?,"d = dict.from_keys(range(100000))
for i, tup in enumerate(list_o_tuples):
    del d[i]
    d[list_o_tuples[0]] = list_o_tuples[1]
"
Strange behavior in python if/in word in file check,"#!/usr/bin/python

def login(): # <-- this only defines the function
    with open(""names.txt"", ""r"") as fin:
        users = fin.read()
    if ""Smith"" in users:
        print(""truth"")
    else:
        print(""false"")

login() # <-- this actually runs the function you have defined
"
How to count elements in a list and return a dict?,"Counter({'hello': 4, 'hi': 1})
"
Two different color colormaps in the same imshow matplotlib,"import matplotlib.pyplot as plt
import numpy as np
from numpy.ma import masked_array

v1 = -1+2*np.random.rand(50,150)
v1a = masked_array(v1,v1<0)
v1b = masked_array(v1,v1>=0)
fig,ax = plt.subplots()
pa = ax.imshow(v1a,interpolation='nearest',cmap=cm.Reds)
cba = plt.colorbar(pa,shrink=0.25)
pb = ax.imshow(v1b,interpolation='nearest',cmap=cm.winter)
cbb = plt.colorbar(pb,shrink=0.25)
plt.xlabel('Day')
plt.ylabel('Depth')
cba.set_label('positive')
cbb.set_label('negative')
plt.show()
"
TypeError: unsupported operand type(s) for +: 'Tag' and 'str',"query = """"""
INSERT INTO
    `property`
    (`date`,`Url`,`Rooms`,`place`,`PId`,`Phonenumber1`,`Phonenumber2`,`Phonenumber3`,`Typeofperson`,` Nameofperson`,`typeofproperty`,`Sq.Ft`,`PerSq.Ft`,`AdDate`,`AdYear`)
VALUES
    (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
""""""

# define your field values as a list
values = [today, a['href'] if a else 'NULL', ... ]

# execute
cursor.execute(query, values)
"
"Inserting an element in list, at exact location, without array sizing in Python?",">>> list(dfs(data))
[(3, 'a'), (1, 'b'), (5, 'c'), (2, 'a'), (4, 'b')]
>>> sorted(dfs(data), key=lambda x: x[0])
[(1, 'b'), (2, 'a'), (3, 'a'), (4, 'b'), (5, 'c')]
"
How would you give Chrome's version of a webpage to python?,"from lxml import html

url = 'http://www.makospearguns.com/product-p/mcffgb.htm'
xpath = '//*[@id=""v65-product-parent""]/tbody/tr[2]/td[2]/table[1]/tbody/tr/td/table/tbody/tr[2]/td[2]/table/tbody/tr[1]/td[1]/div/table/tbody/tr/td/font/div/b/span/text()'

src = load_source(url)

tree = html.fromstring(src)
text = tree.xpath(xpath)
"
Fastest way to replace space for underscore for a list of words in text,"from collections import defaultdict

def get_phrases(fle):
    phrase_dict = defaultdict(list)
    with open(fle) as ph:
        for line in map(str.rstrip, ph):
            k, _, phr = line.partition("" "")
            phrase_dict[k].append(line)
        return phrase_dict

from itertools import chain


def replace(fle, dct):
    with open(fle) as f:
        for line in f:
            phrases = sorted(chain.from_iterable(dct[word] for word in line.split() 
                             if word in dct) ,reverse=1, key=len)
            for phr in phrases:
                  line = line.replace(phr, phr.replace("" "", ""_""))
            yield line
"
using python join to join first element of each list,""","".join(""'%s'"" % qb[0] for qb in qb_data)
"
"Resampling multilevel index, or averaging along third dimension of a matrix/array","LON    0    1    2    3    4    5    6    7    8    9
LAT                                                  
0    8.8  8.5 10.8  9.2  9.0 10.8  9.3  9.3  7.6  9.1
1   10.6  8.5 10.6 12.2  8.0  8.8  9.5 11.3 10.8  9.5
2   11.0 10.3  8.2 11.2  9.9  8.4 13.5  9.7  7.8  9.0
3    8.1  6.2  8.8 12.6 10.6  7.1  8.8  9.3 11.7 10.2
4    9.1 10.1  7.8  8.7  7.4  7.3 10.2 11.9  8.3 11.9
"
Pandas Label Sequences of 1 in a 0-1 valued Series,">>> ((cl != cl.shift()) & cl).cumsum()
2013-01-02    0
2013-01-03    0
2013-01-04    0
2013-01-07    1
2013-01-08    1
...
2013-02-05    1
2013-02-11    2
2013-02-12    2
2013-02-13    2
2013-02-14    2
2013-02-15    2
2013-02-18    2
dtype: int64
"
Compare element with previous along axis,">>> np.fmax.accumulate(a) + (a*0)
array([  2.,   2.,  nan,   3.,   4.,   4.])
"
make variable global to multiple files in python,"$ python b.py 
0
1
1
2
"
'Remove' command for ND arrays in Python,"D = np.intersect1d(a, b).view(A.dtype).reshape(-1, A.shape[1])
"
How to fix my csv output to make it useable?,"lägenhet,Sundsvall,170 m²,NaN,7 rum,2015-04-03 14:43:34,NaN
radhus,Gotland,66 m²,NaN,2 rum,2015-04-03 14:43:15,NaN
lägenhet,Gävle,12 m²,3 200 kr/mån,1 rum,2015-04-03 14:34:46,NaN
lägenhet,Sundbyberg,30 m²,4 500 kr/mån,1 rum,2015-04-03 14:29:07,NaN
villa,Österåker,9 m²,3 500 kr/mån,1 rum,2015-04-03 14:25:28,NaN
villa,Söderköping,75 m²,2 700 kr/mån,3 rum,2015-04-03 14:00:25,NaN
lägenhet,""Stockholms stad - Älvsjö, Farsta, Vantör"",NaN,3 800 kr/mån,1 rum,2015-04-03 13:58:22,NaN
radhus,""Stockholms stad - Kista, Hässelby, Vällingby, Spånga"",NaN,4 700 kr/mån,1 rum,2015-04-03 13:47:37,NaN
villa,Vellinge,250 m²,NaN,8 rum,2015-04-03 13:46:35,NaN
lägenhet,""Stockholms stad - Kista, Hässelby, Vällingby, Spånga"",25 m²,6 000 kr/mån,1 rum,2015-04-03 13:41:42,NaN
lägenhet,Örebro,NaN,3 500 kr/mån,1 rum,2015-04-03 13:40:02,NaN
lägenhet,Helsingborg,10 m²,3 000 kr/mån,1 rum,2015-04-03 13:29:44,NaN
villa,Vingåker,140 m²,7 500 kr/mån,4 rum,2015-04-03 13:27:53,NaN
villa,Svalöv,200 m²,9 800 kr/mån,5 rum,2015-04-03 13:26:38,NaN
lägenhet,Sigtuna,49.5 m²,6 000 kr/mån,1 rum,2015-04-03 13:24:49,NaN
lägenhet,Kristianstad,NaN,NaN,1 rum,2015-04-03 13:14:14,NaN
villa,Stockholms stad - Bromma,125 m²,25 000 kr/mån,4 rum,2015-04-03 13:13:34,NaN
lägenhet,Oskarshamn,18 m²,3 000 kr/mån,1 rum,2015-04-03 13:05:50,NaN
villa,Göteborgs stad - Västra Göteborg,10 m²,NaN,1 rum,2015-04-03 13:02:07,NaN
gård,Sala,140 m²,NaN,7 rum,2015-04-03 13:00:34,NaN
lägenhet,""Stockholms stad - Vasastan, Norrmalm"",36 m²,14 900 kr/mån,""1,5 rum"",2015-04-03 12:57:55,NaN
lägenhet,Solna,60 m²,12 500 kr/mån,2 rum,2015-04-03 12:48:57,NaN
lägenhet,Danderyd,50 m²,11 000 kr/mån,1 rum,2015-04-03 12:46:05,NaN
lägenhet,Luleå,80 m²,6 500 kr/mån,3 rum,2015-04-03 12:45:03,NaN
villa,Söderhamn,172 m²,NaN,6 rum,2015-04-03 12:42:33,NaN
lägenhet,""Stockholms stad - Enskede, Årsta, Skarpnäck"",51 m²,14 000 kr/mån,2 rum,2015-04-03 12:39:09,NaN
lägenhet,Umeå,13 m²,2 400 kr/mån,1 rum,2015-04-03 12:37:43,NaN
lägenhet,Linköping,65 m²,6 300 kr/mån,2 rum,2015-04-03 12:36:02,NaN
lägenhet,Botkyrka,58.5 m²,NaN,2 rum,2015-04-03 12:34:11,NaN
lägenhet,Upplands Väsby,80 m²,5 000 kr/mån,3 rum,2015-04-03 12:32:21,NaN
lägenhet,Strömsund,105 m²,4 000 kr/mån,3 rum,2015-04-03 12:32:21,NaN
lägenhet,Lund,86 m²,6 500 kr/mån,3 rum,2015-04-03 12:32:18,NaN
lägenhet,Uppsala,68 m²,6 000 kr/mån,2 rum,2015-04-03 12:28:13,NaN
lägenhet,""Stockholms stad - Maria, Gamla Stan, Högalid"",NaN,25 000 kr/mån,2 rum,2015-04-03 12:24:45,NaN
lägenhet,Halmstad,21 m²,3 300 kr/mån,1 rum,2015-04-03 12:21:28,NaN
lägenhet,Uppsala,40 m²,5 000 kr/mån,2 rum,2015-04-03 12:20:40,NaN
lägenhet,Uppsala,92 m²,NaN,3 rum,2015-04-03 12:17:53,NaN
lägenhet,Eskilstuna,NaN,NaN,1 rum,2015-04-03 11:48:42,NaN
lägenhet,Helsingborg,66 m²,7 350 kr/mån,3 rum,2015-04-03 11:44:17,NaN
villa,Göteborgs stad - Hisingen,110 m²,9 500 kr/mån,4 rum,2015-04-03 11:43:30,NaN
lägenhet,Göteborgs stad - Västra Göteborg,53 m²,10 000 kr/mån,""2,5 rum"",2015-04-03 11:20:36,NaN
lägenhet,""Stockholms stad - Kista, Hässelby, Vällingby, Spånga"",NaN,4 900 kr/mån,1 rum,2015-04-03 11:17:11,NaN
lägenhet,""Stockholms stad - Hägersten, Liljeholmen"",55 m²,12 500 kr/mån,2 rum,2015-04-03 11:16:07,NaN
lägenhet,Örebro,70 m²,4 000 kr/mån,3 rum,2015-04-03 11:15:02,NaN
lägenhet,Linköping,""46,5 m²"",NaN,1 rum,2015-04-03 11:13:13,NaN
lägenhet,Kristinehamn,34 m²,3 600 kr/mån,""1,5 rum"",2015-04-03 11:09:05,NaN
lägenhet,Jönköping,NaN,NaN,1 rum,2015-04-03 11:02:07,NaN
lägenhet,Göteborgs stad - Innerstaden,42 m²,7 000 kr/mån,1 rum,2015-04-03 10:47:58,NaN
lägenhet,Umeå,70 m²,NaN,4 rum,2015-04-03 10:39:31,NaN
lägenhet,Göteborgs stad - Västra Centrum,55 m²,7 000 kr/mån,2 rum,2015-04-03 10:16:53,NaN
"
Pygame the rectangle is not moving?,"BLACK = (0, 0, 0)
"
What is a cell in the context of an interpreter or compiler?,">>> {v: c.cell_contents for v, c in zip(
        two_thirds.__code__.co_freevars,
        two_thirds.__closure__
)}
{'d': 3, 'n': 2}
"
"Python Pandas - Main DataFrame, want to drop all columns in smaller DataFrame","df = df.drop(df2, axis=1)
"
"Python use a virtual class to apply a generic ""pipe"" pattern","mp.MasterProcess()
mp_proxy = MasterProcessProxy(mp.event_generator_remote)
mp_proxy.create_something(spam=""eggs"", bacon=""baked beans"")
# Will call pipe.send([""create_something"", {""spam"":""eggs"", ""bacon"":""baked beans""}])
"
converting rows of a single dataFrame column into a single list in python,"> counter = 0
> a_list = a_series.values.tolist()
> while(counter < len(a_list)):
..    if((counter+1) < len(a_list)):
..        print(a_list[counter] == a_list[counter+1])
..    counter+=1
False
False
False
False
False
"
How to find files and save them to different folder in python,"wanted_files = find_files_to_list('/original_project/', '*.html')
for filename in find_files('/copy_project/', '*'):
    if filename not in wanted_files:
        os.remove(filename)
"
Python Recursive Scraping with Scrapy,"{'description': [u""\n\t\tHave a nice, sturdy, compact car hauler/trailer.  May be used for other hauling like equipstment, ATV's and the like,   Very solid and in good shape.   Parice to sell at only $995.   Call Bill at 541 944 2929 top see or Roy at 541 9733421.   \n\t""],
 'link': [u'/cto/4354771900.html'],
 'price': [u'$995'],
 'title': [u'compact sturdy car trailer ']}
"
Printing a two dimensional list,"def _new_game_board() -> [[str]]:
    """"""
    Creates a new game board.  Initially, a game board has the size
    BOARD_COLUMNS x BOARD_ROWS and is comprised only of strings with the
    value NONE
    """"""

    return [[None] * BOARD_COLUMNS for _ in range(BOARD_ROWS)]

ConnectFourGameState = namedtuple('ConnectFourGameState', ['board', 'turn'])

def new_game_state() -> ConnectFourGameState:
    """"""
    Returns a ConnectFourGameState representing a brand new game
    in which no moves have been made yet.
    """"""

    return ConnectFourGameState(board=_new_game_board(), turn=RED)
"
"Instead of grid lines on a plot, can matplotlib print grid crosses?","xticks = ax.get_xticks()[1:-1] #< notice the slicing
yticks = ax.get_yticks()[1:-1] #< notice the slicing
xgrid, ygrid = np.meshgrid(xticks, yticks)
"
how can I sort dictionary whose key is tuple and value is int?,"sorted(prob.items(), key = lambda x: x[1], reverse = True)
"
How to display search results(django+haystack+elasticsearch) on the SAME page?,"<form method=""get"" action=""{% url 'search:custom_search' %}"">
"
Django model relation,"company = Company.objects.get(pk=1)
offices = company.office_set.all()
for office in offices:
    employees = office.employee_set.all()
"
splitting merged words in python,"re.sub(r""([a-z\.!?])([A-Z])"", r""\1 \2"", your_string)
"
Qt - pyside - saveGeometry() saveState(),"settings = QtCore.QSettings(org_name, app_name)
is_floating = main_win._ui.dockWin.isFloating()
settings.setValue('dockWin/isFloating', is_floating)
main_win._ui.dockWin.setFloating(True)
settings.setValue('geometry', main_win.saveGeometry())
settings.setValue('state', main_win.saveState())
"
How to run executable from python and pass it arguments asked for?,"def create_grid(*commands):
    process = subprocess.Popen(
        ['grid.exe'],
        stdin=subprocess.PIPE)

    process.communicate('\n'.join(commands) + '\n')
"
Best Way to Distinguish Equal List items in Python,">>> from itertools import count
>>> from collections import Counter
>>> lis = ['a','a','a','b','b','c']
>>> c = Counter(lis)
>>> dic = {k: count(1) for k in c}
>>> [x + ( str(next(dic[x])) if c[x]>1 else '') for x in lis]
['a1', 'a2', 'a3', 'b1', 'b2', 'c']
"
How to make ordered dictionary from list of lists?,">>> from pprint import pprint
>>> pprint([OrderedDict(zip(names, subl)) for subl in list_of_lists])
[OrderedDict([('date', '20010103'), ('open', '0.9507'), ('high', '0.9569'), ('low', '0.9262'), ('close', '0.9271')]),
 OrderedDict([('date', '20010104'), ('open', '0.9271'), ('high', '0.9515'), ('low', '0.9269'), ('close', '0.9507')]),
 OrderedDict([('date', '20010105'), ('open', '0.9507'), ('high', '0.9591'), ('low', '0.9464'), ('close', '0.9575')])]
"
"Finding groups of letters, numbers, or symbols",">>> import re
>>> s = ""ABC12345..::""
>>> re.match('([A-Z]*)([0-9]*)([\.:]*)', s).groups()
('ABC', '12345', '..::')
"
What is the python equivalent of the Perl pattern to track if something has already been seen?,"seen = set()
for x in foo:
    if x in seen:
        continue
    seen.add(x)
    # do something
"
How can i create substrings from given strings in python?,"['Netall_Low_Lin_kor', '110_180']
['Netall_Low_Lin_cer', '110_181']
['Netall_Low_Lin_asa', '110_182']
['Netall_Low_Lin_row', '110_183']
['Netall_Low_Lin_psq', '182_42']
['Netall_Low_Lin_vyt', '182_41']
"
Selecting item in a string from a starting point retrieved via regex (Python),"line = s[i]
idx = line.find(pattern)
if idx >= 0:
    end = idx+len(pattern)
    selection.append(line[end:end+5])
"
Matplotlib Legend for Scatter with custom colours,"pl1, = plot(x1, y1, '.', alpha=0.1, label='plot1')
pl2, = plot(x2, y2, '.', alpha=0.1, label='plot2')
p1 = Rectangle((0, 0), 1, 1, fc=pl1.get_color())
p2 = Rectangle((0, 0), 1, 1, fc=pl2.get_color())
legend((p1, p2), (pl1.get_label(), pl2.get_label()), loc='best')
"
Delay load/calculate values in Python,"from delayed import delayed
del_list = delayed(lambda: [1,2,3,4,5])
# At this point the lambda function has not been called
print(del_list[0])
# Now that we have used the variable, the lambda has been called
"
Store form fields as key-values / individual rows,"class SettingProxy(models.Model):

    domain = models.ForeignKey(Domain, null=False, verbose_name=""Domain"")
    theme = models.CharField(null=False, default='mytheme', max_length=16)
    message = models.CharField(null=False, default='Waddup', max_length=64)

    class Meta:
        abstract = True

    def __init__(self, *args, **kwargs):
        super(SettingProxy, self).__init__(*args, **kwargs)
        for field in self._meta.fields:
            if isinstance(field, models.AutoField):
                del field

    def save(self, *args, **kwargs):
        with transaction.commit_on_success():
            Setting.objects.filter(domain=self.domain).delete()

            for field in self._meta.fields:
                if isinstance(field, models.ForeignKey) or isinstance(field, models.AutoField):
                    continue
                else:
                    print field.name + ': ' + field.value_to_string(self)
                    Setting.objects.create(domain=self.domain,
                        name=field.name, value=field.value_to_string(self)
                    )
"
Get colour of specified pixel in window,"pixels[kitty.width * y + x]
"
Logical OR on a subset of columns in a DataFrame,"df.loc[np.logical_or.reduce(df[mylist], axis=1)]
"
NumPy Tensor / Kronecker product of matrices coming out shuffled,"np.kron(flip, flip)
"
Join Python dictionaries with a matching key:value pair,"l = [[x for x in db[x] if x['name']=='bob'] for x in db]
bob = [item for sublist in l for item in sublist
"
How to get python to return a list of lists as a column matrix?,"buff.append(list_v)
"
Having trouble parsing a txt file into a list full of zip codes in my zipcode lookup program,"def processRecords():
        userInput = raw_input(USERPROMPT)
        # Check if a user has entered a text or not
        if userInput:
            # check the index from zipcode   

            if userInput in zipcode:
                # the index of the zipcode in the zipcode list is the same 
                # to get related cities and states.
                index_ = zipcode.index(userInput) 
                print ""The city is %s and the state is %s "" % \
                      (city[index_], state[index_])
            else:
                print ""\nThe zip code does not exist.""
        else:
            print ""Please enter a data""
"
How to open files from a list,"ref_files = map(open, reflist)
"
Pyside setStyleSheet() and long lines?,"with open('path', 'r', encoding='utf-8') as file:
    style_sheet = file.read()
app.setStyleSheet(style_sheet)
"
populate a class variable with the value of another class variable,"def weight_graph(request):
    print 'weight graph'
    x_axis_list = ['Day 1', 'Day 2', 'Day 3']
    series = [{
            'name': 'Tokyo',
            'data': [7.0, 1.0, 9.5]
        }, {
            'name': 'New York',
            'data': [-0.2, 0.8, 5.7]
        }]

    highchart = LineHighChart(
                              'my chart',
                              'last seven days',
                              x_axis_list,
                              'Weight',
                              ' lbs',
                              series
                              )

    return JsonResponse(highchart.__dict__, safe=False)
"
Python using Tkinter moving Labels and Entry boxes,"label.grid( row=0, column=0, sticky=""ne"")
label2.grid(row=1, column=0, sticky=""ne"")
label3.grid(row=2, column=0, sticky=""ne"")

nameentry.grid(   row=0, column=1, sticky=""nsew"")
addressentry.grid(row=1, column=1, sticky=""nsew"")
numberentry.grid( row=2, column=1, sticky=""nsew"")
"
index by comparision of two numpy arrays in python,"In [173]:

a=[1,'aaa', 'bbb', 'vvv', 'www']
a *=100
b=[2,'qqq', 'bbb', 'ppp', 'www']
b *=100
A = np.array(a)
B = np.array(b)
%timeit (A==B).sum()
%timeit sum(A==B)
The slowest run took 2784.03 times longer than the fastest. This could mean that an intermediate result is being cached 
100000 loops, best of 3: 11.4 µs per loop
1000 loops, best of 3: 1.34 ms per loop
"
python - going from a stack trace to a tree,"for lst in input:
    for i in range(len(lst)):
        if lst[i] not in item_node:
            item_node[lst[i]] = [lst[i]]
            if i == 0:
                output.append(item_node[lst[i]])
            else:
                item_node[lst[i-1]].append(item_node[lst[i]])


Out[58]: [['a', ['b', ['c'], ['d']], ['e']]]
"
Finding count of distinct elements in DataFrame in each column,"In [208]:
df.apply(pd.Series.nunique)

Out[208]:
a    4
b    5
c    1
dtype: int64
"
Why is __del__ called at the end of a with block?,"with Foo() as foo:
    print ('Hello World!')
"
Is there a way to see the variables declared in a session in Python?,">>> a = 23
>>> h = ""Liam Neeson""
>>> k = {'a', 'b', 'c'}
>>> set(dir()) - set(dir(__builtins__)) - {'__builtins__'}
{'a', 'h', 'k'}
"
Does selenium not work with & in url,"elements = WebDriverWait(driver, 10).until(lambda driver: driver.find_elements_by_class_name('video-item'))                                   
for s in elements:
    print s.text
    video = {}
    videourl = s.find_element_by_css_selector('a').get_attribute('href')
    video['url'] = videourl
    videotitle = s.find_element_by_css_selector('a').get_attribute('alt')
    video['title'] = videotitle
    video_trend.append(video)
print video_trend
"
Cumulative counts in NumPy without iteration,"def rcount(a):
    without_reset = (a == 1).cumsum()
    reset_at = (a == 0)
    overcount = np.maximum.accumulate(without_reset * reset_at)
    result = without_reset - overcount
    return result
"
How to calculate the likelihood of curve-fitting in scipy?,"# construct the data vectors using c()
> xdata = c(-2,-1.64,-1.33,-0.7,0,0.45,1.2,1.64,2.32,2.9)
> ydata = c(0.699369,0.700462,0.695354,1.03905,1.97389,2.41143,1.91091,0.919576,-0.730975,-1.42001)
# some starting values
> p1 = 1
> p2 = 0.2
> p3 = 0.01

# do the fit
> fit1 = nls(ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata), start=list(p1=p1,p2=p2))
> fit2 = nls(ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata)+p3*xdata, start=list(p1=p1,p2=p2,p3=p3))

# summarise
> summary(fit1)

Formula: ydata ~ p1 * cos(p2 * xdata) + p2 * sin(p1 * xdata)

Parameters:
   Estimate Std. Error t value Pr(>|t|)    
p1 1.881851   0.027430   68.61 2.27e-12 ***
p2 0.700230   0.009153   76.51 9.50e-13 ***
---
Signif. codes:  0 ?**?0.001 ?*?0.01 ??0.05 ??0.1 ??1

Residual standard error: 0.08202 on 8 degrees of freedom

Number of iterations to convergence: 7 
Achieved convergence tolerance: 2.189e-06

> summary(fit2)

Formula: ydata ~ p1 * cos(p2 * xdata) + p2 * sin(p1 * xdata) + p3 * xdata

Parameters:
   Estimate Std. Error t value Pr(>|t|)    
p1  1.90108    0.03520  54.002 1.96e-10 ***
p2  0.70657    0.01167  60.528 8.82e-11 ***
p3  0.02029    0.02166   0.937     0.38    
---
Signif. codes:  0 ?**?0.001 ?*?0.01 ??0.05 ??0.1 ??1

Residual standard error: 0.08243 on 7 degrees of freedom

Number of iterations to convergence: 9 
Achieved convergence tolerance: 2.476e-06

> anova(fit2, fit1)
Analysis of Variance Table

Model 1: ydata ~ p1 * cos(p2 * xdata) + p2 * sin(p1 * xdata) + p3 * xdata
Model 2: ydata ~ p1 * cos(p2 * xdata) + p2 * sin(p1 * xdata)
  Res.Df Res.Sum Sq Df     Sum Sq F value Pr(>F)
1      7   0.047565                             
2      8   0.053813 -1 -0.0062473  0.9194 0.3696
"
"python, replace if/elif with dictionary","username, password = queue, passwords.get(queue, None)
"
Python | How to append elements to a list randomly,"def random_insert_seq(lst, seq):
    insert_locations = sample(xrange(len(lst) + len(seq)), len(seq))
    inserts = dict(zip(insert_locations, seq))
    input = iter(lst)
    lst[:] = [inserts[pos] if pos in inserts else next(input)
        for pos in xrange(len(lst) + len(seq))]
"
How to sort object attributes,">>> finger_names, finger_lengths
(('pointer', 'ring', 'pinky', 'middle', 'thumb'), (12, 13, 6, 15, 7))
>>> s_tuples = sorted(zip(finger_names, finger_lengths), key=lambda x: x[1])
>>> finger_names, finger_lengths = zip(*s_tuples)
>>> finger_names, finger_lengths
(('pinky', 'thumb', 'pointer', 'ring', 'middle'), (6, 7, 12, 13, 15))
"
How to use pandas to group pivot table results by week?,"In [10]: df.resample('w', how='sum', axis=1)
Out[10]: 
                    2012-11-04  2012-11-11
index Sub-Product                         
GP    Acquisitions         458         370
      Applications         553         427
GPF   Acquisitions        4311        2665
      Applications        5447        3365
"
"How to retrieve a variable from a list located in a dictionary, located in a list? two","fruits = [{
    'name':""apple"",
    'color':[""red"",""green""],
    'weight':1
}, {
    'name':""banana"",
    'color':[""yellow"",""green""],
    'weight':1
}, {
    'name':""orange"",
    'color':""orange"",
    'weight':[1,2]
}]

def findit(fruits,color):
    for indv in fruits:
        if color in indv['color']:
            return indv['name'], indv['weight']

print findit(fruits,""red"")
"
Python: Converting HEX string to bytes,">>> b'\x34'
'4'
>>> b'\x44'
'D'
>>> b'\x36'
'6'
>>> b'\x3f'
'?'
"
JSON to Pandas: is there a more elegant solution?,"import pandas as pd
import json
import urllib

js = json.loads(urllib.urlopen(""test.json"").read())
data = js[""data""]
rows = [row[""row""] for row in data] # Transform the 'row' keys to list of lists.
df = pd.DataFrame(rows, columns=js[""columns""])
print df
"
Performance gain using anonymous functions?,">>> timeit.repeat(""test('test')"", setup=""from __main__ import test"")
[0.16360807418823242, 0.1602180004119873, 0.15763211250305176]
>>> timeit.repeat(""testanon('test')"", setup=""from __main__ import testanon"")
[0.15949010848999023, 0.15913081169128418, 0.17438983917236328]
"
Build array from other array and table of values (Python),"In [480]: A
Out[480]: 
[[139.0, 355.0, 0.5047342078960846],
 [419.0, 476.0, 0.3593886192040009],
 [580.0, 733.0, 0.3137694021600973]]

In [481]: X
Out[481]: [555, 689, 387, 617, 151, 149, 452]

In [482]: Y
Out[482]: 
array([ 1.        ,  0.3137694 ,  1.        ,  0.3137694 ,  0.50473421,
        0.50473421,  0.35938862])
"
state retention for classes and closures,">>> counter = make_counter()
>>> counter()
0
>>> counter()
1
>>> # and so on...
"
Suggestions on distributing python data/code over worker nodes?,"from celery.task import task
@task
def process(i):
    # do something with i
    i += 1
    # return a result
    return i
"
how to remove and add character/integer in python?,"data = ""8/3/2015,1,F&B,L,05_>50 yrs,08_> 50 mio,02_100-<500rb,000129""

last = data.rfind("","")
if last > -1:
    data = data[:last+1] + ""0858"" + data[last+1:]
"
Iterative Comparison of raw_input,">>> '1' > '0'
True
"
Pass url with id to html page that is called by another url,"response['pk-user'] = rental.pk
return response
"
How can I simplify this function?,"split_string(""foo.,.bar"", "".,"") will return [""foo"", ""bar""]
"
Changing Biopython include path for compilation during pip installation,"pip install recompressed.tar.gz
"
How to transform new input data using dictVectorize and using the model?,"from sklearn.pipeline import make_pipeline
pipe = make_pipeline(DictVectorizer(), LogisticRegressionCV())
pipe.fit(input_data, y_input)
y_new = pipe.predict(new_data)
"
How to convert list lookalike into a list?,"with open(selectedCase) as infh:
    dataInput = [ast.literal_eval(line) for line in infh]
"
How to execute a python notebook inside another one at google cloud datalab,"%run <relative path to notebook>
"
Getting key with maximum value in dictionary?,">>> import operator
>>> stats = {'a':1000, 'b':3000, 'c': 100, 'd':3000}
>>> max(stats.iteritems(), key=operator.itemgetter(1))[0]
'b' 
"
Modify numpy array column by column inside a loop,"for col in mnX.T:
    col += cnA[:, 0].T
"
Python list subtraction operation,"class MyList(list):
    def __init__(self, *args):
        super(MyList, self).__init__(args)

    def __sub__(self, other):
        return self.__class__(*[item for item in self if item not in other])
"
Python remove everything after a space with hex \x00,"s.split('\x00')[0]
"
Order of operations and fast computation in Python,"def norm_spirals(a,k):
    se = 0.25 + 0.5*k + 0.5j*a
    return pi * abs(gamma(se)/gamma(se + 0.5)) ** 2.0
"
Extract specified area from DataFrame,"              Time
0  2015-01-01 00:00
"
Python program don't run,"""data.csv""
"
Iterate through rows in pandas dateframe in a cleaner way using .iterrows() and keep track of rows inbetween specific values,"
import numpy as np
import pandas as pd

df = pd.DataFrame({'EvntType': [2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2],
                   'Time': [15, 19, 21, 23, 25, 26, 28, 31, 33, 36, 39],
                   'Var1': [1, 1, 6, 3, 0, 2, 3, 5, 1, 5, 1],
                   'Var2': [17, 45, 43, 65, 76, 35, 25, 16, 25, 36, 21]})

# Remove rows where Var1 equals 0
df = df.loc[df['Var1'] != 0]

mask = df['EvntType']==1
times = df.loc[mask, 'Time']
idx = np.flatnonzero(mask)

result = pd.DataFrame(
    {'start_time': times[:-1],
     'time_inbetween': np.diff(times),
     'event_count': np.diff(idx)-1})

print(result)
"
Django ModelForm - Multiple Forms in Template with Different Action Views and Redirects,"@login_required()
def index(request):
    rhi_model_form = RhiModelForm()
    activity_model_form = ActivityModelForm()
    rhi_list = Rhi.objects.all()
    activity_list = Activity.objects.all()
    context = {
        'rhi_model_form': rhi_model_form,
        'rhi_list': rhi_list,
        'activity_model_form': activity_model_form,
        'activity_list': activity_list,
    }
    return render(request, 'ec/index.html', context)

@login_required()
def add_rhi(request):
    if request.method == 'POST':
        rForm = RhiModelForm(request.POST)
        if rForm.is_valid():
            rForm.save()
            return redirect('ec:index')
        else:
            rhi_errors = rForm.errors
            rhi_model_form = RhiModelForm()
            context = {
                'rhi_errors': rhi_errors,
                'rhi_model_form': rhi_model_form,
            }
            return render(request, 'ec/index.html', context)

@login_required()
def add_activity(request):
    if request.method == 'POST':
        aForm = ActivityModelForm(request.POST)
        if aForm.is_valid():
            activity = aForm.save(commit=False)
            activity.lastModifiedBy = request.user
            activity.createdBy = request.user
            activity.save()
            return redirect('ec:index')
        else:
            activity_errors = aForm.errors
            activity_model_form = ActivityModelForm()
            context = {
                'activity_errors': activity_errors,
                'activity_model_form': activity_model_form,
            }
            return render(request, 'ec/index.html', context)
"
pandas: t-test and p-value of month over month mean difference in aggregated dataframe using groupby function,"df2[""dif_avg""] = df2.avg - df2.avg_2
df2[""p_value""] = res.pvalue


Out[22]: 
        Month  stdev    n   avg  avg_2    n_2  stdev_2  dif_avg   p_value
1  2016-01-02   1.89   79  7.46   7.57  309.0     1.92    -0.11  0.646226
2  2016-01-03   2.25  158  7.20   7.46   79.0     1.89    -0.26  0.350814
3  2016-01-04   2.23   22  7.68   7.20  158.0     2.25     0.48  0.353023
5  2016-01-02   1.96   33  7.09   7.10  175.0     2.04    -0.01  0.978808
6  2016-01-03   2.02  110  7.32   7.09   33.0     1.96     0.23  0.559625
7  2016-01-04   1.73   25  7.92   7.32  110.0     2.02     0.60  0.137527
9  2016-01-02   1.45   22  7.73   7.40  111.0     2.42     0.33  0.395806
10 2016-01-03   2.44   21  6.95   7.73   22.0     1.45    -0.78  0.214270
11 2016-01-04   2.84   92  6.92   6.95   21.0     2.44    -0.03  0.961019
"
Python 3.2 Replace all words in a text document that are a certain length?,"  o.write(new_line + '\n')
"
How to detect unicode character range in Python?,"def detect_language(line):
    maxchar = max(line)
    if u'\u0c00' <= maxchar <= u'\u0c7f':
        return 'telugu'
    elif u'\u0900' <= maxchar <= u'\u097f':
        return 'hindi'
    return 'english'
"
How to get pyparser to work in a particular form,"def test(s):
    exprtokens = bnf.parseString(s,parseAll=True)
    print exprtokens

test(""10"")
test(""10+20"")
test(""avg(10)"")
test(""avg(+10)"")
test(""column_1+8"")
test(""avg(column_1+10)+10"")
"
Get matching csv rows with Python,"import csv

key = 'b0074'
with open('serials.csv') as csvfile:
    reader = csv.reader(csvfile, delimiter=' ', quotechar='|')
    result = [row[1].strip() for row in reader if row[0].strip() == key]

>>> result
['b00ph', 'b11ph', 'b22ph', 'b33ph']
"
Print two presorted lists into one output file in python,"a1
b2
c3
d4
e5
"
numpy: how to fill multiple fields in a structured array at once,"import numpy as np
strc = np.zeros(4, dtype=[('x', int), ('y', int), ('z', int)])
strc_view = strc.view(int).reshape(len(strc), -1)
x = np.array([2, 3])
strc_view[0, [0, 1]] = x
"
How to print two or more identical letter in a string?,"H
He
Hell
Hello
Hello 
Hello JJ
"
python nltk returning odd result for wordnet similarity measure,"Path similarity of game       and leonardo   is 0.17
Path similarity of game       and chess      is 0.25
"
How to filter a big chunk of text which contains no line breaks in python?,"obj = data.json()
for child in obj['data']['children']:
    print child['data']['title']
"
Return dict of attribute name and value of type,">>> NewType=type('nt',(object,),{'x':'hello'})
>>> n=NewType()
>>> n.x
'hello'
>>> NewType.__dict__
dict_proxy({'__dict__': <attribute '__dict__' of 'nt' objects>, 'x': 'hello', '__module__': '__main__', '__weakref__': <attribute '__weakref__' of 'nt' objects>, '__doc__': None})
>>> type(n).__dict__
dict_proxy({'__dict__': <attribute '__dict__' of 'nt' objects>, 'x': 'hello', '__module__': '__main__', '__weakref__': <attribute '__weakref__' of 'nt' objects>, '__doc__': None})
>>> vars(NewType)
dict_proxy({'__dict__': <attribute '__dict__' of 'nt' objects>, 'x': 'hello', '__module__': '__main__', '__weakref__': <attribute '__weakref__' of 'nt' objects>, '__doc__': None})
>>> vars(type(n))
dict_proxy({'__dict__': <attribute '__dict__' of 'nt' objects>, 'x': 'hello', '__module__': '__main__', '__weakref__': <attribute '__weakref__' of 'nt' objects>, '__doc__': None})
"
Python - Is a dictionary slow to find frequency of each character?,"| approach       | american-english, |      big.txt, | time w.r.t. defaultdict |
|                |     time, seconds | time, seconds |                         |
|----------------+-------------------+---------------+-------------------------|
| Counter        |             0.451 |         3.367 |                     3.6 |
| setdefault     |             0.348 |         2.320 |                     2.5 |
| list           |             0.277 |         1.822 |                       2 |
| try/except     |             0.158 |         1.068 |                     1.2 |
| defaultdict    |             0.141 |         0.925 |                       1 |
| numpy          |             0.012 |         0.076 |                   0.082 |
| S.Mark's ext.  |             0.003 |         0.019 |                   0.021 |
| ext. in Cython |             0.001 |         0.008 |                  0.0086 |
#+TBLFM: $4=$3/@7$3;%.2g
"
Send data from Python to Javascript (JSON),"$(function(){
    var your_generated_table = $('table'),
        dynamic_data = JSON.parse(your_generated_table.attr('data-dynamic'));
});
"
matplotlib chart - creating horizontal bar chart,"import matplotlib.pyplot as plt
from numpy.random import rand
from numpy import arange

val = 3-6*rand(5)    # the bar lengths
pos = arange(5)+.5    # the bar centers on the y axis
print pos

fig = plt.figure()
ax = fig.add_subplot(111)
ax.barh(pos,val, align='center',height=0.1)
ax.set_yticks(pos, ('Tom', 'Dick', 'Harry', 'Slim', 'Jim'))

ax.axvline(0,color='k',lw=3)   # poor man's zero level

ax.set_xlabel('Performance')
ax.set_title('horizontal bar chart using matplotlib')
ax.grid(True)
plt.show()
"
Fastest way to calculate average of datetime rows using pandas,">>> time_diff = groups.apply(lambda df: df.datetime.diff().mean())
>>> time_diff.head()
device_id
0   00:02:12.871504
1   00:02:10.464099
2   00:02:09.550000
3   00:02:15.845003
4   00:02:14.642375
dtype: timedelta64[ns]
"
Python and urllib,">>> for l in files[:4]: print l.split()[-1]
... 
01001_Autauga_County
01003_Baldwin_County
01005_Barbour_County
01007_Bibb_County
"
readlines() without EOL at the of the lines,"lista = [line.strip() for line in z]
"
Matching urls in html link elements using regex,">>> reg = '<(\w+)\s[^<>]*?href=[\'""]([\w$-_.+!*\'\(\),%\/:#=?~\[\]!&@;]*?)[\'""].*?>((.+?)</\1>)?'
... 
>>> re.findall(reg, d)
[('link', 'http://blah.net/message/new/?stopemails.aspx?id=5A42FDF5', '', ''), 
('a', 'http://blah.net/message/new/', '', '')]
"
Indexing by multiple fields with pandas in python,"returns = df.groupby(['timestamp, 'id']).price.first().unstack('id').pct_change()

>>> returns
id                          0         1         2
timestamp                                        
2015-01-01 09:00:00       NaN       NaN       NaN
2015-01-01 11:00:00  0.004604  0.056657 -0.036873
2015-01-02 09:00:00 -0.036664  0.019303 -0.038859
"
Can I determine if an application is being run normally vs via a unittest in Python?,"import myapp.logging
myapp.logging.setlevel(myapp.logging.ERROR)
"
Comparing strings in python to find errors,">>> import difflib
>>> difflib.get_close_matches('FO', ['FOO', 'BAR', 'BAZ'])
['FOO']
>>> difflib.get_close_matches('F00', ['FOO', 'BAR', 'BAZ'])
[]
>>> difflib.get_close_matches('F0O', ['FOO', 'BAR', 'BAZ'])
['FOO']
>>> difflib.get_close_matches('FO0', ['FOO', 'BAR', 'BAZ'])
['FOO']
"
Python printing Formatted text with lists nested in dict,"info = ['processor_1_info', 'processor_2_info', 'processor_3_info']
#info = machine_info['processors'] for your code.
print ""Processor(s):{:>20s}"".format(info[0])
for item in info[1:]:
    print ""{:>33s}"".format(item)
"
Python Twisted with callInThread,"from twisted.internet.threads import deferToThread
deferredObj = threads.deferToThread(run_app, self.appDataReceived)
"
web.py: How to selectively hide resources with 404s for any HTTP method?,"import types

class application(web.application):
    def _delegate(self, f, fvars, args=[]):
        def handle_class(cls):
            meth = web.ctx.method
            if meth == 'HEAD' and not hasattr(cls, meth):
                meth = 'GET'
            if not hasattr(cls, meth):
                if hasattr(cls, '_default'):
                    tocall = getattr(cls(), '_default')
                    return tocall(*args)
                raise web.nomethod(cls)
            tocall = getattr(cls(), meth)
            return tocall(*args)

        def is_class(o): return isinstance(o, (types.ClassType, type))
        ...
"
Calculating the number of years in a pandas dataframe,"df['date_col'].dt.year.nunique()
"
Help Creating Python Class with Tkinter,"Canvas.create_rectangle(x0, y0, x1, y1, option, ...)
"
Regex to find the second occurance of an entry,"Implementation
import re

data  = """"""[SectionTitle0]
...
Name: NameOfTechC
...

[SectionTitle1]
...
Name: NameOfZoneC
...
""""""

regexStr = r'\[([^\]]*)\][\r\n]+(?:(?!Name:).*[\r\n]+)*?Name:\s*(.*)'
regex    = re.compile(regexStr)
regex.findall(data)
"
"Perl to Python , Match Pattern on a html output","abominable_html = '''
<html>
<table><tr><td>services</B></TD>
    <TD>
        <TABLE> <TR>Interesting stuff!</TABLE>
'''

from lxml.html import fromstring
doc = fromstring(abominable_html)

# These are equivalent, for demonstration purposes.
print doc.xpath('//table/tr/td/table/tr/text()')[0]
print doc.xpath('//table//table/tr')[0].text
"
escaping characters in a xml file with python,"from lxml import etree

parser = etree.XMLParser(recover=True) # recover from bad characters.
root = etree.fromstring(broken_xml, parser=parser)
print etree.tostring(root)
"
"Python, trouble getting embedded video url","import re

from bs4 import BeautifulSoup
import requests

url = 'http://www.growingagreenerworld.com/episode125/'
headers = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.115 Safari/537.36'}

with requests.Session() as session:
    session.headers = headers

    response = session.get(url)

    soup = BeautifulSoup(response.content)

    # follow the iframe url
    response = session.get('http:' + soup.iframe['src'], headers={'Referer': url})
    soup = BeautifulSoup(response.content)

    # extract the video URL from the script tag
    print re.search(r'""url"":""(.*?)""', soup.script.text).group(1)
"
Command line argument as default to a function defined in another module,">>> def foo(a=True):
...     print a
... 
>>> foo()
True
>>> foo.func_defaults
(True,)
>>> foo.func_defaults = (False,)
>>> foo()
False
>>> 
"
"Legend format lost after using: ax.legend(handles, labels )","legend = ax.legend(loc='upper center', shadow=True)

handles, labels = ax.get_legend_handles_labels()
ax.legend(handles, labels )
"
Python service discovery: Advertise a service across a local network,"from time import sleep
from socket import socket, AF_INET, SOCK_DGRAM, SOL_SOCKET, SO_BROADCAST, gethostbyname, gethostname

s = socket(AF_INET, SOCK_DGRAM) #create UDP socket
s.bind(('', 0))
s.setsockopt(SOL_SOCKET, SO_BROADCAST, 1) #this is a broadcast socket
my_ip= gethostbyname(gethostname()) #get our IP. Be careful if you have multiple network interfaces or IPs

while 1:
    data = MAGIC+my_ip
    s.sendto(data, ('<broadcast>', PORT))
    print ""sent service announcement""
    sleep(5)
"
How to share data between processes in Python using MPI?,"from mpi4py import MPI
import numpy

comm = MPI.COMM_WORLD
size = comm.Get_size()
rank = comm.Get_rank()

assert size == 2

# Declare the array that will store all the temp results
temps = numpy.zeros((4,5))

# Loop over all directories
if rank==0:
   counter = 0
   for i in range(2):
      for j in range(5):
         temps[i,j] = counter
         counter = counter + 1

else:
   counter = 20
   for i in range(2,4):
      for j in range(5):
         temps[i,j] = counter
         counter = counter + 1

comm.Allreduce(MPI.IN_PLACE,temps,op=MPI.MAX)

if rank==0:
   print temps
"
Python Tkinter use to emulate blinking with interaction of multiple buttons,"self.after_id = self.after(self._FastBlinkTime, self.toggleLeds)
"
How to compact/strip multiple blank lines in source-code-preview,"sed /^$/d
"
Virtualenv for different version of django,"pip install virtualenv
"
Regular expression help,"import re

ch = '>AB0012xxxxaaaaaaaaaaaa'\
     '>CD00192aaabbbllyybbbaaayyyuubbbaaaggggaaabbb'\
     '>ZP0199000012mmmm3m4mmmxxxxaaabbbaaaaaaaaaaaaa'\
     '>QD1547zzzzzzzzjjjiii'\
     '>SE457895ffffaaabbbbbbbgjhgjgjhgjhgbbbbbaaa'


print ch,'\n'

regx = re.compile('(>.{7})|(aaabbb|bbbaaa)')

matches = []
for mat in regx.finditer(ch):
    g1,g2= mat.groups()
    if g1:
        head = g1
    else:
        matches.append((head,g2))

print matches
"
inverted comma and string in python,">>> mystring = ""Hello"" 'World!'
>>> mystring
'HelloWorld!'
"
"I am trying to save high scores with pickle, but how do I add to an already pickled document and then get the max?",">>> score = 1
>>> f = open('highscores.p', 'wb')
>>> pickle.dump(score, f)
>>> f.close()
>>> score = 15
>>> f = open('highscores.p', 'wb')
>>> pickle.dump(score, f)
>>> f.close()
>>> f = open('highscores.p', 'rb')
>>> print pickle.load(f)
1
>>> print pickle.load(f)
15
>>> print pickle.load(f)
Traceback (most recent call last):
    File ""<stdin>"", line 1, in <module>
EOFError
"
MongoDB - Check if exists in a list in a list of dicts,"for task in projects.find({ ""Tasks.resources"":{ '$in': [""246""] }}):
   print task
"
Can a class variable be created inside one of the class' methods in Python?,"class A:
    x = 1
    def somefunction(self):
        A.x += 1
        print A.x
"
Django remove inline formset record in UpdateView,"<input id=""id_dialog_set-TOTAL_FORMS"" name=""dialog_set-TOTAL_FORMS"" type=""hidden"" value=""1"">
<input id=""id_dialog_set-INITIAL_FORMS"" name=""dialog_set-INITIAL_FORMS"" type=""hidden"" value=""1"">
<input id=""id_dialog_set-MIN_NUM_FORMS"" name=""dialog_set-MIN_NUM_FORMS"" type=""hidden"" value=""0"">
<input id=""id_dialog_set-MAX_NUM_FORMS"" name=""dialog_set-MAX_NUM_FORMS"" type=""hidden"" value=""1000"">
"
Pandas: Divide two rows by each other,"df.iloc[df.index.year>=2007]/df.loc[df.index.year == 2007]
             0   1   2   3   4   5   6  employment
date                                              
2007-01-01   1   1   1   1   1   1   1           1
2009-01-01 NaN NaN NaN NaN NaN NaN NaN         NaN
"
Matplotlib table only,"the_table = ax.table(cellText=cell_text,
                      rowLabels=rows,
                      rowColours=colors,
                      colLabels=columns,
                      loc='top')
"
How to use the cross-spectral density to calculate the phase shift of two related signals,"subplot(121)
psd(s1, nfft, 1/dt)
plt.title('signal1')

subplot(122)
psd(s2, nfft, 1/dt)
plt.title('signal2')

plt.tight_layout()
show()
"
Pythonic way to populate numpy array,"X = [scipy.array(line.split(','), dtype='float') 
     for line in open('somefile.csv', 'r')]
"
Extracting rows from a table,"['A', '0', '3', '0', '13']
['B', '0', '0', '0', '7']
['C', '0', '0', '0', '1']
['D', '0', '0', '0', '7']
"
Python - Convert list of single key dictionaries into a single dictionary,">>> from itertools import chain, imap
>>> from operator import methodcaller
>>> 
>>> dict(chain.from_iterable(map(methodcaller('iteritems'), lst)))
{'1': 'A', '3': 'C', '2': 'B'}
"
What is the efficient way to define and traverse tree in python?,"for node in t.traverse(""postorder""):
  # Do some analysis on node
  print node.name
"
Scrapy set depth limit per allowed_domains,"from scrapy import log
from scrapy.http import Request
import tldextract


class DomainDepthMiddleware(object):
    def __init__(self, domain_depths, default_depth):
        self.domain_depths = domain_depths
        self.default_depth = default_depth

    @classmethod
    def from_crawler(cls, crawler):
        settings = crawler.settings
        domain_depths = settings.getdict('DOMAIN_DEPTHS', default={})
        default_depth = settings.getint('DEPTH_LIMIT', 1)

        return cls(domain_depths, default_depth)

    def process_spider_output(self, response, result, spider):
        def _filter(request):
            if isinstance(request, Request):
                # get max depth per domain
                domain = tldextract.extract(request.url).registered_domain
                maxdepth = self.domain_depths.get(domain, self.default_depth)

                depth = response.meta.get('depth', 0) + 1
                request.meta['depth'] = depth

                if maxdepth and depth > maxdepth:
                    log.msg(format=""Ignoring link (depth > %(maxdepth)d): %(requrl)s "",
                            level=log.DEBUG, spider=spider,
                            maxdepth=maxdepth, requrl=request.url)
                    return False
            return True

        return (r for r in result or () if _filter(r))
"
Robot framework: looping through kwargs,"| | ${result}= | set variable | ${EMPTY}
| | ${items}= | Get Dictionary items | ${args}
| | :FOR | ${key} | ${value} | IN | @{items}
| | | ${result}= | run keyword if | '${key}' in ${keywords}
| | | ... | catenate | ${result} | ${key}=${value}
| | | ... | ELSE
| | | ... | catenate | ${result} | set ${key}=${value}
| | [return] | ${result}
"
Would like to use PubNub to send real-time updates to the user's web browser,"<link href=bootstrap.css rel=stylesheet>
<style type=text/css> body { padding-top: 60px; } </style>
"
Django-piston: How can I get app_label + model_name?,"def model(self):
    return ""{0}.{1}"".format(self._meta.app_label, self._meta.object_name).lower()
"
Running Python Script from different working directory,"import os
os.chdir(""/dir/to/goto/before/running/the/script"")

# rest of the logic goes here
"
Reading and writing variables from file,"# RegOrLog

import pickle # new line!
RegOrLog = raw_input('[Register/Log]:') # why str()?

# register the user detail
if RegOrLog in('r', 'reg', 'register'):
    reguser = raw_input('username:') # raw_input gives string by default, if you want other data type then you do have to convert it.
    regpass = raw_input('password:')
    regage = int(raw_input('age:'))
    reggender =raw_input('gender:')

# creating file for the user
    data = {""username"": reguser, ""password"": regpass, ""age"": regage, ""gender"": reggender}
    pickle.dump( data, open( ""whatever_file_name"", ""wb"" ) )
    RegOrLog = 'log'

###login as a user###
if RegOrLog in('l','log','login'):
    loguser = raw_input('Login username:')
    regpass = raw_input('password:')

#registered user#
    data = pickle.load( open( ""whatever_file_name"", ""rb"" ) )
    if regpass == data[""password""]:
        print 'Welcome', loguser
        print 'You are', gender
        print 'You are', age,'years old'
"
Read a line store it in a variable and then read another line and come back to the first line. Python 2,"this is on line Total is: 45.5
this is the line number:  8
8
4
found the 1. Hi45
this is on line Total is: 62.1
this is the line number:  20
20
16
found the 2. How144
"
Python - Convert unicode hex to string,">>> re.sub(r'&#x(.*?);',lambda x: chr(int(x.group(1),16)),s)
'<div>Ввоскресень</div>'
"
Assume zero for subsequent dimensions when slicing an array,"x = arange(3*3*3).reshape(3,3,3)

s = (slice(None),) + (0,)*(x.ndim-1)

print x[s]  # array([ 0,  9, 18])
print x[:,0,0] # array([ 0,  9, 18])
"
Python ciscoconfparse - build a basic config file,"!
policy-map QOS
 class GOLD
  priority percent 10
 class SILVER
  bandwidth 30
  random-detect
 class default
!
interface Loopback1
 description Management
 ip address 9.9.9.9 255.255.255.255
!
interface FastEthernet0/0
 description LAN
 ip address 6.6.6.6 255.255.255.0
!
ip access-list standard customer_internal
 permit 1.1.1.1
 permit 2.2.2.2
 permit 3.3.3.3
!
"
Extracting ALL matches of a nested regular expression in python,"def parse(expr):
    if re.match(r'\A((""[\w\s]+""|\w+)\s+)*\Z', expr):
        return re.findall(r'(""[\w\s]+""|\w+)', expr)
"
Indeteminate While Loop,"def application():
    print(""=""*20)
    print(""Enter 0 to multiply two numbers"")
    print(""Enter 1 to divide two numbers"")
    print(""Enter -1 to quit the application"")
    print(""=""*20)
    return input(""Enter your choice:- "")

choice = application()

while choice != -1:

    if choice == 0:
        first_number = input(""Enter 1st number:-"") # moved
        second_number = input(""Enter 2nd number:- "") # moved

        multiply = first_number * second_number
        print(""%d multiply by %d equal to %s"" % (first_number, second_number, multiply))
    elif choice == 1:
        first_number = input(""Enter 1st number:-"") # moved
        second_number = input(""Enter 2nd number:- "") # moved

        divide = first_number / second_number
        print(""%d divided by %d equal to %s"" % (first_number, second_number, divide))
    else:
        print(""Invalid option."")

    choice = application()

print(""Quit the application"")
"
Help with Python strings,"['index', 'command', ['param1', 'param2', 'param3']]
"
"Sympy classes Zero, One and NegativeOne, why they exist?","def __neg__(self):
    return Rational(-self.p, self.q)
"
Matching regex groups (with or's) and special characters with Python's re module,"
>>> r'[–]'
'[\xe2\x80\x93]'
>>> re.findall(r'[–]', '–')
['\xe2', '\x80', '\x93']
>>> re.findall(ur'[–]', u'–')
[u'\u2013']
>>> print re.findall(ur'[–]', u'–')[0]
–
"
Is there a way to stop a command in a docker container,"docker-machine start <machine_name>
"
Web scraper returning list of elements,"for item in find:
    print item.text
    output.writerows([item.text])
"
How to I get the coordinates of a cell in a geotif?,"from osgeo import gdal
ds = gdal.Open(path, gdal.GA_ReadOnly)
T0 = Affine.from_gdal(*ds.GetGeoTransform())
ds = None  # close
"
Check if the list is empty,"def gt(nums, n):
    if not nums:
        return False
    return max(nums) > n
"
What's the most efficient way to find one of several substrings in Python?,"import random
import re
import string
import sys

def main(args):
    words = []
    letters_and_digits = ""%s%s"" % (string.letters, string.digits)
    for i in range(2000):
        chars = []
        for j in range(10):
            chars.append(random.choice(letters_and_digits))
        words.append((""%s""*10) % tuple(chars))
    search_for = re.compile(""|"".join(words))
    first, middle, last = words[0], words[len(words) / 2], words[-1]
    search_string = ""%s, %s, %s"" % (last, middle, first)
    match_obj = search_for.search(search_string)
    if match_obj is None:
        print ""Ahhhg""
        return
    index = match_obj.start()
    which = match_obj.group()
    if index != 0:
        print ""ahhhg""
        return
    if words[-1] != which:
        print ""ahhg""
        return

    print ""success!!! Generated 2000 random words, compiled re, and was able to perform matches.""

if __name__ == ""__main__"":
    main(sys.argv)
"
While loop inside while loop not helping. Wont exit,"while wordEnd!=""stop"" or conditionEnd!= ""stop"" !=theWordList:
"
How to get file path of a add_static_view() in Pyramid,"def get_static_path(request, name):
    from pyramid.config.views import StaticURLInfo
    registrations = StaticURLInfo()._get_registrations(request.registry)
    if not name.endswith('/'):
        name = name + '/'
    route_name = '__%s' % name
    for _url, spec, reg_route_name in registrations:
        print ':', reg_route_name
        if reg_route_name == route_name:
            return spec
"
Pythonic way of comparing all adjacent elements in a list,"for i,j in enumerate(range(1,len(A)):
    #some operation between A[i] and A[j]
"
how can I convert python tuple to dict,"from collections import OrderedDict

mapping = OrderedDict()
for outer, inner, value in t:
    mapping.setdefault(outer, {})[inner] = value

result = mapping.items()
"
Using If-elif-else statements with Python,"For dynamic dispatch on objects use:
getattr(module,method_name);
"
What batch_size and pre_dispatch in joblib exactly mean,"1450105367. Task #0 was dispatched
1450105367. Task #1 was dispatched
1450105367. Task #2 was dispatched
1450105367. Task #0 is being solved
1450105367. Task #1 is being solved
1450105372. Task #2 is being solved
1450105372. Task #3 was dispatched
1450105372. Task #4 was dispatched
1450105372. Task #3 is being solved
1450105377. Task #4 is being solved
1450105377. Task #5 was dispatched
1450105377. Task #5 is being solved
1450105377. Task #6 was dispatched
1450105382. Task #7 was dispatched
1450105382. Task #6 is being solved
1450105382. Task #7 is being solved
1450105382. Task #8 was dispatched
1450105387. Task #9 was dispatched
1450105387. Task #8 is being solved
1450105387. Task #9 is being solved
Out[1]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
"
Python: How to continue a nested for loop?,"In [28]: a = {'blue': 4, 'green': {'yellow': {'black': 16}}, 'red': 3}

In [29]: recurseDict(a)
Out[29]: [4, 16, 3]
"
searching in text file word list and check all the words that start with each letter I input,"with open('d:\word_list.txt', 'r') as inF: 
 b = input('Enter word: ') 
 for letter in b: 
  inF.seek(0)
  for item in inF: 
   if item.startswith(letter): 
    print(item) 
"
Why are multiprocessing.sharedctypes assignments so slow?,"# assign memory, very slow
%time temp[:] = np.arange(1e8, dtype = np.uint16)
Wall time: 9.75 s  # Updated to what my machine took, for valid comparison
"
Creating a list in python using the same string but with different values attached to it,"def code(noncelist):
    while True:
        client = blocktrail.APIClient(api_key=""x"", api_secret=""x"", network=""BTC"", testnet=False)
        address = client.address('x')
        latest_block = client.block_latest()
        nonce = latest_block['nonce']
        blockhash = latest_block['hash']    
        print(nonce)   
        noncestr = str(nonce)
        noncelist.append(noncestr)
        print(noncelist)
        time.sleep(60)


code([])
"
How to access through a path rather than just in current directory?,"python c:\myscripts\demo_script.py d:\datafiles\foo.xls
"
Recursively Collect Children in Python/Django,"{
    'name': FirstPerson,
    'children': [<each element is a child's family tree>]
}
"
"Referencing list entries within a for loop without indexes, possible?",">>> import nwise
>>> ll = range(10)
>>> for tup in nwise.nwise(ll,3): print tup
... 
(0, 1, 2)
(1, 2, 3)
(2, 3, 4)
(3, 4, 5)
(4, 5, 6)
(5, 6, 7)
(6, 7, 8)
(7, 8, 9)
"
See django.db.backends logs in stdout on pycharm,"from django.test import TestCase
from django.test.utils import override_settings

class LoginTestCase(TestCase):

    @override_settings(LOGIN_URL='/other/login/')
    def test_login(self):
        response = self.client.get('/sekrit/')
        self.assertRedirects(response, '/other/login/?next=/sekrit/')
"
Pandas: Adding conditionally,"foo = foobar2.clip_lower(0)
foo = foo['var1']+foo['var2']-foo['var3']-foo['var4']
"
In a decorator how can I pass the function I'm decorating as an argument?,"        if on_exception is not None:
            if on_exception is same:
                return decorator(func)(*args, **kwargs)
            else:
                return on_exception(*args, **kwargs)
"
How to set float values as scientific notation in matplotlib?,"Bases: matplotlib.ticker.Formatter

Use an old-style (‘%’ operator) format string to format the tick
"
Research a string with a variable number in python,"import re

txt='''\
ELEMENT=      1 PLY=  1
-----------------------
 Code 1425                                    
    GP= 1  4.324E-03 -1.350E-03 -2.974E-03  3.084E-04  0.000E+00  0.000E+00
    GP= 2  1.435E-03 -3.529E-04 -1.082E-03  1.183E-04  0.000E+00  0.000E+00
    GP= 3  7.742E-03 -3.542E-03 -4.200E-03  4.714E-04  0.000E+00  0.000E+00
    GP= 4  4.842E-03 -2.378E-03 -2.463E-03  3.040E-04  0.000E+00  0.000E+00

ELEMENT=      2 PLY=  22
-----------------------
 Code 1426                                 
    GP= 5  4.324E-03 -1.350E-03 -2.974E-03  3.084E-04  0.000E+00  0.000E+00
    GP= 6  1.435E-03 -3.529E-04 -1.082E-03  1.183E-04  0.000E+00  0.000E+00
    GP= 7  7.742E-03 -3.542E-03 -4.200E-03  4.714E-04  0.000E+00  0.000E+00
    GP= 8  4.842E-03 -2.378E-03 -2.463E-03  3.040E-04  0.000E+00  0.000E+00    
    '''

for i, m in enumerate(re.finditer(r'^ELEMENT=\s+(\d+.*?)(?=^ELEMENT|\Z)', txt, re.M | re.S)):
    print 'Group {}===:\n{}'.format(i, m.group(1))
"
Singleton/Borg pattern based on different parameters passed while creating the object,"class SomeBorgClass:
    __metaclass__ = PerArgsBorgMeta
"
Speed up finding matches between two dictionaries (Python),"{(12.8254, 55.3880): n14, 
(12.8340, 55.3883): n15, 
(12.8235, 55.3857): n16, 
(12.8343, 55.3920): n17}
"
Wrapping lines with long class/attributes names in Python,"from Tkinter import Tk, Frame, Button, Entry, Canvas, Text, \
    LEFT, DISABLED, NORMAL, RIDGE, END
"
How to Achieve Continuous Interactive Dialog with a Subprocess in Python?,"import json
from subprocess import Popen, PIPE

p = Popen(['./c-program', 'other', 'args'], stdin=PIPE, stdout=PIPE, bufsize=1)
p.stdin.write(json.dumps({'parameter': 8}).encode() + b'\n') # send input
p.stdin.flush()
result = json.loads(p.stdout.readline().decode()) # e.g., {""result"": [0, 0, 7]}
# ...
p.communicate() # close pipes, wait for child to finish
"
Fix a CSV File's Format in Python,">>> with open('t.csv') as fp:
...   read = csv.reader(fp)
...   for line in read:
...     print line
... 
['136.107.169.150', '']
['165.246.197.229', 'ESCCB ID#: 90Z-009204,\nESCCB ID#: 90Z-003262,\nESCCB ID#: 90Z-003011                   ESCCB ID#: 90Z-001047']
['155.89.77.11', '']
['91.195.188.160', '']
['154.176.191.130', '']
"
Can't get pygame font to render on image,"image = pygame.image.load('1.png')
"
Linking languages,"#include <boost/python.hpp>

BOOST_PYTHON_MODULE(hello_ext)
{
  using namespace boost::python;
  def(""greet"", greet);
}
"
Sorting dicts (contained in lists) alphanumerically in Python,"import re
# Source: http://nedbatchelder.com/blog/200712/human_sorting.html
# Author: Ned Batchelder
def tryint(s):
    try:
        return int(s)
    except:
        return s

def alphanum_key(s):
    """""" Turn a string into a list of string and number chunks.
        ""z23a"" -> [""z"", 23, ""a""]
    """"""
    return [ tryint(c) for c in re.split('([0-9]+)', s) ]

def sort_nicely(l):
    """""" Sort the given list in the way that humans expect.
    """"""
    l.sort(key=alphanum_key)

data=[
    'title_text #49',
    'title_text #5',
    'title_text #50']
sort_nicely(data)
print(data)
# ['title_text #5', 'title_text #49', 'title_text #50']
"
PYTHONPATH as agrument to python interpreter,"set PYTHONPATH=/somedir/pythonsrc;/anotherdir/pythonsrc && python.exe mymodule.py
"
Extra arguments for __str__ and __format__,"class Wrapper:
    def __init__(self, o, context):
        self._o = o
        self._context = context
    def __getattr__(self, name):
        return getattr(self._o, ""get_"" + name)(self._context)
"
Storing a random byte string in Python," >>> fh = open(""e:\\test"",""wb"")
 >>> fh.write(randomByteString)
 8
 >>> fh.close()
"
BYTE to python C-Type structure Conversion Issue,"0
1
368
b'\x01\x02'
"
How to make Python format floats with certain amount of significant digits?,">>> ""{0:.6g}"".format(5.5657188485)
'5.56572'
>>> ""{0:.6g}"".format(3.539)
'3.539'
"
str.endswith() does not seem to consider the first if statment,"def make_from(inputString):
    if inputString.endswith('y'):
        return inputString[:-1] + 'ies'
    if inputString.endswith(('o', 'ch', 's', 'sh', 'x', 'z')):
        return inputString[:] + 'es'
    return inputString + 's'
"
"Scrapy, receive just the text from an unordered list, including text between other html tags","[u'Stoere HUMMER of Cadillic opbergtas (rood)',
 u'EHBO First Aid Rapid Response kit',
 u'LifeHammer met houder',
 u'Aluminium Midi Zaklamp met alarm inclusief 3x AAA batterij',
 u'Werkhandschoenen',
 u'IJskrabber',
 u'Afbreekmes',
 u'2x veiligheidshesje',
 u'Verbandschaar',
 u'Reddingsdeken',
 u'Verband + pleister 9 x rol verband diverse afmetingen Pleisters',
 u'Handschoenen',
 u'3 x steriele gaasjes']
"
Running python files,"class DlgAbout(QtGui.QDialog, Ui_DlgAbout):
"
Reading negative values from a file in python,"import struct

def readtoint(read):
    return struct.unpack('<i', read)[0]
"
Is there a Python library for handling complicated mathematical sets (constructed using mathematical set-builder notation)?,"(29, 21)
(28, 22)
(28, 21)
(27, 23)
(27, 22)
(27, 21)

...

(20, 25)
(20, 24)
(20, 23)
(20, 22)
(20, 21)
"
Python request similar to my unix curl script,"{
  ""parameters"": [{
    ""name"": ""BRANCH"",
    ""value"": ""foo"",
  },
  {
    ""name"": ""GITURL"",
    ""value"": ""git://example.com/repo"",
  }]
}
"
Lambdas Python for loop,"lst =  ['1234', 'hello', '6787']
[x for x in lst if x.isalpha()]
=>  ['hello']
"
Boolean indexing of 2D ndarray based on row comparison,"array([[0, 8, 2],
       [0, 4, 9],
       [0, 9, 5],
       [5, 0, 7]])
"
Biopython Retrieving protein transcripts for a protein coding gene,"handle = Entrez.efetch(db=""protein"",
                       id=""NP_001012745"",
                       rettype=""fasta"",
                       retmode=""text"")
"
Using python mocking library on sqlalchemy,"self.assertEqual(get_session('any_path'), mock_sessionmaker.return_value.return_value)
"
Variable Variables in Python,"paths = ['path1', 'path2', 'path3']
sounds = { path: pygame.mixer.Sound(path) for path in paths }

# play a specific sound
sounds[name].play()
"
Flask-SQLAlchemy Abstract Base Model,"class User(db.Model, ModelMixin):
      """""" attributes with _  are not exposed with public_view """"""
      __tablename__ = ""users""
      id = db.Column(db.Integer, primary_key=True)
"
Sum float values at each index point in nested lists,"fruits, values = [""Apple"", ""Orange"", ""Pear""], [[0.1, 0.2, 0.3], [0.4, 0.5, 0.6]]
print zip(map(sum, zip(*values)), fruits)
# [(0.5, 'Apple'), (0.7, 'Orange'), (0.8999999999999999, 'Pear')]
"
Making python imports more structured?,"from google.appengine.api import urlfetch, taskqueue, users, images
"
"Python reading tags in string, json?","([^:]+):(\S+)\s
"
matplotlib: inset axes for multiple boxplots,"from pylab import *

# fake up some data
spread= rand(50) * 1
center = ones(25) * .5
flier_high = rand(10) * 100 + 100
flier_low = rand(10) * -100
data =concatenate((spread, center, flier_high, flier_low), 0)

# fake up some more data
spread= rand(50) * 1
center = ones(25) * .4
flier_high = rand(10) * 100 + 100
flier_low = rand(10) * -100
d2 = concatenate( (spread, center, flier_high, flier_low), 0 )
data.shape = (-1, 1)
d2.shape = (-1, 1)
data = [data, d2, d2[::2,0]]

# multiple box plots on one figure
fig = plt.figure(1, [5,4]) # Figure Size
ax = fig.add_subplot(111)  # Only 1 subplot 
ax.boxplot(data)
ax.set_xlim(0.5,5)
ax.set_ylim(.1,300)
ax.set_yscale('log')

show()
"
What is the alternate of python's dir() in Java?,"javap -c java.lang.System | grep -i out
public static final java.io.PrintStream out;
public static void setOut(java.io.PrintStream);
   4: invokestatic  #4                  // Method setOut0:(Ljava/io/PrintStream;)V
   8: putstatic     #98                 // Field out:Ljava/io/PrintStream;
"
Pyramid / SQLAlchemy trouble with joined models,"ref_key = item[0]
metadata_value = item[1]
"
python parsing from dynamic input line,"with open(""qwer.txt"",'r') as v1:
  for line in v1: 
    if 'good' in line: # note 'line' from here on
       print(line)   
    if '==' in line: # '==' first   
       print line.split('==')[1]
    elif '=' in line: # 'elif', not just 'if' 
        print line.split('=')[1]
"
- vs -= operators with numpy,">>> x = np.arange(6)
>>> v = x[1:4]
>>> v = v - 1
>>> v
array([0, 1, 2])
>>> x
array([0, 1, 2, 3, 4, 5])
"
appending LinkedLists items to list using Recursion,"ppend(n.rest)  # a new list is created but nothing is done with the result of the function
"
Extract text from webpage using either Python or Applescript,"tell application ""Safari""
    set thelink to do JavaScript ""document.links[4].href "" in document 1
end tell
"
Change values of panda.dataframe (fast way) in python,"In [4]:

df['gre'] = df['gre'].astype(str).str[-2:]
df
Out[4]:
   admit gre   gpa  rank
0      0  23  3.61     3
1      1  54  3.67     3
2      1  00  4.00     1
3      1  05  3.19     4
4      0  05  2.93     4
"
Broadcasting a python function on to numpy arrays,"import numpy as np

def func2a(x, y):
    return np.where(x>y,x+y,x-y)      

def func2b(x, y):
    ind=x>y
    z=np.empty(ind.shape,dtype=x.dtype)
    z[ind]=(x+y)[ind]
    z[~ind]=(x-y)[~ind]
    return z

def func2c(x, y):
    # x, y= x[:, None], y[None, :]
    A, L= x+ y, x<= y
    A[L]= (x- y)[L]
    return A

N=40
x = np.random.random(N)
y = np.random.random(N)

xx = x[:, np.newaxis]
yy = y[np.newaxis, :]
"
"Python 3: Server socket not closing properly, infinite loop of blank messages received","#TCP server example
import socket
server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server_socket.bind(("""", 7000))
server_socket.listen(5)

print(""TCPServer Waiting for client on port 7000"")

while 1:
    client_socket, address = server_socket.accept()
    print(""I got a connection from "", address)
    while 1:
        data = client_socket.recv(32)
        print(""RECEIVED:"",data)
        if (data == b'q' or data == b'Q'):            
##          client_socket.shutdown(socket.SHUT_RDWR)
            client_socket.close()
            break;
    break;
"
Length cutting through file handling,"stripped_data = result[0][2][int(count):]
"
dynamic JQuery view in django,"from django.utils import simplejson
def getTime(request):
if request.method == ""GET"":
    date_val =  request.GET.get('start_date')                        
    format = '%Y-%m-%d' 
    sd = datetime.datetime.strptime(date_val, format)
    sql_qw = MeasurementTest.objects.filter(start_date = sd)        
    results = [{'start_time': str(date.start_time), 'id_start_time':date.start_time} for date in sql_qw]
    print results
    response_var = simplejson.dumps(results)

return HttpResponse(response_var, mimetype=""application/json"")
"
Generate pixel matrices from characters in string,"from __future__ import print_function
import string
from PIL import Image
from PIL import ImageFont
from PIL import ImageDraw
import numpy as np

def char_to_pixels(text, path='arialbd.ttf', fontsize=14):
    """"""
    Based on http://stackoverflow.com/a/27753869/190597 (jsheperd)
    """"""
    font = ImageFont.truetype(path, fontsize) 
    w, h = font.getsize(text)  
    h *= 2
    image = Image.new('L', (w, h), 1)  
    draw = ImageDraw.Draw(image)
    draw.text((0, 0), text, font=font) 
    arr = np.asarray(image)
    arr = np.where(arr, 0, 1)
    arr = arr[(arr != 0).any(axis=1)]
    return arr

def display(arr):
    result = np.where(arr, '#', ' ')
    print('\n'.join([''.join(row) for row in result]))

for c in string.uppercase:
    arr = char_to_pixels(
        c, 
        path='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', 
        fontsize=9)
    print(arr.shape)
    display(arr)
    print()
"
How to find the index of an array within an array,"R = map(tuple, R) 
"
Combine two lists of lists into a dictionary python,"mapping2 = {tuple(s_en): s_de for (s_en ,s_de) in izip(sentences_en, sentences_de)}
print mapping2
"
Python: 'before' and 'after' for multiprocessing workers,"from multiprocessing import Pool
from collections import Counter
import glob


def build_histogram(filepath):
    """"""This function is run by a worker process.
    The `filepath` argument is communicated to the worker
    through a pipe. The return value of this function is
    communicated to the manager through a pipe.
    """"""
    hist = Counter()
    with open(filepath) as f:
        for line in f:
            hist[line.strip()] += 1
    return hist


def main():
    """"""This function runs in the manager (main) process.""""""

    # Collect paths to data files.
    datafile_paths = glob.glob(""data*.txt"")

    # Create a pool of worker processes and distribute work.
    # The input to worker processes (function argument) as well
    # as the output by worker processes is transmitted through
    # pipes, behind the scenes.
    pool = Pool(processes=3)
    histograms = pool.map(build_histogram, datafile_paths)

    # Properly shut down the pool of worker processes, and
    # wait until all of them have finished.
    pool.close()
    pool.join()

    # Merge sub-histograms. Do not create too many intermediate
    # objects: update the first sub-histogram with the others.
    # Relevant docs: collections.Counter.update
    merged_hist = histograms[0]
    for h in histograms[1:]:
        merged_hist.update(h)

    for word, count in merged_hist.items():
        print ""%s: %s"" % (word, count)


if __name__ == ""__main__"":
    main()
"
determinating if the input is even or odd numbers,"try:
    inp = raw_input
except NameError:
    inp = input

def getInt(msg):
    while True:
        try:
            return int(inp(msg))
        except ValueError:
            pass

START, ODD, EVEN = range(3)
state_next = [ODD, EVEN, ODD]
state_str  = ['no zeros yet', 'an odd number of zeros', 'an even number of zeros']

state = START
while True:
    num = getInt('Enter a number (-1 to exit)')

    if num==-1:
        break
    elif num==0:
        state = state_next[state]

    print 'I have seen {0}.'.format(state_str[state])
"
"Is there a way to override the ""key"" function for list.max() and list.sort() in the class of the list items?","class Obj(object):
    def __init__(self, value):
        self.value = value
    def __lt__(self, other):
        return self.value < other.value
    def __repr__(self):
        return 'Obj(%r)' % self.value

obj_list = [Obj(2), Obj(1), Obj(4), Obj(3)]

print max(obj_list)
print min(obj_list)
print sorted(obj_list)
"
Using **kwargs with SimpleXMLRPCServer in python,"Client
import xmlrpclib

class ServerProxy(object):
    def __init__(self, url):
        self._xmlrpc_server_proxy = xmlrpclib.ServerProxy(url)
    def __getattr__(self, name):
        call_proxy = getattr(self._xmlrpc_server_proxy, name)
        def _call(*args, **kwargs):
            return call_proxy(args, kwargs)
        return _call

#example usage
server = ServerProxy('http://localhost:8000')
server.test(1, 2)
server.test(arg2=2, arg1=1)
server.test(1, arg2=2)
server.test(*[1,2])
server.test(**{'arg1':1, 'arg2':2})
"
boost.python exposing members of members,"/// @brief Helper function that returns B.someObj.intVal.
int get_b_intval(const B& self)
{
  return self.someObj->intVal;
}
"
Simple Python plot -currency and dates,"2015/10/12 1
2015/10/13 2
2015/10/14 10
"
how to get the cpu usage of past 10 minutes in python,"*/1 * * * * python /yourpath/yourpythonfile.py 
"
How to return a string value with ncurses?,"if stdscr.inch(1, 1) & 0xff == ord('x'):
"
Columns into array and then indexing multiple arrays in a loop,"for j in xrange(len(freq)):
"
Parsing text with regex in Python: determine match order and mapping value to object type?,"regexes = [re.compile(r'expression 1'), re.compile(r'expression 2'), ...]
for regex in regexes:
  match = regex.search(input_text)
  if match: break

if not match:
  print(""We didn't find anything!"")
"
Is there a way apply a decorator to a Python method that needs informations about the class?,"def methoddecoratormarker(func):
    func._decorate_me = True
    return func

def realmethoddecorator(func):
    # do something with func. 
    # Note: it is still an unbound function here, not a method!
    return func

def classdecorator(klass):
    for name, item in klass.__dict__.iteritems():
        if getattr(item, '_decorate_me', False):
            klass.__dict__[name] = realmethoddecorator(item)
"
Use a different row as labels in pandas after read,"In [71]:

df1 = df.loc[3:]
df1.columns = df.loc[2].values
df1
Out[71]:
   a  b  c  d
3  6  4  2  1
"
Extracting part of a string with irregular delimiters in python,"my file name
myfilename
"
how to slice a dataframe having date field as index?,"df.index = pd.to_datetime(df['TRX_DATE'])
"
Comparing a list in a text file to a second large text file and printing the matches.,"with open('/path/to/hostname_file.txt', 'r') as hosts:
    hostnames = [line.strip() for line in hosts.readlines()]

with open('/path/to/fw/config.txt', 'r') as fw_config:
    with open('/path/to/matches.txt', 'w+') as match:
        for line in fw_config:
            if len(hostnames) < 1:
                break
            if any(name in line for name in hostnames):
                match.write(line)
                hostnames.remove(name)
"
How to efficiently unravel arguments to a database in Python,"def myfunc(*args):
    statement = ""INSERT INTO table VALUES("" + ', '.join(str(x) for x in args) + "");""
    db.execute(statement)
"
Why is my implementation of binary search very inefficient?,"wl = sorted(random.sample(alphabet, 20))
"
Python Metaprogramming. Generating massive amount of similar tests where a variable value is changed,"if __name__ == '__main__':
    for name, thing in globals().iteritems():
        if issubclass(thing, AuthenticatedApiTestCase):
            obj = thing()
            obj.base_url = something_new
"
Regex extract element after string,">>> import re
>>> re.findall('Name:\s+([^,]*)', s)
['John', 'Abby', 'Kate']
"
R/Python webscraping of websites,"# Process html Table
asDF <- lapply(out, function(x){
  appData <- x
  xData <- htmlParse(appData)
  require(selectr)
  lotAndLoc <- querySelectorAll(xData, ""a.tooltip"")
  alsopLot <- lapply(lotAndLoc[c(T,F)], function(x){
    lot <- getNodeSet(x, "".//span[@class = 'lotnum']"")
    lot <- xmlValue(lot[[1]])
    img <- getNodeSet(x, "".//img"")
    img <- xmlGetAttr(img[[1]], ""src"")
    data.frame(lot = lot, img = img)
  })
  alsopLot <- do.call(rbind.data.frame, alsopLot)
  alsopType <- xpathSApply(xData, ""//tr/td[2]"", xmlValue)[-1]
  alsopPrice <- xpathSApply(xData, ""//tr/td[4]"", xmlValue)[-1]
  alsopPrice <- gsub(""Ã‚Â"", """", alsopPrice)
  alsopAddr <- xpathSApply(xData, ""//tr/td[3]/*//span[@class='text']"", function(x){
    Addr <- getChildrenStrings(x)[names(getChildrenStrings(x)) %in% c(""text"", ""span"")]
    Addr <- gsub(""\\n\\s*"", """", Addr)
    Addr <- Addr[Addr != """"]
    paste(Addr, collapse = ""~"")
  })

  alsopDf <- data.frame(type = alsopType, price = alsopPrice, address = alsopAddr)
  alsopDf <- cbind.data.frame(alsopLot, alsopDf)
  alsopDf
}
)
asDF <- do.call(rbind.data.frame, asDF)
"
Relative Strength Index in python pandas,"# dUp= delta[delta > 0]
# dDown= delta[delta < 0]

# dUp = dUp.reindex_like(delta, fill_value=0)
# dDown = dDown.reindex_like(delta, fill_value=0)

dUp, dDown = delta.copy(), delta.copy()
dUp[dUp < 0] = 0
dDown[dDown > 0] = 0

RolUp = pd.rolling_mean(dUp, n)
RolDown = pd.rolling_mean(dDown, n).abs()

RS = RolUp / RolDown
"
Regex greedy parse direction,"'xxabbbbbxxabbbbbbbbb' =~ /([ab]*?)bb/;
"
Extracting Date and Time info from a string.,"db.collection.find({$where: ""var d = new Date(this.dateProperty); return d.getUTCHours() == 15 && d.getUTCMinutes() == 0 && d.getUTCSeconds() == 0""})
"
Using numpy's genfromtxt to load a triangular matrix with python,">>> from scipy.spatial.distance import squareform
>>> squareform(arr)
array([[ 0.,  3.,  5.,  3.,  5.,  1.,  8.,  1.,  6.,  5.,  8.],
       [ 3.,  0.,  5.,  8.,  1.,  1.,  6.,  2.,  9.,  6.,  4.],
       [ 5.,  5.,  0.,  2.,  0.,  5.,  2.,  1.,  0.,  0.,  3.],
       [ 3.,  8.,  2.,  0.,  2.,  2.,  5.,  1.,  0.,  1.,  0.],
       [ 5.,  1.,  0.,  2.,  0.,  1.,  3.,  6.,  3.,  6.,  1.],
       [ 1.,  1.,  5.,  2.,  1.,  0.,  4.,  2.,  4.,  3.,  7.],
       [ 8.,  6.,  2.,  5.,  3.,  4.,  0.,  4.,  0.,  0.,  1.],
       [ 1.,  2.,  1.,  1.,  6.,  2.,  4.,  0.,  0.,  1.,  8.],
       [ 6.,  9.,  0.,  0.,  3.,  4.,  0.,  0.,  0.,  2.,  1.],
       [ 5.,  6.,  0.,  1.,  6.,  3.,  0.,  1.,  2.,  0.,  1.],
       [ 8.,  4.,  3.,  0.,  1.,  7.,  1.,  8.,  1.,  1.,  0.]])
"
selenium webdriver in python,"html = driver.page_source
soup = BeautifulSoup(html)

# Get *all* 'p' tags with the specified class attribute.
p_tags = soup.findAll('p',{'class':'market_value'})
for p in p_tags:
    print p.text
"
simple dropping elements from the list in python,"[m for m in msg if ""one"" not in m]
"
function with another function as parameter,"def generateTemplate(func, templateFile, name=None):
"
Evaluate multiple variables in one 'if' statement?,"if not (var1 or var2 or var3 or var4):
"
How do I server a specific directory with possible sub directories in Django 1.7?,"MEDIA_ROOT = '/path/to/media'
"
Numpy create two arrays using fromiter simultaneously,"In [103]: it = ((x, x**2) for x in range(20))

In [104]: import itertools

In [105]: y = np.fromiter(itertools.chain.from_iterable(it), dtype=float)

In [106]: y
Out[106]: 
array([   0.,    0.,    1.,    1.,    2.,    4.,    3.,    9.,    4.,
         16.,    5.,   25.,    6.,   36.,    7.,   49.,    8.,   64.,
          9.,   81.,   10.,  100.,   11.,  121.,   12.,  144.,   13.,
        169.,   14.,  196.,   15.,  225.,   16.,  256.,   17.,  289.,
         18.,  324.,   19.,  361.])

In [107]: y, y2 = y[::2], y[1::2]

In [108]: y
Out[108]: 
array([  0.,   1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,  10.,
        11.,  12.,  13.,  14.,  15.,  16.,  17.,  18.,  19.])

In [109]: y2
Out[109]: 
array([   0.,    1.,    4.,    9.,   16.,   25.,   36.,   49.,   64.,
         81.,  100.,  121.,  144.,  169.,  196.,  225.,  256.,  289.,
        324.,  361.])
"
How do I fetch an XML document and parse it with Python twisted?,"from xml.sax import make_parser
from twisted.web.client import downloadPage

class StreamingXMLParser:
    def __init__(self):
        self._parser = make_parser()

    def write(self, bytes):
        self._parser.feed(bytes)

    def close(self):
        self._parser.feed('', True)

parser = StreamingXMLParser()
d = downloadPage(url, parser)
# d fires when the response is completely received
"
Python - organising code and test suite,"import sys
import os
import unittest
sys.path.append(os.path.join(os.path.dirname(__file__), 'App'))
import main

# do the tests

if __name__ == '__main__':
    unittest.run()
"
"How do I use SPHINXOPTS to trigger the ""only"" directive when invoking Sphinx with a Makefile?","make latexpdf SPHINXOPTS=""-t draft""
"
Build directory tree from dropbox API,"{
    ""is_dir"": true,
    ""contents"": {
        ""/foo.txt"": {
            ""is_dir"": false,
            ""contents"": {}
        },
        ""/a"": {
            ""is_dir"": true,
            ""contents"": {
                ""/a/bar.txt"": {
                    ""is_dir"": false,
                    ""contents"": {}
                },
                ""/a/b"": {
                    ""is_dir"": true,
                    ""contents"": {
                        ""/a/b/hello.txt"": {
                            ""is_dir"": false,
                            ""contents"": {}
                        }
                    }
                }
            }
        }
    }
}
"
how to filter groupby object in pandas based on difference of values within the group?,"In [15]: def has_close(a, n=10):
              res = np.abs(a[:, np.newaxis] - a) < n
              np.fill_diagonal(res, False)
              return res.any(0)

In [16]: g = df.groupby('B', as_index=False)

In [17]: g.C.apply(lambda x: x[has_close(x.C.values)])
Out[17]: 
   A  B   C
0  0  a  18
1  1  a  25
2  2  b  56
3  3  b  62
5  5  b  56
"
Can You Embed an TCL Script in Bash Script or Python Script That's Callable by External Programs?,"    ...
vmd -dispdev text -eofexit << HERE > output.log
$MYSCRIPT
HERE
"
Python algorithm to solve triomines puzzle with backtracking,"$ ./triomines.py 
. . x . . .
. . . . . .
. . x . . x
done!
1 1 x 3 2 2
1 4 3 3 5 2
4 4 x 5 5 x
$
"
"Suspend the formating of the logger, then go back to it","logger = logging.getLogger('MyScript')
"
parsing text file into pandas dataframe,"In [216]:

t = '123@#{} 456@$%1 23'
l = [t[x:x+9] for x in range(len(t))[::9]]
l
Out[216]:
['123@#{} 4', '56@$%1 23']
In [218]:
# constuct a df
df = pd.DataFrame({'data':l})
df
Out[218]:
        data
0  123@#{} 4
1  56@$%1 23
In [220]:
# now call the vectorised str methods to split the text data into 3 columns
df['colA'] = df.data.str[0:2]
df['colB'] = df.data.str[2:5]
df['colC'] = df.data.str[5:9]
df
Out[220]:
        data colA colB  colC
0  123@#{} 4   12  3@#  {} 4
1  56@$%1 23   56  @$%  1 23
In [221]:
# drop the data column
df = df.drop('data', axis=1)
df
Out[221]:
  colA colB  colC
0   12  3@#  {} 4
1   56  @$%  1 23
"
IoT Python app with a Raspberry Pi and Bluemix: Pushing the button doesn't work,"buttonPushed = cmd.payload[""d""][""buttonPushed""]
"
Create django object using a view with no form,"#views.py
def some_view(request, id):
    if request.user.is_authenticated():
        # get the biddschedule from your DB
        # ...
        bids = models.Bids(id=id, owner=request.user, biddedschedule=biddedschedule)
        bids.save()
        return HttpResponse(""OK"")
    return Http404()
"
What is this python function looking for?,"if filename:
"
need assistance with Entry Tkinter in Python 2.5,"def changeLabel(*args): # require *args for trace
    #print ""changeLabel"", args

    custname_str = custname.get() 
    custname_int = 0 # default value when error

    try:
        custname_int = int( custname_str )
    except:
        if custname_str != """": # if not empty
            custname.set(custname_str[:-1]) # remove last char
            return 

    if 2 < custname_int <= 6:
        if relStatus.get() == 'HOSTS':
            label4Text.set(""255.255.255.248"")
        else: #if relStatus.get() == 'NETWORKS':
            label4Text.set(""224.0.0.0"")
    else:
        label4Text.set(""-"")
"
Powerball winnings using if else statements in python,"Please enter your Winning amount: 54000
you win 54000.0 and you have to paid 6718.75 in tax
>>> 
"
HMAC-SHA1 URL encryption in VBA produces incorrect output,"SharedSecretKey = asc.Getbytes_4(sSharedSecretKey)
"
python unique list based on item,"old_list = sorted([
        (1, 'AAA', None, 1),
        (2, 'AAA', 'x', 0),
        (5, 'AAB', 'z', 1),
        (6, 'ABB', 'x', 1),
        (9, 'ABB', 'x', 1)], key=itemgetter(1))
"
"Creating Counts for binned data using .loc, slow","In [28]: %timeit my_df['count_type1'] = my_df.a.where(my_df.a.isnull(),1).fillna(0)
1000 loops, best of 3: 611 µs per loop
"
How to get the list of text values of multiple Checkbuttons in Tkinter in Python?,"import Tkinter as tk

opt = []
def chkbox_checked():
    for ix, item in enumerate(cb):
        opt[ix]=(cb_v[ix].get())
    print opt
root = tk.Tk()  
mylist = [
'NR',
'ECEF X',
'ECEF Y',
'ECEF Z',
'height' 
]
cb = []
cb_v = []
for ix, text in enumerate(mylist):
    cb_v.append(tk.StringVar())
    off_value=0  #whatever you want it to be when the checkbutton is off
    cb.append(tk.Checkbutton(root, text=text, onvalue=text,offvalue=off_value,
                             variable=cb_v[ix],
                             command=chkbox_checked))
    cb[ix].grid(row=ix, column=0, sticky='w')
    opt.append(off_value)
    cb[-1].deselect() #uncheck the boxes initially.
label = tk.Label(root, width=20)
label.grid(row=ix+1, column=0, sticky='w')
root.mainloop()
"
Testing methods each with a different setup/teardown,"class TestClassParent(unittest.TestCase):
    context_guard = context_mgr()
    def setUp(self):
        #do common setup tasks here
        self.c = self.context_guard.__enter__()
    def tearDown(self):
        #do common teardown tasks here
        self.context_guard.__exit__(None,None,None)

class TestA(TestClassParent):
    context_guard = context_mgr('A')
    def test_normal(self):
        print ""task A""

class TestB(TestClassParent):
    context_guard = context_mgr('B')
    def test_normal(self):
        print ""task B""
"
Using Gtk.spinner with a long time function,"def create_image(self, spinner, finishcb):
    spinner.start()

    def thread_run():
        # call heavy here
        heavy_ret = heavy()
        gobject.idle_add(cleanup, heavy_ret)

    def cleanup(heavy_ret):
        spinner.stop()
        t.join()
        finishcb(heavy_ret)

    # start ""heavy"" in a separate thread and immediately
    # return to mainloop
    t = threading.Thread(thread_run)
    t.start()
"
ps aux | grep x returns two root instances,"ps -eaf | grep [x].py | grep -v sudo
"
Python package install using pip or easy_install from repos,"pip install -e hg+http://bitbucket.org/andrewgodwin/south/#egg=South
"
BeautifulSoup: How to skip a child node within a find_all?,"start = soup.find('div', class_='main-content-column')
if start:
    news.image_url_list = []
    for item in start.children:
        if item.name != 'div':
            # skip children that are not <div> tags
            continue
        for para in item.children:
            if item.name != 'p':
                # skip children that are not <p> tags
                continue
"
numpy divide row by row sum,">>> e
array([[ 0.,  1.],
       [ 2.,  4.],
       [ 1.,  5.]])
>>> e/e.sum(axis=1)[:,None]
array([[ 0.        ,  1.        ],
       [ 0.33333333,  0.66666667],
       [ 0.16666667,  0.83333333]])
"
python split a string when a keyword comes after a pattern,"hostname = domain
while '-' in domain:
    domain = domain.partition('.')[-1]
hostname = hostname[:-len(domain) - 1]
"
Scrape website data for CSV,"import requests

url = 'http://www.danglefactory.com/api/DailySkaterProjections?_=1415200157912'
response = requests.get(url)

data = response.json()
print data
"
Removing letters from a string in Python,"list(text)
"
Upload Images to Amazon S3 using Django,"from boto.s3.connection import S3Connection
from boto.s3.key import Key

conn = S3Connection('<aws access key>', '<aws secret key>')
bucket = conn.get_bucket('<bucket name>')
k = Key(bucket)
k.key = 'file_path_on_s3' # for example, 'images/bob/resized_image1.png'
k.set_contents_from_file(resized_photo)
"
Sorting Tuples in a descending order based on the last item given in the tuple,"sorted(tuples, key=lambda t: t[::-1])
"
Python - How to cut a string in Python?,">>> s2 = s.split('&')[0]
>>> print s2
http://www.domain.com/?s=some
"
How to add a line of best fit to scatter plot,"z = np.polyfit(x=df.loc[:, 2005], y=df.loc[:, 2015], deg=1)
p = np.poly1d(z)
df['trendline'] = p(df.loc[:, 2005])

     2005   2015     trendline
0   18882  21979  21989.829486
1    1161   1044   1418.214712
2     482    558    629.990208
3    2105   2471   2514.067336
4     427   1467    566.142863
5    2688   2964   3190.849200
6    1806   1865   2166.969948
7     711    738    895.827339
8     928   1096   1147.734139
9    1084   1309   1328.828428
10    854    901   1061.830437
11    827   1210   1030.487195
12   5034   6253   5914.228708
"
Reuse modified key in list comprehension,"#Assuming `c` is the file object
>>> [line.rstrip() for line in c if not line.isspace()]
['foo bar', 'baz', 'bar baz waz']
#Demo
>>> foo = ['foo bar\n', 'baz\n', 'bar baz waz\n', '   \n']
>>> [line.strip() for line in foo if not line.isspace()]
['foo bar', 'baz', 'bar baz waz']
"
pandas - filter dataframe by another dataframe by row elements,"# extract desired columns where marker is NaN
joined[pd.isnull(joined['marker'])][df1.columns]
"
non-greedy behavior with multiline and dotall,"^foo(?:(?!^foo|bar=2$).)*bar=2$
"
PyTables dealing with data with size many times larger than size of memory,"import parameters
parameters.NODE_CACHE_SLOTS = # something else
"
Recursive function with same arguments,"pizza = contains_words(""Do you like pizza?"", [""yes"", ""no""])
"
Sorting names containing numbers,"a = sorted(f1, key=lambda l: int(l.split()[0][6:]))
"
Custom Python shell for Emacs python-mode,"from sys import version_info;
print version_info >= (2, 2) and version_info < (3, 0)
"
So How could I get the coordinates and population of the city (retun them to a list) by calling the city names that are already created?,"def parse_cities(fin):
    cities = {}
    distances = {}
    order = []
    index = 0
    valid_city = False
    for line in fin:
        if '[' in line:  # city line
            # .partition() will always return three strings
            citystate, left, rest = line.partition('[')
            coordinates, right, population = rest.partition(']')
            lat, comma, lng = coordinates.partition(',')

            # drop any surrounding whitespace
            citystate = citystate.strip()
            lat = lat.strip()
            lng = lng.strip()
            population = population.strip()

            # validity check
            valid_city = (
                # delimiters must exist
                left and right and comma and
                # numbers must be valid
                lat.isdigit() and lng.isdigit() and population.isdigit()
            )

            if not valid_city: continue

            order.append(citystate)
            cities[citystate] = (int(lat), int(lng), int(population))
            index = 0
        elif line and line[0].isdigit() and valid_city:  # distance line
            # citystate variable from previous iteration
            # index variable will be reset for each new city,
            #     but otherwise increase between the lines
            for dist in [int(w) for w in line.split()]:
                if index >= len(order): break
                citystate2 = order[index]
                distances[citystate,citystate2] = dist
                distances[citystate2,citystate] = dist
                index += 1
    return cities, distances
"
Print just first output line,"for item in g_d4:
    links_2=soup.find_all('a', href=re.compile('^http://www.barneys.com/barneys-new-york/men/'))
    pattern_2=re.compile(""clothing/(\w+)"")
    matches = set()
    for link in links_2:
        match_1=pattern_2.search(link[""href""])
        if match_1:
            matches.add(match_1.group(1))
    print(matches)
"
Stripping custom methods using python,"regexp = re.compile(regexp_string)
# ...
if regexp.search(string) is not None:
# ...
"
Python - New list of permutations with omissions,">>> list(ifilter(lambda t: t[:2] not in {(4,1), (3,1)}, permutations(my_list)))
"
Taking These Tables and Associating Their Appropriate Teams Together,"def yahooscores():
    results = {}

    games = []

    for table in soup.find_all('table', class_='scores'):
        teams = []

        for row in table.find_all('tr'):
            scores = []
            name = None
            for cell in row.find_all('td', class_='yspscores'):
                link = cell.find('a')
                if link:
                    name = link.text
                elif cell.text.isdigit():
                    scores.append(cell.text)
            if name is not None:
                results[name] = scores
                teams.append(name)

        games.append(teams)

    for teams in games:
        for name in teams:
            scores = results[name]
            print ('%s: %s' % (name, ', '.join(scores)) + '.')
        print """"

yahooscores()
"
Get file syntax selection in sublime text 3 plugin,"self.view.settings().get(""syntax"")
"
PyQt4 jpeg/jpg unsupported image format,"def main():
    app = QtGui.QApplication(sys.argv)
    win = window()
    win.display()
    sys.exit(app.exec_())

if __name__ == '__main__':
    main()
"
"What does it mean to ""call"" a function in Python?","def add(a,b):
    return a + b
"
Converting a string automatically into a link to a pdf document,"def make_link(text,phrase,file_to_open):
    def callback(event=None):
        os.system(""open %r""%file_to_open)#there are better ways of handling this
    apply_tag(text,phrase,phrase)#uses phrase as tag
    format_link(text,phrase,callback)
"
OpenCV: setting all pixels of specific BGR value to another BGR value,"im2[np.where((im2 == [0,255,0]).all(axis = 2))] = [0,255,255]
"
Add route prefix to Flask application running behing Gunicorn,"from werkzeug.routing import Rule

app.url_rule_class = lambda path, **options: Rule(PREFIX + path, **options)
"
pydata blaze: does it allow parallel processing or not?,"In [38]: %timeit -n 1 -r 1 values = compute(trip.passenger_count.distinct())
1 loops, best of 1: 3.33 s per loop

In [39]: %timeit -n 1 -r 1 values = compute(trip.passenger_count.distinct(), map=p.map)
1 loops, best of 1: 1.01 s per loop
"
Parse and group multiple items together using Pyparse,"['show', 'abc', 'def', 'team', 'xyz', 'commits', 'from', 'Jan 10,2015', 'to', '27/1/2015']
- command: show
- from: Jan 10,2015
- team: ['def']
- to: 27/1/2015
- user: ['abc', 'xyz']
"
Python FTP Upload Multiple Files at Once,"def upload_one(filename):
    """""" This function uploads one file.  
        Perhaps is a a wrapper to your Popen call? """"""
"
How to get attributes in the order they are declared in a Python class?,"OrderedDict([('__module__', '__main__'), ('red', 1), ('green', 2), ('blue', 3)])
"
Sending a value in context to all template renderd in Django without sending in context in every view,"TEMPLATE_CONTEXT_PROCESSORS = (
    ...
    'project.context_processors.interceptor',
)
"
Pandas sparse dataframe larger on disk than dense version,"df = 
In [1]: df = pd.read_hdf('store_compressed.h5','test')

In [2]: type(df)
Out[2]: pandas.core.frame.DataFrame

In [3]: df.to_sparse(kind='block').to_hdf('test_block.h5','test',mode='w',complib='blosc',complevel=9)

In [4]: df.to_sparse(kind='integer').to_hdf('test_block.h5','test',mode='w',complib='blosc',complevel=9)

In [5]: df.to_sparse(kind='block').to_hdf('test_block.h5','test',mode='w',complib='blosc',complevel=9)

In [6]: df.to_sparse(kind='integer').to_hdf('test_integer.h5','test',mode='w',complib='blosc',complevel=9)

In [7]: df.to_hdf('test_dense_fixed.h5','test',mode='w',complib='blosc',complevel=9)

In [8]: df.to_hdf('test_dense_table.h5','test',mode='w',format='table',complib='blosc',complevel=9)

In [9]: !ls -ltr *.h5
-rwxrwxr-x 1 jreback users 57015522 Feb  6 18:19 store_compressed.h5
-rw-rw-r-- 1 jreback users 30335044 Feb  6 19:01 test_block.h5
-rw-rw-r-- 1 jreback users 28547220 Feb  6 19:02 test_integer.h5
-rw-rw-r-- 1 jreback users 44540381 Feb  6 19:02 test_dense_fixed.h5
-rw-rw-r-- 1 jreback users 57744418 Feb  6 19:03 test_dense_table.h5
"
pandas - parsing column containing strings and column containing int into datetime,"df['date'] = df['col1'] + '.' +  df['col2'].apply(lambda x: str(x).zfill(2))
"
Python Subset dataframe with another dataframe,"df1[(df1.item).isin(df2.item)]
"
wx.lib.pubsub: How to change the value in a timer,"self.parent.change_timer(1000)
"
How can I supply two arbitrary number of arguments to a lambda expression in python?,"lambda *outer: lambda *inner: tuple(a + b for a, b in zip(outer, inner))
"
Encompass the output of a for loop into a variable in python,"body=''
for item in parsed:
    body = body + str( item['resource']['caseNumber'], \
        item['resource']['subject'], \
        item['resource']['status'], \
        item['resource']['severity'] + '\n' )
"
file.write() the length of file without knowing the length of file beforehand - python,"fout.seek(pos)
"
Django 1.6 models.Manager Complaining about to many values to unpack,"...
context['unanswered_threads'] = ThreadVault.list_all_threads \
        .date_search_threads(date1, date2, field={'unanswered': True},
        column=""latest_post_date"").count()
"
Tkinter Resizable Objects Python Canvas,"def do_scale(self, tag):
    factor = int(self.spinbox[tag].get())
    (width, height) = self.default[tag]
    (x0,y0,x1,y1) = self.canvas.coords(tag)
    width = factor * width
    height = factor * height
    x1 = x0 + width
    y1 = y0 + height
    self.canvas.coords(tag, x0,y0,x1,y1)
"
Efficient way to iterate over sublists of a huge list in python,"def difference_deque(array, subset_length):
    assert subset_length > 1, ""subset_length must be larger than 1""
    length = len(array)
    total_diff = max(array)-min(array)

    current_slice = collections.deque(array[:subset_length])
    current_min = min(current_slice)
    current_max = max(current_slice)
    max_diff = current_max - current_min
    max_diff_index = 0

    index = subset_length
    while index < length:
        i_new = index
        i_old = index-number
        index += 1     
        new = array[i_new]            
        old = current_slice.popleft()

        if new < current_min:
            current_min = new
            if old == current_max:
                current_max = max(current_slice)
            current_slice.append(new)
        elif new > current_max:
            current_max = new
            if old == current_min:
                current_min = min(current_slice)
            current_slice.append(new)
        elif old == current_min:
            current_slice.append(new)
            current_min = min(current_slice)
        elif old == current_max:
            current_slice.append(new)
            current_max = max(current_slice)
        else:
            current_slice.append(new)
            continue

        current_diff = current_max-current_min
        if current_diff > max_diff:
            max_diff = current_diff
            max_diff_index = i_old+1

        # shortcut-condition
        if max_diff == total_diff:
            print('shortcut at', (index-1)/(length-number), '%' )
            break

    return max_diff, max_diff_index
"
Pass bash argument to python script,"#!/bin/sh

python script.py ""$@""
"
Not getting the proper output with re.findall,"df_input['Color'] = [', '.join(c) for c in resultlist]
"
return something other than the object on creation of object,"class Test(object):
    def __init__(self, value):
        self.value = value
    def __new__(cls, value):
        if value > 1:
            return object.__new__(cls)
        return None
    def __repr__(self):
        return ""Test value %d"" % self.value


t1 = Test(2)
print repr(t1)
t2 = Test(1)
print repr(t2)
"
Postgres database crash when installing plpython,"mydb=# CREATE EXTENSION plpython3u FROM unpackaged;
"
Bash script to select a single Python function from a file,"awk -f script.awk -v f=""ok_start"" infile
"
Transpose Census Flat Files in Python,">>> df_new.iloc[:5,:5]
col                 V87           X01          X02          X04           X05
row                                                                          
01000000003401  0131312  139748131312  82075131312               213456131312
01000000003402  01313NR  474241131312      01313NR               627892131312
01000000003403  01313NR       01313NR   3677131312                    0131312
01000000003701  01313NR     578131312      01313NR                 3309131312
01103703710000            122741313NR               119541313NR    27761313NR
"
Redirecting command output to a string - Python 3.4.3 - Not working on the new version,"import subprocess

def foo():
    return subprocess.Popen(COMMAND.split(), stdout=subprocess.PIPE).communicate()[0]
"
Comparing in lists in Python,"with open(""CountryCodes.csv"",'r') as CountryCodes:
    genc = (line.split(',') for line in CountryCodes)

    c2n = dict((c_fields[0].strip(),c_fields[1].strip())
               for c_fields in genc)

with open(""CountryData.csv"",'r') as CountryData:
    gend = (line.split(',') for line in CountryData)

    the_data = [ (c2n[d_fields[0].strip()], # data_country_code
                  int(d_fields[1]),         # country_pop
                  d_fields[2].strip(),      # country_area
                  d_fields[3].strip(),      # country_gdp
                  d_fields[4].strip())      # country_lit_rate
                 for d_fields in gend ]

the_data.sort(key = lambda x: x[1])

p = 10
for i in xrange(0,len(the_data),p):
    if i:  raw_input(""  Press ENTER to continue\n"")
    print ('\n'.join(""%-10s \t %-10s \t %-10s \t %-10s \t %s""
                     % el for el in the_data[i:i+p]) )
"
Pretty Display JSON data from with Flask,"response = json.dumps(response.text, sort_keys = True, indent = 4, separators = (',', ': '))
"
Connect to MSSQL Server 2008 on linux,"isql mssql username password
"
How to merge two text files around a common value in python,"BEEC,BE-EC,,154.7,46.07,,31.63,54.6,4833.6,5.06
BPLZ,BE-LZ,,390.6,62.62,,49.0,145.0,27.3,61.52
BFLP,BF-OP,,180.1,34.89,,40.0,58.26,8533.8,7.31
"
I'd like to implement a function sending message with popup window like Gmail and facebook,".popup-window {
  position: absolute;
  width: 400px;
  height: 400px;
  bottom: 0px;
  right: 10px;
  
  padding: 20px;
  background-color: yellow;
}"
"Pandas: df.refill, adding two columns of different shape","In [35]: intervals = np.random.randint(0,1000,size=100).cumsum()

In [36]: df = DataFrame({'time' : [ Timestamp('20140101')+pd.offsets.Milli(i) for i in intervals ],
                         'value' : np.random.randn(len(intervals))})

In [37]: df.head()
Out[37]: 
                        time     value
0 2014-01-01 00:00:00.946000 -0.322091
1 2014-01-01 00:00:01.127000  0.887412
2 2014-01-01 00:00:01.690000  0.537789
3 2014-01-01 00:00:02.332000  0.311556
4 2014-01-01 00:00:02.335000  0.273509

[5 rows x 2 columns]

In [40]: date_range('20140101 00:00:00','20140101 01:00:00',freq='s')
Out[40]: 
<class 'pandas.tseries.index.DatetimeIndex'>
[2014-01-01 00:00:00, ..., 2014-01-01 01:00:00]
Length: 3601, Freq: S, Timezone: None

 In [38]: new_range = date_range('20140101 00:00:00','20140101 01:00:00',freq='s') + Index(df.time)

In [39]: new_range
Out[39]: 
<class 'pandas.tseries.index.DatetimeIndex'>
[2014-01-01 00:00:00, ..., 2014-01-01 01:00:00]
Length: 3701, Freq: None, Timezone: None

In [42]: df.set_index('time').reindex(new_range).head()
Out[42]: 
                               value
2014-01-01 00:00:00              NaN
2014-01-01 00:00:00.946000 -0.322091
2014-01-01 00:00:01              NaN
2014-01-01 00:00:01.127000  0.887412
2014-01-01 00:00:01.690000  0.537789

[5 rows x 1 columns]

In [44]: df.set_index('time').reindex(new_range).ffill().head(10)
Out[44]: 
                               value
2014-01-01 00:00:00              NaN
2014-01-01 00:00:00.946000 -0.322091
2014-01-01 00:00:01        -0.322091
2014-01-01 00:00:01.127000  0.887412
2014-01-01 00:00:01.690000  0.537789
2014-01-01 00:00:02         0.537789
2014-01-01 00:00:02.332000  0.311556
2014-01-01 00:00:02.335000  0.273509
2014-01-01 00:00:03         0.273509
2014-01-01 00:00:03.245000 -1.034595

[10 rows x 1 columns]
"
Creating a gradebook with the pandas module,"In [182]: roster.merge(t_data, on=""Table"")
Out[182]: 
         Name               Email  Table  worksheet  another assignment  etc
0    John Doe     jdoe@school.edu      3          3                  20    7
1  Fred Smith  fsmith@example.com      3          3                  20    7

[2 rows x 6 columns]
"
Parsing XML from API response,"# parse from file
et = etree.parse(source_xml)
value = et.xpath(""your xpath xpr here"")
"
Django development - Accessing results from a model,"return render_to_response('template_name', {'reports':reportSuites})
"
Python csv without header,"with open('data.csv') as f:
    cf = csv.reader(f)
    for row in cf:
        print row[0]
"
localtime not actually giving localtime,"Output
sunrise is at 2014-09-20 06:55:38.000005
sunset is going to be at  2014-09-19 19:16:38.000004
now is  2014-09-19 19:15:04.171486-07:00
"
Parsing XML with Python 2.7,"qnt= *
r= -1
"
Python list to nested keys,"def add_nested(d, keys, value):
    for k in keys[:-1]:
        d = d.setdefault(k, {})
    d[keys[-1]] = value
"
Making this C array processing code more python (and even numpy),"import numpy as np

def mask_vectorized(inputs,outputs,pos_y):
    # Create a copy of outputs array for editing purposes
    pantilt_2d = outputs[:,:2].copy()

    # Get mask correspindig to IF conditional statements in original code
    mask_col0_lt = pantilt_2d[:,0]<-90
    mask_col0_gt = pantilt_2d[:,0]>90

    # Edit the first column as per the statements in original code
    pantilt_2d[:,0][mask_col0_gt] -= 180
    pantilt_2d[:,0][mask_col0_lt] += 180

    # Edit the second column as per the statements in original code
    pantilt_2d[ mask_col0_lt | mask_col0_gt,1] *= -1

    # Get vectorized tan_pan and tan_tilt 
    tan_pan_tilt = np.tan(np.radians(pantilt_2d))

    # Vectorized calculation for: ""tan_tilt * (target[1] .."" from original code 
    V = (tan_pan_tilt[:,1]*(inputs[:,1] - pos_y))/np.sqrt((tan_pan_tilt[:,0]**2)+1)

    # Setup output numpy array
    pos_array_vectorized = np.empty((num_samples,3))

    # Put in values into columns of output array
    pos_array_vectorized[:,0] = inputs[:,0] + tan_pan_tilt[:,0]*V
    pos_array_vectorized[:,1] = pos_y
    pos_array_vectorized[:,2] = inputs[:,2] + V

    # Convert to list, if so desired for the final output
    # (keeping as numpy array could boost up the performance further)
    return pos_array_vectorized.tolist()
"
How to pass args to an instance of sublime_plugin.WindowCommand?,"def __init__(self, **args):
"
Python server does not receive complete string from java client,"while True:
print 'waiting for a connection'
connection, client_address = sock.accept()

try:
    print 'connection from', client_address

    while True:
        data = connection.recv(4096)
        print data
        print type(data)
        if data:
            print 'sending data back to the client'
            connection.send(data + ""\n"")
        else:
            print 'no more data from', client_address
            break

finally:
    connection.close()
"
Why does the parsing of csv file not break things into their 'logical' order?,"for row in reader:
    print(row)
    # do whatever with row
"
Should I be using regex in Python,">>> mystr = 'cathy is a singer on fridays'
>>> x = mystr.split()
>>> x
['cathy', 'is', 'a', 'singer', 'on', 'fridays']
>>> x[3] = ""dancer""
>>> x
['cathy', 'is', 'a', 'dancer', 'on', 'fridays']
>>> "" "".join(x)
'cathy is a dancer on fridays'
"
Subtract same column multi index for each level,"x = df.loc[:,idx[:,:,'x']]
z = df.loc[:,idx[:,:,'z']]
x.sub(z)

#     A                       B                    
#     a       b       c       a       b       c    
#     x   z   x   z   x   z   x   z   x   z   x   z
# 0 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN
# 1 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN
# 2 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN
# 3 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN
# 4 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN
# 5 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN
# 6 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN
"
Django ModelForm for Many-to-Many fields,"class PizzaForm(forms.ModelForm):
    class Meta:
        model = Pizza

    # Representing the many to many related field in Pizza
    toppings = forms.ModelMultipleChoiceField(queryset=Topping.objects.all())

    # Overriding __init__ here allows us to provide initial
    # data for 'toppings' field
    def __init__(self, *args, **kwargs):
        # Only in case we build the form from an instance
        # (otherwise, 'toppings' list should be empty)
        if kwargs.get('instance'):
            # We get the 'initial' keyword argument or initialize it
            # as a dict if it didn't exist.                
            initial = kwargs.setdefault('initial', {})
            # The widget for a ModelMultipleChoiceField expects
            # a list of primary key for the selected data.
            initial['toppings'] = [t.pk for t in kwargs['instance'].topping_set.all()]

        forms.ModelForm.__init__(self, *args, **kwargs)

    # Overriding save allows us to process the value of 'toppings' field    
    def save(self, commit=True):
        # Get the unsave Pizza instance
        instance = forms.ModelForm.save(self, False)

        # Prepare a 'save_m2m' method for the form,
        old_save_m2m = self.save_m2m
        def save_m2m():
           old_save_m2m()
           # This is where we actually link the pizza with toppings
           instance.topping_set.clear()
           for topping in self.cleaned_data['toppings']:
               instance.topping_set.add(topping)
        self.save_m2m = save_m2m

        # Do we need to save all changes now?
        if commit:
            instance.save()
            self.save_m2m()

        return instance
"
In Python how do I use a class method without passing an instance to it?,">>> import foo
>>> foo.module_method()
'I am a module method'
>>> foo.ModClass.static_method()
'I am a static method'
>>> foo.ModClass.class_method()
'I am a class method'
>>> instance = ModClass()
>>> instance.instance_method()
'I am an instance method'
"
"Return original value, python","import random
import bisect

def obsfucate_function(default):
    cumulative_weights = [16, 30, 45, 60, 75, 90, 100]
    values = ['!', '%', '&', '*', '#', '@', default]
    return values[bisect.bisect(cumulative_weights, random.randrange(100))]
"
Save for loop result in variable,"a
b
c
d
e
"
Insert missing elements in a nested list based on a condition - Python,">>> [k for i,j in zip(a, a[1:]) for k in [i] + [(0,n) for n in range(i[1]+1, j[1])]] + a[-1:]
[(2, 0), (3, 0), (0, 1), (4, 2), (10, 3), (0, 4), (11, 5)]
"
Finding duplicates sets of records sharing the same Many-To-Many relations,"where A2B.aid < dup.aid
"
How to set up Python server side with javascript client side,"# Python and Gevent
from gevent.pywsgi import WSGIServer
from gevent import monkey
monkey.patch_all() # makes many blocking calls asynchronous

def application(environ, start_response):
    if environ[""REQUEST_METHOD""]!=""POST"": # your JS uses post, so if it isn't post, it isn't you
        start_response(""403 Forbidden"", [(""Content-Type"", ""text/html; charset=utf-8"")])
        return ""403 Forbidden""
    start_response(""200 OK"", [(""Content-Type"", ""text/html; charset=utf-8"")])
    r = environ[""wsgi.input""].read() # get the post data
    return r

address = ""youraddresshere"", 8080
server = WSGIServer(address, application)
server.backlog = 256
server.serve_forever()
"
Decoding tcp packets using python,"class PacketDecoder(object):

    STX = ...
    ETX = ...

    def __init__(self):
        self._stream = ''

    def feed(self, buffer):
        self._stream += buffer

    def decode(self):
        '''
        Yields packets from the current stream.
        '''
        while len(self._stream) > 2:
            end = self._stream.find(self.ETX)
            if end == -1:
                break

            packet_len = ord(self._stream[1])
            packet = self._stream[:end]
            if packet_len >= 5 and check_sum_valid(packet):
                yield packet
            self._stream = self._stream[end+1:]
"
How to compare clusters?,"file1 = '''Cluster 0:
 giant(2)
  red(2)
   brick(1)
   apple(1)
Cluster 1:
 tiny(3)
  green(1)
   dot(1)
  blue(2)
   flower(1)
   candy(1)'''.split('\n')
file2 = '''Cluster 18:
 giant(2)
  red(2)
   brick(1)
   tomato(1)
Cluster 19:
 tiny(2)
  blue(2)
   flower(1)
   candy(1)'''.split('\n')
"
How to move a colorbar label downward?,"import numpy as np
import matplotlib.pyplot as plt

fig, ax = plt.subplots()
im = ax.imshow(np.random.random((10, 10)), cmap='gist_earth')
cbar = fig.colorbar(im)
cbar.set_label('Test', y=0.25)
plt.show()
"
finding a record with a max value in python,"In [42]: ts = meat.set_index(['date'])

In [43]: ts.beef.max()
Out[43]: 2512.0

In [44]: ts.beef.idxmax()
Out[44]: Timestamp('2002-10-01 00:00:00', tz=None)

In [45]: ts.ix[ts.beef.idxmax()]
Out[45]:
beef               2512.0
veal                 18.7
pork               1831.0
lamb_and_mutton      19.7
broilers           2953.3
other_chicken        50.7
turkey              525.9
Name: 2002-10-01 00:00:00, dtype: float64
"
How to write a batch file showing path to executable and version of Python handling Python scripts on Windows?,"@echo off
setlocal
set test_script=.pyexe.py
rem Let's create temporary Python script which prints info we need
echo from __future__ import print_function; import sys; print(sys.executable); print(sys.version) > %test_script%
echo Python accessible through the system PATH:
python %test_script%
echo ---
echo Python set as a handler for Python files:
rem We need to check if a handler set in the registry exists to prevent ""Open With""
rem dialog box in case it doesn't exist
rem ftype Python.File hypothetical return value:
rem Python.File=""%PYTHON_HOME%\python.exe"" ""%1"" %*
for /f ""tokens=2 delims=="" %%i in ('ftype Python.File') do set reg_entry=%%i
rem ...now in 'reg_entry' variable we have everything after equal sign:
rem ""%PYTHON_HOME%\python.exe"" ""%1"" %*
set ""handler=""
setlocal enableDelayedExpansion
for %%A in (!reg_entry!) do if not defined handler endlocal & set handler=%%A
rem ...now in 'handler' variable we have the first token:
rem ""%PYTHON_HOME%\python.exe""
rem Now we expand any environment variables that might be present
rem in the handler's path
for /f ""delims="" %%i in ('echo %handler%') do set expanded_handler=%%i
if exist ""!expanded_handler!"" (
    ""%test_script%""
) else (
  if not ""!handler!"" == ""!expanded_handler!"" (
    set ""handler=!expanded_handler! ^(!handler!^)""
  )
  echo Handler is set to !handler! which does not exist
)
del %test_script%
"
Python: Combining a list of lists,"myCombinedList = []
[myCombinedList.extend(inner) for inner in mylistOfLists]
"
Dijkstra's algorithm with back tracking?,"    6   _ 3
    |  /
  14| /9
    |/
    1-------2
        7  
"
How do I access my database level functions inside other classes/files in Tornado?,"import os
import tornado.database
import tornado.httpserver
import tornado.ioloop
import tornado.web

from tornado.options import define, options
define(""port"", default=8888, help=""run on the given port"", type=int)

import da

class Application(tornado.web.Application):
    def __init__(self):
        from urls import handlers,ui_modules
        settings = dict(
            template_path=os.path.join(os.path.dirname(__file__), ""templates""),
            static_path=os.path.join(os.path.dirname(__file__), ""static""),
            xsrf_cookies=True,
            cookie_secret=""11oETzKXQAGaYdkL5gEmGeJJFuYh7EQnp2XdTP1o/Vo="",
            login_url=""/signin"",
            ui_modules=ui_modules,
            debug=True,
        )
        super(Application,self).__init__(handlers,**settings)
#       tornado.web.Application.__init__(self, handlers, **settings)
        # Have one global connection to the blog DB across all handlers
        self.db = da.db

def runserver():
    tornado.options.parse_command_line()
    http_server = tornado.httpserver.HTTPServer(Application())
    http_server.listen(options.port)
    tornado.ioloop.IOLoop.instance().start()

if __name__ == ""__main__"":
    runserver()
"
Scrapy doesn't seem to be doing DFO,"
search as deep into a's as possible before moving to b's
"
Error in the results of a list comprehension,"-d/2-h/np.tan(np.pi/2-a) != -0.12644904710626975
-d/2-h/np.tan(np.pi/2-a) == -0.197254124119
"
NetworkX DiGraph create subgraph (DiGraph) by node,"G = nx.DiGraph()
G.add_path([1,2,3,4])
G.add_path([3,'a','b'])
sub_G = nx.DiGraph()
create_subgraph(G, sub_G,3)
"
Preserving the state of show/hide sections in Django with jQuery/Javascript,"$('#section1').toggle();

if ( canHazStorage ) {
    if ( is_shown ) { // you'll need to write that yourself
        window.localStorage['section1'] = true;
    } else {
        window.localStorage['section1'] = false;
    }
} else {
    // same code using cookies
}
"
transcribe mRNA code from DNA strand,"import string
def transcribe(dna):
    return dna.translate(string.maketrans(""atgc"", ""uacg""))
"
numpy 1D array to numpy arrays,">>> a = numpy.array([1,2,numpy.nan,4])
>>> numpy.nan_to_num(a)
array([ 1.,  2.,  0.,  4.])
"
Doing validation across a large number of items using all(),">>> fields = ['a', 'b', '', 'd']
>>> [index for index, value in enumerate(fields) if not value]
[2]
"
Pandas: join with outer product,"def foo(series):
    print(series)

In [226]: areas.apply(foo)
0    1
1    2
2    3
Name: Com, dtype: int64
0    4
1    5
2    6
Name: Ind, dtype: int64
"
how to compute a new column based on the values of other columns in pandas - python,"%timeit df['c'] = (((df['a'] == 'l1')&(df['b']=='1'))|((df['a'] == 'l2')&(df['b']=='2'))).astype(int)
"
Converting Tuple to Dictionary,"(1, [-2, 30000000000.0, False, True, None, {'a': ['b']}])
"
Game of LIfe Hashing Python,"class Cell:
    # each cell will have exactly two values, so no need for __dict__
    __slots__ = [""row"", ""col""]

    # set up values at construction time using super().__setitem__()
    def __init__(self, row, col):
        super().__setitem__(""row"", row)
        super().__setitem__(""col"", col)
        return self

    # a Cell is intended to be immutable, so __setattr__ always raises an error
    def __setattr__(self, name, value):
        if hasattr(self, name):
            raise AttributeError(""{!r} object attribute {!r} is read-only""
                                 .format(self.__class__.__name__, name))
        else:
            raise AttributeError(""{!r} object has no attribute {!r}""
                                 .format(self.__class__.__name__, name))

    # comparison operators
    def __eq__(self, other):
        return (isinstance(other, Cell) and
                self.row == other.row and
                self.col == other.col)

    def __ne__(self, other):
        return not self == other

    # hash function, with a value borrowed from a tuple
    def __hash__(self):
        return hash((self.row, self.col))
"
Using python groupby or defaultdict effectively?,"for x,y,z in employees:
    employeeExp[(x, y)] += z 
"
Python: Using split on a string and returning a tuple?,">>> domain = a.split('@')[1]
"
Stripping \r\n from a line,">>> 'foo bar\r\n\n\r\n\r\n\r\r\r'.strip('\r\n')
'foo bar'
"
Twisted: Waiting for subtasks to finish,"from twisted.internet import defer, task
from twisted.web.client import getPage

PARALLEL_FETCHES = 5
PARALLEL_PARSES = 10

def main_task(reactor):
    parseSemaphore = defer.DeferredSemaphore(PARALLEL_PARSES)

    def parseWhenReady(r):
        def parallelParse(_):
            parse(r).addBoth(
                lambda result: parseSemaphore.release().addCallback(
                    lambda _: result
                )
            )
        return parseSemaphore.acquire().addCallback(parallelParse)

    def fetch_urls():
        for url in get_urls():
            yield getPage(url).addCallback(parseWhenReady)

    coop = task.Cooperator()
    urls = fetch_urls()

    return (defer.DeferredList([coop.coiterate(urls)
                               for _ in xrange(PARALLEL_FETCHES)])
            .addCallback(lambda done:
                         defer.DeferredList(
                            [parseSemaphore.acquire()
                             for _ in xrange(PARALLEL_PARSES)]
                         ))
            .addCallback(task_finished))

task.react(main_task)
"
Getting the class name of an instance in Python,">>> import itertools
>>> x = itertools.count(0)
>>> type(x).__name__
'count'
"
Python finding repeating sequence in list of integers?,"4
2
10
1
"
How to unset all fields except some known fields?,"document = collection.find_one({'_id': 111})
collection.replace_one({'_id': document['_id']}, dict(zip(fields, [document[field] for field in fields])))
"
AppEngine testing User Service from the command-line,"$ curl http://localhost:8000/_ah/login -d ""email=youremail@here.com&action=Log+In"" -c -
"
Looking for a concise way to check for point collision in a list of Rects,">>> rects = [pygame.Rect(0,0,100,100), pygame.Rect(30,30,30,30)]
>>> next((r for r in rects if r.collidepoint(10, 10)), None)
<rect(0, 0, 100, 100)>
>>> next((r for r in rects if r.collidepoint(200, 200)), None)
>>>
"
How do you query a one-to-many relationship in an SQLAlchemy object instance?,"chapter = (
    session.query(Chapter)
    .join(Book)
    .filter(Book.name == ""One Thousand and One Nights"")
    .filter(Chapter.name == ""57th Arabian Tale"")
    .one()
)
"
Increment efficiently over a sequence of integers in byte representation,"    print(pack('@B3s', i, token))
"
python : multithreading : self as global variable,">>> ================================ RESTART ================================
>>> 
Starting Thread-1 mit zaehler 1
1 in der 1. subfunktion von Thread-1
teste self1 - 1 Thread-1
Starting Thread-2 mit zaehler 2
2 in der 1. subfunktion von Thread-2
teste self2 - 2 Thread-2Starting Thread-3 mit zaehler 3
 Starting Thread-5 mit zaehler 5
Starting Thread-6 mit zaehler 6Starting Thread-7 mit zaehler 7Starting Thread-4 mit zaehler 4Starting Thread-8 mit zaehler 8Starting Thread-9 mit zaehler 9
 3 in der 1. subfunktion von Thread-3




3 in der 1. subfunktion von Thread-5Starting Thread-10 mit zaehler 10
3 in der 1. subfunktion von Thread-63 in der 1. subfunktion von Thread-73 in der 1. subfunktion von Thread-9
teste self3 - 3 Thread-3
3 in der 1. subfunktion von Thread-43 in der 1. subfunktion von Thread-8


teste self5 - 3 Thread-5
teste self7 - 3 Thread-7

3 in der 1. subfunktion von Thread-10teste self6 - 3 Thread-6teste self9 - 3 Thread-9
teste self4 - 4 Thread-4
teste self8 - 5 Thread-8

teste self10 - 6 Thread-10


//+ A bunch of Sub2 is not defined errors ...
"
"For Base64 encode, prefer str.encode('base64_codec') or base64.b64encode(str)?",">>> 'foo'.encode('base64')
'Zm9v\n'
"
Regex - select string until ' / ',"regex = re.compile('<div>(.+?)</div>').findall(resp)
"
dynamically loading django apps at runtime,"import os
from django.conf import settings
from django.db.models import loading
from django.core import management

APPS_DIR = '/path_to/apps/'

for item in os.listdir(APPS_DIR):
    if os.path.isdir(os.path.join(APPS_DIR, item)):
        app_name = 'apps.%s' % item
    if app_name not in settings.INSTALLED_APPS:
        settings.INSTALLED_APPS += (app_name, )
"
pyasn1 and strange mismatch when setting component,"class TBSCertificate(univ.Sequence):
    componentType = namedtype.NamedTypes(
        namedtype.DefaultedNamedType('version',Version('v1').subtype(
            explicitTag=tag.Tag(
                tag.tagClassContext, tag.tagFormatSimple, 0)
            )
        )...
"
logarithmically spaced integers,"In [157]: x = gen_log_space(10000, 100)

In [158]: x.size
Out[158]: 100

In [159]: len(set(x))
Out[159]: 100

In [160]: y = gen_log_space(2000, 50)

In [161]: y.size
Out[161]: 50

In [162]: len(set(y))
Out[162]: 50

In [163]: y
Out[163]:
array([   0,    1,    2,    3,    4,    5,    6,    7,    8,    9,   11,
         13,   14,   17,   19,   22,   25,   29,   33,   38,   43,   49,
         56,   65,   74,   84,   96,  110,  125,  143,  164,  187,  213,
        243,  277,  316,  361,  412,  470,  536,  612,  698,  796,  908,
       1035, 1181, 1347, 1537, 1753, 1999], dtype=uint64)
"
Process a perl script within a python script,"#!/usr/bin/env python
from plumbum.cmd import perl $ pip install plumbum

((perl[""script.pl"", ""/path/to/file1""] < ""input"") > ""output"")()
"
How to scrape url in Python using scrapy,"def parse(self, response):
    for selector in response.xpath('//div[@id=""comic""]/img/@src'):
        print selector.extract()

--output:--
...
2016-03-29 02:33:56 [scrapy] DEBUG: Crawled (200) <GET file:///Users/7stud/python_programs/scrapy_stuff/html_files/html.html> (referer: None)
http://demowebsite.com/uploads/image1
http://demowebsite.com/uploads/image2
2016-03-29 02:33:57 [scrapy] INFO: Closing spider (finished)
...
"
RegEx to capture multi-line text body,"Limitations:
1) This is limited to the format you described.
2) It will not handle reverse levels properly:
    1 Section 
         Second Level
             Third Level
         Second Level Again       <== This would be jammed in with 'second level'
    How would you handel multi levels?

3) Won't handle multiline section headers:

    3    Like
         This
"
Load static files for all templates in django,"'builtins': ['django.contrib.staticfiles.templatetags.staticfiles']
"
Randint number into a Dict,"import random

l = []
for _ in range(10):
    n = random.randint(0, 10)
    print(n)
    if n not in l:
        print(""New item."")
        l.append(n)
    else:
        print(""Item found at index {0}."".format(l.index(n)))
print(l)
"
"Python with Seleneium Webdriver, reading a button and saving its text","//button[@class=""_jvpff _k2yal _csba8 _i46jh _nv5lf""]
"
How do I find an xml node that does not have an attribute,"import lxml.etree as ET

root = ET.fromstring(xml)

print root.xpath('//alt[lang(""fr"")]')
"
Getting values from a dictionary,">>>  List contains: [A1, A2, A3, B1, B2, B3, C1, C2, C3]  
>>>  Last item is: C3  
>>>  3
"
"Best way to turn a list into a dict, where the keys are a value of each object?","dict([(an_object.name, an_object) for an_object in object_list])
"
"read slave , read-write master setup","def with_slave(fn):
    def go(*arg, **kw):
        s = Session()
        oldbind = s.bind
        s.bind = slave
        try:
            return fn(*arg, **kw)
        finally:
            s.bind = oldbind
    return go
"
Recursive pattern to take input integer and return palindrome,"0
010
0102010
010201030102010
0102010301020104010201030102010
"
Want to get part of string using regular expression,">>> s = '<a class=""test"" href=""ignore1"">First sentence</a><a class=""x3-large"" href=""ignore1"">Second sentence</a>'
>>> soup = BeautifulSoup(s)
>>> soup.find_all(""a"", {""class"": ""x3-large""})
[<a class=""x3-large"" href=""ignore1"">Second sentence</a>]
"
"Python, how to pass an argument to a function pointer parameter?","def repeat(times, f, *args):
    for _ in range(times):
        f(*args)
"
String formatting options: pros and cons,">>> 'My name is {surname}, {name} {surname}. I am {age}.'.format(**locals())
'My name is Smith, John Smith. I am 87.'
"
python regex pattern to extract value between two characters,"http://www.domain.com/some-slug-here/person/1234?q=some+search+string
http://www.domain.com/person/3456?q=some+search+string
http://www.domain.com/some-slug-here/person/5678
http://www.domain.com/person/7890
"
Python Float to Ord values,">>> a=[3.14159, 2.71828]
>>> struct.pack(""!{}f"".format(len(a)), *a)
"
Extract attributes and certain tag values from xml using python script,"<strictarray name=""xyz4"">
    <string>aaa</string>
    <number name=""num1"">55</number>
</strictarray>
"
Python parse ip regex,"ips = ['{}.{}.{}.{}'.format(*components)
       for components in itertools.product(*ranges)]
"
General techniques to work with huge amounts of data on a non-super computer,"# 'filename' is the full path name for a data file whose size 
# exceeds the memory on the box it resides. #

import tokenize

data_reader = open(some_filename, 'r')
tokens = tokenize.generate_tokens(reader)
tokens.next()           # returns a single line from the large data file.
"
Algorithm to compare two files in Python,"from itertools import zip_longest

def informative_lines(filename):
    with open(filename) as infile:
        for line in infile:
            if not any(patt.match(line) for patt in patterns):
                yield line

paired_lines = zip_longest(informative_lines(""foo.log""),
                           informative_lines(""bar.log""))

for i, (line0, line1) in enumerate(paired_lines):
    if line0 != line1:
        print('mismatch at non-ignored line #', i)
        print(line0)
        print(line1)
        raise Exception(""problem!"")

print(""hooray, files matched!"")
"
python: make pandas dataframe column headers all lowercase,"data.columns = map(str.lower, data.columns)
"
"Python logging, supressing output","logging.basicConfig(level=logging.DEBUG)
"
Python: How to use threads in network?,"while True:
    lock2.acquire()
    if counter == totalthreads: # in this case 3
        lock2.release()
        break
    lock2.release()
print ""Done! %r"" % myresults
"
How can I rename a column label in Django Admin for a field that is a method//property?,"def admin_method_attributes(**outer_kwargs):
    """""" Wrap an admin method with passed arguments as attributes and values.
    DRY way of extremely common admin manipulation such as setting short_description, allow_tags, etc.
    """"""
    def method_decorator(func):
        for kw, arg in outer_kwargs.items():
            setattr(func, kw, arg)
        return func
    return method_decorator


# usage
class ModelAdmin(admin.ModelAdmin):
    @admin_method_attributes(short_description='Some Short Description', allow_tags=True)
    def my_admin_method(self, obj):
        return '''<em>obj.id</em>'''
"
Creating arrays with for and while loops - Python 2,">>> for j in range(20):
...     temp=[]
...     for i in range(10):
...             temp.append(0)
...     array1.append(temp)
...
>>> array1
"
Python RegEx Stop before a Word,"( of (?:(?!\band\b)[A-Za-z ])+)?
     ^^^^^^^^^^^^^^^^^^^^^^^^^
"
Aesthetic way of appending to a list in Python?,"In [78]: import numpy as np

In [79]: phi = np.array([1, 2, 3, 4])

In [80]: radius = 6

In [81]: 2 * np.pi * radius * np.cos(phi)
Out[81]: array([ 20.36891706, -15.68836613, -37.32183785, -24.64178397])
"
"Python, could I import * without Imported classes","# app2.py
from app1 import ClassX

__all__ = ['Class1', 'Class2']

class Class1:
    pass

class Class2:
    pass
"
Streaming data with Python and Flask,"#!/usr/bin/env python
import itertools
import time
from flask import Flask, Response, redirect, request, url_for

app = Flask(__name__)

@app.route('/')
def index():
    if request.headers.get('accept') == 'text/event-stream':
        def events():
            for i, c in enumerate(itertools.cycle('\|/-')):
                yield ""data: %s %d\n\n"" % (c, i)
                time.sleep(.1)  # an artificial delay
        return Response(events(), content_type='text/event-stream')
    return redirect(url_for('static', filename='index.html'))

if __name__ == ""__main__"":
    app.run(host='localhost', port=23423)
"
How to wrap python daemon around my code,"#!/usr/bin/env python

import sys, time, threading
from daemon import Daemon
from server import run_tornado, run_base_http_server

class ServerDaemon(Daemon):
    def run(self):
        threads = [
            threading.Thread(target=run_tornado),
            threading.Thread(target=run_base_http_server)
        ]

        for thread in threads:
            thread.start()
        for thread in threads:
            thread.join()

if __name__ == ""__main__"":
    daemon = ServerDaemon('/tmp/server-daemon.pid')

    if len(sys.argv) == 2:
        if 'start' == sys.argv[1]:
            daemon.start()          
        elif 'stop' == sys.argv[1]:
            daemon.stop()
        elif 'restart' == sys.argv[1]:
            daemon.restart()
        else:
            print ""Unknown command""
            sys.exit(2)
        sys.exit(0)
    else:
        print ""usage: %s start|stop|restart"" % sys.argv[0]
        sys.exit(2)
"
python and securing pyc files on disk,"import os
os.umask(077) # Only keep rights for owner
import test
"
Find an entry in a list based on a partial string,"item_dict['BBB'] # 10 (already converted to an int)
"
converting lines to columns in perl or python,"Month   kWh
1       100
2       110
3       105
"
"Passing a list to numpy.ix_, or how to slice a multidimensional array, when number of dimensions and selection criteria are not known beforehand?","import numpy as np

N = 3
M = 3
a = np.arange((M+1)**N).reshape([M+1]*N)
s = [np.ones(M).astype(int) for i in range(N)]
s[0] = [0,1,2]
s[1] = [1,2,3]
s[2] = [1,2,3]        
b = a[np.ix_(*s)]
print(b)
"
Django Tastypie Many to Many (self) field update using a PATCH or PUT request?,"class UserResource(ModelResource):
    usersubs = fields.ToManyField('test.api.UserSubResource', attribute = 'usersubs', full=True, null=True)
    specialUsersub = fields.ToOneField('test.api.UserSubResource', attribute = 'special_user_sub', full=True, null=True) 
    class Meta:
        object_class = User
        fields = ['username', 'first_name', 'last_name', 'password', 'email']
        detail_allowed_methods = ['get', 'post', 'put']
        authentication = Authentication()
        authorization = Authorization()
        queryset = User.objects.all()
        resource_name = 'users'
        excludes = ['id']

class UserSubResource(ModelResource):
    amigos= fields.ToManyField('test.api.UserSubResource', attribute = 'amigos', null=True)      
    class Meta:
        object_class = UserSub
        fields = ['title']
        detail_allowed_methods = ['get', 'post', 'put', 'patch']
        authentication = Authentication()
        authorization = Authorization()
        always_return_data = True
        queryset = UserSub.objects.all()
        resource_name = 'usersub'
        excludes = ['id']
"
Django : How to handle css/js specific to a template tag?,"{% block body_class %}{% if block.super %}{{ block.super }} {% endif %}maps{% endblock %}
"
sorting dictionary values in python - descending alphabetically,">>> for entry in sorted(higharr.items(), key=lambda x: x[0], reverse=True):
...     print(entry)
... 
('Wallace', 6)
('Steve', 8)
('Dan', 0)
('Andy', 5)
('Alex', 2)
"
Why there is space in the code example in python threading,">>> def g():
...  print ""Worker"", ""Hello""
...
>>> dis.dis(g)
  2           0 LOAD_CONST               1 ('Worker')
              3 PRINT_ITEM
              4 LOAD_CONST               2 ('Hello')
              7 PRINT_ITEM
              8 PRINT_NEWLINE
              9 LOAD_CONST               0 (None)
             12 RETURN_VALUE
"
Changing dynamically one method of a class,"sage: c = C(); cc = C()
sage: c.scale(2), cc.scale(3)
(2, 3)
sage: c.scaling_method = ""double""
sage: c.scale(2)
4
"
Python Hexadecimal,">>> format(255, '02x')
'ff'
>>> format(2, '02x')
'02'
"
Can you list the keyword arguments a Python function receives?,"def getRequiredArgs(func):
    args, varargs, varkw, defaults = inspect.getargspec(func)
    if defaults:
        args = args[:-len(defaults)]
    return args   # *args and **kwargs are not required, so ignore them.
"
Django ORM Query to limit for the specific key instance,"from django.db import connection, models
qn = connection.ops.quote_name

class ProjectfundingdetailManager(models.Manager):
    def latest_by_project(self):
        project_model = self.model._meta.get_field('project').rel.to

        names = {'project': qn(project_model._meta.db_table),
                 'pfd': qn(self.model._meta.db_table),
                 'end_date': qn(self.model._meta.get_field('end_date').column),
                 'project_id': qn(self.model._meta.get_field('project').column),
                 'pk': qn(self.model._meta.pk.column),
                 'p_pk': qn(project_model._meta.pk.column)}

        sql = """"""SELECT pfd.%(pk)s FROM %(project)s AS p 
                 JOIN %(pfd)s AS pfd ON p.%(p_pk)s = pfd.%(project_id)s
                 WHERE pfd.%(end_date)s =
                     (SELECT MAX(%(end_date)s) FROM %(pfd)s 
                      WHERE %(project_id)s = p.%(p_pk)s)
              """""" % names

        cursor = connection.cursor()
        cursor.execute(sql)
        return self.model.objects.filter(id__in=[r[0] for r
                                                 in cursor.fetchall()])
"
How to receive and process JSON in Flask?,"// this should return something but for the sake of simplicity
public void turnDeviceOn(String externalDeviceId, Integer durationInMinutes){
 # generate json message
 JSONGenerator gen = JSON.createGenerator(true);
 gen.writeStartObject();
 gen.writeIntegerField('durationinminutes', durationInMinutes);
 gen.writeEndObject();
 # generate http request

 HttpRequest req  = new HttpRequest();
 req.setMethod('POST');
 # this endpoint must be added as a remote endpoint in Salesforce org setup!
 req.setEndpoint('http://yourapiurl/API/v1.0/power-on/'+externalDeviceId);
 req.setBody(gen.getAsString());

 HTTPResponse res = h.send(req);

}
"
Webdriver: How to find elements when class name contains space?,"360 N Central Ave
Avondale, AZ
(623) 455-6605
1 Google review
-----
Avondale, AZ
(623) 329-5170
4 Google reviews
-----
Tolleson, AZ
(623) 207-1995
7 Google reviews
-----
3947 N 146th Dr
Goodyear, AZ
(602) 446-6576
1 Google review
-----
564 W Western Ave
Goodyear, AZ
(623) 455-6605
0 Google reviews
-----
14190 W Van Buren St
Goodyear, AZ
(623) 932-5300
0 Google reviews
-----
"
Weighted sum of adjacent values in numpy array,"weights = alpha * weights
weights[1, 1] = weights[1, 1] + 1

for i in range(5):
    u = convolve(u, weights)
    print(u)
"
Fill NaN in candlestick OHLCV data,"In [20]: df = DataFrame(randn(10,3),index=date_range('20130101',periods=10,freq='min'),
            columns=list('ABC'))

In [21]: df.iloc[1:3,:] = np.nan

In [22]: df.iloc[5:8,1:3] = np.nan

In [23]: df
Out[23]: 
                            A         B         C
2013-01-01 00:00:00 -0.486149  0.156894 -0.272362
2013-01-01 00:01:00       NaN       NaN       NaN
2013-01-01 00:02:00       NaN       NaN       NaN
2013-01-01 00:03:00  1.788240 -0.593195  0.059606
2013-01-01 00:04:00  1.097781  0.835491 -0.855468
2013-01-01 00:05:00  0.753991       NaN       NaN
2013-01-01 00:06:00 -0.456790       NaN       NaN
2013-01-01 00:07:00 -0.479704       NaN       NaN
2013-01-01 00:08:00  1.332830  1.276571 -0.480007
2013-01-01 00:09:00 -0.759806 -0.815984  2.699401
"
changing values in a list while looping through it?,">>> a = range(10)
>>> for j in range(i*2, len(a), i):
        # Not *= since we want ints
...     a[j] = a[j] * (i - 1) / i
"
Truncating ints without rounding?,"totalDollars, totalPennies = divmod(totalCents, 100)
"
Continuous Fourier Transform with Python / Sympy (Analytical Solution),"In [26]: fourier_transform(cos(t),t,x, noconds=False)
Out[26]:
⎛   │                 ⎛ -ⅈ⋅π           2      ⎞│       │                 ⎛ ⅈ⋅π           2      ⎞│    ⎞
⎝0, │periodic_argument⎝ℯ    ⋅polar_lift (x), ∞⎠│ < π ∧ │periodic_argument⎝ℯ   ⋅polar_lift (x), ∞⎠│ < π⎠
"
psycopg2 + stored procedure + compound type,"cur.execute(""sp_insertItem(%s, %s, %s, %s::t_document)"",
    ['Name', 'Phone', 'Address', ('Title', 'Metadata', 'Data')])
"
Python-Can't Pull JSON Format from JSON Source,"import requests

url='https://www.verizonwireless.com/vzw/browse/tradein/ajax/deviceSearch.jsp?act=models&car=Verizon&man=Apple&siz=large'
# Put your own contact info in next line
headers = {'User-agent':'MyBot/0.1 (+user@example.com)'}
r = requests.get(url, headers=headers)
print(r.json()['models'][0]['name'])
"
how import statement executes in python?,"from sys import argv, stdout
"
How to keep track of webpages opened in web-browser using Python?,"Window 1:
    http://www.cyrilmottier.com/
    Cyril Mottier

    http://developer.android.com/guide/components/fragments.html#CommunicatingWithActivity
    Fragments | Android Developers

    http://developer.android.com/guide/components/index.html
    App Components | Android Developers

    http://www.youtube.com/watch?v=ONaD1mB8r-A
    ▶ Introducing RoboSpice: A Robust Asynchronous Networking Library for Android - YouTube

    http://www.youtube.com/watch?v=5a91dBLX8Qc
    Rocking the Gradle with Hans Dockter - YouTube

    http://stackoverflow.com/questions/18439564/how-to-keep-track-of-webpages-opened-in-web-browser-using-python
    How to keep track of webpages opened in web-browser using Python? - Stack Overflow

    https://www.google.cz/search?q=Mozilla+firefox+list+of+open+tabs&ie=utf-8&oe=utf-8&rls=org.mozilla:cs:official&client=firefox-a&gws_rd=cr
    Mozilla firefox list of open tabs - Hledat Googlem

    https://addons.mozilla.org/en-US/developers/docs/sdk/latest/dev-guide/tutorials/list-open-tabs.html
    List Open Tabs - Add-on SDK Documentation

    https://support.mozilla.org/cs/questions/926077
    list all tabs button not showing | Fórum podpory Firefoxu | Podpora Mozilly

    https://support.mozilla.org/cs/kb/scroll-through-your-tabs-quickly
    Scroll through your tabs quickly | Nápověda k Firefox
"
Django ModelForm Field Filtering with multiple model dependancies,"class ActivityForm(ModelForm):
    def __init__(self, *args, **kwargs):
        super(ActivityForm, self).__init__(*args, **kwargs)
        if 'initial' in kwargs:
            self.fields['participants'].queryset = Member.objects.filter(group=initial.group)
    class Meta:
        model = Activity
"
BeautifulSoup return next sibling after using findAll(text=' '),"<td class=""team"">b<span class=""team b""></span></td>
<td class=""time"">99'</td>
"
"How can I create an EU quiz without 28 ""if"" statements","import random    

number = int(raw_input())
countries = random.sample(capital, number)
for country in countries:
    guess = raw_input('What is the capital of {}?'.format(country))
    if guess == capital[country]:
        print 'Correct!'
"
python - recursively deleting dict keys?,"def scrub(obj, bad=""_this_is_bad""):
    if isinstance(obj, dict):
        for k in obj.keys():
            if k == bad:
                del obj[k]
            else:
                scrub(obj[k], bad)
    elif isinstance(obj, list):
        for i in reversed(range(len(obj))):
            if obj[i] == bad:
                del obj[i]
            else:
                scrub(obj[i], bad)

    else:
        # neither a dict nor a list, do nothing
        pass
"
Scrapy: catch responses with specific HTTP server codes,"def parse(response):
    if response.status == 500:
        # logic here
    elif response.status == 502:
        # logic here
"
Python: is using decorator to change method arguments a bad thing?,"a = SomeClass()
b = SomeChildOfA()
c = SomeThirdPartyThingAlsoWithItems()

update_status(a, ""beep"")
update_status(b, ""bop"")
update_status(c, ""Vote for Bernie Sanders!"")
"
Relink python object (i.e. pass by reference),">>> for i in range(4):
...     temp = MyClass()
...     p = Process(target=myFunc, args=(temp, i))
...     p.start()
...     p.join()
...     print i,temp.x
... 
0 construct
1 construct
2 construct
3 construct
"
How to exclude comment lines when searching with regular expression?,"  A=23  ... more data ...
                  B=24    
  .... block 3 of data across multiple lines ....  
  .... block 4 of data across multiple lines ....  
"
Create list with for loop for incrementing IP address,">>> make_24_hosts('192.168.2.')
<generator object <genexpr> at 0x7f7b364930a0>
>>> g = make_24_hosts('192.168.2.')
>>> next(g)
'192.168.2.1'
>>> next(g)
'192.168.2.2'
"
Problems while selecting data from the table?,"SELECT View, Cat, Name
FROM yourTable
WHERE Name NOT NULL
"
Django auth.user with unique email,"ALTER TABLE auth_user ADD UNIQUE (email)
"
How do I perform math operations on dates and sort them in Python?,"dates = ['2011-06-18', 'Date', '2010-01-13', '1997-12-01', '2007-08-11']
dates_filtered = filter(lambda d: d != 'Date', dates)
"
Django: Any difference between `QuerySet.__nonzero__` and `QuerySet.exists`?,"bool( Foo.objects.filter(user=user) )  
# calls __nonzero__, evaluates, converts all fields to python objects 
# and stores in queryset._result_cache


Foo.objects.filter(user=user).exists()
# stores nothing, and query only returns one row.
# less data from DB and less python overhead generating django model instances.
"
How to remove extra spaces in a string?,">>> ' '.join(s.split())
'Z Miramar Wellington Nz'
"
python sort on extension / Name of the file,"Example
import os

search_folder = '/Users/temp/'

results = []
for root, dirs, files in os.walk(search_folder):
       for f in files:
            results.append(os.path.join(root, f))

sorted_results = sorted(results, key=lambda x: os.path.splitext(x)[1])

for path in sorted_results:
    print path
    print os.path.getsize(path)
"
Element by element comparison in tuple to return set of sets - python,">>> tuple1=('H', 'C', 'G')
>>> tuple2=('H', 'M', 'G')
>>> tuple3=('L', 'M', 'S')
"
Unsure how to use List Comprehension on a loop,"def merge(self, line):
    return ([x for x in line if x] + ([0] * len(line)))[:len(line)]
"
"Read from File, or STDIN","if inf is not sys.stdin:
    inf.close()
"
Convert Country Names to Country Code using Python DictReader/DictWriter,"mapping = {country.name: country.alpha2 for country in pycountry.countries}
for column in csv_file:
    print column['name'], mapping.get(column['name'], 'No country found')
"
Best practices method of implementing a django OR query from an iterable?,"slug = [""snakes"", ""snake-s"" ] # in the real world this is generated from directory structure on disk

# build the query
query = MyModel.objects
if hasattr(slug, ""__iter__""):
    q_list = []
    for s in slug:
        q_list.append(Q(slug=s))
    query = query.filter(reduce(operator.or_, q_list))
else:
    query = query.filter(slug=slug)
"
Fetch News Data from right Scrollbar using Beautifulsoup,"cid = lSoupPage.find('link', rel='canonical')['href'].rpartition('=')[-1]
"
"How to find in a parent string list, the indexes corresponding to a child string list",">>> np.in1d(Shop_Products, ['Cheese', 'Bread']).nonzero()
(array([1, 4]),)
>>> np.in1d(Shop_Products, ['Bread', 'Cheese']).nonzero()
(array([1, 4]),)
"
Something in python similar to index method for multiple ocurrences,"class MultiIndexList(list):
    def multi_index(self, val):
        return [i for i,v in enumerate(self) if v == val]
"
How to stop depth-first search when the target vertex of the graph is found?,"def dfs(graph, start, target, visited=None):
    if start == target:
        return True
    if visited is None:
        visited = set()
    visited.add(start)

    found = False
    for n in (set( graph[start] ) - visited):
        if target == n:
            return True
        found = dfs(graph, n, target, visited)
    return found
"
Replace <strong> tag with h2 tag,"pip install beautifulsoup4
"
Importing sub-sub-packages within a Python application,"import utils
from modules.layer4 import layer4
"
Getting totals from list of lists and apply it to a dictionary,"Counter({'blah': 18, 'foo': 12})
"
Format canonical URL structure correctly with URL Processors,"from werkzeug.routing import AnyConverter


languages = ['en', 'pt']


def translate_url(word, language):
    if language == 'pt' and word == 'about':
        return 'sobre'
    return word


class TranslateConverter(AnyConverter):

    def __init__(self, map, item):
        AnyConverter.__init__(self, map, *[translate_url(item, language) 
                                           for language in languages])


app.url_map.converters['tr'] = TranslateConverter


@app.route('/<lang_code>/<tr(about):about>')
def about(about):
    pass
"
Quick question regarding format of if-elif statements,"if spam:
    do_eggs()
elif ham:
    do_eggs()
"
Creating variables in loop for dynamicly creating griddata(),"In [148]: %timeit np.asarray(np.meshgrid(*[np.linspace(low_bound, up_bound, m)]*dim))
1 loops, best of 3: 635 ms per loop

In [149]: %timeit np.meshgrid(*[np.linspace(low_bound, up_bound, m)]*dim, sparse=True)
10000 loops, best of 3: 26.1 µs per loop
"
Matplotlib clustered box and whisker plot with multiple series,"%matplotlib inline
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
import numpy as np

# generate some bogus data
a = ['Temp', 'WS', 'WD']
b = ['Error','Correlation']
c = ['ST1', 'ST2', 'ST3'] * 10
d = pd.MultiIndex.from_product([a, b, c], names=['measurement', 'type', 'station'])
e = pd.DataFrame({'value': np.random.random_sample((180,))}, index=d)
f = e.reset_index()
"
Pandas HDFStore of MultiIndex DataFrames: how to efficiently get all indexes,"In [4]: %timeit store.select_column('df','one')
100 loops, best of 3: 8.71 ms per loop

In [5]: %timeit store.select('df',columns=['one'])
10 loops, best of 3: 43 ms per loop
"
Create ipaddr-py IPv6Address from byte string,"[...]
# Compatibility function to cast str to bytes objects
if issubclass(ipaddr.Bytes, str):
    _cb = ipaddr.Bytes
else:
    _cb = lambda bytestr: bytes(bytestr, 'charmap')
[...]
"
How to print a name in a Python list whose index corresponds to the number inputted by a user?,"index = int(input(""Enter your number"") # transform to int
print(list[index]) # print item
"
Parallel Processing - Pool - Python,"def do_voroni(entry, seeds):
    entry.generate_voronoi_diagram(seeds)
    return entry
"
"Numpy: how to roll 1 ""row"" in an array of arrays","Roll the second row one place
[['A' 'D' 'G']
 ['H' 'B' 'E']
 ['C' 'F' 'I']]
Roll the second row two places
[['A' 'D' 'G']
 ['E' 'H' 'B']
 ['C' 'F' 'I']]
Roll the second row three places
[['A' 'D' 'G']
 ['B' 'E' 'H']
 ['C' 'F' 'I']]
"
Python: print unicode string stored as a variable,">>> ipa = '\u02c8w\u0254\u02d0t\u0259\u02ccm\u025bl\u0259n'
>>> print(ipa)
ˈwɔːtəˌmɛlən
"
How to find median using Spark,"sqlContext.sql(""SELECT percentile(x, 0.5) FROM df"")
"
Redirect command to input of another in Python,"import subprocess
import sys

file = sys.argv[1]
p1 = subprocess.Popen(['hg', 'cat', file], stdout=subprocess.PIPE)
p2 = subprocess.Popen([
    'gvimdiff',
    '/proc/self/fd/%s' % p1.stdout.fileno(),
    file])
p2.wait()
"
how to get all objects by instance in django,"In[3]: my_instance._meta.model
Out[3]: app_name.models.SometingModel # returns the model

In[4]: my_instance._meta.model.objects.all()
Out[4]: [..list of objects..] # returns queryset
"
Python regex matching pattern not surrounded by double quotes,">>> s = 'keyword1 keyword2 title:hello title:world ""title:quoted"" keyword3'
>>> re.sub(r'\btitle:\w+\b', '', s, re.I)
'keyword1 keyword2   ""title:quoted"" keyword3'
"
ksh-style left and right string stripping up to matched expression?,">>> s='abc/def/ghi'
>>> print s[:s.find(""/"")]
abc
>>> print s[:s.rfind(""/"")]
abc/def
>>> print s[s.find(""/"")+1:]
def/ghi
>>> print s[s.rfind(""/"")+1:]
ghi
"
How to calculate frequency of a give wave and time,"data = np.loadtxt(""data.dat"", usecols=(0,1))
t = data[:,0]
u = data[:,1]

tdiff = t[1:]-t[:-1]
plt.hist(tdiff)

new_times = np.linspace(min(t), max(t), len(t))
new_data = np.interp(new_times, t, u)

t, u = new_times, new_data

FFT = sy.fft(u)
freqs = syfp.fftfreq(len(u), dt)

# then plot as above
"
What's the most pythonic way to load a matrix in ijv/coo/triplet format?,"Apple,Google,1
Apple,Banana,5
Microsoft,Orange,2
"
Integrate facebook login in google app engine with python,"fb_user = facebook.get_user_from_cookie(request.cookies, FACEBOOK_APP_ID, FACEBOOK_APP_SECRET)
"
How can I access particular column values?,"print df1[:-1]

status  a  c  p   All
cname                
a       1  3  1     5
b       2  3  0     5
"
Python: How to create a 2D list that each cell is holding two different values,"print zip(*df[""0""])
[('a', 'x'), (1, 10)]
"
python list as function parameter,"def fizz_count(x, search_string, case_insensitive=False):
    if case_insensitive:
        x = [item.lower() for item in x]
    return x.count(search_string)
"
Use pandas (and glob?) to merge numerous (csv) data text files from a directory.,"cols = ['{0[0]}{0[1]}'.format(t) for t in zip(df.columns[1:], range(1, len(df.columns)))]
df.columns = df.columns.tolist()[:1] + cols
"
XPath for sub-element's text value in lxml,"""//div[@id='somediv']//*[contains(text(), 'here')]""
"
Extract the elements from a super list using the textual information available in sub list,"result_list = [x for x in super_list if any(y in x for y in my_list)]
"
Objects array with numpy,"a = numpy.empty(shape=(4,), dtype=object)
a[0] = Register()  # etc.
"
Do you have to check exit_status_ready if you are going to check recv_ready()?,"# spawns new thread to communicate with remote
# executes whoami which exits pretty fast
stdin, stdout, stderr = ssh.exec_command(""whoami"") 
time.sleep(5)  # main thread waits 5 seconds
# command already finished, exit code already received
#  and set by the exec_command thread.
# therefore the loop condition is not met 
#  as exit_status_ready() already returns True 
#  (remember, remote command already exited and was handled by a different thread)
while not stdout.channel.exit_status_ready():
    if stdout.channel.recv_ready():
        stdoutLines = stdout.readlines()
"
Python datetime,"Read all the measurements you want to take in account 
(use a simple query like Measurement.objects.filter(end__gte=begin_time,
     begin__lte=end_time) )
get all the nodes in your query
for each node:     
    - get the initial state of each node at ""begin_time"" and annotate it in
       a dictionary with the current state of each node
    - calculate a ""next_change"" time in each node - determine the time
        of next state change (either its begin, or its end, if the begin is in the past)
    - push then into a n ordered data structure, such as a list 
          maintained with Python's heapq based on this 
          next_state_change"" time-stamp

Then start your CSV files, with headers and first value line (from the dictionary
         with the current state)
Loop through your time stamps along the snippet above, and for
               each timestamp:
      - pick measurements from your list until ""nest_state_change"" is
              after your timestamp. For each of them:
            - if ""end"" is in the future, annotate that as ""next_state_change"" and 
                  push it back on the heapq
            - update the device state on your nodes dictionary
      - write a new row to your CSV file
"
How to modify a tag text value based on its sibling tag text value in xml with python?,"raw = """"""
    <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
            <name>name</name>
            <description></description>
            <defaultValue>abc</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
            <name>branch</name>
            <description></description>
            <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
    </parameterDefinitions>
""""""""
"
import text file to Access 2003 database using Python,"# -*- coding: utf-8 -*-
import pypyodbc

connStr = (
    r'DRIVER={Microsoft Access Driver (*.mdb, *.accdb)};' +
    r'DBQ=C:\Users\Public\Database1.accdb'
    )
db = pypyodbc.connect(connStr)

qry = """"""INSERT INTO text_file_data ([Letter], [Number], [Batch], [Year], [Parcel], [Amount]) 
    VALUES (?,?,?,?,?,?)""""""

crsr = db.cursor()
with open (r""C:\Users\Gord\Desktop\stuff.txt"", ""r"") as pipeFile:
    for line in pipeFile:
        crsr.execute(qry, line.split(""|""))
db.commit()
db.close()
"
Python-saving while loop results,"for i in results:
    send_to_database(i)
"
How do you attach a popup menu to a column header button in GTK2 using PyGObject?,"    widget = treeview_column.get_widget()
    while not isinstance(widget, gtk.Button):
        widget = widget.get_parent()
"
Inserting a folder containing specific routes to a bottle application in Python,"import bottle

config_app = bottle.Bottle()

@config_app.route('/config1')
def config1():    
    return 'some config data'
"
Python imports by folder module,"import sys

def _allimports(modnames)
  thismod = sys.modules[__name__]

  for modname in modnames:
    submodname = '%s.%s' % (thismod, modname)
    __import__(submodname)
    submod = sys.modules[submodname]
    thismod.__dict__.update(submod.__dict__)

_allimports('a b c d e'.split())  # or whatever
"
how to render django template from code instead of file,"from google.appengine.ext.webapp import template

# Your code...
template_string = ""Hello World""
my_template = template.Template(template_string)

# `context` is optional, but will be useful!
# `context` is what will contain any variables, etc. you use in the template
rendered_output = template.render(context)

# Now, do what you like with `rendered_output`!
"
insert current time into mongo using pymongo,">>> from datetime import datetime
>>> datetime.now()
datetime.datetime(2012, 12, 24, 18, 33, 46, 266943)
"
Spatial index/query (finding k nearest points),"> db.places.ensureIndex({loc: ""2d""})
> db.places.save({name: ""AK"", loc: {long: -152.2683, lat: 61.3850}})
> db.places.save({name: ""AL"", loc: {long: -86.8073, lat: 32.7990}})
> db.places.save({name: ""AR"", loc: {long: -92.3809, lat: 34.9513}})
> db.places.save({name: ""AS"", loc: {long: -170.7197, lat: 14.2417}})
> ...
"
Unable to set the value of a SelectControl element,"import mechanize
br = mechanize.Browser()
br.open(""http://www.planibus.sto.ca/HastinfoWeb/StartTimetableForm.aspx"")
br.select_form(name=""TimetableQueryForm"")
select = br.form.controls[8] # DatePicker$DaysDropDownList
select.possible_items()
>>> []
"
How to use Hacker News API in Python?,"for story in top_story_ids:
   print hn.get_item(story)
"
Getting adjective from an adverb in nltk or other NLP library,"possible_adj = []
for ss in wn.synsets('terribly'):
  for lemmas in ss.lemmas: # all possible lemmas.
    for lemma in lemmas: 
      for ps in lemma.pertainyms(): # all possible pertainyms.
        for p in ps:
          for ln in p.name: # all possible lemma names.
            possible_adj.append(ln)
"
"""exists"" keyword in Python?","any(my_function(x) and False for x in sequence)
"
Determine if numbers are in ascending order using 'all',"all(x == y for x, y in enumerate(numbers, numbers[0]))
"
Python multiprocessing pool hangs on map call,"def get_session():
    engine = create_engine('mysql://root:root@localhost/my_db')

    Base.metadata.create_all(engine)
    Base.metadata.bind = engine

    db_session = sessionmaker(bind=engine)

    return db_session()
"
Efficiency of imports in Python,"#!/usr/bin/python
for i in xrange(100000):
    print ""def foo%d(): pass\n"" % i
"
change __slots__ dynamically,"def GetTorrentClass(slots_iterable):
    class Torrent(object):
        __slots__ = slots_iterable
    return Torrent
"
How to compress a data frame within a range?,"# approx
# 188.40     100
# 188.41    1600
# 188.42    2339
# 188.43    1600
# 188.44     100
# Name: Volume, dtype: int64
"
Python array of datetime objects from numpy ndarray,"import matplotlib.cbook as mc
import numpy as np
import datetime as dt

def using_genfromtxt(fname):
    data = np.genfromtxt(fname, dtype=None)

    orig_desc=data.dtype.descr
    view_desc=orig_desc[:2]+[('date','|S22')]+orig_desc[4:]
    new_desc=orig_desc[:2]+[('date','|O4')]+orig_desc[4:]

    newdata = np.empty(data.shape, dtype=new_desc)
    fields=data.dtype.names
    fields=fields[:2]+fields[4:]
    for field in fields:
        newdata[field] = data[field]

    newdata['date']=np.vectorize(mkdate)(data.view(view_desc)['date'])
    # print(mc.report_memory())

    return newdata  

# using_csv('example4096.txt')
# using_genfromtxt('example4096.txt')
"
Python: don't display 'choices' with argparse,"-p PARAMETER, --parameter PARAMETER some option
"
Faster and more consise way to reverse sentences in a string?,"zhangxaochen's example
> python -m timeit <<EOF
t=""One two three. Four five six.""
' '.join(' '.join(sentence.lower().split()[::-1]).capitalize()+'.' for sentence in t.split('.')[:-1])
EOF                                                                  
100000000 loops, best of 3: 0.012 usec per loop
"
Error in RK4 algorithm in Python,"i*uhat_t-0.5*kx**2*uhat=0 
"
Django and reportlab issue for dynamic report,"@check_requirments
def pdf(request) :
    """"""
    Download a PDF
    """"""
    response = HttpResponse(mimetype='application/pdf')
    response['Content-Disposition'] = 'attachment; filename=new.pdf'

    pdf = MyPdf(response)
    pdf.add_first_page()
    pdf.add_second_page()
    pdf.add_disclosures()
    pdf.build()

    return response
"
Bash equivalent to Python's string literal for utf string conversion,"$ /usr/bin/printf ""\u0410\u043b\u0438\u0441\u0410""
АлисА
"
wxpython button event running before click,"uploadButton.Bind(wx.EVT_BUTTON,self.printIt)
"
How to loop n items at a time but not stepping only 1 each time? python,"from itertools import takewhile
res = list(takewhile(lambda L: None not in L, izip_longest(*iters)))
# [(1, 2, 3), (2, 3, 4), (3, 4, 5), (4, 5, 6)]
"
Python - argmin / argmax for member function,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
""""""argmin example""""""


class People(object):
    """"""People class""""""
    ret_ages = {""Half"": 60, ""AlmostFull"": 65, ""Full"": 71}  # years

    def __init__(self, name, age, ret_mode):
        super(People, self).__init__()

        if ret_mode not in self.ret_ages.keys():
            raise KeyError(ret_mode + "" not in "" + str(self.ret_ages.keys()))

        self.name = name
        self.age = age
        self.ret_mode = ret_mode

    def get_remaining_years(self):
        """"""
                Return how many years People have still to work before earning
                <rate> retirement.
                <rate> could be ""Half"", ""Middle"" or ""Full"".
        """"""
        try:
            return self.ret_ages[self.ret_mode] - self.age
        except KeyError:
            raise KeyError(""rate has to be in "" + str(self.ret_ages.keys()))


def main():
    """"""Main function""""""
    people_list = [
        People(""Juliette"", 35, ""Full""),
        People(""Coralie"", 26, ""Half""),
        People(""Laura"", 27, ""AlmostFull"")
    ]

    # Debugging print
    for people in people_list:
        print people.name, ""has still to work"",\
            people.get_remaining_years(), ""years.""
    print
    # End of debugging print

    people_closer_to_ret = min(people_list,
                               key=lambda people: people.get_remaining_years())

    print people_closer_to_ret.name, ""will be retired soon !""


if __name__ == '__main__':
    main()
"
How to replace only the first n elements in a numpy array that are larger than a certain value?,"In [1]: myA = array([ 7,  4,  5,  8,  3, 10])

In [2]: myA[(myA > 5).nonzero()[0][:2]] = 0

In [3]: myA
Out[3]: array([ 0,  4,  5,  0,  3, 10])
"
Pandas: Generate a histogram/pivot against timeseries data,"df['month'] = ['{}-{}'.format(y, m) for y, m in zip(df.index.year, df.index.month)]

pivot = pd.pivot_table(df, values='B', index='month', columns='A', aggfunc='count')
#A        A   B   C   D
#month
#2011-1  64  58  67  59
#2011-2  62  52  47  63
#2011-3  70  58  59  61
#2011-4  52  63  64  61
#2011-5  16  19  15  14
"
Resizing an image in PIL,"image.thumbnail(size_as_tuple, Image.ANTIALIAS)
"
Python counter key value,"words.most_common(20)
"
Python - passing parameters in a command line app,"from cmd import Cmd


class MyInterpreter(Cmd):

    prompt = '> '

    def do_prompt(self, line):
        ""Change the interactive prompt""
        self.prompt = line + ': '

    def do_EOF(self, line):
        return True

    def do_foo(self, line):
        print('Running foo {l}'.format(l=line))

    def do_bar(self, line):
        print('Running bar {l}'.format(l=line))

if __name__ == '__main__':
    MyInterpreter().cmdloop()
"
Sum float values at each index point in nested lists,"list(zip(map(sum, zip(*values)), fruits))
"
Python pandas: check if any value is NaN in DataFrame,"df.isnull().values.any()
"
Simple python regex groups can't parse date,"date = re.compile(r""\d{1,2}([/.-])\d{1,2}\1\d{2}"")
"
using cython to generate a unix timestamp,"from libc.time cimport tm, mktime

cdef tm time_tuple = {
    'tm_sec': second,
    'tm_min': minute,
    'tm_hour': hour,
    'tm_mday': day,
    'tm_mon': month - 1,
    'tm_year': year - 1900,
    'tm_wday': day_of_week,
    'tm_yday': day_in_year,
    'tm_isdst': dst,
    'tm_zone': NULL,
    'tm_gmtoff': 0,
}
unix_time = mktime(&time_tuple)
"
How to run python in different directory?,"#!/usr/bin/env python
"
Pandas dataframe get first row of each group,">>> df.groupby('id').first().reset_index()
   id   value
0   1   first
1   2   first
2   3   first
3   4  second
4   5   first
5   6   first
6   7  fourth
"
Django extras() - Logic/algorithm,"post = Post.objects.get(pk=1)
output = ( post.likes.all().count() + post.comments.all().count() ) / ( now() - post.created )
"
Lists in text file,"from collections import defaultdict
import re

myarch = 'C:/code/test5.txt'
mydict = defaultdict(int)

with open(myarch) as f:
    for line in f:
        for key in re.findall(""\'(\S*)\'"", line):
            mydict[key] +=1

out = [""['%s'], %s"" % (key, value) for key, value in mydict.iteritems() if value > 1]

#save to a file
with open('C:/code/fileout.txt', 'w') as fo:
    fo.write('\n'.join(out))
"
How to find out if a class exists on an OrientDB using PyOrient?,"Connecting to the server...
OK - sessionID:  74 

Class MyClass already exists into the DB
"
Is there a way to shallow copy an existing file-object?,"for x in fh1, fh2, fh3:
    x.seek(fh.tell())
"
Python / shapely: Calculate Polygon area in planar units (e.g. square-meters),"from shapely.ops import transform
projected_geometry = transform(m,geometry_object)
"
Freezing Function Arguments,"theupdatedvalue
"
Python: Using Multiprocess to switch functions,"ben@nixbox:~$ python3 multithread.py 
enter to flip it!
val is 13, now counting down
val is 4, now counting up
val is 8, now counting down
hit zero, shutting down.
[5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 12, 12, 12, 12, 11, 11, 11, 11, 10, 10, 10, 10, 9, 9, 9, 9, 8, 8, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 5, 5, 5, 5, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 5, 5, 5, 5, 4, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1]
"
python list tree indexing,"{""Name5"": {""ItemList"": {""Item33"": 14, ""Item2"": 13, ""Item1"": 12}}, 
 ""Name4"": {""ItemList"": {""Item33"": 11, ""Item2"": 10, ""Item1"": 9}}, 
 ""Name3"": {""ItemList"": {""Item33"": 8, ""Item2"": 7, ""Item1"": 6}}, 
 ""Name2"": {""ItemList"": {""Item33"": 5, ""Item2"": 4, ""Item1"": 3}}, 
 ""Name1"": {""ItemList"": {""Item33"": 2, ""Item2"": 1, ""Item1"": 0}}}
"
python - combining argsort with masking to get nearest values in moving window,"sorted_dist_idcs = dist.argsort(kind='mergesort', axis=None)
"
Python code reflection and modification,"def x (y ):
    b =2 
    if y ==b :
        bar (y )
"
"Read file line by line, but in reverse (last line first, then next to last, etc.)","for line in self.reversed_lines(fh):
    do_something_with_the_line(line)
"
How to enable basic access authentication in django,"class AuthenticationMiddleware(object):
def __init__(self, app, username, password):
    self.app = app
    self.username = username
    self.password = password
def __unauthorized(self, start_response):
    start_response('401 Unauthorized', [
        ('Content-type', 'text/plain'),
        ('WWW-Authenticate', 'Basic realm=""restricted""')
    ])
    return ['You are unauthorized and forbidden to view this resource.']
def __call__(self, environ, start_response):
    authorization = environ.get('HTTP_AUTHORIZATION', None)
    if not authorization:
        return self.__unauthorized(start_response)

    (method, authentication) = authorization.split(' ', 1)
    if 'basic' != method.lower():
        return self.__unauthorized(start_response)

    request_username, request_password = authentication.strip().decode('base64').split(':', 1)
    if self.username == request_username and self.password == request_password:
        return self.app(environ, start_response)

    return self.__unauthorized(start_response)
"
Using Django Count() with conditional lookup types,"Exam.objects.aggregate(average=Avg(""score""), total=Count(""submitted""))  
"
How to get the Reducer to emit only duplicates,"if last_key and last_key != key:
    sys.stdout.write(""%s\t%s\n"" % (last_key,tot_cnt))
"
What is the most efficient method to assign an X and Y header for a list of the following nature?,"splitlist = [map(float, prices.split(',')) for prices in yourlist]
"
What does (ctypes.c_int * len(x))(*x) do?,">>> from ctypes import *
>>> TenIntegers = c_int * 10
>>> ii = TenIntegers(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
>>> print ii
<c_long_Array_10 object at 0x...>
>>> for i in ii: print i,
...
1 2 3 4 5 6 7 8 9 10
>>>
"
How to glob for iterable element,"myiter['*']['*.txt']['name'] = 'Woot'
"
"Python/Regex - Match .#,#. in String",">>> re.findall(r'(?<=\.)\d+,\d+(?=\.)', 'Test7.5,6.7,8.test')
['5,6', '7,8']
"
beautifulsoup - how to find tags starting with certain attribute?,"h = '''
<a class=""banana"" href=""http://example.com"">link1</a>
<a href=""http://example2.com"" class=""banana""><img ... /></a>
<a class=""banana"">link2</a>
<a href=""http://google.com"">link3</a>
'''

from bs4 import BeautifulSoup
soup = BeautifulSoup(h)
print(soup.select('a[href]'))
"
How does CPython match variables to values?,">>> def foo():
...   bar = 123
...   baz = 'Mike!'
...   print locals()
...
>>> foo()
{'bar': 123, 'baz': 'Mike!'}
"
Adding Log Statements To Beginning and Ending of All Functions By Shell,"$ cat tst.awk
BEGIN {
    beg = ""\tchar FuncName[] = \""%s()\"";\n\tprintf(\""%%s begins\\n\"", FuncName);\n""
    end = ""\n\tprintf(\""%%s ends\\n\"", FuncName);""
}
match($0,/^\s*\w+\s+(\w+::\w+)[(][^)]*[)]/,arr) { funcName  = arr[1] }
/{/ && (++braceCnt == 1) { $0 = $0 ORS sprintf(beg,funcName) }
/}/ && (--braceCnt == 0) { $0 = sprintf(end,funcName) ORS $0 }
{ print }
"
Python-How to create a list of N elements from a given list,"In [6]: %timeit [a_list[i:i+n] for i in xrange(len(a_list)-n+1)]
100000 loops, best of 3: 9.61 us per loop

In [7]: %timeit zip(a_list,a_list[1:],a_list[2:])
100000 loops, best of 3: 5.23 us per loop
"
How to use Django views and template tag simultanosly?,"from django.http import HttpResponse
from netadmin.plugins.templatetags.widgets import render_widget

def ajax_render_data(request, object_id):
    return HttpResponse(render_widget(object_id))
"
use luigi.DateParameter in a run function of a Luigi Orchestrator Task,"$ python tasks/foo.py AggregateArtists --local-scheduler

DEBUG: Checking if AggregateArtists(date=2015-12-03) is complete
INFO: Scheduled AggregateArtists(date=2015-12-03) (PENDING)
INFO: Done scheduling tasks
INFO: Running Worker with 1 processes
DEBUG: Asking scheduler for work...
DEBUG: Pending tasks: 1
INFO: [pid 21831] Worker Worker(salt=179482616, workers=1, host=matagus-laptop, username=matagus, pid=21831) running   AggregateArtists(date=2015-12-03)
INFO: [pid 21831] Worker Worker(salt=179482616, workers=1, host=matagus-laptop, username=matagus, pid=21831) done      AggregateArtists(date=2015-12-03)
DEBUG: 1 running tasks, waiting for next task to finish
DEBUG: Asking scheduler for work...
INFO: Done
INFO: There are no more tasks to run at this time
INFO: Worker Worker(salt=179482616, workers=1, host=matagus-laptop, username=matagus, pid=21831) was stopped. Shutting down Keep-Alive thread
"
How can I find all subclasses of a given class in Python?,"for cls in vars()['Foo'].__subclasses__():
    print(cls.__base__)
# <class '__main__.Foo'>
# <class '__main__.Foo'>
"
how to use user authentication in django,"from django.shortcuts import render
from django.http import HttpResponse
from django.contrib.auth import authenticate, get_backends

def login(request):
    form = YourLoginForm(request.POST or None)

    if form.method == 'POST':
       if form.is_valid():
           user = authenticate(username=form.cleaned_data['username'], password=form.cleaned_data['password'])

           if user:
               # redirect user to somewhere

    return render(request, 'login/login.html')
"
Python - order columns and compare rows in csv,">>> from collections import Counter
>>> reader = csv.reader(sample)
>>> counts = Counter((r[0], r[1], r[2]) for r in reader)
>>> writer = csv.writer(sys.stdout)
>>> for (sender, receiver, id), count in counts.most_common():
...     writer.writerow([sender, receiver, id, count])
... 
Sender A,Receiver G,43,2
Sender A,Receiver G,1367,1
Sender A,Receiver G,27,1
Sender N,Receiver Z,43,1
Sender H,Receiver R,111,1
Sender H,Receiver R,43,1
Sender R,Receiver P,43,1
"
search and find between data frames,"       date1      date2  dummy
0 2015-10-01 2015-09-02      1
1 2015-10-01 2015-09-02      1
2 2015-10-03 2015-09-02      0
3 2015-10-04 2015-09-05      0
4 2015-10-05 2015-11-05      0
5 2015-10-05 2015-11-05      0
6 2015-10-05 2015-11-05      0
7 2015-10-05 2015-11-05      1
8 2015-10-05 2015-11-05      1
"
"For element in list of tuples, return other element in tuple",">>> connection([('a','b'),('c','d'),('e','f'),('c','a')], 'a')
'bc'
"
How to start a query from a static website?,"import requests
from lxml import etree

URL = 'http://corp.sec.state.ma.us/CorpWeb/CorpSearch/CorpSearch.aspx'

def get_fields():
    res = requests.get(URL)
    if res.ok:
        page = etree.HTML(res.text)
        fields = page.xpath('//form[@id=""Form1""]//input')
        return { e.attrib['name']: e.attrib.get('value', '') for e in fields }
"
Python mock return value,"from mock import Mock
class Mock2(Mock):
    def __repr__(self):
        return ""Hello World!""

m = Mock2()

>> m
Hello World!
"
default dict counts for spaces in python,">>> from collections import Counter
>>> Counter(char for char in 'big data examiner' if char != ' ')
Counter({'a': 3, 'e': 2, 'i': 2, 'b': 1, 'd': 1, 'g': 1, 'm': 1, 'n': 1, 'r': 1, 't': 1, 'x': 1})
"
Removing all but one newline character from text file using python,"lines = """".join([line for line in f if line.strip()])
print(lines)

[atRA]_0    [Cyp26A1_mRNA]_0    
1   0   0
1.999   0   0
2.998   0   0
3.997   0   0
4.996   0   0
"
How to play multiple mp3 files one after the other using pygame?,"pygame.mixer.music.play()
"
How can I plot this data?,"E = [E1, E2, E3, E4]
k = [k1, k2, k3, k4]
"
Using list comprehension to setup a list of unique dictionaries in Python,"import copy
stocklist = {'a': 0, 'b': 0, 'c': 0}
stockmap = [[copy.deepcopy(stocklist) for w in range(WIDTH)] for h in range(HEIGHT)]
"
max() function: how to get the item being iterated and pass to key=func(),">>> lis = [ '1', '2', '3', '4' ]
>>> def func(x):
...     return int(x)
... 
>>> min(lis, key=func) # each value from list is passed to `func`(one at a time)
'1'
"
Generate pairings within World Cup tournament groups,"def all_play_all(teams):
  for team1 in teams:
    for team2 in teams:
      if team1 < team2: # [Note] We don't need to generate indices then index into teamlist, just use direct string comparison
        yield (team1,team2)

>>> [match for match in all_play_all(grpteams)]
[('France', 'Mexico'), ('England', 'France'), ('England', 'Mexico'), ('Colombia', 'France'), ('Colombia', 'England'), ('Colombia', 'Mexico')]
"
How to modify specific field in ndarray matrix,"In [9]: np.all(a - [0, 1, 2] == 0, axis=-1).astype(int)
Out[9]: 
array([[1, 0],
       [0, 0]])
"
extract strings after a certain pattern and store them,"(?<=:)\s*(0x.*?\b)
"
"Django, revover a model with multi foreign key","fav_druds = request.user.favorite_set.values_list('drud', flat=True)
"
Setting default property value in graph_tool,">>> g = gt.Graph()
>>> g.add_vertex(10)
>>> g.new_vertex_property('int').a
PropertyArray([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=int32)
"
Python list comprehension,"import operator

def f(probabilities):
    return ireduce(operator.add, 0, probabilities)

print(list(f([0.2, 0.3,0.1,0.4])))
# [0.2, 0.5, 0.6, 1.0]
"
Integrating a vector field (a numpy array) using scipy.integrate,"import numpy as np
import matplotlib.pyplot as plt
import scipy.interpolate as interp
import scipy.integrate as integrate

#dummy input from the streamplot demo
y, x = np.mgrid[-3:3:100j, -3:3:100j]
vx = -1 - x**2 + y
vy = 1 + x - y**2

#dfun = lambda x,y: [interp.griddata((x,y),vx,np.array([[x,y]])), interp.griddata((x,y),vy,np.array([[x,y]]))]
dfunx = interp.interp2d(x[:],y[:],vx[:])
dfuny = interp.interp2d(x[:],y[:],vy[:])
dfun = lambda xy,t: [dfunx(xy[0],xy[1])[0], dfuny(xy[0],xy[1])[0]]

p0 = (0.5,0.5)
dt = 0.01
t0 = 0
t1 = 1
t = np.arange(t0,t1+dt,dt)

streamline=integrate.odeint(dfun,p0,t)

#plot it
plt.figure()
plt.plot(streamline[:,0],streamline[:,1])
plt.axis('equal')
mymask = (streamline[:,0].min()*0.9<=x) & (x<=streamline[:,0].max()*1.1) & (streamline[:,1].min()*0.9<=y) & (y<=streamline[:,1].max()*1.1)
plt.quiver(x[mymask],y[mymask],vx[mymask],vy[mymask])
plt.show()
"
Query HDF5 in Pandas,"In [83]: pd.read_hdf('test.h5','df',where='date>start_date & date<end_date')
Out[83]: 
                  id2         w
id    date                     
10000 2001-01-02  972 -0.146107
      2001-01-03  954  1.420412
      2001-01-04  567  1.077633
      2001-01-05   87 -0.042838
      2001-01-06   79 -1.791228
      2001-01-07  744  1.110478
      2001-01-08  237 -0.846086
      2001-01-09  998 -0.696369
      2001-01-10  266 -0.595555
      2001-01-11  206 -0.294633
...               ...       ...
10999 2001-02-19  616 -0.745068
      2001-02-20  577 -1.474748
      2001-02-21  990 -1.276891
      2001-02-22  939 -1.369558
      2001-02-23  621 -0.214365
      2001-02-24  396 -0.142100
      2001-02-25  492 -0.204930
      2001-02-26  478  1.839291
      2001-02-27  688  0.291504
      2001-02-28  356 -1.987554

[58000 rows x 2 columns]
"
Python - Multiple choice markup parsing,">>> t = 'Would you like {to get|having|+to have} responses to your questions    sent {up to|+to|on} you via email?'
>>> pprint.pprint(extract_choices(t))
... ('Would you like ___ responses to your questions sent ___ you via email?',
... [{'having': False, 'to get': False, 'to have': True},
...  {'on': False, 'to': True, 'up to': False}])
"
Is it possible to simulate the unavailability of modules in Python tests?,"resource exists
resource does not exist
resource exists
"
"Apply function for objects from ""yield from"" in python","def some_func():
    yield from map(other_func, re.finditer(regex, string))
"
Save current html state to file via jQuery $.ajax POST to Flask view,"$('#save').click(function() {
    myhtml = $('html').html();
    $.ajax({
        type: ""POST"",
        url: ""http://127.0.0.1:5000/parse_data"",
        data: {html:myhtml} // made into a hash for retrieval
    });
});
"
why is python script failing to download webpages through a proxy,"sdata = ""GET http://google.co.ug/ HTTP/1.1\r\n""
sdata += ""Host: google.co.ug\r\n""
sdata += ""User-Agent: Mozilla/5.0 (Windows NT 6.1; rv:6.0) Gecko/20100101 Firefox/6.0\r\n""
sdata += ""Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n""
sdata += ""Accept-Language: en-us,en;q=0.5\r\n""
sdata += ""Accept-Encoding: gzip, deflate\r\n""
sdata += ""Proxy-Connection: keep-alive\r\n""
sdata += ""\r\n""
"
python finding mac os build number,"import os
print(os.popen(""sw_vers -buildVersion"").read().strip())
"
"How to sort a python list bidirectionally, by numbers in descending order and by alphabets in ascending order?",">>> lot = [('hello', 25), ('hell', 4), ('bell', 4)]
>>> lot.sort(key=lambda r: r[0])
>>> lot.sort(key=lambda r: r[1], reverse=True)
>>> lot
[('hello', 25), ('bell', 4), ('hell', 4)]
"
how to get the class type in lua / translation from python,"type('Hello world')                    == 'string'
type(3.14)                             == 'number'
type(true)                             == 'boolean'
type(nil)                              == 'nil'
type(print)                            == 'function'
type(coroutine.create(function() end)) == 'thread'
type({})                               == 'table'
type(torch.Tensor())                   == 'userdata'
"
convert a string that is utf-8 code to real unicode string,">>> s = ""\u8fea\u514b""
>>> type(s)
<type 'str'>
>>> s.decode('unicode-escape')
u'\u8fea\u514b'
# OR
>>> new_s = unicode(s, 'unicode-escape')
>>> type(new_s)
<type 'unicode'>
>>> new_s
u'\u8fea\u514b'
"
Iterating over a list while incrementing another variable at the same time,"answer = {}
for i,char in enumerate(ascii_lowercase):
    answer[char] = i+1
"
How to get column and values dictionary in SQLAlchemy model?,"def get_model_dict(model):
    return dict((column.name, getattr(model, column.name)) 
                for column in model.__table__.columns)
"
How can I use python to remove xml node,"from lxml import etree

parser = etree.XMLParser(remove_comments=False)
tree = etree.parse(""input.xml"", parser=parser)
root = tree.getroot()

for c in root.findall("".//string[@name='name']""):
    root.remove(c)

tree.write(""output.xml"")
"
pytest (py.test) very slow startup in cygwin,"$ diff -u /usr/lib/python2.6/genericpath.py genericpath.py
--- /usr/lib/python2.6/genericpath.py   2012-06-09 08:33:12.000000000 -0700
+++ genericpath.py      2015-06-11 11:46:33.674285900 -0700
@@ -9,14 +9,29 @@
 __all__ = ['commonprefix', 'exists', 'getatime', 'getctime', 'getmtime',
            'getsize', 'isdir', 'isfile']

+myshow = False
+import time as mytime
+mybasetime = mytime.time()
+def myshowtime():
+    currenttime = mytime.time()
+    tmdiff = currenttime - mybasetime
+    global mybasetime
+    mybasetime = currenttime
+    return tmdiff

 # Does a path exist?
 # This is false for dangling symbolic links on systems that support them.
 def exists(path):
     """"""Test whether a path exists.  Returns False for broken symbolic links""""""
+    pretime = myshowtime()
+    if path.startswith(r'//'):
+        if myshow: print ""\n  genericpath exists  %8.3f %8.3f False "" % (pretime, myshowtime()), "" "", path, ""\n""
+        return False
     try:
         st = os.stat(path)
+        if myshow: print ""\n  genericpath exists  %8.3f %8.3f True  "" % (pretime, myshowtime()), "" "", path, ""\n""
     except os.error:
+        if myshow: print ""\n  genericpath exists  %8.3f %8.3f False "" % (pretime, myshowtime()), "" "", path, ""\n""
         return False
     return True

@@ -25,9 +40,15 @@
 # for the same path ono systems that support symlinks
 def isfile(path):
     """"""Test whether a path is a regular file""""""
+    pretime = myshowtime()
+    if path.startswith(r'//'):
+        if myshow: print ""\n  genericpath isfile  %8.3f %8.3f False "" % (pretime, myshowtime()), "" "", path, ""\n""
+        return False
     try:
         st = os.stat(path)
+        if myshow: print ""\n  genericpath isfile  %8.3f %8.3f True  "" % (pretime, myshowtime()), "" "", path, ""\n""
     except os.error:
+        if myshow: print ""\n  genericpath isfile  %8.3f %8.3f False "" % (pretime, myshowtime()), "" "", path, ""\n""
         return False
     return stat.S_ISREG(st.st_mode)
"
Python List as variable name,"from collections import namedtuple

variables = {}
Fruit = namedtuple(""Fruit"", [""name"", ""colour"", ""shape""])
for args in Applist:
    fruit = Fruit(*args)
    variables[fruit.name] = fruit

print ""Apple shape: "" + variables[""Apple""].shape
"
How to read a file (or stdin) line by line in Python not waiting for reading entire file,"with open(""myfile.txt"", ""r"") as myfile:
    for line in myfile:
        # do something with the current line
"
How to compare two unequal lists and append matching elements value back to the first List,"from collections import Counter

c = Counter(List2)

from copy import deepcopy

# iterate over a copy of List1
for ind, ele in enumerate(deepcopy(List1)):
    # iterate over the sub elements
    for sub_ele in ele:
        # keep original object and add objects * frequency new objects
        List1[ind].extend([sub_ele] * c[sub_ele])

print(List1)
"
Python:How can I get screenshot data in PIL.ImageGrab?,"mem_file = cStringIO.StringIO()
screen.save(mem_file, 'jpeg')
data = mem_file.getvalue()
"
Split string by hyphen,"s = ""18'-6\""""

a, b = s.split(""-"")
print(a[:-1], b[:-1])
18 6
"
Is there a way to create argument in python's argparse that returns true in case no values given,"if args.resize is True:
    for object in my_objects:
        object.do_resize()
elif args.resize:
    my_objects[args.resize].do_resize()
"
Passing arguments to rolling_apply,"In [3]: df = pd.DataFrame([[1,2,3],[4,5,6]],columns = ['A','B','C'])

In [8]: def func(i,j,s):
   ...:     print(i,j,s)
   ...:     print('next')
   ...:     return i
   ...:

In [9]: pd.rolling_apply(df,1,func,args=(1,2))
[ 1.] 1 2
next
[ 4.] 1 2
next
[ 2.] 1 2
next
[ 5.] 1 2
next
[ 3.] 1 2
next
[ 6.] 1 2
next
"
Anyone tried Cluster automation with WLST?,"edit()
startEdit()
"
Directly use Intel mkl library on Scipy sparse matrix to calculate A dot A.T with less memory,"    indptr = np.empty(major_axis + 1, dtype=idx_dtype)

    fn = getattr(_sparsetools, self.format + '_matmat_pass1')
    fn(M, N,
       np.asarray(self.indptr, dtype=idx_dtype),
       np.asarray(self.indices, dtype=idx_dtype),
       np.asarray(other.indptr, dtype=idx_dtype),
       np.asarray(other.indices, dtype=idx_dtype),
       indptr)

    nnz = indptr[-1]
"
Download file with Kivy app without locking event loop,"def unzip_content(self, req, result):
    threading.Thread(target=self.unzip_thread).start()

def unzip_thread(self):
    # ... (same as unzip_content method in question)
"
"finding non zero entries in 3D matrix using only maps, lambda and reduce","from itertools import product

d3 = [[[0 for col in range(3)]for row in range(3)] for x in range(3)]

d3[0][2][2] = 1

for i, j, k in product(xrange(3), xrange(3), xrange(3)):
    if(d3[i][j][k]): print ""%s %s %s = %s"" % (i, j, k, d3[i][j][k])
"
How to use SHGetFileInfo with SHGFI_PIDL in python,"if __name__ == '__main__':
    import os    
    path = os.path.expanduser(r'~\Desktop\desktop.ini')
    pidl = _shell.SHParseDisplayName(path, 0)[0]
    assert isinstance(pidl, list)

    flags = (shellcon.SHGFI_PIDL |
             shellcon.SHGFI_ICON |
             shellcon.SHGFI_DISPLAYNAME |
             shellcon.SHGFI_TYPENAME |
             shellcon.SHGFI_ATTRIBUTES |
             shellcon.SHGFI_SYSICONINDEX)

    hImageList, finfo = SHGetFileInfo(pidl, 0, flags)

    print('hImageList:', hImageList)
    for name, typ in finfo._fields_:
        print(name, ': ', ascii(getattr(finfo, name)), sep='')

    if finfo.hIcon:
        _user32.DestroyIcon(finfo.hIcon)
"
Search for IDs from pool of txt files,"while IFS= read -r i; do
  for f in file*.table; do
    grep ""^$i "" ""$f"" >> ""${i}.txt""
  done
done < query.txt
"
Converting a String to List in Python,">>> [int(x) for x in ""0,1,2"".split("","")]
[0, 1, 2]
"
Python change function input name internaly,"def do_something_with_globals(**kwargs):
    for k,v in kwargs.items():
        globals()[k+'_in'] = v
"
Use slice notation with collections.deque,"import itertools
output = list(itertools.islice(q, 3, 7))
"
"python ""with"" command and csv reader","f_outputfile = open(outputpath)
try:
    outputfile = csv.writer(f_outputfile)
finally:
    f_outputfile.close() 

OTHER CODE HERE
"
How to save Qimage with 'jpeg' format in PyQt?,"from PyQt5 import QtCore, QtGui, QtWidgets
import sys
app = QtWidgets.QApplication(sys.argv)
print(QtGui.QImageWriter.supportedImageFormats())
"
python script messes up %time% in batchfile,"if not exist 123 (
call echo [%%TIME%%] ping2
ping 8.8.8.8 >nul
call echo [%%TIME%%] ping2 done
)
"
How Do I Select From Two Different Tables in Django?,"qs_sorted = sorted(qs, key=lambda x: x.time_created)
"
Django form names,"from app.forms import my_form1, my_form2, my_form3 
"
SQL: Can WHERE Statement filter out specific groups for GROUP BY Statement,"UPDATE MyTable
SET Session_ID = CAST(Session_ID AS INTEGER);
"
Custom Sorting Python Dictionary,">>> keyorder = {k:v for v,k in enumerate(['ZT21', '10', 'WX21', 'UM', '5', '2'])}
>>> OrderedDict(sorted(d.items(), key=lambda i:keyorder.get(i[0])))
OrderedDict([('ZT21', 14), ('10', -10), ('WX21', 12), ('UM', -25), ('5', -3), ('2', 15)])
"
Pythonic way of iterating over 3D array,"import itertools, numpy

cube = numpy.array(list(itertools.product((0,1), (0,1), (0,1))))

x_dim = y_dim = z_dim = 10

for offset in itertools.product(*map(xrange, (x_dim, y_dim, z_dim))):
    work_with_cube(cube+offset)
"
numpy: extending arrays along a new axis?,"import scipy
X = scipy.rand(9,4)
Y = X.reshape(9,4,1).repeat(4096,2)
"
"spark, small issue about reduceByKey","from __future__ import division  # If for some reason you use Python 2.x
import re
from collections import Counter

def count_words(doc, pattern=re.compile(""\w+"")):
    """"""Given a tuple (doc_id, text)
    return a tuple (doc_id, tokens_count

    >>> count_words((1, ""Foo bar bar.""))
    (1, Counter({'Foo': 1, 'bar': 2}))
    """"""
    (doc_id, text) = doc
    return (doc_id, Counter(pattern.findall(text))) 

def compute_tf(cnt):
    """"""Convert term counter to term frequency

    >>> compute_tf(Counter({'Foo': 1, 'bar': 2}))
    {'Foo': 0.3333333333333333, 'bar': 0.6666666666666666}
    """"""
    n = sum(cnt.values())
    return {k: v / n for (k, v) in cnt.items()}
"
Break pandas DataFrame column into multiple pieces and combine with other DataFrame,"In [43]: sum_freq_onegrams
Out[45]: 
0    60
1    25
2    15
Name: multigram, dtype: int64
"
Selenium Webdriver is finding hidden values too,"<input id=""SettingsFrmId:settings_addProv_button"" type=""submit"" name=""SettingsFrmId:settings_addProv_button"" class=""inputButton"" value=""Add Prov"" title=""Add Prov"" title=""Add Prov"" />
"
Python Program on Perfect Squares,"import math
def perfect_sq(n):
    return n == int(math.sqrt(n)) * int(math.sqrt(n))
"
create instance of a class in the same class's definition in python,"class MyClass:
   def __init__(self, create = True):
      if create:
         self.child = MyClass(False)

mc = MyClass()
"
Python splitting text file keeping newlines,">>> s=""""""War and Peace
... 
... by Leo Tolstoy/Tolstoi""""""
>>> 
>>> re.findall(r'\S+|\n',s)
['War', 'and', 'Peace', '\n', '\n', 'by', 'Leo', 'Tolstoy/Tolstoi']
"
Inserting a file's text into another file at a specific line,"# insert contents of ""/test1.txt"" into ""/test2.txt"" at line 20
with open(""/test1.txt"", ""r"") as f1:
    t1 = f1.readlines()
with open(""/test2.txt"", ""r"") as f2:
    t2 = f2.readlines()
t2.insert(20, t1)
with open(""/test2.txt"", ""w"") as f2:
    f2.writelines(t2)
"
Manipulating indices to 2d numpy array,"a[tuple(k)]
"
filling a n*n matrix with n elements,"arr=[[0 for x in xrange(n)] for x in xrange(n)]
"
Is there a way to sort a list in python until the first sorted k elements are found?,"In [6]: %%timeit
   ...: heapq.nsmallest(75, seq)
   ...: 
100 loops, best of 3: 3.82 ms per loop
"
Python iterating through pandas more efficiently without for loop,"In [43]: %timeit f1(bigdata)
10 loops, best of 3: 21.8 ms per loop
"
Converting Twitter time zone and performing searches,"end_timestamp = start_timestamp + datetime.timedelta(7)
"
"Python : INPUT a microtime float, RESULT a formatted datetime",">>> start_time_format = '%Y-%m-%d %H:%M:%S'
>>> datetime.datetime.fromtimestamp(mt).strftime(start_time_format)
'2012-07-22 23:43:36'
"
python sys.argv differentiate int and string,"command = sys.argv[1]
arguments = map(ast.literal_eval, command.split())
print arguments
"
"How to store formulas, instead of values, in pandas DataFrame","In [19]: df = DataFrame(randn(10,2),columns=list('ab'))

In [20]: df
Out[20]: 
          a         b
0  0.958465  0.679193
1 -0.769077  0.497436
2  0.598059  0.457555
3  0.290926 -1.617927
4 -0.248910 -0.947835
5 -1.352096 -0.568631
6  0.009125  0.711511
7 -0.993082 -1.440405
8 -0.593704  0.352468
9  0.523332 -1.544849
"
Sum of elements stored inside a tuple,">>> [sum(tup) for tup in li]
[3, 4, 5]
"
How to use bisect to search in a compute-when-need array,"import collections
class LazySequence(collections.Sequence):
    def __init__(self, f, n):
        """"""Construct a lazy sequence representing map(f, range(n))""""""
        self.f = f
        self.n = n
    def __len__(self):
        return self.n
    def __getitem__(self, i):
        if not (0 <= i < self.n):
            raise IndexError
        return self.f(i)
"
Fastest way to remove a lot of keys from a dictionary,"N: 10**7; mod: 9999999; garbage collection: False
2 times method 1 (dict comp): 1.213 s
2 times method 2 (key deletion within for loop over d.items()): 3.168 s
2 times method 3 (key deletion after list comp): 2.141 s
"
Doubling the matrix in numpy,"b = np.zeros([x * 2 for x in a.shape], dtype=a.dtype))
"
Beginner not sure how to join lists while scraping,"movielist = ' ' + '\n '.join(movie)
"
"python tkinter calender, placing the numbers","self.labels[i][j].config(text='foo')
"
More Efficient way to check values of neighboring rows in pandas dataframe for stock backtesting,"data2['buy'] = pd.rolling_sum( data2.AboveUpper, window=X ) >= X
"
How to Search data from a list of Key-Value pair that it is in list or not,"from collections import defaultdict

processed = defaultdict(list)

for char, value in data:
    processed[char].append(value)
"
Calculated column in pandas dataframe,"data_frame['time-it-took'] = data_frame['t1'] - data_frame['t0']
"
Issue creating map shading in Matplotlib imshow by setting opacity to data gradient,"from matplotlib.colors import rgb_to_hsv, hsv_to_rgb

hsv = rgb_to_hsv(img_array[:, :, :3])
hsv[:, :, 2] = tdx_n
rgb = hsv_to_rgb(hsv)
plt.imshow(rgb[4:-3,4:-3])
plt.show()
"
"In sqlalchemy, how do I get a query that matches all rows in a table such that no row in another table links to it?","session.query(Event).filter(or_(
    and_(
        Event.regular == True,
        ~Event.exceptions.any(and_(
            EventException.year == current_year,
            EventException.occurs == False,
        )),
    ),
    and_(
        Event.regular == False,
        Event.exceptions.any(and_(
            EventException.year == current_year,
            EventException.occurs == True,
        )),
    ),
))
"
Set values in matrix to 1 where index matches value,">>> np.arange(len(x))
array([0, 1, 2])
>>> np.arange(len(x))[:,None]
array([[0],
       [1],
       [2]])
"
Counter with filter or subtract or similar,">>> c = Counter([ 1,2,3,4,5,6,7,6,5,4,3,2,3,4,5,6,5,4,3,4,5,4 ])
>>> c
Counter({4: 6, 5: 5, 3: 4, 6: 3, 2: 2, 1: 1, 7: 1})
>>> c - Counter({2:sys.maxint, 3:sys.maxint})
Counter({4: 6, 5: 5, 6: 3, 1: 1, 7: 1})
"
Problems with IMAP in Gmail with Python,">>> mail.create(""sarnoldwashere"")
('OK', ['Success'])
>>> mail.list()
('OK', ['(\\HasNoChildren) ""/"" ""INBOX""',
'(\\HasNoChildren) ""/"" ""Personal""',
'(\\HasNoChildren) ""/"" ""Receipts""',
'(\\HasNoChildren) ""/"" ""Travel""',
'(\\HasNoChildren) ""/"" ""Work""',
'(\\Noselect \\HasChildren) ""/"" ""[Gmail]""',
'(\\HasNoChildren) ""/"" ""[Gmail]/All Mail""',
'(\\HasNoChildren) ""/"" ""[Gmail]/Drafts""',
'(\\HasNoChildren) ""/"" ""[Gmail]/Sent Mail""',
'(\\HasNoChildren) ""/"" ""[Gmail]/Spam""',
'(\\HasNoChildren) ""/"" ""[Gmail]/Starred""',
'(\\HasChildren \\HasNoChildren) ""/"" ""[Gmail]/Trash""',
'(\\HasNoChildren) ""/"" ""sarnoldwashere""'])
>>> mail.logout()
('BYE', ['LOGOUT Requested'])
"
How to use django-contact-form (third-party app)?,"{{ name }}
{{ email }}
{{ body }} 
"
what's the fastest way of converting a string time stamp into epoch time with python?,">>> import timeit
>>> def parse_datetime():
...     date1, time1 = '2012-09-08', '12:23:33'
...     date2, time2 = '2012-09-08', '12:23:33'
...     dt1 = datetime.datetime.strptime(date1 + ' ' + time1, ""%Y-%m-%d %H:%M:%S"")
...     dt2 = datetime.datetime.strptime(date2 + ' ' + time2, ""%Y-%m-%d %H:%M:%S"")
...     (dt1 - dt2).total_seconds()
... 
>>> def parse_time():
...     d1 = time.strptime(date1 + ' ' + time1, ""%Y-%m-%d %H:%M:%S"")
...     d2 = time.strptime(date2 + ' ' + time2, ""%Y-%m-%d %H:%M:%S"")
...     seconds1 = time.mktime(d1)
...     seconds2 = time.mktime(d2)
...     seconds1 - seconds2
... 
>>> timeit.timeit('test()', 'from __main__ import parse_datetime as test', number=10000)
0.6590030193328857
>>> timeit.timeit('test()', 'from __main__ import parse_time as test', number=10000)
0.7742340564727783
"
django add relationships to user model,"class UserFollowing(models.Model):
    user = models.ForeignKey(User, related_name='following')
    following = models.ForeignKey(User, related_name='followed_by')
"
Delete modules to clean namespace?,"import numpy as np

def foo(x):
    """"""Return 2D square array of zeros.""""""
    return np.zeros((x, x))

del np
"
self.attr resets between tests in unittest.TestCase,"object id: 10969360
test A = 0
.object id: 10969424
test B = 0
.
----------------------------------------------------------------------
Ran 2 tests in 0.000s

OK
"
Computing the correlation coefficient between two multi-dimensional arrays,"In [114]: A = np.random.rand(10000,10)

In [115]: B = np.random.rand(10000,10)

In [116]: %timeit corr2_coeff(A,B)
1 loops, best of 3: 1.29 s per loop

In [117]: %timeit generate_correlation_map(A, B)
1 loops, best of 3: 1.83 s per loop
"
Install and make tkinter work on AWS EC2 instance," sudo apt-get install python-tk
"
How to handle unique_ptr's with SWIG,"%module test

%{
#include ""test.hh""
%}

%include ""std_unique_ptr.i""

wrap_unique_ptr(FooUniquePtr, Foobar);

%include ""test.hh""
"
"loading a file, posting that to a textbox","self.hey=wx.TextCtrl(panel,-1,"""",pos=(60,10), size=(100,25))
"
Pandas Merge - How to avoid duplicating columns,"dfNew = merge(df, df2[cols_to_use], left_index=True, right_index=True, how='outer')
"
Finding all roots of a complex polynomial with SymPy,"a - 2483798807340123709959247/13545514719183259347425004828125*b^4
  + 66732206412048596386372283/541820588767330373897000193125*b^3 
  - 3849759933277117021785191063/86691294202772859823520030900*b^2
  + 9245906471290310401430681453/1733825884055457196470400618*b
  - 31414499425567273751868164900/866912942027728598235200309,

b^5 - 189465979625/206648369*b^4 
    + 330827538698125/826593476*b^3
    - 17645868534640625/206648369*b^2 
    + 1724106750659765625/206648369*b
    - 52548859891484375000/206648369
"
Mix two arrays. Simple. Python,">>> np.array(zip(a,b)).flatten()
array([1, 2, 1, 2, 1, 2])
"
How to get all messages in Amazon SQS queue using boto library in Python?,"all_messages=[]
rs=q.get_messages(10)
while len(rs)>0:
    all_messages.extend(rs)
    rs=q.get_messages(10)
"
Unicode in a Django-powered site,"with open(""commentsfordjango.txt"", ""rb"") as f:
    for line in f.read().decode(""utf-8"").splitlines():
        cursor.execute(""INSERT INTO polls_poll (commenttext, pos, neu, neg) VALUES (%s, 0, 0, 0)"", line)
"
Python increase performance of random.sample,"import random
from liblas import file as lasfile
from collections import defaultdict


def world2Pixel_Id(x, y, X_Min, Y_Max, xDist, yDist):
    col = int((x - X_Min) / xDist)
    row = int((Y_Max - y) / yDist)
    return (col, row)

def random_grouped_samples(infile, n, X_Min, Y_Max, xDist, yDist):
    """"""Select up to n points *per group* from infile""""""

    groupcounts = defaultdict(int)
    samples = defaultdict(list)

    for p in lasfile.File(inFile, None, 'r'):
        id = world2Pixel_Id(p.x, p.y, X_Min, Y_Max, xDist, yDist)
        i = groupcounts[id]
        r = random.randint(0, i)

        if r < n:
            if i < n:
                samples[id].insert(r, p)  # add first n items in random order
            else:
                samples[id][r] = p  # at a decreasing rate, replace random items

        groupcounts[id] += 1

    return samples
"
Generating RSS feed under Google App Engine,"<title>{{host}}</title>
<link href=""http://{{host}}"" rel=""self""/>
<id>http://{{host}}/</id>
<updated>2011-09-17T08:14:49.875423Z</updated>
<generator uri=""http://{{host}}/"">{{host}}</generator>

{% for entity in entities %}

<entry>

<title><![CDATA[{{entity.title}}]]></title>
<link href=""http://{{host}}/vi/{{entity.key.id}}""/>
<id>http://{{host}}/vi/{{entity.key.id}}</id>
<updated>{{entity.modified.isoformat}}Z</updated>
<author><name>{{entity.title|escape}}</name></author>
<georss:point>{{entity.geopt.lon|floatformat:2}},{{entity.geopt.lat|floatformat:2}}</georss:point>
<published>{{entity.added}}</published>
<summary type=""xhtml""><div xmlns=""http://www.w3.org/1999/xhtml"">{{entity.text|escape}}</div>
</summary>

</entry>

{% endfor %}

</feed>
"
Splinter browser automation select option,"button = browser.find_by_css(""button.dropdown-menu"")
button[0].click()
"
Python: Lambda function,"In [17]: print(filter(lambda x: len(x) > avg, words))
<filter object at 0x7f3177246710>

In [18]: print(list(filter(lambda x: len(x) > avg, words)))
['hello', 'name', 'lisa']
"
Possible to add numpy arrays to python sets?,"%%time
r = list_of_np_1D[:, None, :] + np_2D[None, :, :]
r = r.reshape(-1, r.shape[-1])

r = r[np.lexsort(r.T)]
idx = np.where(np.all(np.diff(r, axis=0) == 0, axis=1))[0] + 1
res3 = np.delete(r, idx, axis=0)
"
Python str.contains from two or more dictionaries,"df.loc[df.company_name.isin(all_companies), ""instrumentclass""] = ""Equity""
"
"Regex - Replace tags and special characters, saving the text within the tags","\begin{itemize} 
\item Text1 
\end{itemize}
"
using pandas in python to append csv files into one,"import glob
import pandas as pd

all_data = pd.DataFrame() #initializes DF which will hold aggregated csv files

for f in glob.glob(""*.csv""): #for all csv files in pwd
    df = pd.read_csv(f, header=None) #create dataframe for reading current csv
    all_data = all_data.append(df, ignore_index=True) #appends current csv to final DF
print all_data
#       0      1      2
#0  test1  test1  test1
#1  test1  test1  test1
#2  test1  test1  test1
#3  test2  test2  test2
#4  test2  test2  test2
#5  test2  test2  test2

all_data.to_csv(""test/final.csv"", index=None, header=None)
"
Thresholded pixel indices of a NumPy array,"In [105]: image = np.random.randint(0,255,(30,30,3)).astype('uint8')
     ...: %timeit np.argwhere((image > threshold).any(-1))
     ...: %timeit np.argwhere(np.einsum('ijk->ij',image>threshold))
     ...: out1 = np.argwhere((image > threshold).any(-1))
     ...: out2 = np.argwhere(np.einsum('ijk->ij',image>threshold))
     ...: print np.allclose(out1,out2)
     ...: 
10000 loops, best of 3: 79.2 µs per loop
10000 loops, best of 3: 56.5 µs per loop
True

In [106]: image = np.random.randint(0,255,(300,300,3)).astype('uint8')
     ...: %timeit np.argwhere((image > threshold).any(-1))
     ...: %timeit np.argwhere(np.einsum('ijk->ij',image>threshold))
     ...: out1 = np.argwhere((image > threshold).any(-1))
     ...: out2 = np.argwhere(np.einsum('ijk->ij',image>threshold))
     ...: print np.allclose(out1,out2)
     ...: 
100 loops, best of 3: 5.47 ms per loop
100 loops, best of 3: 3.69 ms per loop
True

In [107]: image = np.random.randint(0,255,(3000,3000,3)).astype('uint8')
     ...: %timeit np.argwhere((image > threshold).any(-1))
     ...: %timeit np.argwhere(np.einsum('ijk->ij',image>threshold))
     ...: out1 = np.argwhere((image > threshold).any(-1))
     ...: out2 = np.argwhere(np.einsum('ijk->ij',image>threshold))
     ...: print np.allclose(out1,out2)
     ...: 
1 loops, best of 3: 833 ms per loop
1 loops, best of 3: 640 ms per loop
True
"
Create list with combinations of 3 elements of other list with repetitions,">>> from itertools import product, islice
>>> list_of_aa = [""A"", ""R"", ""N"", ""D"", ""C"", ""Q"", ""E"", ""G"", ""H"", ""I"", ""L"", ""K"", ""M"", ""F"", ""P"", ""S"", ""T"", ""W"", ""Y"", ""V""]
>>> for combo in islice(product(list_of_aa, repeat=3), 5):
...     print(''.join(combo))
...
AAA
AAR
AAN
AAD
AAC
>>> for combo in islice(product(list_of_aa, repeat=3), 1000, 1005):
...     print(''.join(combo))
...
NLA
NLR
NLN
NLD
NLC
>>> for combo in islice(product(list_of_aa, repeat=3), 2000, 2005):
...     print(''.join(combo))
...
QAA
QAR
QAN
QAD
QAC
"
Python combine rows from different files into one data file,"a   b   c   d   e   f
1   2   3   4   5   6
7   8   9   10  11  12
13  14  15  16  17  18
"
"__setitem__ implementation in Python for Point(x,y) class","class Point(object):
    def __init__(self,x=0,y=0):
        self.data=[x, y]

    def __str__(self):
        return ""point(%s,%s)""%(self.x,self.y)

    def __getitem__(self,item):
        return self.data[item]

    def __setitem__(self, idx, value):
        self.data[idx] = value

    @property
    def x(self):
        return self.data[0]

    @property
    def y(self):
        return self.data[1]
"
Strip common indentation from the beginning of each line similar to what pydoc help does with docstrings,"import textwrap

def my_function(s):
    first, *rest = s.splitlines(keepends=True) # the first line is special
    return first + textwrap.dedent(''.join(rest))
"
Sum corresponding elements of multiple python dictionaries,"from collections import Counter
dicts = [{'a':1, 'b':4, 'c':8, 'd':9},
         {'a':2, 'b':3, 'c':2, 'd':7},
         {'a':0, 'b':1, 'c':3, 'd':4}]
c = Counter()
for d in dicts:
    c.update(d)
"
Escaping backslash in Python requests,"'artistName:Axwell /\\\\ Ingrosso'
"
python regex to capture a pattern which appear an unknown number of times,"Out[5]: ['5', '7', '9', '11', '13', '14', '15', '16', '17']
"
working with regex,">>> s = 'extra-root, May 15, 2024, Entry, abcd: efgh, ds:sd'
>>> [i for i in s.split(',') if ':' in i][0]
' abcd: efgh'
>>> next(i for i in s.split(',') if ':' in i)
' abcd: efgh'
"
What's wrong with this nested list comprehension?,">>> [x+'/'+y for y in 'ab' for x in '012']
['0/a', '1/a', '2/a', '0/b', '1/b', '2/b']
    # desire output 0,1,2
    # not output 0,1,2,0,1,2
"
Python data wrangling issues,"In [1]: from pandas import read_csv
In [2]: d = read_csv('data.csv', thousands=',')
"
How to create dictionary of dictionaries from a dataframe using python's pandas,"df.set_index('Question').groupby(level='Question').apply(lambda x: x.set_index('tagID').squeeze().to_dict()).to_dict()
"
python ete2 delete node from tree,"29137 NC_003314
29139 NC_003322
62003 NC_004444
"
Python Nested For Loop Array Comparison - Possibility of Optimization?,"for idx, first_dic in enumerate(set_of_pk_values[:-1]):
    for second_dic in set_of_pk_values[idx+1:]
        if (first_dic['someKey'] == second_dic['someKey']):
            do_stuff()
"
MySQL and SQLAlchemy integer diversion in WHERE clause,"from sqlalchemy import Integer

class DivisibleInteger(Integer):
    class comparator_factory(Integer.Comparator):
        def div(self, other):
            return self.op('div')(other)
"
Numpy elementwise product of 3d array,"np.einsum('ijk,ikl->ijl',A,B)
"
IPython notebook read string from raw text cell,"u'print ""hello world""\nthree = 1+2\nIn[len(In)-1]'
"
GTK - How to style a button in headerbar?,"button.get_style_context().add_class(Gtk.STYLE_CLASS_SUGGESTED_ACTION)
"
Disregarding a line while calculating frequency in python,"print results.most_common(3)
"
Python: Assign variables from array,"repost_pid, repost_permalink, repost_domain, repost_title, repost_submitter = row
"
counting and storing values in a dictionary using python,"def prodInfo():
    from collections import Counter
    prodHolder = {}
    tempdict = {}
    try:
        os.chdir(copyProd)
        for root, dirs, files in os.walk('.'):
                for data in files:
                fullpath = os.path.join(root, data)
                with open(fullpath, 'r') as fp,\
                     open('./stack59.write.csv', 'w') as fw:

                    writer = csv.writer(fw)
                    for info in fp:
                    # [ . . . ]
                    # Yadda yadda yadda
                    print info0 + info1 + info2
                    writer.writerow([info0, info1, info2])
"
How do I get names of subdirectories of a directory purely in python?,"  filter(lambda x: os.path.isdir(""c:\\""+ x), os.listdir(""c:\\""))
"
Using Numpy creates a tcl folder when using py2exe,"  Name                      File
  ----                      ----
m BaseHTTPServer            C:\Python27\lib\BaseHTTPServer.py
m ConfigParser              C:\Python27\lib\ConfigParser.py
m FixTk                     C:\Python27\lib\lib-tk\FixTk.py
m SocketServer              C:\Python27\lib\SocketServer.py
m StringIO                  C:\Python27\lib\StringIO.py
m Tkconstants               C:\Python27\lib\lib-tk\Tkconstants.py
m Tkinter                   C:\Python27\lib\lib-tk\Tkinter.py
m UserDict                  C:\Python27\lib\UserDict.py
m _LWPCookieJar             C:\Python27\lib\_LWPCookieJar.py
...
"
Classify elements of a numpy array using a second array as reference,"In [379]: indexes
Out[379]: array([2, 0, 2, 1, 0, 1, 0, 1, 2, 0, 0, 2, 2, 1, 2])
"
How can I generalize my pandas data grouping to more than 3 dimensions?,"In [25]: df2['group2']
Out[25]: 
            a  b  c
2012-04-16  0  0  0
2012-04-17  1  1  1
2012-04-18  2  2  2
2012-04-19  3  3  3
2012-04-20  4  4  4
2012-04-21  5  5  5
2012-04-22  6  6  6
2012-04-23  7  7  7
2012-04-24  8  8  8
2012-04-25  9  9  9
"
obtaining last value of dataframe column without index,"
In [28]: df.e.iat[-1]
Out[28]: -1.1319705662711321
"
how to get string values using index method in Python,"words = rep.split()   # the default is to split at whitespace
loc = words[-1]
uni = ' '.join(words[:-1])
"
need to Spilt srting twice,"import re
pattern = re.compile('(?P<prefix>.*)RESPOND(?P<middle>.*?)=(?P<postfix>.*)')

msg = 'MFS: *CFSRES INC0020 01/12/14 07:51 RESPOND TEST ONLY, ALARM LEVEL: 1, 123 TESTSTREET TESTTOWN ,MAP: ,TG 100, == TESTING : UNIT HERE'

match = pattern.match(msg)

if match:
    print '[PREFIX]', match.group('prefix')
    print '[MIDDLE]', match.group('middle')
    print '[POSTFIX]', match.group('postfix')
else:
    print 'NO MATCH!!'
"
How to groupby two fields in pandas?,"Date,Time,F1 mean,F1 sum,F2 mean,F2 sum,F3 mean,F3 sum
2016-01-21,8,5.0,5,2.0,2,4.0,4
2016-01-21,9,7.333333333333333,22,5.333333333333333,16,1.6666666666666667,5
2016-01-21,10,5.333333333333333,16,5.0,15,5.0,15
2016-01-21,11,1.0,1,2.0,2,1.0,1
2016-01-21,12,3.0,3,3.0,3,1.0,1
2016-01-22,9,5.0,10,5.5,11,4.0,8
2016-01-22,12,7.0,7,3.0,3,1.0,1 
"
DRY Django querysets,"class MyListManager(models.Manager):
    def select_diff(self):
        return self.get_queryset().extra(...)


class MyList(models.Model):
    objects = MyListManager()
"
Pygame pause key,"self.PAUSED = False

while True:
    for event in pygame.event.get():
        if event.type==KEYDOWN:
            if event.key==K_q:
                self.PAUSED = not self.PAUSED


    if not self.PAUSED:

        x+=movex
        y+=movey
        screen.fill((r,0,0))
        screen.blit(bif,(0,0))
        screen.blit(player,(x,y)) 

        pygame.display.update() 
"
How to flush the input stream in python?,"#!/usr/bin/python

import time
import subprocess
import sys
import msvcrt

alarm1 = int(raw_input(""How many seconds (alarm1)? ""))

while (1):
    time.sleep(alarm1)
    print ""Alarm1""
    sys.stdout.flush()

    # Try to flush the buffer
    while msvcrt.kbhit():
        msvcrt.getch()

    print ""Continue (Y/N)?[Y]""
    doit = msvcrt.getch()
    print ""Input"",doit
    if doit == 'N' or doit=='n':
        print ""Exiting.....""
        break
"
More Pythonic way of adding attributes to class?,"defendant.update(eye_color=""Brown"", hair_color=""Black"", sex=""Male"")
"
more efficient Python scripting in Blender3D,"import bpy

bpy.ops.object.select_all(action='DESELECT')
bpy.ops.mesh.primitive_uv_sphere_add()
sphere = bpy.context.object


for i in range(-1000, 1000, 2):
    ob = sphere.copy()
    ob.location.y = i
    #ob.data = sphere.data.copy() # uncomment this, if you want full copies and no linked duplicates
    bpy.context.scene.objects.link(ob)
bpy.context.scene.update()
"
use subprocess.Popen to run a unix tool that requires multiple input redirects,"from subprocess import *

date = Popen(['date'], stdout=PIPE)
Popen([""wc"", ""-w"", ""/dev/fd/%d"" % date.stdout.fileno()])
"
My loop isn't running,"url = 'https://pr4e.dr-chuck.com/tsugi/mod/python-data/data/known_by_Fikret.html'
result = []

for i in range(4):
    soup = BeautifulSoup(urllib.urlopen(url).read())
    links = soup('a')
    for link in links:
        result.append(link)
    try:
        third_link = links[2]['href']
    except IndexError:  # less than three links
        break
    else:
        url = third_link
        print(url)
"
Creating a lib directory in Google App Engine and adding it to sys.path,"import site
site.addsitedir(""./lib"")
"
Django dynamic model fields,">>> instance = Something.objects.create(
                 name='something',
                 data={'a': '1', 'b': '2'}
           )
>>> instance.data['a']
'1'        
>>> empty = Something.objects.create(name='empty')
>>> empty.data
{}
>>> empty.data['a'] = '1'
>>> empty.save()
>>> Something.objects.get(name='something').data['a']
'1'
"
Python how to loop through an array in numpy at C speed and store some positions,"mask = dst > 0.9*dst.max()
out = np.column_stack((np.argwhere(mask),dst[mask]))
"
Convert pandas json for highstock data format in a angularjs controller,"[[di['date'], di['adj_close']] for di in d]
"
How can I periodically execute a function with asyncio?,"async def main():
    p = Periodic(lambda: print('test'), 1)
    try:
        print('Start')
        await p.start()
        await asyncio.sleep(3.1)

        print('Stop')
        await p.stop()
        await asyncio.sleep(3.1)

        print('Start')
        await p.start()
        await asyncio.sleep(3.1)
    finally:
        await p.stop()  # we should stop task finally


if __name__ == '__main__':
    loop = asyncio.get_event_loop()
    loop.run_until_complete(main())
"
Convert a recursive function into Non recursive in Python,"def AcumulacionCelda(x,y):
    d = {(-1, -1):  4,
         (-1, 0) :  5,
         (-1, 1) :  6,
         (0, -1) :  3,
         (0, 0)  :  'dummy',
         (0, 1)  :  7,
         (1, -1) :  2,
         (1, 0)  :  1,
         (1, 1)  :  8}

    if Acum[x, y] == NoData:
        Acum[x, y] = 1
        for m, n in product(range(-1,2), range(-1,2)):
            if Direcciones[x+m, y+n] == d[m, n]:
                AcumulacionCelda(x+m, y+n)
                Acum[x,y] += Acum[x+m, y+n]
"
Connecting a one to many with three tables?,"Combined Table
- id 
- commonField1
- commonFieldN
- Type (possible choices: Original, Fandom, Dungeon)
"
Write data retrieved from for loop,"L = ['abc','def','ghi']

for e in L:
    with open('outfile.txt', 'a') as outfile:
        print (e, file=outfile)
"
Convert word2vec bin file to text,"cut --complement -d ' ' -f 1 GoogleNews-vectors-negative300.txt > GoogleNews-vectors-negative300_tuples-only.txt
sed 's/ $//' GoogleNews-vectors-negative300_tuples-only.txt
"
SUDS does not parse response as array (only the first entry thereof is returned),"  <xs:sequence>
    <xs:element name=""ZEnvelope"" type=""dfu:EnvelopeType"" minOccurs=""0"" maxOccurs=""unbounded""/>
  </xs:sequence>
"
Counting Syllables In String,"[
    ['DH', 'AH0'],          # The
    ['F', 'ER1', 'S', 'T'], # first
    ['L', 'AY1', 'N'],      # line
    ['L', 'IY1', 'D', 'Z'], # leads
    ['AO1', 'F']            # off
]
"
list of dictionary Sorting in python,"sorted(mylist, key=lambda d: (month_to_index[d['month'][:3]], d['month'][-4:]))
"
Change what the *splat and **splatty-splat operators do to my object,"class MyIterable(object):
    def __iter__(self):
        return iter([1, 2, 3])

class MyMapping(collections.Mapping):
    def __iter__(self):
        return iter('123')
    def __getitem__(self, item):
        return int(item)
    def __len__(self):
        return 3
"
"Django using AJAX with Forms, Views","<table border=""0"" cellpadding=""0"" cellspacing=""0"">
        <tr>{{ form.abc.errors }}</tr>
        <tr>
            <th><label>ABC:</label></th>
            <td><select name=""abc"" id=""id_abc"">
  <option value="""" selected=""selected"">---------</option>
 {% for c in colors %}
<option value=""{{ c.uuid }}"">{{ c.name }}</option>
    {% endfor %}
</select></td>
            <td></td>
        </tr>
    </table>
    <br>
"
django 1.8 using one view in another,"# your_app/views.py
def rock_and_feat(request):
    feats = Feat.objects.order_by('-num')[:1]
    rocks = Rockinfo.objects.order_by('-rank')[:50]
    context = RequestContext(request, {
        'feats': feats, 'rocks': rocks
    })
    return render_to_response('template.html', context)
"
Python OpenCV SVM implementation,"class StatModel(object):
    '''parent class - starting point to add abstraction'''    
    def load(self, fn):
        self.model.load(fn)
    def save(self, fn):
        self.model.save(fn)
"
Where is the default parameter in Python function,">>> def f(a=[]):
...     pass
...
>>> f.func_defaults
([],)
>>> f.func_code.co_varnames
('a',)
>>>
"
Python - using dictionary to count keys and values,"Convert list of tuples with 2 items into dictionary
>>> tpllst = [('A', 'C'), ('D', 'A')]
>>> dict(tpllst)
    {'A': 'C', 'D': 'A'}
"
Reading the length of a string without using a built-in function?,"print(sum(1 for char in myString))
"
How to convert PlayJSON list to Scala Map (complex)?,"import play.api.libs.json._
import play.api.libs.functional.syntax._

case class ResultValue(timestamp: Long, value: Long)
case class Result(name: String, values: Seq[ResultValue])

implicit val resultValueReads: Reads[ResultValue] = (
  (JsPath(0)).read[Long] and
  (JsPath(1)).read[Long]
)(ResultValue.apply _)

implicit val resultReads: Reads[Result] = (
  (JsPath \ ""name"").read[String] and
  (JsPath \ ""values"").read[Seq[ResultValue]]
)(Result.apply _)

val parsedResponse = (((Json.parse(text) \ ""queries"")(0)) \ ""results"").validate[Seq[Result]]

parsedResponse.asOpt match { 
  case Some(results) => println(results)
  case None => println(""Nothing was parsed"")
}
"
Print a dict sorted by values,"b: 12
a: 4
c: 3
"
Find all the missing directed edges in an adjacency matrix,"import numpy as np

A = np.array([[0, 1, 0],
              [1, 0, 1],
              [1, 0, 0]]).astype(bool)

A = A
print A.astype(int)
B = A.transpose() & ~A
print B.astype(int)
"
How to write a recursion function for all the possible parameter combinations in python,"from itertools import product
import numpy as np

parameter={'alpha1':np.linspace(0.3,0.4,10),'alpha2':np.linspace(0.9,2,100)}

def parameter_options(parameter):
    for values_option in product(*parameter.values()):
        yield dict(zip(parameter.keys(), values_option))

for opt in parameter_options(parameter):
    print opt
"
even numbers python list,"def even_only(iter):
    return [x for x in iter if is_even(x)]
"
Stem words of complex structure,"labeled_words = [('neg', ['watching', 'by', 'myself', 'tweetdebate', 'not']), ('pos',     ['here', 'we', 'go', 'tweetdebate', 'tweetdebate'])]
stemmedWords = []
for label, words in labeled_words:
    stemmed = []
    for word in words:
        stemmed.append(porter2.stem(word))
    stemmedWords.append((label,stemmed))
"
How to use \b or ^ alongwith pattern to replace complete word?,"import re
p = re.compile(r""\b(foo|bar|baz)\b"")
p.sub(""---"", ""foo XfooX bar YbarY baz ZbazZ"")
# => '--- XfooX --- YbarY --- ZbazZ'
"
Python - adding conditions in if only they are specified (domain)?,"def countEmergency(self, card_ids, duration=None):
    cnt = 0
    for card in card_ids:
        if card.emergency_level != 'first':
            continue
        if duration is not None and card.duration <= duration:
            continue
        cnt += 1
    return cnt
"
How to create unique key(keys defined in some list) for dictionary and assign value to it in for loop in python 2.7?,">>> dct_keys = ['one', 'two', 'three', 'four']
>>> dict1 = dict.fromkeys(dct_keys)
>>> print dict1
{'four': None, 'three': None, 'two': None, 'one': None}
"
How to display top 10 highscores from a comma separated value (.txt) file in Python (Pygame),"with open('highscores.txt', 'rb') as f:
    reader = csv.reader(f)
    def convert_row(row):
        return [float(row[0])] + [int(value) for value in row[1:]]
    scores = (convert_row(row) for row in reader)
    top10 = heapq.nlargest(10, scores, key=operator.itemgetter(-1))
for record in top10:
    print('time: {} | moves: {} | penalties: {} | score: {}'.format(*record))
"
How to check how many times a word appears in a text file,"file = open('text.txt', 'r')
"
Recursive definitions in Pandas,"In [12]: df = pd.DataFrame([1, 7, 9, 5], columns=['A'])

In [13]: df
Out[13]: 
   A
0  1
1  7
2  9
3  5
"
return value from one python script to another,"import sys
import subprocess
s2_out = subprocess.check_output([sys.executable, ""script2.py"", ""34""])
print s2_out
"
How can I wrap an empty function to be implemented by a child class in a try-except block?,"error: Bar.get_message_impl always fails!
f_msg: Hello World
b_msg: None
"
Check if string contains any elements from list,">>> item_list = [""Non-Tradable Ubersaw"", ""Screamin' Eagle"", ""'Non-Craftable Spy-cicle""]
>>> not_allowed = {""Non-Tradable"", ""Non-Craftable""}
"
change the superclass of object in Python,"x.__class__ = Child
print(x.nmbrMovies)
# 0
"
"Create Pandas Datetime index from 8 digit date and 2,3, and 4 digit time","import datetime
import pandas as pd
DF = pd.read_csv('time_test.csv', dtypes = {'Date' : str, 'Time' : str})
datetime_index = []

for row in DF.index:
    time_val = DF.loc[row, 'Time']
    date_val = DF.loc[row, 'Date']
    while len(time_val) != 4: #pad with zeros as needed to avoid conditional testing
        time_val = '0' + time_val
    datetime_index.append(datetime.datetime(int(date_val[:4]), int(date_val[4:6]), int(date_val[6:]), int(time_val[:2]), int(time_val[2:]), 00))

DF['Datetime'] = pd.Series(datetime_index, index = DF.index)
"
Merging of two dictionaries,"[ {'value': 1, 'key': 'a'},
  {'value': 3, 'key': 'c'},
  {'value': 2, 'key': 'b'},
  {'value': 3, 'key': 'c'},
  {'value': 2, 'key': 'b'},
  {'value': 1, 'key': 'd'} ]
"
Pandas: add dataframes to dataframe - match on index and column value,"               value1  value2
           id                
2015-05-01 1       13       4
           2       14       7
2015-05-02 1       15       5
           2       16       8
"
python-flask how to generate a boolean list in a form,"class General_Form(Form):
    def validate(self):
        if not Form.validate(self):
            return False
        return True
"
Django pass TemplateView to ModelAdmin.add_view,"{% extends ""admin/base_site.html"" %}

{% block title %}My title{% endblock %}

{% block content %}

    My content and forms here.

{% endblock %}
"
Why are integers immutable in Python?,"def foo():
  nums = []
  for x in range(0,10):
    nums.append(x)
  return nums
"
How to make a matrix of arrays in numpy?,"In [5]: arr2 = np.arange(4).reshape(2, 2)

In [6]: arr2
Out[6]: 
array([[0, 1],
       [2, 3]])

In [7]: arr2 = arr2.reshape(2, 2, 1)

In [8]: arr2
Out[8]: 
array([[[0],
        [1]],

       [[2],
        [3]]])

In [9]: arr*arr2
Out[9]: 
array([[[ 0,  0],
        [ 2,  3]],

       [[ 8, 10],
        [18, 21]]])
"
Query Sqlite for multiple arguments at once and handling missing values,"result = dict(curs.fetchall())
result = [(result.get(d,None), d) for d in date]
"
Element-wise Addition of 2 Lists in Python?,"Timing comparisons:
>>> list2 = [4, 5, 6]*10**5
>>> list1 = [1, 2, 3]*10**5
>>> %timeit from operator import add;map(add, list1, list2)
10 loops, best of 3: 44.6 ms per loop
>>> %timeit from itertools import izip; [a + b for a, b in izip(list1, list2)]
10 loops, best of 3: 71 ms per loop
>>> %timeit [a + b for a, b in zip(list1, list2)]
10 loops, best of 3: 112 ms per loop
>>> %timeit from itertools import izip;[sum(x) for x in izip(list1, list2)]
1 loops, best of 3: 139 ms per loop
>>> %timeit [sum(x) for x in zip(list1, list2)]
1 loops, best of 3: 177 ms per loop
"
Reading chunks of csv file in Python using pandas,"In [120]: mask
Out[120]: 
0     True
1    False
2    False
3    False
4    False
5     True
6    False
7    False
8    False
9    False
Name: date, dtype: bool
"
Django custom field with multiple inheritance,"class JSONFieldSubClass(JSONField):
    __metaclass__ = models.SubfieldBase
"
how can i select these elements from the following horrible html using xpath and lxml?,"/html/p/node()[preceding-sibling::b[1][.='2. Description: ']]
              [following-sibling::b[1][.='3. Date:']]
              [not(self::br)]
"
Memoryerror with too big list," for tag in anno((whole_st_gen, whole_end_gen, ""1""),
                 (whole_st_ex, whole_end_ex, ""2"")):
     write_to_file(tag)
"
Replace some string in some phrases using a dictionary of strings in Python,"print re.sub(r'(?i)\b('+'|'.join(color)+r')\b', r'{\1}_C', s)
"
for each loop with undefined number of inside loops,"from itertools import product 
import six

varied_dict = {
'logdist_weight': [0.0, 1.0],
'pipeline_root': ['vsmany'], 
'sv_on': [True, False, None]
}

def all_dict_combinations(varied_dict):
       tups_list = [[(key, val) for val in val_list]
             for (key, val_list) in six.iteritems(varied_dict)]
       dict_list = [dict(tups) for tups in product(*tups_list)]
       return dict_list

dict_list = all_dict_combinations(varied_dict)
"
Extract Values from CSV file to then multiply with values from other CSV? Python,"1925
4675
"
How to follow on a button click in Django?,"from django.http import JsonResponse
def follow_user(request, user_profile_id):
    profile_to_follow = get_object_or_404(UserProfile, pk=user_profile_id)
    user_profile = request.user.userprofile
    data = {}
    if profile_to_follow.follows.filter(id=user_profile.id).exists():
        data['message'] = ""You are already following this user.""
    else:
        profile_to_follow.follows.add(user_profile)
        data['message'] = ""You are now following {}"".format(profile_to_follow)
    return JsonResponse(data, safe=False)
"
Sum over row and column,"In [49]:
np.sum(df[['d','e']].values)

Out[49]:
45
"
Remove extra spaces using regex,"print yourString.strip()
#Samsung Floor Standing Invertor Air Conditioner - 2.0 Ton - AF-28FSSDAWKXFA (Q-9000) - White (Brand Warranty)
"
Strange behaviour when creating a function directly from CodeType and FunctionType in python,">>> import dis
>>> def x(e, a, b=0, *c, d=0, **f):
...     print(a, b, c, d, e, f)
... 
>>> dis.dis(x)
  2           0 LOAD_GLOBAL              0 (print)
              3 LOAD_FAST                1 (a)
              6 LOAD_FAST                2 (b)
              9 LOAD_FAST                4 (c)
             12 LOAD_FAST                3 (d)
             15 LOAD_FAST                0 (e)
             18 LOAD_FAST                5 (f)
             21 CALL_FUNCTION            6 (6 positional, 0 keyword pair)
             24 POP_TOP
             25 LOAD_CONST               0 (None)
             28 RETURN_VALUE
"
Expand and merge Pandas dataframes,"In [66]:
DF1.join(DF2, how='outer')

Out[66]:
       c1  c2  c3  c4
index                
a1      1   2   9  10
a1      2   1   9  10
a1      3   1   9  10
b1      5   2   7   8
b1      4   7   7   8
"
Using .index() with duplicate values that have separate identifiers,"def index_by_identity(lst, target):
    for i, obj in enumerate(lst):
        if obj is target:
            return i
    # no object matches
    raise IndexError(target)
"
Navigation menu using Django templates,"{% extends ""base.html"" %}
{% block title %}Home Portal{% endblock %}

{% block home %}current{% endblock %}


{% block real_content %}

<div id=""content"">

 <div id=""intro"">
  <p>Hello, {{ user.first_name }}.</p>
  <p>Please create a Staff Request here by filling out the form
  below.</p>
 </div> <!-- end intro -->
 <div id=""logout"">
  <a href=""/accounts/logout"" alt=""Sign Off"" title=""Sign Off"">Sign Off</a>
 </div>
</div> <!-- end content -->

{% endblock %}
"
Adaptive Threshold parameters confusion,"src – Source 8-bit single-channel image.
dst – Destination image of the same size and the same type as src .
maxValue – Non-zero value assigned to the pixels for which the condition is satisfied. See the details below.
adaptiveMethod – Adaptive thresholding algorithm to use, ADAPTIVE_THRESH_MEAN_C or ADAPTIVE_THRESH_GAUSSIAN_C . See the details below.
thresholdType – Thresholding type that must be either THRESH_BINARY or THRESH_BINARY_INV .
blockSize – Size of a pixel neighborhood that is used to calculate a threshold value for the pixel: 3, 5, 7, and so on.
C – Constant subtracted from the mean or weighted mean (see the details below). Normally, it is positive but may be zero or negative as well.
"
Python BeautifulSoup extracting titles according to id,"from bs4 import BeautifulSoup

links = {}
soup = BeautifulSoup(page)

for link in soup.select('a[href^=http://pluzz.francetv.fr/videos/]'):
    title = link.get_text().strip()
    if title and title not in (u'Voir cette  vidéo', u'Lire la vidéo'):
        url = link['href']
        links.setdefault(url, []).append(title)
"
Find String (Keyword) in title and description using Beautifulsoup?,"url = ""http://www.optiker-bode.de/brillenauswahl/marken""
page=urllib.request.urlopen(url)

soup = BeautifulSoup(page.read())

kw = ""optiker""
#seite = obj_det.get('result',{}).get('website')
try:
    #req = urllib.request.urlopen(seite).read()
    #soup = BeautifulSoup(req, ""html.parser"")
    desc = soup.find(""meta"",attrs={""name"":""description""}).get(""content"")
    title = soup.title.string
except:
    title = ""Zugriff verweigert""
    desc = ""Zugriff verweigert""
kwindesc = kw in desc.lower()
kwintitle = kw in title.lower()
print(title)
print(desc)
print(kwindesc)
print(kwintitle)
print(""-----"")
"
loop for computing average of selected data in dataframe using pandas,">>> h = df.iloc[:2].astype(float)
>>> h.groupby(np.arange(len(h.columns))//12, axis=1).mean()
          0         1         2         3         4         5         6         7
0  0.609643  0.452047  0.536786  0.377845  0.544321  0.214615  0.541185  0.544462
1  0.382945  0.596034  0.659157  0.437576  0.490161  0.435382  0.476376  0.423039
"
Auto Incrementing natural keys with django / postgres,"{{ photo.category_image }}
"
python nested loop using loops and files,"with open(""another.txt"") as another_file:
    for lin in another_file:
        ...
"
"Anything behind 'if __name__ == ""__main__"":' not executing","def world_tick(self):
    if __name__ == '__main__':
        print ""World tick""
        actor_chunk = len(self.actors)/self.numThreads
        if len(self.processes)==0:
            for _ in range(self.numThreads):
                new_process = multiprocessing.Process(WorldThread.WorldProcess.work, args=(_, self.actors[_*actor_chunk,(_+1)*actor_chunk]))
"
Send JSON list from Javascript to Django Backend and parsing it properly,"google_news_articles.push({
    date:           each_article.find('.date').text(),
    outlet_domain:  strip(each_article.find('.outlet_domain').text()),
    title:          each_article.find('.title').text(),
    link:           each_article.find('.title').attr('href')
});
"
Data structure for UDP Server parsing JSON objects in python," def main():
   nodes = {}     # use a simple dict for storing the nodes
   lock = RLock() # if you need this
   # pass nodes and lock to server thread and start it
   t = threading.Thread(target = udp_server, args = (udp_ip, udp_port, nodes, lock))
   t.start() 
   ...
"
Intersection between two list of strings python,"def solution(S):
    length = len(S)
    if length == 0:
        return 1
    count = 0
    i = 1 # Don't test the empty string!
    while i < length: # Don't test the whole string! Use '<'
        prefix = S[:i] # Up to i
        suffix = S[length-i:] # length - i to the end
        print prefix, suffix
        if prefix == suffix:
            count += 1
        i += 1
    return count

print solution("""")
print solution(""abbabba"")    
print solution(""codility"")
"
BeautifulSoup Iteration not working," DataGrid.find_all('tr')[:3] # first three elements
"
Python find min & max of two lists,"max(l_one + l_two)
"
Scraping different values (cookies?) under the same url,"url = ""http://www.tripadvisor.com/Hotels-g60713-San_Francisco_California-Hotels.html"" 
page=urllib.request.urlopen(url)

soup = BeautifulSoup(page.read())
#print(soup)
for myValue3 in soup.findAll(""a"",attrs={ ""class"" : ""pageNum"" }):
    try:
        print(""the value of page "" + myValue3.get(""data-page-number"") + "" is: "" + myValue3.get(""href"").split(""#ACCOM_OVERVIEW"")[0])
    except:
        print(""error"")
"
How to loop backwards in python?,"xrange(10, 0, -1)
"
How to check if a variable is the same as at least one of two other variables?,"x = set((b,c,d,e,f,g,h,i,j,k,l,...))
if a in x:
    ...
if y in x:
    ...    
"
Parsing json element,"teamid = json.loads(playerdata1[0])
"
different formats for TabularAdapter columns?,"    object_0_format = Str(""%d"")
    object_1_format = Str(""%d"")
    object_2_format = Str(""%.4f"")
"
How to build a nested ordered dict from a csv?,"import csv
from collections import OrderedDict

filename = 'test.csv'
aDict = OrderedDict()

with open(filename, 'rb') as f:
    csvReader = csv.reader(f)
    fields = next(csvReader)
    for row in csvReader:
        temp = OrderedDict(zip(fields, row))
        key = temp.pop(""key"")
        aDict[key] = temp

import json  # just to create output
print(json.dumps(aDict, indent=4))
"
How do I sort through lines of a text document to find a phrase based on a date?,"test2 (due 2016-05-15 00:00:00)
test3 (due 2016-06-15 00:00:00)
test4 (due 2016-07-16 00:00:00)
test1 (due 2017-01-31 00:00:00)
"
Python- insert a character into a string,""",+"".join(c.rsplit(""+"", 1))
"
Numpy create matrix with values in specific locations,"arr = np.array(a)
N = arr.max()
Nr = np.arange(N)
diffs = (N - arr)//2
out = (((arr + diffs)[:,None] > Nr) & (diffs[:,None] <= Nr)).astype(int)
"
Elements of the original list changes when a deep copy of changes,">>> a = [[1,2], [3,4]] # a list of mutable elements
>>> b = a[:]
>>> c = list(a)
"
"Take OrderedDictionary as an argument and apply random.gauss(mean,std)",">>> from collections import OrderedDict
>>> import random

>>> items = OrderedDict((('B', [100, 10]), ('S', [8,80])))
>>> rs = OrderedDict((k, random.gauss(*v)) for k,v in items.items())
>>> rs
"
Anyway to input next string from a file in python,"def words(f):
    for line in f:
        yield from line.split()
"
Stopping a Reduce() operation mid way. Functional way of doing partial running sum,"[(1, 2), (1, 1), (1, 3), (1, 4), (1, 5)]
"
"How to extract text from Field using lxml, if field exists?","import lxml
import lxml.html

data = '''    <main>
      <header>
        <row type=""info"">
          <field name=""description""><![CDATA[Results]]></field>
          <field name=""created""><![CDATA[6/12/2014 6:45:00 PM]]></field>
        </row>
        <row>
          <field name=""profile""><![CDATA[Intel]]></field>
        </row>
      </header>
      <sections>
        <section name=""Results"">
          <description />
          <parameters />
          <header />
          <content>
            <row>
              # A row-dependend number of fields exist before the Full Content field
              <field name=""Full Content""><![CDATA[ I am the text of interest]]></field>
              # A row-dependend number of fields follow here
            </row>
            # There are 40,000 of these row elements
          </content>
          <footer>
            <row type=""content_count"">
              <field name=""count""><![CDATA[9981]]></field>
            </row>
          </footer>
        </section>
      </sections>
    </main>'''

html = lxml.html.fromstring(data)

fields = html.cssselect('field')

for x in fields:
     print lxml.etree.tostring(x)
"
How to pass command line arguments to ipython,"ipython [subcommand] [options] [-c cmd | -m mod | file] [--] [arg] ...

If invoked with no options, it executes the file and exits, passing the
remaining arguments to the script, just as if you had specified the same
command with python. You may need to specify `--` before args to be passed
to the script, to prevent IPython from attempting to parse them. If you
specify the option `-i` before the filename, it will enter an interactive
IPython session after running the script, rather than exiting.
"
How to convert a hex string to hex number,"print hex(new_int)[2:]
"
flickAPI: How do I list the sets for my user account?,"for elm in favs.getchildren()[0]:
    title = elm.getchildren()[0].text
    print (""id: %s secret: %s setname: %s"") %(elm.get('id'), elm.get('secret'), title) 
"
Run python in a separate process,"#! /bin/bash
python path/to/python/program.py > results.txt 2> errors.log &
"
Python: failed to get all the text in all the <span> tags using BeautifulSoup,"soup = BeautifulSoup(html, ""html.parser"")

for label in soup.find_all(""span"", class_=""pl""):
    value = label.find_next_sibling(""span"", class_=""attrs"")
    value = label.next_sibling.strip() if not value else value.get_text(strip=True)

    label = label.get_text(strip=True).strip("":"")
    print(label, value)
"
Unsure how to web-scrape a specific value that could be in several different places,"Happosait (laid the final blow)
Baneken
Perkel
Tibor Vherok
Kheo Dons
Kayakka
Lina Ectelion
Jay Burner
Zalamus
Draacan Ferox
Luwanii
Jousen Momaki
Varcuntis Morannear
Grimm K-Man
Wob'Niar
Godfrey Silvarna
Quintus Corvus
Shadow Altair
Sieren
Isha Vir
Argyrosdraco
Jack None
Strixi
"
get datatype length in python by parsing a string,"type, size = type_and_size('char[5]')
"
"Model.objects.only(""columnname"") doesn't work. It shows me everything","for theme in Theme.objects.all():
    print theme.name
    print theme.other_attribute
"
Conditionally changing elements of Pandas Dataframe in a more Pythonic way,"mask = ((aaa > bbb) & (aaa.shift() < bbb))
mask = mask.shift(-1).fillna(False)
pos[mask] = 12
"
Getting svg stored in a variable in jinja2,"encoded_output = encoded_output[encoded_output.find('<svg'):]
"
Copying a list in python,">>> from collections import namedtuple
>>> Point = namedtuple('Point', ['x', 'y'])
>>> p = Point(1, 2)
>>> p.x = 2
Traceback (most recent call last):
  File ""<pyshell#3>"", line 1, in <module>
    p.x = 2
AttributeError: can't set attribute
"
Obfuscating Strings with ASCII and base 128,"total = 0
for c in ""#car"":
    total <<= 7
    total += ord(c)
print total
"
Tokenization using regexp in Python,"import re

pat = ('(?<!\S)'  # absence of non-whitespace before

       '(?:'
           '[^\s<>]+'

           '|'  # OR

           '(?:[^\s<>]*)'
           '(?:'
               '<'
               '[^<>]*?'
               '(?:<[^<>]*?>[^<>]*)*'
               '[^<>]*?'
               '>'
               ')'
           '(?:[^\s<>]*)'
       ')'

       '(?!\S)' # absence of non-whitespace after)
       )
reg = re.compile(pat)

ss = (""spam i>j bar ds<hai bye>sd baz eggs Z<boo <abv>""
      "" foo>W ttt <two<;>*<:> three> "")
print '%s\n' % ss
print reg.findall(ss)

ss = ""a<b<E1>c>d <b<E2>c>d <b<E3>c> a<<E4>c>d <<E5>>d 
   <<E6>> <<>>""
print '\n\n%s\n' % ss
print reg.findall(ss)
"
What is the equivalent in python to this code line in perl $conf{svnlook} log --revision $rev $repo,"# assign conf as a dict()
# assign rev and repo as variables
import os
os.system('%s log --revision %s %s' % (conf['svnlook'], rev, repo))
"
Running a program from its Directory Using Cron,"import sys
sys.path.append(""/Users/username/Documents/workspace/programfolder/src/"")
"
How to avoid redundancy when sending commands via pexpect?,"def permute(prefix, tree):
    def flatten(branch):
        #print 'flatten', branch
        results = [ ]
        if type(branch) is list:
            parts = [ ]
            for part in branch:
                if type(part) is basestring:
                    if part:
                        parts.append([part])
                else:
                    parts.append(flatten(part))

            index = map(lambda x: 0, parts)
            count = map(len, parts)
            #print 'combining', parts, index, count
            while True:
                line = map(lambda i: parts[i][index[i]],
                       range(len(parts)))
                line = '/'.join(line)
                #print '1:', line
                results.append( line )
                curIndex = len(parts)-1
                while curIndex >= 0:
                    index[curIndex] += 1
                    if index[curIndex] < count[curIndex]:
                        break
                    index[curIndex] = 0
                    curIndex -= 1
                if curIndex < 0:
                    break
        elif type(branch) is tuple:
            for option in branch:
                if type(option) is basestring:
                    if len(option):
                        #print '2:', option
                        results.append( option )
                else:
                    results.extend(flatten(option))
        else:
            #print '3:', branch
            results.append( branch )
        return results

    return map(lambda x: prefix + x, flatten(tree))
"
Multithreading with two infinite while functions,"if __name__=='__main__':
    a=myClass()
    b=myClassSecond()
    aa=Thread(target=a.run)
    bb=Thread(target=b.run)
    ...
"
"_func() , any functional use of underscore? (Python)","foo = 1
_bar = 2
"
Looping through df dictionary in order to merge df's in Pandas,"import pandas as pd
import functools

A = pd.DataFrame([[2, 1], [2, 1], [2, 1]], columns=['A', 'B'], index = [1, 2, 3])
B = pd.DataFrame([[1, 1], [2, 2], [3, 3]], columns=['A', 'B'], index = [1, 2, 3])
C = pd.DataFrame([[1, 2], [1, 2], [1, 2]], columns=['A', 'B'], index = [1, 2, 3])

df_all = {'df1': A, 'df2': B, 'df3': C}
merge = functools.partial(pd.merge, left_index=True, right_index=True, how='inner')
df = functools.reduce(merge, df_all.values())
print(df)
"
"Python terminology: things to left of ""= argv"" in Learn Python the Hard Way exercise 13","  third to ""cool""   # argv[3]
"
Embedding multiple gridspec layouts on a single matplotlib figure?,"---------------------------------
|               |---------------|
| We didn't plot| |     |other| |
| anything here.| |data |data | |
|               | |     |     | |
|               |---------------|
---------------------------------
"
Cycle Through List Items,"for x in range(10):
    print(next(cycled_list))
"
How can I get Django to create a unique URL view and page for each URLField entered,"...
url(r'URL/^(?P<url_param>[a-zA-Z0-9_]*)/$', 'views.view_for_all_pages', name='view_for_all_pages')
...
"
Fill 2D numpy array from three 1D numpy arrays,">>> indices = np.arange(9)
>>> np.random.shuffle(indices)
>>> lats = lats[indices]
>>> lons = lons[indices]
>>> vals = vals[indices]
>>> lats
array([ 45.5,  43.2,  65.3,  45.5,  43.2,  65.3,  45.5,  65.3,  43.2])
>>> lons
array([   5.5,  116.2,  102.5,  116.2,    5.5,  116.2,  102.5,    5.5,  102.5])
>>> vals
array([6, 5, 1, 7, 3, 0, 7, 9, 4])
"
Find out which is the duplicate in a python panda data structure,"print df.duplicated(subset=['id'], keep='first')
0    False
1    False
2    False
3     True
dtype: bool

print df.duplicated(subset=['id'], keep='last')
0    False
1     True
2    False
3    False
dtype: bool

print df.duplicated(subset=['id'], keep=False)
0    False
1     True
2    False
3     True
dtype: bool
"
How to find subgroups statistics in pandas?,"df[""size""] = df.groupby(['A', 'B']).transform(len)
"
python subprocess with gzip,"Example
$ python gzip_subprocess.py  && od -c out.gz && zcat out.gz 
0000000 037 213  \b  \b 251   E   t   N 002 377   o   u   t  \0   K 344
0000020   J 344   J 002 302   d 256   T       L 343 002  \0   j 017   j
0000040   k 020  \0  \0  \0
0000045
a
a
b
b
c
e
e
f
"
How to compare diagonally opposed element of a multidimensional array with numpy,">>> triu = np.triu(a)
>>> tril = np.tril(a)
"
Calculate distance between a point and a line segment in latitude and longitude,"# Example:
a = Point(latitude=59.9050401935882, longitude=10.7196405787775)
b = Point(latitude=59.9018650448204, longitude=10.7109989561813)
p = Point(latitude=59.429105, longitude=10.6542116666667)

d = distance(midpoint(a, b), p)
print d.km
# 52.8714586903
"
SQL like joins in pandas,"                 date  key  value  joined_value
0 2013-01-01 00:00:00    0      0           NaN
1 2013-01-02 00:00:00    1     10           100
2 2013-01-03 00:00:00    2     20           200
3 2013-01-04 00:00:00    3     30           300
4 2013-01-05 00:00:00    4     40           NaN
5 2013-01-06 00:00:00    5     50           500
6 2013-01-07 00:00:00    6     60           600
7 2013-01-08 00:00:00    7     70           NaN
"
Python what does this code do? list = list[ list != value],"ans_list[ans_list != tree.ans_ind]
"
Python optimization problem?,"import math, array
import numpy as np
from PIL import Image

size = (800,800)
width, height = size

s1x = width * 1./8
s1y = height * 1./8
s2x = width * 7./8
s2y = height * 7./8

r,g,b = (255,255,255)

array_i,array_j = np.mgrid[0:width,0:height]

arr = np.abs(np.hypot(array_i-s1x, array_j-s1y) -
             np.hypot(array_i-s2x, array_j-s2y))

arr = (arr * np.ones((3,1,1))).transpose(1,2,0)

arr2 = np.zeros((width,height,3),dtype=""uint8"")
for ld in [200,116,100,84,68,52,36,20,8,4,2]:
    print 'now computing image for ld = '+str(ld)
    # Rest as before
"
bash wait for first python file to start before continue,"echo ""Remote Control Server is starting up...""
sudo python RControlPanel.py
"
PyQt - How to connect multiple signals to the same widget,"# Connect checkbox pairs
# you just use the values
# change 'itervalues' to 'values' if you are on Python 3.x
for cbPair in cbPairs.itervalues():
    cbOne = cbPair[0][0]
    cbTwo = cbPair[1][0]
    cbOne.toggled.connect(cbTwo.setChecked)
    cbTwo.toggled.connect(cbOne.setChecked) 

# Connect allCB and allRO signals
# change 'iteritems' to 'items' if you are on Python 3.x
for key, checkboxes in allCBList.iteritems():
    for checkbox in checkboxes:
        key.clicked.connect(checkbox.setChecked)
        checkbox.toggled.connect(lambda checked, checkboxes=checkboxes, key=key: key.setChecked(checked and all(checkbox.isChecked() for checkbox in checkboxes))
"
Run PyGame program without booting to Desktop Raspberry Pi,"import os
# Tell the RPi to use the TFT screen and that it's a touchscreen device
os.putenv('SDL_VIDEODRIVER', 'fbcon')
os.putenv('SDL_FBDEV'      , '/dev/fb1')
os.putenv('SDL_MOUSEDRV'   , 'TSLIB')
os.putenv('SDL_MOUSEDEV'   , '/dev/input/touchscreen')
"
How to avoid similar function definitions in Python?,"def make_callback(m_type, other_type):
    def callback(msg):
        m = m_type(msg)
        a = other_type(m)
        pub2.publish(a)
    return callback

callback1 = make_callback(MsgX, msg_type_a)
callback2 = make_callback(MsgY, msg_type_b)
"
Deepcopy on nested referenced lists created by list multiplication does not work,"[[0 for j in range(2)] for i in range(2)]
"
How to plot beautifully the segmentation of time series (pandas dataframe),"fig.set_size_inches(18.5,10.5)
"
Kill a port that is listening with regex,">>> s=""udp        0        0*:13000               *:*                  5071/python""
>>> re.search(r'\d+(?=/python)',s).group(0)
'5071'
"
how to insert multiple values to a single unique key in python,"import collections

result = collections.OrderedDict()

with open(""test_blast.txt"", 'r') as fh_in:
    for line in fh_in:
        col = line.split()
        if len(col)<2: continue
        if not col[0] in result:
            result[col[0]] = ()     
        result[col[0]] += (col[1],)
"
Call view with modified environ from within other view,"from flask import Flask, request

app = Flask(__name__)

@app.route('/')
def index():
    print(request.environ['HTTP_ACCEPT'])

    new_environ = request.environ.copy()
    new_environ['HTTP_ACCEPT'] = 'test'

    with app.request_context(new_environ):
        print(request.environ['HTTP_ACCEPT'])

    print(request.environ['HTTP_ACCEPT'])
    return 'Hello, World!'

app.run()
"
align columns of letters?,"first_name = 'Foo'
last_name = 'Bar'

print(""Your name and numeric value is:"")
fullname = first_name + ' ' + last_name
print(' '.join(fullname))

fullname = str.lower(fullname)
output = ''
for letter in fullname:
    if letter == ' ':
        output += '  '
    else:
        number = (ord(letter) - 97)%9 + 1
        output += str(number) + ' '
print(output)
"
string replace in Python,"hello values: [foo], have a good day
hello values: [goo], have a good day
hello values: [zoo], have a good day
"
Context manager for optionally redirected I/O,"from fileinput import FileInput

with FileInput(args.infile) as file:
    process(file)
# sys.stdin is still open here
"
"String creation: Differences between two syntaxes ' ' and "" ""?","'She said: ""Not so fast!""'
""Won't you come with us?""
"
Check if heapq contains value,"Element('A', 1) in heap
"
How can I select a dictionary according to the user's choice?,"vendors = {'cisco': {'uname': 'user_name'...}
           'bnt': {...}}
"
Navigating from admin site to one of my apps in same project,"{%extends 'admin/base_site.html'%}
{%block content%}
<style>
    a.btn { display: inline-block; padding: 5px; margin-right: 10px; border: 1px solid black; border-radius: 5px; line-height: 50px; }
</style>
<div><a href=""/admin/app1/model1/"" class=""btn"">Your first app with the model1</a></div>
<div><a href=""/admin/app1/model2/"" class=""btn"">Your first app with the model2</a></div>
<div><a href=""/admin/app2/model/"" class=""btn"">Your second app with a model</a></div>
{% endblock %}
"
send arguments for function arguments in python,"def pr(text):
  print(text)

def frun(func, *func_args):
  func(*func_args)

frun(pr, *pr_args)
"
"Filtering a python list, while coupling non-filtered terms to other lists.","zipped = zip(Openmarket, someotherlist, someotherotherlist)
filtered = filter(lambda (a, b, c): ""FX"" not in a, zipped)
Openmarket, someotherlist, someotherotherlist = zip(*filtered)
"
PYTHON: Finding the average of values of a nested list,">>> from __future__ import division
>>> [[set(i).pop(),round(sum(j)/len(j),0)] for i,j in [zip(*i) for i in data]]
[['apple', 2.0], ['cake', 7.0], ['chocolate', 7.0], ['grapes', 6.0]]
"
Extract Directory Names from Dynamic File Paths in Python,"E:\dir1\Logs\dir2\1998-12-23
message.txt
"
append match to new list and delete match from original list,"In [52]: [(''.join(parts[::2]), ''.join(parts[1::2])) for parts in [pat.split(m) for m in main]]
Out[52]: 
[('text  text', ' this is my match1 '),
 ('text  text', ' this is my match2 '),
 ('text', ''),
 ('text', ''),
 ('text  text', ' this is my match ')]
"
Changing One dict value changes all values,">>> d = {}
>>> el = [1, 2, 3]
>>> d[0] = el
>>> d[1] = el
>>> map(id, d.values())
[28358416, 28358416]
"
"if Python doesn't support method overloading, then why does this method overload work while this other does not?","def sum(n):
    ...
"
Accessing original decorated function for test purposes,"def my_decorator(f):
    @wraps(f)
    def wrapper(*args, **kwds):
        # implementation

    wrapper.__wrapped__ = f
    return wrapper
"
How do I get the number of posts on each day with annotation in Django?,"day_counts = Post.objects.filter(author=someuser).values('posted_day').annotate(
                                       dailycount=Count('posted_day')).order_by()
"
"output of numpy.where(condition) is not an array, but a tuple of arrays: why?","(array([4, 5, 6, 7, 8]),)
"
Adding a very repetitive matrix to a sparse one in numpy/scipy?,"def csr_add_sparse_vec(sps_mat, sps_vec) :
    """"""Adds a sparse vector to every row of a sparse matrix""""""
    # No checks done, but both arguments should be sparse matrices in CSR
    # format, both should have the same number of columns, and the vector
    # should be a vector and have only one row.

    rows, cols = sps_mat.shape

    new_data = sps_mat.data
    new_pointer = sps_mat.indptr.copy()
    new_cols = sps_mat.indices

    aux_idx = np.arange(rows + 1)

    for value, col in itertools.izip(sps_vec.data, sps_vec.indices) :
        new_data = np.insert(new_data, new_pointer[1:], [value] * rows)
        new_cols = np.insert(new_cols, new_pointer[1:], [col] * rows)
        new_pointer += aux_idx

    return sps.csr_matrix((new_data, new_cols, new_pointer),
                          shape=sps_mat.shape)
"
How to keep dates as index and inner join keys in multiple excel files,"df = stack_df.unstack(level=0)
"
Combing 2 python Lists and sorting by date while preserving source,"for dt, src in sorted(
        [(t,'dic1') for t in dic1] + [(t,'dic2') for t in dic2] ):
    print '{} from source {}'.format(dt, src)
"
Python Open Every File in a Folder,"import fileinput
for line in fileinput.input():
    # do your stuff
"
cut the python string,"\(     # Opening parenthesis
abcd:  # abcd:
\s     # Space
(.+?)  # One or more characters captured non-greedily
\)     # Closing parenthsis
"
pandas - group and count nunique values,"G    
1  ar    1
   es    1
2  es    2
3  es    1
4  es    1
dtype: int64
"
Grouping entries in pandas dataframe,"#get count by np.unique
df1['People'] = df1['Name_y'].apply(lambda a: np.unique((a), return_counts =True)[0])
df1['times'] = df1['Name_y'].apply(lambda a: np.unique((a), return_counts =True)[1])
#remove column Name_y
df1 = df1.drop('Name_y', axis=1).rename(columns={'Name_x':'Name'})
print df1
      Name                               People            times
0    Frank                                [Tom]              [1]
1    James                 [John, Richard, Tom]        [1, 1, 1]
2     John          [James, Paul, Richard, Tom]     [1, 1, 1, 2]
3     Paul                          [John, Tom]           [1, 1]
4  Richard                   [James, John, Tom]        [1, 1, 1]
5      Tom  [Frank, James, John, Paul, Richard]  [1, 1, 2, 1, 1]
"
"Difference between nonzero(a), where(a) and argwhere(a). When to use which?","a[i] if mask[i] else b[i]
"
Write a Python function that returns the sublist of strings that contain fewer than 4 characters,"new_list = [i for i in aList if len(i) < 4 and len(i) > 0]
"
python regular expressions in find and replace,"r = re.compile(r'(#[a-z]+)(<)')
"
Python Swap two digits in a number?,"n = int(s)
len_s = len(s)
ord_0 = ord('0')
di = ord(s[i])-ord_0
dj = ord(s[j])-ord_0
pi = 10**(len_s-(i+1))
pj = 10**(len_s-(j+1))
s = '{:0{width}d}'.format(n + (dj-di)*pi + (di-dj)*pj, width=len_s)
"
internalization set language redirect view. how to redirect to the same page?,"def your_view(request):
    next = strip_lang(request.path)
    return render(request,  ""form.html"", {'next': next})
"
Efficiently get midpoint of image in Python with astropy,"with fits.open(""example.fits"") as hdulist:
    events = hdulist[1].data   # since hdu 0 should be an ImageHDU type, the events are probably in the first extension
    midx = np.int((np.max(events['x'])+np.min(events['x']))/2)
    midy = np.int((np.max(events['y'])+np.min(events['y']))/2)
    midist = events['z'][(events['x'] == midx) & (events['y'] == midy)]
"
Can't cope with Dialog and Gridgeometry manager,"def body(self, master):
    self.title('Enter New Password')
    Label(self.interior(), text='Old Password:').grid(row=0, sticky=W)
    Label(self.interior(), text='New Password:').grid(row=1, sticky=W)
    Label(self.interior(), text='Enter New Password Again:').grid(row=2, sticky=W)
    self.oldpw = Entry(self.interior(), width = 16, show='*')
    self.newpw1 = Entry(self.interior(), width = 16, show='*')
    self.newpw2 = Entry(self.interior(), width = 16, show='*')

    self.oldpw.grid(row=0, column=1, sticky=W)
    self.newpw1.grid(row=1, column=1, sticky=W)
    self.newpw2.grid(row=2, column=1, sticky=W)
"
Make special diagonal matrix in Numpy,"a[i==j] = 1.
a[i==j-1] = 2.
a[i==j-2] = 3.
"
How to get all parameters into a data structure (list/dict/etc) in webapp2,"class partyHandler(webapp2.RequestHandler):
    def get(self, requestType):
        PROCESS = partyRequests();
        self.response.headers['Content-Type'] = 'text/plain'

    options = {
        'create':   PROCESS.createParty,
        'retrieve': PROCESS.retrieveParty,
        'update':   PROCESS.updateParty,
        'delete':   PROCESS.deleteParty,
        'join':     PROCESS.joinParty,
        'broadcast':PROCESS.broadcastParty,
        'leave':    PROCESS.leaveParty
    }
    self.response.write(options[requestType](self.request.GET)) <--THIS WORKS
"
how to binarize float values in pandas?,"print df.max(axis=1)
0    10
1     8
2     9
dtype: int64

print df.eq(df.max(axis=1), axis=0).astype(int)
   0  1  2
0  1  0  0
1  0  1  0
2  1  0  0
"
Inserting values into specific locations in a list in Python,"[mylist[i:] + [newelement] + mylist[:i] for i in xrange(len(mylist),-1,-1)]
"
Comparing two scipy.sparse matrices in python,"def f(a, b):
    return b - b.multiply(a)
"
Why are my Python arguments not unpacking?,"column_elms = [E(""table-column"",{""column-width"":""41mm""})] * COLUMNS
"
How to reference an element of a list inside itself?,"var1 = ""Exposure""
settings = [var1 , ""0"", random_time(var1)]
"
Conditional merge of other multiple Pandas DataFrames,"for s, df in sources.items():    

    temp = df.loc[A.index]  # the source data set indexed by A's index
                            # this will contain NaN's where df does not
                            # have corresponding index entries
    temp.dropna(inplace=True) # dropping the NaN values leaves you with 
                             # only the values in df matching the index in A
    if len(temp) > 0:
        A.loc[temp.index] = temp  # now assign the data to A

print(A)
"
Python: check if string is in any items in a list?,"server_list, good_email = [""gmail.com"", ""yahoo.com""], []
if all(not emailaddress.endswith(server) for server in server_list):
    good_email.append(emailaddress)
"
ranking tuples with ties,"import itertools

all1ts = sorted(itertools.chain(((m, ""m1"") for m in m1),
                                ((w, ""w1"") for w in w1)))

all1tsr = [row+(i,) for i,row in enumerate(all1ts)]
"
Efficiently re-shaping a numpy ndarray from 2-D to 3-D based on elements from 2-D,">>> # create the Grid
>>> G = NP.zeros((m, n, r), dtype='uint')
>>> # now from the container that holds your rgb tuples, create *three* m x n arrays, 
>>> # one for each item in your rgb tuples

>>> # now just map the r values (1st itm in each rgb tuple) to the 3D grid
>>> G[:,:,0] = r_vals
>>> G[:,:,1] = g_vals
>>> G[:,:,2] = b_vals

>>> G.shape
    (5, 4, 3)
"
Python decorator to aggregate PyQt signals,"#!/usr/bin/env python

from PyQt4.QtCore import *
from PyQt4.QtGui import *
from functools import wraps
import signal
import sys

signal.signal(signal.SIGINT, signal.SIG_DFL)

class SetAdder:
    def __init__(self):
        self.clear()

    def clear(self):
        self.value = set()

    def aggregate(self, other):
        send = not self.value
        self.sent = True
        self.value.add(other)
        return send


# This class decorator adds nameSlot, nameAuxSignal, nameAuxSlot, and
# name_manager.  Signals should be connected to nameSlot.  They will cause
# the function 'name' to be called with aggregated values.
def aggregated_slot_class_decorator(list_):
    def class_decorator(cls):
        for manager_type, name, *args in list_:
            signal_name = name + ""AuxSignal""
            slot_a_name = name + ""Slot""
            slot_b_name = name + ""AuxSlot""
            manager_name = name + ""_manager""

            def slot_a(self, *args_):
                manager = getattr(self, manager_name)
                if manager.aggregate(*args_):
                    print(""Sending"")
                    getattr(self, signal_name).emit()

            def slot_b(self):
                manager = getattr(self, manager_name)
                getattr(self, name)(manager.value)
                manager.clear()

            setattr(cls, slot_a_name,
                    pyqtSlot(cls, *args, name=slot_a_name)(slot_a))
            setattr(cls, slot_b_name,
                    pyqtSlot(cls, name=slot_b_name)(slot_b))

            orig_init = cls.__init__
            def new_init(self, *args_, **kwargs):
                orig_init(self, *args_, **kwargs)
                getattr(self, signal_name).connect(getattr(self, slot_b_name),
                                                   Qt.QueuedConnection)
                setattr(self, manager_name, manager_type())
            cls.__init__ = new_init
            #setattr(cls, signal_name, pyqtSignal())
        return cls
    return class_decorator


@aggregated_slot_class_decorator([(SetAdder, 'test', int)])
class A(QObject):
    def __init__(self):
        super().__init__()

    testAuxSignal = pyqtSignal()

    def test(self, value):
        print(""Received"", value)


class B(QObject):
    signal = pyqtSignal(int)


a = A()
b = B()

b.signal.connect(a.testSlot)

for i in range(10):
    b.signal.emit(i % 5)

app = QApplication(sys.argv)
sys.exit(app.exec_())
"
python-re: How do I match an alpha character,">>> import unicodedata as ucd
>>> allsorts =u""\u0473\u0660\u06c9\u24e8\u4e0a\u3020\u3021""
>>> for x in allsorts:
...     print repr(x), ucd.category(x), ucd.name(x)
...
u'\u0473' Ll CYRILLIC SMALL LETTER FITA
u'\u0660' Nd ARABIC-INDIC DIGIT ZERO
u'\u06c9' Lo ARABIC LETTER KIRGHIZ YU
u'\u24e8' So CIRCLED LATIN SMALL LETTER Y
u'\u4e0a' Lo CJK UNIFIED IDEOGRAPH-4E0A
u'\u3020' So POSTAL MARK FACE
u'\u3021' Nl HANGZHOU NUMERAL ONE
>>> rx.findall(allsorts)
[u'\u0473', u'\u06c9', u'\u4e0a', u'\u3021']
"
What's the straightforward way to implement one to many editing in list_editable in django admin?,"File ""C:\Python27\lib\site-packages\django\contrib\admin\validation.py"", line 43, in validate
% (cls.__name__, idx, field))
django.core.exceptions.ImproperlyConfigured: 'StoreAdmin.list_display[1]', 'item_type' is a ManyToManyField which is not supported.
"
Python: Running maximum by another column?,"    myids  mytime  myvalues  run_max_group
0     123       0        27             27
1     123       1        21             27
2     123       2        24             27
3     123       3        25             27
4     123       4        22             27
5     123       5        20             27
6     123       6        20             27
7     123       7        30             30
8     123       8        24             30
9     123       9        22             30
10    456       0        29             29
11    456       1        23             29
12    456       2        30             30
13    456       3        28             30
14    456       4        26             30
15    456       5        25             30
16    456       6        28             30
17    456       7        27             30
18    456       8        20             30
19    456       9        24             30
"
Convert categorical data into various columns for plotting in pandas,"In [1436]: pd.pivot_table(df, index='Sequence', columns='Level', values='Count')
Out[1436]: 
Level     Easy  Hard  Medium
Sequence                    
1            5     9       7
"
How do I start and use wxPython?,"C:> python
"
How to use Python in the Linux command,"xonsh$ [i*i for i in range(10)]
[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
xonsh$ date -u
Tue Oct  6 04:25:27 UTC 2015
"
How to account for string formatting in Python variable assignment?,"sentence = 'Your new contact email {} has been confirmed'.format(address)
"
accessing ctypes returned object's methods,"import ctypes
d = ctypes.cdll.LoadLibrary('dll/path')

createNativeObj = d.createNativeObj
createNativeObj.restype = ctypes.c_void_p
callFunc = d.callFunc
callFunc.argtypes = [ctypes.c_void_p]

obj = createNativeObj()
callFunc(obj)
"
Python iterative loop,"for n, s in enumerate(strings):
    if findWholeWord(s)(line) != None:
        # do something with n here?
        print (jd['user_id'], jd['text'])
        break
"
Can beautiful soup output be sent to browser?,"from django.http import HttpResponse
from django.template import Context, Template

def my_view(request):
    # some logic

    template = Template(data)
    context = Context({})  # you can provide a context if needed
    return HttpResponse(template.render(context))
"
Building 3D arrays in Python to replace loops for optimization,"In [197]: param1[:,None] + 3*(param2[None,:]/2)
Out[197]: 
array([[ 7,  4,  4,  1, 13, 13, 16],
       [ 8,  5,  5,  2, 14, 14, 17],
       [ 9,  6,  6,  3, 15, 15, 18],
       [10,  7,  7,  4, 16, 16, 19],
       [11,  8,  8,  5, 17, 17, 20]])
"
Python: How to distinguish between inherited methods,"instance.method(argument)
"
How to log in a specifc format in Python using logger?,"zooklogger.info(""steps:: Actual Steps :: %s, Workflow Path :: %s, Host Path :: %s"",
                steps, wf_path, status_path)
"
Achieve different behaviour when accessing from other domain,"{# Anything other than port 80, HTTP_HOST will also include the port number as well #}
{% ifequal request.META.HTTP_HOST 'example2.com' %}
    <!-- your css imports here -->
{% endifequal %}
"
Flask-SQLAlchemy: How to conditionally insert or update a row,"new_provider = Provider(form.rssfeed.data)
db.session.add(new_provider)
db.session.commit()
"
Modifying global variables in Python unittest framework,"from my_module import my_function_with_global_var
"
Pandas merging a Dataframe and a series,"variety = df_eating.groupby(""customer_id"")[""fruit""].nunique()
"
Auto completing song titles and parsing a string,"print re.sub(""^(\S+)\s"", ""\\1 - "", mystring['song'])
"
converting json to string in python,">>> data = {'jsonKey': None}
>>> str(data)
""{'jsonKey': None}""
>>> json.loads(str(data))
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
  File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/__init__.py"", line 338, in loads
    return _default_decoder.decode(s)
  File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/decoder.py"", line 366, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/decoder.py"", line 382, in raw_decode
    obj, end = self.scan_once(s, idx)
ValueError: Expecting property name: line 1 column 2 (char 1)
"
How to feed lists from python into javascript?,"// To be added to the initialize() function of the maps JS:
data = {{ markers }} 

// Iterating over list of points to create markers:
data.forEach(function(p) {
     var point = new google.maps.LatLng(p.m_lat, p.m_lng);
     var marker = new google.maps.Marker({position: point,
         map: map,
         title: p.m_title,
         //animation: google.maps.Animation.DROP,
     });
 });
"
Speed up for loop with numpy,"In [196]: C[d[:,np.newaxis], e[:,np.newaxis], f[:,np.newaxis] + b].mean(axis=0).dot(g)
Out[196]: 13.582349962518608

In [197]: %timeit C[d[:,np.newaxis], e[:,np.newaxis], f[:,np.newaxis] + b].mean(axis=0).dot(g)
1000 loops, best of 3: 461 µs per loop
"
Length function in python is not working the way I want to,"userLength = int(input (""Please tell us how long word you want to play : ""))
"
How to populate a dict,"class Stats:
    def __init__(self, age=None, address=None):
        self.age = age
        self.address = address

data = {}
for name in names:
    age, addr = request(name)
    data[name] = Stats(age, addr)
"
Determine current Mac Safari web page using Python,">>> import appscript
>>> print appscript.app(""Safari"").windows.first.current_tab.URL()
http://wiki.python.org/moin/MacPython/Safari
"
Optimal way to append to numpy array,"desired_length = 500
results = np.empty(desired_length)
for i in range(desired_length):
    results[i] = i**2
"
Combining steps,"first_cut_final = (first_cut_depth <= min_value+150)[...,None]*(first_cut-res)
"
python. How to find whether a text contains zero.?,"abc: 200
"
"Need a way to load embedded, escaped JSON strings in Python",">>> import json
>>> json.loads('{""JobDescription"":""{\\""project\\"": \\""1322\\"", \\""vault\\"": \\""qa-122\\""}""}')
{u'JobDescription': u'{""project"": ""1322"", ""vault"": ""qa-122""}'}
>>> 
"
Note (save) unmatched entries for dataset_a and dataset_b with python pandas,"In [198]:
merged = pd.merge(left, right, how='outer', indicator=True)
merged

Out[198]:
   key left_value right_value      _merge
0    0          a         NaN   left_only
1    1          b         NaN   left_only
2    2          c           f        both
3    3          d           g        both
4    4          e           h        both
5    5        NaN           i  right_only
6    6        NaN           j  right_only

In [199]:    
both = merged[merged['_merge'] == 'both']
both

Out[199]:
   key left_value right_value _merge
2    2          c           f   both
3    3          d           g   both
4    4          e           h   both

In [200]:
other = merged[merged['_merge'] != 'both']
other

Out[200]:
   key left_value right_value      _merge
0    0          a         NaN   left_only
1    1          b         NaN   left_only
5    5        NaN           i  right_only
6    6        NaN           j  right_only
"
How can I disable logging while running unit tests in Python Django?,"logging.disable(logging.NOTSET)
"
Initializing static member variable in a function,"
>>> a = A()
>>> for x in range(5):
        print a.func()


[8, 7, 6, 4]
[8, 7, 6, 4, 4]
[8, 7, 6, 4, 4, 4]
[8, 7, 6, 4, 4, 4, 4]
[8, 7, 6, 4, 4, 4, 4, 4]
"
Why does Python allow a trailing comma in list?,"  s = ['manny',
       'mo',
-      'jack'
+      'jack',
+      'roger'
  ]
"
trouble setting column dtypes pandas python,"df['trans_typ'] = df['trans_typ'].astype('category')
print df
              cmte_id trans_typ entity_typ state  employer  occupation  \
date                                                                     
2007-08-15  C00112250       24K        ORG    DC       NaN         NaN   
2007-09-26  C00119040       24K        CCM    FL       NaN         NaN   
2007-09-26  C00119040       24K        CCM    MD       NaN         NaN   
2011-02-25  C00478404       24K        COM    MN       NaN         NaN   
2011-02-01  C00140855       24K        CCM    DC       NaN         NaN   
2011-02-01  C00140855       24K        CCM    DC       NaN         NaN   
2011-02-22  C00140855       24K        CCM    MD       NaN         NaN   
2011-02-28  C00093963       24K        CCM    ND       NaN         NaN   

            amount     fec_id    cand_id  
date                                      
2007-08-15    2000  C00431569  P00003392  
2007-09-26    1000  C00367680  H2FL05127  
2007-09-26    1000  C00140715  H2MD05155  
2011-02-25    2400  C00326629  H8MN06047  
2011-02-01    1000  C00373464  H2OH17109  
2011-02-01    1000  C00289983  H4KY01040  
2011-02-22    2500  C00140715  H2MD05155  
2011-02-28    1000  C00474619  H0ND00135 

print df.dtypes
cmte_id         object
trans_typ     category
entity_typ      object
state           object
employer       float64
occupation     float64
amount           int64
fec_id          object
cand_id         object
dtype: object

print df.index
DatetimeIndex(['2007-08-15', '2007-09-26', '2007-09-26', '2011-02-25',
               '2011-02-01', '2011-02-01', '2011-02-22', '2011-02-28'],
              dtype='datetime64[ns]', name=u'date', freq=None)
"
subprocess timeout when exceeds a certain time limit,"ps = subprocess.Popen([""ssh"", ""-o"", ""BatchMode=yes"", ""-l"", ""mygroup"", server, ""df -k /some/directory""], stdout=subprocess.PIPE)
"
replace all 0's in a list with numpy.nan,">>> l = [0,2,3,4,0]
>>> l == 0
False
>>> int(l == 0)
0
>>> l[l == 0] = 999
>>> l
[999, 2, 3, 4, 0]
"
scrape using xpath and domdocuments,"[u'3.5', u'3.9', u'4.2']
"
convert JPG to txt causes change in file size in python,"#save as text decompressed image into bytes
for filename in os.listdir(imagePath):
    if filename!='.DS_Store' and filename[-3:]=='jpg':
        b = imread(filename,flatten=0).flatten()
        print b.shape
        out = ','.join('%d'%i for i in b)+'\n'
        print len(out)
        with open(savepath+'trainMatrix2.txt','a') as fut:
            fut.write(out)
            fut.close()            
"
Passing arguments to singletons in python,"class Object(metaclass=Singleton):
    def __init__(self, arg=None):
        print(""creating instance with arg:"", arg)
"
"Python, variable or list in list","
>>> VER = ""lvl2""
>>> sum([x in VER for x in reqlvls])
1
>>> VER = ""lvl2, lvl5""
>>> sum([x in VER for x in reqlvls])
1
>>> VER = ""lvl6, lvl7""
>>> sum([x in VER for x in reqlvls])
0
"
How to get indices of non-diagonal elements of a numpy array?,"In [142]: a
Out[142]: 
array([[7412,   33,    2],
       [   2, 7304,   83],
       [   3,  101, 7237]])

In [143]: ~np.eye(a.shape[0],dtype=bool)
Out[143]: 
array([[False,  True,  True],
       [ True, False,  True],
       [ True,  True, False]], dtype=bool)

In [144]: np.where(~np.eye(a.shape[0],dtype=bool))
Out[144]: (array([0, 0, 1, 1, 2, 2]), array([1, 2, 0, 2, 0, 1]))
"
Stacking star PSFs from an Image; aligning sub-pixel centers,"import numpy as np
from matplotlib import pyplot as plt

# pixel coordinates (integer)
x, y = np.mgrid[:100, :100]
# centroids (float)
cx, cy = np.random.rand(2, 9) * 100

# a Gaussian kernel to represent the PSF
def gausskern(x, y, cx, cy, sigma):
    return np.exp(-((x - cx) ** 2 + (y - cy) ** 2) / (2 * sigma ** 2))

# (nstars, ny, nx)
stars = gausskern(x[None, ...], y[None, ...],
                  cx[:, None, None], cy[:, None, None], 10)

# add some noise for extra realism
stars += np.random.randn(*stars.shape) * 0.5

fig, ax = plt.subplots(3, 3, figsize=(5, 5))
for ii in xrange(9):
    ax.flat[ii].imshow(stars[ii], cmap=plt.cm.hot)
    ax.flat[ii].set_axis_off()
fig.tight_layout()
"
Index function in a simple nested for loop not,"In [2]: def myfunc(grid):
   ...:     for i, row in enumerate(grid):
   ...:         for j, elem in enumerate(row):
   ...:             print('Row #{}, elem #{}, value: {}'.format(i, j, elem))

In [3]: myfunc(((1, 0, 0, 1, 0),
   ...:         (0, 1, 0, 0, 0),
   ...:         (0, 0, 1, 0, 1),
   ...:         (1, 0, 0, 0, 0),
   ...:         (0, 0, 1, 0, 0)))
Row #0, elem #0, value: 1
Row #0, elem #1, value: 0
Row #0, elem #2, value: 0
Row #0, elem #3, value: 1
Row #0, elem #4, value: 0
Row #1, elem #0, value: 0
Row #1, elem #1, value: 1
Row #1, elem #2, value: 0
Row #1, elem #3, value: 0
Row #1, elem #4, value: 0
Row #2, elem #0, value: 0
Row #2, elem #1, value: 0
Row #2, elem #2, value: 1
Row #2, elem #3, value: 0
Row #2, elem #4, value: 1
Row #3, elem #0, value: 1
Row #3, elem #1, value: 0
Row #3, elem #2, value: 0
Row #3, elem #3, value: 0
Row #3, elem #4, value: 0
Row #4, elem #0, value: 0
Row #4, elem #1, value: 0
Row #4, elem #2, value: 1
Row #4, elem #3, value: 0
Row #4, elem #4, value: 0
"
Updating multiple (local) variables by function return value in a loop,"      next_offset, next_output = get_next_output_offset_pair(text, offset)
      output.append(next_output)
      offset = next_offset
"
python recursive vectorization with timeseries,"    res[i] = c1*(s[i] + s[i-1])/2 + c2*res[i-1] + c3*res[i-2]
"
How to merge two data frames based on nearest date,"import pandas as pd
import numpy as np
dates = pd.date_range('2015', periods=200, freq='D')

rand = np.random.RandomState(42)
i1 = np.sort(rand.permutation(np.arange(len(dates)))[:5])
i2 = np.sort(rand.permutation(np.arange(len(dates)))[:5])

df1 = pd.DataFrame({'Code': rand.randint(0, 2, 5),
                    'Date': dates[i1],
                    'val1':rand.rand(5)})
df2 = pd.DataFrame({'Code': rand.randint(0, 2, 5),
                    'Date': dates[i2],
                    'val2':rand.rand(5)})
"
Can Perspective Broker be used over stdio instead of TCP?,"factory = PBClientFactory(...)
d = factory.getRootObject()
...

clientEndpoint.connect(factory)
"
SQLAlchemy - delete grandchildren,"version-2
filter_id = 4567
q = (session.query(Table3.id.label(""t3_id""))
    .join(Table2)
    .filter(Table2.table1_id == filter_id)
    )
sq = q.subquery()
q = (session.query(Table3)
    .filter(Table3.id.in_(sq))
    )
q.delete(synchronize_session=False)
"
Python Pandas: remove entries based on the number of occurrences,"data[data.groupby('tag').pid.transform(len) > 1]
"
Non-primary foreign keys in Django,">>> b = B.objects.get(id=1)
>>> b.name_id # the value stored in the 'name' database column
>>> b.name # the related 'A' instance
"
Bootstrap and Flask: How to receive a POST?,"<form method=""POST"" role=""form"" class=""form-horizontal"">
"
Finding function declarations in Ubuntu on Python,"import numpy
help(numpy)

# Returned documentation containing:
# FILE
# /usr/lib/python2.7/dist-packages/numpy/__init__.py
"
how to read command output from serial device using python,"data = output.read()
print(data)
"
Prevent matplotlib statefulness,"import matplotlib.backends.backend_agg as backend
from matplotlib.figure import Figure

# The pylab figure manager will be bypassed in this instance. `plt.gca()`
# can't access the axes created here.
fig = Figure()
canvas = backend.FigureCanvas(fig)
ax = fig.add_subplot(111)
"
Find all point pairs closer than a given maximum distance,"def condensed_to_pair_indices(n,k):
    x = n-(4.*n**2-4*n-8*k+1)**.5/2-.5
    i = x.astype(int)
    j = k+i*(i+3-2*n)/2+1
    return i,j
"
Filter a pandas dataframe using values from a dict,">>> df1[list(filter_v)]
    A      C  B
0   1  right  1
1   0  right  1
2   1  wrong  1
3   1  right  0
4 NaN  right  1
"
Basic Python question: referencing original variable inside for loop?,"name_level_1_translated = util.translate(""iw"", ""en"", name_level_1.encode('utf-8'))
print name_level_1_translated

name_level_2_translated = util.translate(""iw"", ""en"", name_level_2.encode('utf-8'))
do_stuff(name_level_2_translated)
"
python: abstract base class' __init__(): initializion or validation?,"instance.otherBaseProperty = ""Thingee2""
"
Python List of classes,"lines = []
lines.append({'course': 'Math', ...})
"
Python - Generate a multiple row update query,"conditions_string = ' '.join([""\t\tWHEN %s THEN %s\n"" % (x, y) for x, y in logs_age_list])
"
Working out certain values from a nested dictionary,">>> {k: sum(d.values()) for k,d in myDict.items()}
{'a': 328, 'about': 118, 'apple': 15, 'anticipate': 21, 'an': 431}
"
Optimizing Kadane's Algorithm for numpy,"%%cython

import numpy as np
cimport numpy as np

B = np.random.randint(-100,100,size=100000)

DTYPE = np.int
ctypedef np.int_t DTYPE_t

cdef DTYPE_t c_max_subarray(np.ndarray A):
    # Type checking for safety
    assert A.dtype == DTYPE

    cdef DTYPE_t max_so_far = 0, max_ending_here = 0, x = 0
    for x in A:
        max_ending_here = max(0, max_ending_here + x)
        max_so_far      = max(max_so_far, max_ending_here)
    return max_so_far

import time

measurements = np.zeros(100, dtype='float')
for i in range(measurements.size):
    a = time.time()
    c_max_subarray(B)
    measurements[i] = time.time() - a

print 'Cython:', measurements.min(), measurements.max(), measurements.mean()
"
Rewrite SOAP xml before sen it as request,"import xml.etree.cElementTree as ET

tree = ET.parse(""file.xml)
root = tree.getroot()

for child_root in root.iter('{http://some_tag}PrimaryIdentity'):
    new_identity = ""111111111""
    child_root.text = new_identity
    child_root.set('update','yes')

tree.write('output.xml')
"
Using fabric to copy file from one remote server to another remote server?,"from fabric import env
env.key_filename = '/path/to/priv/key'
"
Does Python have anything like Java's System.arraycopy?,"foo[0:4] = [copy.deepcopy(x) for x in baz[0:4]]
"
"Python, launch concurrent.futures.ProcessPoolExecutor with initialization?","ran init 5 6
Hey there 0
initresult is 4568
ran init 5 6
Hey there 1
initresult is 4569
ran init 5 6
Hey there 2
initresult is 4570
Hey there 3
initresult is 4569
Hey there 4
initresult is 4568
ran init 5 6
Hey there 5
initresult is 4571
Hey there 6
initresult is 4570
Hey there 7
initresult is 4569
Hey there 8
initresult is 4568
Hey there 9
initresult is 4570
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
"
Selenium webdriver: How do I find ALL of an element's attributes?,">>> from selenium import webdriver
>>> from pprint import pprint
>>> driver = webdriver.Firefox()
>>> driver.get('https://stackoverflow.com')
>>> 
>>> element = driver.find_element_by_xpath('//div[@class=""network-items""]/a')
>>> attrs = driver.execute_script('var items = {}; for (index = 0; index < arguments[0].attributes.length; ++index) { items[arguments[0].attributes[index].name] = arguments[0].attributes[index].value }; return items;', element)
>>> pprint(attrs)
{u'class': u'topbar-icon icon-site-switcher yes-hover js-site-switcher-button js-gps-track',
 u'data-gps-track': u'site_switcher.show',
 u'href': u'//stackexchange.com',
 u'title': u'A list of all 132 Stack Exchange sites'}
"
Python multi-line pattern matching,"$ pcregrep -M -n 'INSTANCE U2((?!^\)).*\n)+' sdf/c1_syn_buf2.sdf
"
Redirect screen output to text file,"import subprocess
try:
    out_bytes = subprocess.check_output([""./rti"", '1', '0.05', fileForRTI])
except subprocess.CalledProcessError as e:
    out_bytes = e.output # Output generated before error
    code= e.returncode # Return code
"
Seaching .csv for unwanted string and delete,"on,to,112
four,FIVE,seven
"
how can I profile class methods of my python app?,"@do_profile_all_methods(DO_PROFILE)
class myApp(object):
    def foo_method(self):
        pass
"
"Reclassify raster values using python, numpy","cf_array[cf_array > 4] = 7
cf_array[cf_array <= 1] = 5
cf_array[(1 < cf_array) & (cf_array <= 4)] = 6
"
"Combine/ ""concatenate"" two variables, one being a user input","costs = {}

for i in range(4):    
    item_name = input(""What do you want to buy? "")
    costs[item_name] = input('Price? ')
"
Pygame Rect class,"class Point(object):
    def __init__(self, x, y):
        self.x = x
        self.y = y
"
Merging multiple text files into one and related problems,"merge_files([""C:\file1.txt"", ""C:\file2.txt""], ""C:\output.txt"")
"
printing out dictionnaires,"EMPTY = '-'
FULL = '*'
if cells_copy[coord] == EMPTY:
    if population == 3:
        cells[coord] = FULL
else:
    if population not in set([2,3]):
        cells[coord] = EMPTY
"
Duplicates when extracting data from html table using lxmk.html.xpath(),"cntry = content.xpath('//tr[@class=""data1""]/td[1]/*')
"
Non-linear scaling of a colormap to enhance contrast,"cdict = {'red':   [(0.0,  0.0, 0.0),
               (0.5,  1.0, 1.0),
               (1.0,  1.0, 1.0)],

     'green': [(0.0,  0.0, 0.0),
               (0.25, 0.0, 0.0),
               (0.75, 1.0, 1.0),
               (1.0,  1.0, 1.0)],

     'blue':  [(0.0,  0.0, 0.0),
               (0.5,  0.0, 0.0),
               (1.0,  1.0, 1.0)]}
"
Python assignment to self in constructor does not make object the same,"b = a
"
how do you determine the end of a sentence in a python serial parser?,"def read(source):
    had_blank = False
    for char in source:
        if char == ' ':
            had_blank = True
        else:
            if had_blank and not char in '.?!':
                yield ' '
                yield char
                had_blank = False
            else:
                yield char
"
Argparse mutally exclusive by subgrouping,"ir.py query ""list of terms""
ir.py query --json ""list of terms""
ir.py index somefile.ext
"
Creating an Attribute class that allows adjusting a base value?,"class AttributeDescriptor(object):
    def __init__(self):
        self.initialized = False
        self.base = 0
        self.adjustments = []

    def compute(self):
        return self.base + sum(self.adjustments)

    def __set__(self, inst, value):
        if not self.initialized:
            self.base = value
            self.initialized = True
            print(""Attribute initialized to %s"" % value)
        else:
            # Calculate delta
            delta = (value - self.compute())
            self.adjustments.append(delta)
            print(""Adjustment added: %s"" % delta)

    def __get__(self, inst, owner):
        return self.compute()

class Creature(object):
    health = AttributeDescriptor()
    armor  = AttributeDescriptor()

    def __init__(self, health=100, armor=0):
        self.health = health
        self.armor  = armor


c1 = Creature(50)
c1.health = 60      # Adds a +10 adjustment
print c1.health     # 60
c1.health += 10     # Add a +10 adjustment
print c1.health     # 70
#print c1.health.adjustments     # This won't work ('int' object has no attribute 'adjustments')
"
Python requests post not sending string,"requests.post('http://mypage.com/add', params=params,
              headers = headers, proxies = proxy, timeout = max_timeout)
"
Register unique callbacks per instance using classmethod,"class SimpleConsumer(Consumer):
     def _callback(self, body):
         print body
"
Comparing two dataframes of different length row by row and adding columns for each row with equal value,"   Column1 ColumnB
0        1       a
1        1       d
2        1       e
"
Why do my nested python class instances become tuples?,"def __init__(self):
    self._UUID = None

    self.PartNumber = CustomParameter(""Part Number"", ""V_ID"")
    self.Name = CustomParameter(""Name"", ""V_name"")
    self.StandardPart = CustomParameter(""Standard Part"", ""V508_isStandardPart"")
    self.PartType = CustomParameter(""Part Type"", ""V511_PartType"")
    self.ControlledBy = CustomParameter(""ControlledBy"", ""V511_ControlledBy"")
    self.PIN = CustomParameter(""PIN"", ""BOECACPinItemNumber"")
"
Can I dynamically change order_by attributes in my query call?,"search = search.order_by(search_order)
"
First common element from different lists of numbers,"('list_1', 'list_2') value:3541-index:2
('list_1', 'list_3') value:25732-index:1
('list_1', 'list_4') value:68971-index:7
('list_1', 'list_5') value:25732-index:1
('list_2', 'list_3') value:3541-index:2
('list_2', 'list_4') value:68971-index:7
('list_2', 'list_5') value:3541-index:2
('list_3', 'list_4') value:68971-index:7
('list_3', 'list_5') value:25732-index:1
('list_4', 'list_5') value:68971-index:7
"
How do I make a 'while' loop print the results of the loop's conditional into a single line(concatenated)?,"int("""".join(characters))
"
String searching library's outcome - bug or feature or my coding error?,">>> result
defaultdict(<type 'int'>, 
            {'the first sentence'   : 3,
             'first sentence'       : 3,
             'first sentence is'    : 2,
             'the first sentence is': 2})
"
"How do I join integers, Decimal() and datetime.datetime() in a list?","print('\t'.join(map(str, x)))
"
Changing DictMixin.iterkeys to MutableMapping,"import yaml

d = yaml.load(open('foo.yaml'))

print(d.keys())
print(d.values())
"
looping over all member variables of a class in python,"['blah', 'bool143', 'bool2', 'foo', 'foobar2000']
"
Django delete formset,"import render

def XMLFieldsView(request):
    if request.method == 'POST':
       lista = request.POST.getlist('eliminar')
       """""" Here I am lost """"""
       for pk in lista:
           get_object_or_404(ElObjeto, pk=pk).delete()
    else:
       ....

    return render(request, listacampos.html,{'table':tabla,'form':form,'lista':lista})
"
Is there any Python equivalent to partial classes?,"from classdef42 import Bigclass
"
weird jquery value selection," str = $(this).val().replace(/(['""])/g, ""\\$1"");
 $('input[name=A][value=""' + str+ '""]').prop('checked', false);
"
"Python, remove all non-alphabet chars from string","regex = re.compile('[,\.!?]') #etc.
"
Read a dict of dicts in a list,">>> {film['trailers']['id']: [source['source'] for source in film['trailers'].get('youtube', [])] 
...             for film in j}
{57417: ['source1', 'source2'], 57418: []}
"
Cleanest way to return a tuple containing a particular element?,">>> next((x[0] for x in lis if x[1]=='bar'), None)
2
"
How to start an rpyc server?,"from rpyc import classic

c = classic.connect(""0.0.0.0"",port=18812)

print(c.modules.sys.platform)
linux
"
DOM manipulations in Python (if some element contains only one other element...),"<?xml version=""1.0"" ?><div>xxxx</div>
"
How to get an object inside an array list by its property value in Python,"return next(index for index, element in enumerate(array)
            if element[""extension""] == "".py"")
"
Use python decorators on class methods and subclass methods,"class WebmethodBaseClass():
    def post(self, methodName):
        getattr(self, methodName)(""kapow"")
"
"Recommended usage of Python dictionary, functions as values",">>> timeit.timeit(""convert_to_celsius_lambda_once(100, 'kelvin')"", setup=setup)
0.3904035060131186
"
Build Python scripts and call methods from C#,"using System;
using System.IO;
using System.Reflection;
using IronPython.Hosting;
using Microsoft.Scripting.Hosting;
// we get access to Action and Func on .Net 2.0 through Microsoft.Scripting.Utils
using Microsoft.Scripting.Utils;


namespace TestCallIronPython
{
    class Program
    {
        public static void Main(string[] args)
        {
            Console.WriteLine(""Hello World!"");
            ScriptEngine pyEngine = Python.CreateEngine();

            Assembly myclass = Assembly.LoadFile(Path.GetFullPath(""MyClass.dll""));
            pyEngine.Runtime.LoadAssembly(myclass);
            ScriptScope pyScope = pyEngine.Runtime.ImportModule(""MyClass"");

            // Get the Python Class
            object MyClass = pyEngine.Operations.Invoke(pyScope.GetVariable(""MyClass""));

            // Invoke a method of the class
            pyEngine.Operations.InvokeMember(MyClass, ""somemethod"", new object[0]);

            // create a callable function to 'somemethod'
            Action SomeMethod2 = pyEngine.Operations.GetMember<Action>(MyClass, ""somemethod"");
            SomeMethod2();

            // create a callable function to 'isodd'
            Func<int, bool> IsOdd = pyEngine.Operations.GetMember<Func<int, bool>>(MyClass, ""isodd"");
            Console.WriteLine(IsOdd(1).ToString());
            Console.WriteLine(IsOdd(2).ToString());

            Console.Write(""Press any key to continue . . . "");
            Console.ReadKey(true);
        }
    }
}
"
A way to convert numbers to seconds,"print(b - a)
0:00:14
print((b-a).total_seconds())
14.0
"
"Are there any equivalent for groovy """""" in python?","s = """"""This is a string with a {variable} to fill in.
Here's a {second} one
"""""".format(variable=""field"", second=""'nother"")
"
Python: Optimizing a tree evaluator,"node = build_tree(5)
print node.eval()
"
Django runserver from Python script,"os.environ.setdefault(""DJANGO_SETTINGS_MODULE"", ""server.settings"")

from django.core.management import call_command
from django.core.wsgi import get_wsgi_application 
application = get_wsgi_application()
call_command('runserver',  '127.0.0.1:8000')
"
Use the folder name as a column in a text file,"% find . -name 'text.txt' -print -exec cat {} \;
./the_king/text.txt
the_king has a wart    
the_king was dressed up like a witch     
the_king has a false nose
./the_knight/text.txt
the_knight has a wart    
the_knight was dressed up like a witch     
the_knight has a false nose
./the_peasant/text.txt
the_peasant has a wart    
the_peasant was dressed up like a witch     
the_peasant has a false nose
"
List comprehension with some kind of loop interdependence?,">>> [x for y in supraList for x in someDict[y]]
[2, 3, 4, 5, 6, 7]
"
How to remove a lot of elements from a multithread queue without using a for loop,"import multiprocessing
pool = multiprocessing.Pool()
pool.map(myQueue.get, range(1, 10))
"
Mapping pandas DataFrame rows to a pandas Series,"new_metadata = df.apply(lambda x: '{}\b,""timestamp"":{}}}'.format(x.metadata,x.timestamp),axis=1)
"
Fermi Surface Plots,"for bandNo in range(totalBands):
    contour3d(Eigen[:,:,:, bandNo], contours=[eF1, eF2, eF3], opacity=0.4)
"
Iterator that supports pushback,"class PushbackWrapper(object):

    def __init__(self, iterator):
        self.__dict__['_iterator'] = iterator
        self.__dict__['_pushed'] = []

    def next(self):
        if len(self._pushed):
            return self._pushed.pop()
        else:
            return self._iterator.next()

    def pushback(self, item):
        self._pushed.append(item)

    def __getattr__(self, attr):
        return getattr(self._iterator, attr)

    def __setattr__(self, attr, value):
        return setattr(self._iterator, attr, value)
"
python: how to check if a line is an empty line,"if not line.strip():
    ... do something
"
"check if a string is in a list, and if not append it to that list",">>> dem_nums = []
>>> for dem in dems:
...          dem_num = dem[0:3]
...          if dem_num not in dem_nums:
...               dem_nums.append(dem_num)
... 
>>> dem_nums
['083']
"
There must be a more optimal way to parse two files,"for obj2 in file2:
    if 'name' not in obj2:
        continue
    for obj1 in file1_names.get(obj2['name'], []):
        obj2.update(obj1)
"
Groupby items within a list in a Pandas DataFrame,"       views
tag         
tag_a    300
tag_b    250
tag_c    350
"
convert a list of x and y coordinates into multistring,">>> x = (1,1,2,2,3,4)
>>> y = (0,1,2,3,4,5)
>>> xy = zip(x, y)
>>> xy
[(1, 0), (1, 1), (2, 2), (2, 3), (3, 4), (4, 5)]
"
Getting method calls and their arguments from method object,"def foobar(a=0, b=0, c=None):
    return a, b, c

def other_method(x,y,z):
    return  x,y,z

def my_method():
    print('hello')
    foobar('apple', 'pear', 6)
    print('world')
    foobar(1, 2, 3)
    for i in range(10):
        if i > 9:
            s = foobar(4, 5, 6)
            print(s)
    return foobar('a', 'b')


def my_method2():
    foobar('orange', 'tomatoe', 6)
    foobar(10, 20, 30)
    for i in range(10):
        if i > 9:
            foobar(40, 50, 60)
    other_method(""foo"",""bar"",""foobar"")
    return foobar('c', 'd')
"
Set parent of model during creation,"p = Product(...)
p.location = l
p.save()
"
wxpython: How to create wxChoice contents from a list?,"self.chHead = wx.Choice(self.nbItemPane, -1)
for i in range(len(items)):
    if items[i].GetSlot() == 'Head':
        self.chHead.Append(item=item[i].GetName(), clientData=i)
"
More efficient way to mean center a sub-set of columns in a pandas dataframe and retain column names,"        i  we  you  shehe  they  ipron
0  0.0725   0    0  0.195 -0.18 -0.145
1  0.8025   0    0 -0.065 -0.18  0.495
2 -0.4375   0    0 -0.065  0.54  0.285
3 -0.4375   0    0 -0.065 -0.18 -0.635
"
What is the practical difference between these two ways of making web connections in Python?,"import requests
session = requests.session()
html = session.get(url).content
soup = BeautifulSoup(html, ""html5lib"")
"
Exposing python daemon as a service,"import json
import zmq

request_data = {
        ""values"": [10, 20, 30 , 40],
        }

context = zmq.Context()
socket = context.socket(zmq.DEALER)
socket.connect(""ipc:///tmp/myapp.ipc"")
socket.send(json.dumps(request_data))
print socket.recv()
"
Convert daily pandas stock data to monthly data using first trade day of the month,"df =pd.DataFrame( range(200), index = pd.date_range('12/1/2012', periods=200, freq='D'))

from pandas.tseries.offsets import CustomBusinessMonthBegin
from pandas.tseries.holiday import USFederalHolidayCalendar
bmth_us = CustomBusinessMonthBegin(calendar=USFederalHolidayCalendar())

df.resample(bmth_us, how='mean')
"
How to give a constant and a dynamic argument to functions which are stored in an array,">>> def do_xslt(xsl, xml):
...     print 'do_xslt(%r, %r)' % (xsl, xml)
...     return xml + '*' + xsl
...
>>> from functools import partial
>>> TRANSFORM_PIPELINE = [
...     partial(do_xslt, 'pass1.xsl'),
...     partial(do_xslt, 'pass2.xsl'),
...     partial(do_xslt, 'pass3.xsl')
... ]
>>> x = 'xml is lame'
>>> for transform in TRANSFORM_PIPELINE:
...     x = transform(x)
...     print x
...
do_xslt('pass1.xsl', 'xml is lame')
xml is lame*pass1.xsl
do_xslt('pass2.xsl', 'xml is lame*pass1.xsl')
xml is lame*pass1.xsl*pass2.xsl
do_xslt('pass3.xsl', 'xml is lame*pass1.xsl*pass2.xsl')
xml is lame*pass1.xsl*pass2.xsl*pass3.xsl
"
Is it possible to speed up interactive IPython Notebook plots by not generating new figures every time?,"ax.set_xlim(0, .05)
ax.set_ylim(-2, 2)
plt.draw()
"
python idle how to create username?,"    print x
    return x
"
Order a list from largest to smallest using insertion sort,"mx = lambda x: reduce(lambda xs, ys: xs if xs > ys else ys, x)
"
Writing to a csv file in a particular format,"df = pd.DataFrame(np.random.random((1000, 7)), columns=['data_' + str(i) for i in range(7)], index=pd.date_range(date(2015,11,29), periods=1000, freq='15S'))

                       data_0    data_1    data_2    data_3    data_4  \
2015-11-29 00:00:00  0.331546  0.317863  0.616388  0.784063  0.968004   
2015-11-29 00:00:15  0.299468  0.971885  0.954483  0.856748  0.230223   
2015-11-29 00:00:30  0.246160  0.618193  0.902762  0.518121  0.705881   
2015-11-29 00:00:45  0.875753  0.629994  0.029394  0.883197  0.939194   
2015-11-29 00:01:00  0.696372  0.536321  0.632785  0.009850  0.951280   

                       data_5    data_6  
2015-11-29 00:00:00  0.829210  0.323449  
2015-11-29 00:00:15  0.753155  0.619336  
2015-11-29 00:00:30  0.149181  0.679280  
2015-11-29 00:00:45  0.236912  0.024689  
2015-11-29 00:01:00  0.171320  0.520080
"
Python IP Parsing,"regex = re.findall(r'(?:[\d]{1,3})\.(?:[\d]{1,3})\.(?:[\d]{1,3})\.(?:[\d]{1,3})', text)
"
How can I speed up transition matrix creation in Numpy?,"In [80]: timeit using_bincount_reshape(t, m3)
10000 loops, best of 3: 22.3 us per loop
"
How to avoid same variable being used twice in an Orange CN2 rule?,"learner.rule_finder.validator = ConditionsValidator()
"
Downloading a large archive from AWS Glacier using Boto,"file_size = check_file_size(OUTPUT)

if job.completed:
    print ""Downloading archive""
    with open(OUTPUT, 'wb') as output_file:
        i = 0
        while True:
            response = job._download_byte_range(file_size + 1024 * 1024 * i, file_size + 1024 * 1024 * (i + 1)))
            output_file.write(response)
            if len(response) < 1024 * 1024:
                break
            i += 1
"
Using boolean indexing for row and column MultiIndex in Pandas,"def hackedsyntax():
    return data[[j in [71, 84] and t in ['Dodgers', 'Mets'] for t, j, g in data.index]]\
    .T[[obs in ['John', 'Ralph'] for obs, obstype in data.columns]].T

def uglybuiltinsyntax():
    return data.loc[
        (data.index.get_level_values('jersey').isin([71, 84])
         & data.index.get_level_values('team').isin(['Dodgers', 'Mets'])), 
        data.columns.get_level_values('observer').isin(['John', 'Ralph'])
    ]

%timeit hackedsyntax()
%timeit uglybuiltinsyntax()

hackedsyntax() - uglybuiltinsyntax()
"
Python Image Processing - Move an Image,"getpixel((x_loc,y_loc),...) #<--wrong
"
Stretching a list in Python,"def stretch_to(l, n):
    out = [None] * n
    m = len(l)
    for i, x in enumerate(l):
        out[i*(n-1)//(m-1)] = x

    return out
"
How to plot values for multiple factors from one column across several dates in pandas + matplotlib?,"
import matplotlib.pyplot as plt
import pandas as pd
from pandas import Timestamp


df = pd.DataFrame({'animal': {12: 'dog', 44: 'dog', 47: 'dog', 69: 'rabbit', 76: 'rabbit', 84: 'dog', 122: 'rabbit', 162: 'rabbit', 177: 'rabbit', 190: 'rabbit', 217: 'dog', 219: 'dog', 220: 'dog', 226: 'rabbit'},
 'count': {12: 34573, 44: 30676, 47: 41821, 69: 56880, 76: 73172, 84: 30581, 122: 52895, 162: 58430, 177: 57132, 190: 53903, 217: 32001, 219: 35776, 220: 31095, 226: 53809},
 'date': {12: Timestamp('2014-12-29 00:00:00'), 44: Timestamp('2014-12-28 00:00:00'), 47: Timestamp('2014-12-31 00:00:00'), 69: Timestamp('2014-12-29 00:00:00'), 76: Timestamp('2014-12-31 00:00:00'), 84: Timestamp('2014-12-26 00:00:00'), 122: Timestamp('2014-12-25 00:00:00'), 162: Timestamp('2014-12-30 00:00:00'), 177: Timestamp('2014-12-27 00:00:00'), 190: Timestamp('2014-12-28 00:00:00'), 217: Timestamp('2014-12-27 00:00:00'), 219: Timestamp('2014-12-30 00:00:00'), 220: Timestamp('2014-12-25 00:00:00'), 226: Timestamp('2014-12-26 00:00:00')}})

df['animal'] = df['animal'].astype('category')
df = df.set_index('date')


df['day'] = df.index.day
df = df.sort_values(by='day')
grouped = df.groupby(['animal'])
fig, ax = plt.subplots()
for key, group in grouped:
    group.plot('day', 'count', label=key, ax=ax)

plt.legend(loc='best')

plt.show()
"
how to find a pattern of string elements in a list?,">>> letterstring = ''.join(letterlist)
>>> [m.start() for m in re.finditer(""CAC"", letterstring)]
[15, 104, some more, 986, 990]
"
ValueError: operands could not be broadcast together with shapes,">>> b = np.array([-6 * np.ones(a.shape), -8 * np.ones(a.shape)])
>>> b
array([[[-6., -6., -6., -6., -6., -6.],
        [-6., -6., -6., -6., -6., -6.]],    
       [[-8., -8., -8., -8., -8., -8.],
        [-8., -8., -8., -8., -8., -8.]]])
>>> np.power(a, b)
"
Line colour of 3D parametric curve in python's matplotlib.pyplot,"import matplotlib as mpl
from mpl_toolkits.mplot3d import Axes3D
import numpy as np
import matplotlib.pyplot as plt

fig = plt.figure()
ax = fig.gca(projection='3d')
theta = np.linspace(-4 * np.pi, 4 * np.pi, 100)
z = np.linspace(-2, 2, 100)
r = z**2 + 1
x = r * np.sin(theta)
y = r * np.cos(theta)

#1 colored by value of `z`
ax.scatter(x, y, z, c = plt.cm.jet(z/max(z))) 

#2 colored by index (same in this example since z is a linspace too)
N = len(z)
ax.scatter(x, y, z, c = plt.cm.jet(np.linspace(0,1,N)))

plt.show()
"
csvreader.fieldnames not recognized as an attribute of a csv reader object in python,"rfd_header = reader.next()
"
z3 const declaration,"S, (a, b, c) = EnumSort('S', ('a', 'b', 'c'))
x = Const(""x"", S)
"
How do I modify this download function in Python?,"def download(source_url):
    try:
        socket.setdefaulttimeout(10)
        agents = ['Mozilla/4.0 (compatible; MSIE 5.5; Windows NT 5.0)','Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 5.1)','Microsoft Internet Explorer/4.0b1 (Windows 95)','Opera/8.00 (Windows NT 5.1; U; en)']
        ree = urllib2.Request(source_url)
        ree.add_header('User-Agent',random.choice(agents))
        ree.add_header('Accept-encoding', 'gzip')
        opener = urllib2.build_opener()
        response = opener.open(ree)
        content = response.read()
        compressedstream = StringIO.StringIO(content)
        gzipper = gzip.GzipFile(fileobj=compressedstream)
        try:
            data = gzipper.read()
        except IOError:
            data = content
        return data        
    except urllib2.URLError as e:
        return """"
"
I'm having difficulty understanding the syntax of scipy.optimize,"def f(x, M):
    return M.dot(x)
"
How to pass an integer series as argument to a python function?,"print a, b, c, d
"
Diffing two files while ignoring any missed lines,"Expected:  set(['mike', 'ape'])
Got:  set(['orange', 'tom'])
"
temporarily retrieve an image using the requests library,"#!/usr/bin/env python3
import urllib.request
from PIL import Image # $ pip install pillow

im = Image.open(urllib.request.urlopen(url))
print(im.format, im.mode, im.size)
"
"Ask for five values, subtract the lowest and take the average","def get_data():
    name = raw_input(""What is your name: "")
    scores = []
    for i in range(5):
        scores.append(int(input(""what are your test scores? "")))
    return name, scores

def drop_low_score(scores):
    sorted_scores = sorted(scores)
    print ""Dropping"", sorted_scores[0]
    highest_four_scores = sorted_scores[1:]
    return scores

def find_avg(scores):
    avg = sum(scores) / float(len(scores))
    print name, ""your average = "", avg
    return avg

name, scores = get_data()
scores = drop_low_score(scores)
avg = find_avg(scores)
"
Sort Versions in Python,"#!/usr/bin/python
# file: version2.py

from distutils import version
import re
import functools

@functools.total_ordering
class NumberedVersion(version.Version):
    """"""
    A more flexible implementation of distutils.version.StrictVersion

    This implementation allows to specify:
    - an arbitrary number of version numbers:
        not only '1.2.3' , but also '1.2.3.4.5'
    - the separator between version numbers:
        '1-2-3' is allowed when '-' is specified as separator
    - an arbitrary ordering of pre-release tags:
        1.1alpha3 < 1.1beta2 < 1.1rc1 < 1.1
        when [""alpha"", ""beta"", ""rc""] is specified as pre-release tag list
    """"""

    def __init__(self, vstring=None, sep='.', prerel_tags=('a', 'b')):
        version.Version.__init__(self) 
            # super() is better here, but Version is an old-style class

        self.sep = sep
        self.prerel_tags = dict(zip(prerel_tags, xrange(len(prerel_tags))))
        self.version_re = self._compile_pattern(sep, self.prerel_tags.keys())
        self.sep_re = re.compile(re.escape(sep))

        if vstring:
            self.parse(vstring)


    _re_prerel_tag = 'rel_tag'
    _re_prerel_num = 'tag_num'

    def _compile_pattern(self, sep, prerel_tags):
        sep = re.escape(sep)
        tags = '|'.join(re.escape(tag) for tag in prerel_tags)

        if tags:
            release_re = '(?:(?P<{tn}>{tags})(?P<{nn}>\d+))?'\
                .format(tags=tags, tn=self._re_prerel_tag, nn=self._re_prerel_num)
        else:
            release_re = ''

        return re.compile(r'^(\d+)(?:{sep}(\d+))*{rel}$'\
            .format(sep=sep, rel=release_re))

    def parse(self, vstring):
        m = self.version_re.match(vstring)
        if not m:
            raise ValueError(""invalid version number '{}'"".format(vstring))

        tag = m.group(self._re_prerel_tag)
        tag_num = m.group(self._re_prerel_num)

        if tag is not None and tag_num is not None:
            self.prerelease = (tag, int(tag_num))
            vnum_string = vstring[:-(len(tag) + len(tag_num))]
        else:
            self.prerelease = None
            vnum_string = vstring

        self.version = tuple(map(int, self.sep_re.split(vnum_string)))


    def __repr__(self):
        return ""{cls} ('{vstring}', '{sep}', {prerel_tags})""\
            .format(cls=self.__class__.__name__, vstring=str(self),
                sep=self.sep, prerel_tags = list(self.prerel_tags.keys()))

    def __str__(self):
        s = self.sep.join(map(str,self.version))
        if self.prerelease:
            return s + ""{}{}"".format(*self.prerelease)
        else:
            return s

    def __lt__(self, other):
        """"""
        Fails when  the separator is not the same or when the pre-release tags
        are not the same or do not respect the same order.
        """"""
        # TODO deal with trailing zeroes: e.g. ""1.2.0"" == ""1.2""
        if self.prerel_tags != other.prerel_tags or self.sep != other.sep:
            raise ValueError(""Unable to compare: instances have different""
                "" structures"")

        if self.version == other.version and self.prerelease is not None and\
                other.prerelease is not None:

            tag_index = self.prerel_tags[self.prerelease[0]]
            other_index = self.prerel_tags[other.prerelease[0]]
            if tag_index == other_index:
                return self.prerelease[1] < other.prerelease[1]

            return tag_index < other_index

        elif self.version == other.version:
            return self.prerelease is not None and other.prerelease is None

        return self.version < other.version

    def __eq__(self, other):
        tag_index = self.prerel_tags[self.prerelease[0]]
        other_index = other.prerel_tags[other.prerelease[0]]
        return self.prerel_tags == other.prerel_tags and self.sep == other.sep\
            and self.version == other.version and tag_index == other_index and\
                self.prerelease[1] == other.prerelease[1]




import unittest

class TestNumberedVersion(unittest.TestCase):

    def setUp(self):
        self.v = NumberedVersion()

    def test_compile_pattern(self):
        p = self.v._compile_pattern('.', ['a', 'b'])
        tests = {'1.2.3': True, '1a0': True, '1': True, '1.2.3.4a5': True,
            'b': False, '1c0': False, ' 1': False, '': False}
        for test, result in tests.iteritems():
            self.assertEqual(result, p.match(test) is not None, \
                ""test: {} result: {}"".format(test, result))


    def test_parse(self):
        tests = {""1.2.3.4a5"": ((1, 2, 3, 4), ('a', 5))}
        for test, result in tests.iteritems():
            self.v.parse(test)
            self.assertEqual(result, (self.v.version, self.v.prerelease))

    def test_str(self):
        tests = (('1.2.3',), ('10-2-42rc12', '-', ['rc']))
        for t in tests:
            self.assertEqual(t[0], str(NumberedVersion(*t)))

    def test_repr(self):
        v = NumberedVersion('1,2,3rc4', ',', ['lol', 'rc'])
        expected = ""NumberedVersion ('1,2,3rc4', ',', ['lol', 'rc'])""
        self.assertEqual(expected, repr(v))


    def test_order(self):
        test = [""1.7.0"", ""1.7.0rc0"", ""1.11.0""]
        expected = ['1.7.0rc0', '1.7.0', '1.11.0']
        versions = [NumberedVersion(v, '.', ['rc']) for v in test]
        self.assertEqual(expected, list(map(str,sorted(versions))))


if __name__ == '__main__':
    unittest.main()
"
Generating a list of repetitions regardless of the order,">>> from timeit import timeit
>>> timeit(lambda:list(assignments(12, 5)), number=1)
4.513746023178101
>>> sum(1 for _ in assignments(12, 5))
2079475
"
Concatenation of many lists in Python,"sum(getNeighbors(n) for n in getNeighbors(vertex), [])
"
Sorting a list of lists by item frequency in Python 2.3,"def key_sort(seq, cmp=None, key=None, reverse=False):
    if key is not None:
        transform = [(key(x), i, x) for i, x in enumerate(seq)]
        transform.sort(None if cmp is None else lambda (k, _, _), (l, _, _): cmp(k, l))
        seq[:] = [x for _, _, x in transform]
    else:
        seq.sort(cmp)
    if reverse:
        seq.reverse()
"
How to merge this functionality with argparse?,"import argparse
import codecs
from sklearn.feature_extraction.text import TfidfVectorizer

parser = argparse.ArgumentParser()
parser.add_argument(""stop_word_list"", help=""The stop word list"")
args = parser.parse_args()

with codecs.open(args.stop_word_list, encoding='utf-8') as f:
    spanish_stop_words = [line.strip() for line in f]
    print spanish_stop_words

from sklearn.feature_extraction import text
my_stop_words = text.ENGLISH_STOP_WORDS.union(spanish_stop_words)

tfidf_vect = TfidfVectorizer(stop_words=set(my_stop_words))
"
Sorting string into identical words,">>> word = 'letters'
>>> scrambled = ['s', 'e', 'l', 'r', 'e', 't', 't']
>>> def make_sort_key(word):
...     indices = {}
...     for i, c in enumerate(word):
...         indices.setdefault(c, []).append(i)
...     def key(c):
...         return indices[c].pop()
...     return key
... 
>>> sorted(scrambled, key=make_sort_key(word))
['l', 'e', 't', 't', 'e', 'r', 's']
"
Python 3.4 What is this list doing?,">> x = [1,2,3]
>>> id(x)
141910924
>>> y = x
>>> id(y)
141910924
>>> z = list(x)
>>> id(z)
141676844
>>> x.append(10)
>>> x
[1, 2, 3, 10]
>>> y
[1, 2, 3, 10]
>>> z
[1, 2, 3]
"
"GStreamer, Python, and Raspberry Pi","Name

gst-launch - build and run a GStreamer pipeline
Synopsis

gst-launch [OPTION...] PIPELINE-DESCRIPTION
Description

gst-launch is a tool that builds and runs basic GStreamer pipelines.

In simple form, a PIPELINE-DESCRIPTION is a list of elements separated by exclamation marks (!). Properties may be appended to elements, in the form property=value.

For a complete description of possible PIPELINE-DESCRIPTIONS see the section pipeline description below or consult the GStreamer documentation.

Please note that gst-launch is primarily a debugging tool for developers and users. You should not build applications on top of it. For applications, use the gst_parse_launch() function of the GStreamer API as an easy way to construct pipelines from pipeline descriptions.
Options

gst-launch accepts the following options:

--help

Print help synopsis and available FLAGS
-v, --verbose
    Output status information and property notifications 
-q, --quiet
    Do not print any progress information 
-m, --messages
    Output messages posted on the pipeline bus 
-t, --tags
    Output tags (also known as metadata) 
-o FILE, --output=FILE
    Save XML representation of pipeline to FILE and exit 
-f, --no_fault
    Do not install a fault handler 
-T, --trace
    Print memory allocation traces. The feature must be enabled at compile time to work. 

Gstreamer Options

gst-launch also accepts the following options that are common to all GStreamer applications:

--gst-version
    Prints the version string of the GStreamer core library. 
--gst-fatal-warnings
    Causes GStreamer to abort if a warning message occurs. This is equivalent to setting the environment variable G_DEBUG to 'fatal_warnings' (see the section environment variables below for further information). 
--gst-debug=STRING
    A comma separated list of category_name:level pairs to specify debugging levels for each category. Level is in the range 0-5 where 0 will show no messages, and 5 will show all messages. The wildcard * can be used to match category names.

    Use --gst-debug-help to show category names

    Example: GST_CAT:5,GST_ELEMENT_*:3,oggdemux:5 
--gst-debug-level=LEVEL
    Sets the threshold for printing debugging messages. A higher level will print more messages. The useful range is 0-5, with the default being 0. 
--gst-debug-no-color
    GStreamer normally prints debugging messages so that the messages are color-coded when printed to a terminal that handles ANSI escape sequences. Using this option causes GStreamer to print messages without color. Setting the GST_DEBUG_NO_COLOR environment variable will achieve the same thing. 
--gst-debug-disable
    Disables debugging. 
--gst-debug-help
    Prints a list of available debug categories and their default debugging level. 
--gst-plugin-spew
    GStreamer info flags to set Enable printout of errors while loading GStreamer plugins 
--gst-plugin-path=PATH
    Add directories separated with ':' to the plugin search path 
--gst-plugin-load=PLUGINS
    Preload plugins specified in a comma-separated list. Another way to specify plugins to preload is to use the environment variable GST_PLUGIN_PATH 

Pipeline Description

A pipeline consists elements and links. Elements can be put into bins of different sorts. Elements, links and bins can be specified in a pipeline description in any order.

Elements

ELEMENTTYPE [PROPERTY1 ...]

Creates an element of type ELEMENTTYPE and sets the PROPERTIES.

Properties

PROPERTY=VALUE ...

Sets the property to the specified value. You can use gst-inspect(1) to find out about properties and allowed values of different elements.
Enumeration properties can be set by name, nick or value.

Bins

[BINTYPE.] ( [PROPERTY1 ...] PIPELINE-DESCRIPTION )

Specifies that a bin of type BINTYPE is created and the given properties are set. Every element between the braces is put into the bin. Please note the dot that has to be used after the BINTYPE. You will almost never need this functionality, it is only really useful for applications using the gst_launch_parse() API with 'bin' as bintype. That way it is possible to build partial pipelines instead of a full-fledged top-level pipeline.

Links

[[SRCELEMENT].[PAD1,...]] ! [[SINKELEMENT].[PAD1,...]] [[SRCELEMENT].[PAD1,...]] ! CAPS ! [[SINKELEMENT].[PAD1,...]]

Links the element with name SRCELEMENT to the element with name SINKELEMENT, using the caps specified in CAPS as a filter. Names can be set on elements with the name property. If the name is omitted, the element that was specified directly in front of or after the link is used. This works across bins. If a padname is given, the link is done with these pads. If no pad names are given all possibilities are tried and a matching pad is used. If multiple padnames are given, both sides must have the same number of pads specified and multiple links are done in the given order.
So the simplest link is a simple exclamation mark, that links the element to the left of it to the element right of it.

Caps

MIMETYPE [, PROPERTY[, PROPERTY ...]]] [; CAPS[; CAPS ...]]

Creates a capability with the given mimetype and optionally with given properties. The mimetype can be escaped using quotations. If you want to chain caps, you can add more caps in the same format afterwards.

Properties

NAME=[(TYPE)]VALUE
in lists and ranges: [(TYPE)]VALUE

Sets the requested property in capabilities. The name is an alphanumeric value and the type can have the following case-insensitive values:
- i or int for integer values or ranges
- f or float for float values or ranges
- 4 or fourcc for FOURCC values
- b, bool or boolean for boolean values
- s, str or string for strings
- fraction for fractions (framerate, pixel-aspect-ratio)
- l or list for lists
If no type was given, the following order is tried: integer, float, boolean, string.
Integer values must be parsable by strtol(), floats by strtod(). FOURCC values may either be integers or strings. Boolean values are (case insensitive) yes, no, true or false and may like strings be escaped with quotations.
Ranges are in this format: [ VALUE, VALUE ]
Lists use this format: ( VALUE [, VALUE ...] )
Pipeline Control

A pipeline can be controlled by signals. SIGUSR2 will stop the pipeline (GST_STATE_NULL); SIGUSR1 will put it back to play (GST_STATE_PLAYING). By default, the pipeline will start in the playing state.
There are currently no signals defined to go into the ready or pause (GST_STATE_READY and GST_STATE_PAUSED) state explicitely.
Pipeline Examples

The examples below assume that you have the correct plug-ins available. In general, ""osssink"" can be substituted with another audio output plug-in such as ""esdsink"", ""alsasink"", ""osxaudiosink"", or ""artsdsink"". Likewise, ""xvimagesink"" can be substituted with ""ximagesink"", ""sdlvideosink"", ""osxvideosink"", or ""aasink"". Keep in mind though that different sinks might accept different formats and even the same sink might accept different formats on different machines, so you might need to add converter elements like audioconvert and audioresample (for audio) or ffmpegcolorspace (for video) in front of the sink to make things work.

Audio playback

gst-launch filesrc location=music.mp3 ! mad ! audioconvert ! audioresample ! osssink
Play the mp3 music file ""music.mp3"" using a libmad-based plug-in and output to an OSS device

gst-launch filesrc location=music.ogg ! oggdemux ! vorbisdec ! audioconvert ! audioresample ! osssink
Play an Ogg Vorbis format file

gst-launch gnomevfssrc location=music.mp3 ! mad ! osssink
gst-launch gnomevfssrc location=http://domain.com/music.mp3 ! mad ! audioconvert ! audioresample ! osssink
Play an mp3 file or an http stream using GNOME-VFS

gst-launch gnomevfssrc location=smb://computer/music.mp3 ! mad ! audioconvert ! audioresample ! osssink
Use GNOME-VFS to play an mp3 file located on an SMB server

Format conversion

gst-launch filesrc location=music.mp3 ! mad ! audioconvert ! vorbisenc ! oggmux ! filesink location=music.ogg
Convert an mp3 music file to an Ogg Vorbis file

gst-launch filesrc location=music.mp3 ! mad ! audioconvert ! flacenc ! filesink location=test.flac
Convert to the FLAC format

Other

gst-launch filesrc location=music.wav ! wavparse ! audioconvert ! audioresample ! osssink
Plays a .WAV file that contains raw audio data (PCM).

gst-launch filesrc location=music.wav ! wavparse ! audioconvert ! vorbisenc ! oggmux ! filesink location=music.ogg
gst-launch filesrc location=music.wav ! wavparse ! audioconvert ! lame ! filesink location=music.mp3
Convert a .WAV file containing raw audio data into an Ogg Vorbis or mp3 file

gst-launch cdparanoiasrc mode=continuous ! audioconvert ! lame ! id3v2mux ! filesink location=cd.mp3
rips all tracks from compact disc and convert them into a single mp3 file

gst-launch cdparanoiasrc track=5 ! audioconvert ! lame ! id3v2mux ! filesink location=track5.mp3
rips track 5 from the CD and converts it into a single mp3 file

Using gst-inspect(1), it is possible to discover settings like the above for cdparanoiasrc that will tell it to rip the entire cd or only tracks of it. Alternatively, you can use an URI and gst-launch-0.10 will find an element (such as cdparanoia) that supports that protocol for you, e.g.: gst-launch cdda://5 ! lame vbr=new vbr-quality=6 ! filesink location=track5.mp3

gst-launch osssrc ! audioconvert ! vorbisenc ! oggmux ! filesink location=input.ogg
records sound from your audio input and encodes it into an ogg file

Video

gst-launch filesrc location=JB_FF9_TheGravityOfLove.mpg ! dvddemux ! mpeg2dec ! xvimagesink
Display only the video portion of an MPEG-1 video file, outputting to an X display window

gst-launch filesrc location=/flflfj.vob ! dvddemux ! mpeg2dec ! sdlvideosink
Display the video portion of a .vob file (used on DVDs), outputting to an SDL window

gst-launch filesrc location=movie.mpg ! dvddemux name=demuxer demuxer. ! queue ! mpeg2dec ! sdlvideosink demuxer. ! queue ! mad ! audioconvert ! audioresample ! osssink
Play both video and audio portions of an MPEG movie

gst-launch filesrc location=movie.mpg ! mpegdemux name=demuxer demuxer. ! queue ! mpeg2dec ! ffmpegcolorspace ! sdlvideosink demuxer. ! queue ! mad ! audioconvert ! audioresample ! osssink
Play an AVI movie with an external text subtitle stream

This example also shows how to refer to specific pads by name if an element (here: textoverlay) has multiple sink or source pads.

gst-launch textoverlay name=overlay ! ffmpegcolorspace ! videoscale ! autovideosink filesrc location=movie.avi ! decodebin2 ! ffmpegcolorspace ! overlay.video_sink filesrc location=movie.srt ! subparse ! overlay.text_sink

Play an AVI movie with an external text subtitle stream using playbin2

gst-launch playbin2 uri=file:///path/to/movie.avi suburi=file:///path/to/movie.srt

Network streaming

Stream video using RTP and network elements.

gst-launch v4l2src ! video/x-raw-yuv,width=128,height=96,format='(fourcc)'UYVY ! ffmpegcolorspace ! ffenc_h263 ! video/x-h263 ! rtph263ppay pt=96 ! udpsink host=192.168.1.1 port=5000 sync=false
Use this command on the receiver

gst-launch udpsrc port=5000 ! application/x-rtp, clock-rate=90000,payload=96 ! rtph263pdepay queue-delay=0 ! ffdec_h263 ! xvimagesink
This command would be run on the transmitter

Diagnostic

gst-launch -v fakesrc num-buffers=16 ! fakesink
Generate a null stream and ignore it (and print out details).

gst-launch audiotestsrc ! audioconvert ! audioresample ! osssink
Generate a pure sine tone to test the audio output

gst-launch videotestsrc ! xvimagesink
gst-launch videotestsrc ! ximagesink
Generate a familiar test pattern to test the video output

Automatic linking

You can use the decodebin element to automatically select the right elements to get a working pipeline.

gst-launch filesrc location=musicfile ! decodebin ! audioconvert ! audioresample ! osssink
Play any supported audio format

gst-launch filesrc location=videofile ! decodebin name=decoder decoder. ! queue ! audioconvert ! audioresample ! osssink decoder. ! ffmpegcolorspace ! xvimagesink
Play any supported video format with video and audio output. Threads are used automatically. To make this even easier, you can use the playbin element:

gst-launch playbin uri=file:///home/joe/foo.avi

Filtered connections

These examples show you how to use filtered caps.

gst-launch videotestsrc ! 'video/x-raw-yuv,format=(fourcc)YUY2;video/x-raw-yuv,format=(fourcc)YV12' ! xvimagesink
Show a test image and use the YUY2 or YV12 video format for this.

gst-launch osssrc ! 'audio/x-raw-int,rate=[32000,64000],width=[16,32],depth={16,24,32},signed=(boolean)true' ! wavenc ! filesink location=recording.wav
record audio and write it to a .wav file. Force usage of signed 16 to 32 bit samples and a sample rate between 32kHz and 64KHz.
Environment Variables

GST_DEBUG

    Comma-separated list of debug categories and levels, e.g. GST_DEBUG=totem:4,typefind:5 
GST_DEBUG_NO_COLOR
    When this environment variable is set, coloured debug output is disabled. 
GST_DEBUG_DUMP_DOT_DIR
    When set to a filesystem path, store dot files of pipeline graphs there. 
GST_REGISTRY
    Path of the plugin registry file. Default is ~/.gstreamer-0.10/registry-CPU.xml where CPU is the machine/cpu type GStreamer was compiled for, e.g. 'i486', 'i686', 'x86-64', 'ppc', etc. (check the output of ""uname -i"" and ""uname -m"" for details). 
GST_REGISTRY_UPDATE
    Set to ""no"" to force GStreamer to assume that no plugins have changed, been added or been removed. This will make GStreamer skip the initial check whether a rebuild of the registry cache is required or not. This may be useful in embedded environments where the installed plugins never change. Do not use this option in any other setup. 
GST_PLUGIN_PATH
    Specifies a list of directories to scan for additional plugins. These take precedence over the system plugins. 
GST_PLUGIN_SYSTEM_PATH
    Specifies a list of plugins that are always loaded by default. If not set, this defaults to the system-installed path, and the plugins installed in the user's home directory 
OIL_CPU_FLAGS
    Useful liboil environment variable. Set OIL_CPU_FLAGS=0 when valgrind or other debugging tools trip over liboil's CPU detection (quite a few important GStreamer plugins like videotestsrc, audioconvert or audioresample use liboil). 
G_DEBUG
    Useful GLib environment variable. Set G_DEBUG=fatal_warnings to make GStreamer programs abort when a critical warning such as an assertion failure occurs. This is useful if you want to find out which part of the code caused that warning to be triggered and under what circumstances. Simply set G_DEBUG as mentioned above and run the program in gdb (or let it core dump). Then get a stack trace in the usual way. 

Files

~/.gstreamer-0.10/registry-*.xml

    The xml plugin database; can be deleted at any time, will be re-created automatically when it does not exist yet or plugins change. 

See Also

gst-feedback(1), gst-inspect(1), gst-typefind(1)
Author

The GStreamer team at http://gstreamer.freedesktop.org/
Referenced By
gst-xmllaunch-0.10(1) 
"
Can python handle unevaluated expression arguments?,"In [ 6]: def my_func(a, statement):
   ....:     print a
   ....:     exec(statement)
   ....:     print a
   ....:     

In [ 7]: a = 9

In [ 8]: my_func(a, 'a += 1')
9
10
"
How to use the grid() python,"from Tkinter import *  # or tkinter if you use Python3

root = Tk()

label_1 = Label(master=root, text='Name 1')
label_2 = Label(master=root, text='Name 2')
label_3 = Label(master=root, text='Name 3')
label_4 = Label(master=root, text='Name 4')

label_1.pack()
label_2.pack()
label_3.pack()
label_4.pack(side=BOTTOM)

root.mainloop()
"
How to rewrite the code which appends to lists with numpy arrays,"xup=np.linspace(0,1,50)
xdn=np.linspace(1,0,50)
x=np.hstack([xup,xdn])
saw2 = np.hstack([x for _ in range(4)])
"
Python: how to implement __getattr__()?,"
>>> ob = MyClass()
>>> ob.a
'v1'
"
Why checkbox not submitting any data at onchange when being unchecked,"<Storage {'the_name': [some_value, some_value]}>
"
How to use groupby to apply multiple functions to multiple columns in Pandas?,"       B                      C                         
      up down mean       std up down      mean       std
A                                                       
False  2    0  4.5  0.707107  2    0  3.000000  1.414214
True   3    0  2.0  1.000000  3    0  2.333333  1.527525
"
Data type to save a table,">>> p = data[0]
>>> p.name
Josh
"
How to access a class's property using a partialmethod?,">>> class Baz(object):
...     _foo = 'spam'
...     @property
...     def foo(self):
...         return self._foo
...     echo = partialmethod_with_descriptorargs(mk_foobar, foo)
... 
>>> baz = Baz()
>>> baz.foo
'spam'
>>> baz.echo()
<__main__.Baz object at 0x10611e048>
spam
bar
>>> baz_echo = baz.echo  # just the method
>>> baz._foo = 'ham'
>>> baz.foo
'ham'
>>> baz_echo()
<__main__.Baz object at 0x10611e048>
spam
bar
>>> baz.echo()
<__main__.Baz object at 0x10611e048>
ham
bar
"
"Combine Dictionaries With average values for similar keys,Python","d = {}
for k, v in dict_a.items():
    if k in dict_b:
        val1, val2 =  (v[0]+ dict_b[k][0]) / 2, (v[1] + dict_b[k][1]) / 2 # average sum of ele1 and ele2 in each value list
        d[k] = [val1, val2] # set new value to key
    else:
        d[k] = v # else just add the k,v 

for k,v in dict_b.items(): # add rest of keys from dict_b
    if k not in d: # if key not already in d add it
        d[k] = v
print d

{'key3': [37, 89.56], 'key2': [35, 76], 'key1': [39, 71], 'key4': [46, 89]}
"
how to decrement and increment loop range 'i' variable in the execution of loop in python,"final_result = 0
a = '3 4  4 5 6'
i = 0
while i < len(a):
    print('iteration')
    print('i is = ')
    print(i)
    if a[i] is ' ' and a[i + 1] is not ' ':
        if i - 1 is 0:
            final_result = int(a[i - 1]) + int(a[i + 1])
            i += 2  # here goes the increment
            print('1a- m here')
            print(final_result)
            print('i is = ')
            print(i)
        else:
            final_result = final_result + int(a[i + 1])
            i += 2  # here goes the increment
            print('1b- m here')
            print(final_result)
    elif a[i] is ' ' and a[i + 1] is ' ':
        if i - 1 is 0:
            final_result = int(a[i - 1]) - int(a[i + 1])
            i += 3  # here goes the increment
            print('2a- m here')
            print(final_result)
        else:
            final_result = final_result - int(a[i + 2])
            i += 3  # here goes the increment
            print('2b- m here')
            print(final_result)
            print('i is = ')
            print(i)
    else:
        i += 1
print(final_result)
"
Howto list files on a smartcard with pyscard,"00 A4 04 0C 06 FF544143484F
"
Combining lists and performing a check,"attendees = Attendee.objects.filter(event=event)
"
Value update in manager.dict not reflected,"   def updateList(self,l,i):
        with self.lock: # acquire lock
            for j in range(10):
                self.dict1[0]+=1
                print (""update from"", i,self.lst[0])
"
how to sort xls file column wise and write it to another file with entire row using python?,"     column = 0 #The column you want to sort by
     reader = list(csv.reader(open('input.xsl')))
     reader.sort(key=lambda x: x[column])
     writer = csv.writer(open('output.xsl', 'w'))
     writer.writerows(reader)
"
Equivalent of R's tapply() in Python Pandas,"In [13]: df.pivot_table(rows='Animal', cols='FeedType', values='Amount(kg)', aggfunc='sum')
Out[13]:
FeedType   A   B
Animal
Animal1   10   5
Animal2    2  13
Animal3    6 NaN
"
Connect to MSSQL Server 2008 on linux,"# Define a connection to the MSSQL server.
# The Description can be whatever we want it to be.
# The Driver value must match what we have defined in /etc/odbcinst.ini
# The Database name must be the name of the database this connection will connect to.
# The ServerName is the name we defined in /etc/freetds/freetds.conf
# The TDS_Version should match what we defined in /etc/freetds/freetds.conf
[mssql]
Description             = MSSQL Server
Driver                  = freetds
Database                = MyDatabase
ServerName              = mssql
TDS_Version             = 8.0
"
Iterate Items in Their Specific Groups in Django,"{% extends ""base.html"" %}

{% block content %}

{% for group in group_list %}
    {{ group.name }}<br />

    <p>Item for this group</p>
    {% for item in group.item_set.all %}
        {{item.name}}
    {% endfor %}
{% endfor %}
"
How can I register a single view (not a viewset) on my router?,"router.register(r'updatetime', views.UpdateTimeViewSet, base_name='updatetime')
"
modify discrete LinearSegmentedColormap,"import matplotlib.pyplot as plt
import numpy as np
from matplotlib import cm
import matplotlib.colors as cols
from numpy.random import randn

def cmap_double_discretize(cmap_bottom, cmap_top, N, split=.5):
    """"""
    Generates a descritized color map using two existing color maps

    Parameters
    ----------
    cmap_bottom : cmap
        The bottom cmap

    cmap_top : cmap
        The top cmap

    N : int
       The number of bins in each color map

    split : float, optional
       Where to join the maps, must be in [0, 1]
    """"""
    # sanity check
    assert split < 1 and split > 0
    # set up the data structure
    cdict = {lab: [] for lab in ('red','green','blue')}
    # do this in a fancy loop to a) save typing, b) make it easy to
    # retrofit to do arbitrary splits
    for cmap, ends in zip((cmap_bottom, cmap_top), ((0, split), (split, 1))):

        # run over the _whole_ range for each color map
        colors_i = np.concatenate((np.linspace(0, 1., N), (0.,0.,0.,0.)))
        # map the color
        colors_rgba = cmap(colors_i)
        # get the values 
        indices = np.linspace(ends[0], ends[1], N+1, endpoint=True)

        for ki,key in enumerate(('red','green','blue')):
            cdict[key].extend((indices[i], colors_rgba[i-1,ki], colors_rgba[i,ki]) for i in xrange(N+1))
            #    print cdict
    # Return colormap object.
    return cols.LinearSegmentedColormap(cmap.name + ""_%d""%N, cdict, 1024)

red_cdict = {'red': [(0, 0, 1),
                     (1, 1, 0)],
            'blue': [(0, 0, 0),
                     (1, 1, 0)],
            'green': [(0, 0, 0),
                     (1, 1, 0)]}

blue_cdict = {'blue': [(0, 0, 1),
                       (1, 1, 0),],
            'red': [(0, 0, 1),
                    (1, 0, 0)],
            'green': [(0, 0, 1),
                     (1, 0, 0)]}
red_cmap = cols.LinearSegmentedColormap('red', red_cdict, 1024)
blue_cmap = cols.LinearSegmentedColormap('blue', blue_cdict, 1024)

test_cmap = cmap_double_discretize(red_cmap, blue_cmap, 6)
# these don't actually go to white!
# test_cmap = cmap_double_discretize(cm.get_cmap('Reds_r'), cm.get_cmap('Blues'), 6)


fig, ax = plt.subplots()
data = np.clip(randn(250, 250), -1, 1)

cax = ax.pcolor(data, cmap=test_cmap)
plt.colorbar(cax)

plt.show()
"
Filter numpy structured array based based on unique elements in one dimension,"data = data[indices]
"
Python IF Statement not being displayed,"if cont in [""n"", ""N""]:
"
Python: How can I print out an object as a regular dictionary without reference?,"class Object1:
    d = 1

    def __str__(self):
        return str(self.d)

    def __repr__(self):
        return str(self.d)
"
Is there a non-copying constructor for a pandas DataFrame,"In [44]: s = sarray[:1000000]
"
Python - Catch run time of the file in specific Format,"import datetime
s = datetime.datetime.now()
#codes here
print (datetime.datetime.now() - s)
"
List and serve files from GridFS with Flask,"@app.route('/get-file/<name>')
@app.route('/get-file')
def get_file(name=None):
    fs = gridfs.GridFS(MongoClient().CINEfs_example)

    if name is not None:
        f = fs.get_last_version(name)
        r = app.response_class(f, direct_passthrough=True, mimetype='application/octet-stream')
        r.headers.set('Content-Disposition', 'attachment', filename=name)
        return r

    return render_template('get_file.html', names=fs.list())
"
Two Decimals in Python?,">>> volume = 193019.2896
>>> decimals = 2
>>> print(""The volume of the cylinder is {0:.{1}f}cm\u00b3"".format(volume, decimals))
The volume of the cylinder is 193019.29cm³
>>> decimals = 3
>>> print(""The volume of the cylinder is {0:.{1}f}cm\u00b3"".format(volume, decimals))
The volume of the cylinder is 193019.290cm³
"
How to intersect dictionary key (that is a text file) and print the value from the key that generated more intersections,"    ...
from collections import Counter

intersection_lengths = Counter()
intersections = {}
me = me.split()
for song_filename in songs:
    with open(song_filename) as f:
        lyrics = f.read().split()
    intersections[song_filename] = set(me) & set(lyrics)
    intersection_lengths[song_filename] = len(intersections[song_filename])

most_intersections = intersection_lengths.most_common(1)
if most_intersections:
    print most_intersections[0], most_intersections[1], \
          list(intersections[most_intersections[0]])
else:
    print 'there were no intersections'
"
"List vs. int assignment - ""Every variable is a pointer""","x=[1,2,3]  # The name x is assigned to the list object [1,2,3]
y=x        # The name y is assigned to the same list object referenced by x
x[1]=3     # This *modifies* the list object referenced by both x and y
print y    # The modified list object is printed
"
Iterating Through Table Rows in Selenium (Python),"table =  driver.find_element_by_xpath(""//table[@class='datadisplaytable']"")

for row in table.find_elements_by_xpath("".//tr""):
    print([td.text for td in row.find_elements_by_xpath("".//td[@class='dddefault'][text()]"")
"
What is the best way to create a moving window in 2D array ond order pixels,"In [2]: import numpy as np

In [3]: d = np.random.random((10, 2)).reshape((-1,4))

In [4]: d
Out[4]: 
array([[ 0.65945195,  0.1907593 ,  0.1630845 ,  0.76949532],
       [ 0.90823488,  0.71518689,  0.38422877,  0.77824007],
       [ 0.31453967,  0.76592537,  0.5871099 ,  0.09306465],
       [ 0.38251335,  0.97461878,  0.97562622,  0.87532202],
       [ 0.12358359,  0.20323007,  0.397975  ,  0.615806  ]])


In [7]: e = np.array([4-np.argsort(r) for r in d])

In [8]: e
Out[8]: 
array([[2, 3, 4, 1],
       [2, 3, 1, 4],
       [1, 4, 2, 3],
       [4, 1, 3, 2],
       [4, 3, 2, 1]])
"
Location of stored offline data for cartopy,"$> python tools/feature_download.py --help
usage: feature_download.py [-h] [--output OUTPUT] [--dry-run] [--ignore-repo-data] GROUP_NAME [GROUP_NAME ...]

Download feature datasets.

positional arguments:
  GROUP_NAME            Feature group name: cultural-extra, cultural, gshhs, physical

optional arguments:
  -h, --help            show this help message and exit
  --output OUTPUT, -o OUTPUT
                        save datasets in the specified directory (default: user cache directory)
  --dry-run             just print the URLs to download
  --ignore-repo-data    ignore existing repo data when downloading
"
Using 'If' to run the loop again?,"import random
def rand_range(a, b):
   return a + random.uniform() * (b - a)

x = [rand_range(-3, 3) for i in range(3)]
y = [rand_range(-3, 3) for i in range(3)]
"
Get attributes and text from Xpath query as a list,"from lxml import html
str = '<a href=""href1""> Text1 </a>' \
      '<a href=""href2""> Text2 </a>' \
      '<a href=""href3""> Text3 </a>'
tree = html.fromstring(str)
items = tree.xpath('//a/text() | //a/@href')

for href, text in zip(*[iter(items)]*2):
    print text, href
"
soap response to xml,"import re

s = '''(ArrayOfNotificationData){NotificationData[] = (NotificationData){Id = 1 Title = ""notification 1"" Message = ""bla bla."" Published = 2000-01-01 00:00:00}, (NotificationData){Id = 2 Title = ""notification 2"" Message = ""bla bla."" Published = 2000-01-01 00:00:00},}'''

def f(d):
    for k, v in d.items():
        if v is None:
            d[k] = ''
    return d

def g(reg, rep):
    c1 = s
    c2 = ''
    while c1 != c2:
        c2 = c1
        c1 = re.sub(reg, lambda m: rep.format(**f(m.groupdict())), c1)
    print c1

g('(?P<m>\w+)\s+=\s+(?:(?P<v>\\d+-\\d+-\\d+ \\d+:\\d+:\\d+|\w+)|""(?P<v3>[^""]*)"")|(?:(?:\\w|\\[|\\])+\\s*=\\s*)?\\((?P<m2>\w+)\\){(?P<v2>[^}{]*)}\s*,?', '<{m}{m2}>{v}{v2}{v3}</{m}{m2}>')
"
"python, loading multiple instances of something","with open(newDailyFile) as file:
    lines = file.readlines() #Gets each one line by line, then I can load them
    for i in lines:
        result = loads(i)
"
How can I access unknown objects at runtime - not their names,"[v for k, v in globals().items() if 'possible_seq' in k]
"
Most Pythonic Way to Build Dictionary From Single List,"In [27]: lis = ['a', 'b', 'c', 'd']

In [28]: dic = {x: 0 for x in lis}

In [29]: dic
Out[29]: {'a': 0, 'b': 0, 'c': 0, 'd': 0}
"
Count even and odd numbers and the totals (python),"sum(odd)
sum(even)
"
Python - Create shared class variable in class itself,"    def get_dimensions(self, calculate=False):
        self.dimensions = (np.shape(self.data) 
             if calculate or self.dimensions is None
             else self.dimensions)
        return self.dimensions
"
How to aggregate the values of a DataFrame (and output a numpy array quickly)?,"In [464]: pivotarray(df)
Out[464]: 
array([[0, 2, 5, 0],
       [5, 0, 0, 0],
       [3, 0, 0, 1],
       [1, 0, 4, 0]])
"
Threads with decorators,"def run_in_thread(fn):
    def run(*k, **kw):
        t = threading.Thread(target=fn, args=k, kwargs=kw)
        t.start()
        return t # <-- this is new!
    return run
"
Fast way to find index of array in array of arrays,"[      3      10      17 ..., 8550398 8550405 8550412]
"
How to test loopback socket connections with python?,"import socket

client, testsocket = socket.socketpair()
client.sendall(""test_recv"")
print testsocket.recv(1024)
testsocket.close()
client.close()
"
Replace values of a numpy array by values from another numpy array,"[['M' 'S' 'S' 'S' 'S' 'S']
 ['L' 'M' 'L' 'M' 'S' 'S']
 ['S' 'M' 'M' 'M' 'S' 'XL']
 ['L' 'S' 'L' 'L' 'L' 'M']
 ['S' 'S' 'S' 'S' 'S' 'L']
 ['L' 'M' 'S' 'S' 'S' 'S']]
"
pandas to_csv and then read_csv results to numpy.datetime64 messed up due to utc,"In [7]: Timestamp('2015-10-28 14:02:22.298130')       
Out[7]: Timestamp('2015-10-28 14:02:22.298130')

In [8]: Timestamp('2015-10-28 14:02:22.298130').value
Out[8]: 1446040942298130000

In [9]: np.array([1446040942298130000],dtype='M8[ns]')
Out[9]: array(['2015-10-28T10:02:22.298130000-0400'], dtype='datetime64[ns]')

In [10]: Timestamp(np.array([1446040942298130000],dtype='M8[ns]').view('i8').item())
Out[10]: Timestamp('2015-10-28 14:02:22.298130')
"
How to bin all subsets of a python list into n bins,">>> for x in everywhere(list(range(2)), 3):
...     print(x)
...     
[[0, 1], [], []]
[[0], [1], []]
[[0], [], [1]]
[[1], [0], []]
[[], [0, 1], []]
[[], [0], [1]]
[[1], [], [0]]
[[], [1], [0]]
[[], [], [0, 1]]
"
Praw: How to filter search results based on created date?,"limit = 100  # Reddit maximum limit
total_list = []
submissions = r.get_subreddit('soccer').get_new(limit=limit)
submissions_list = [
    x for x in submissions
    if datetime.utcfromtimestamp(x.created_utc) >= an_hour_ago
]
total_list += submissions_list
if len(submissions_list) == limit:
    submissions = r.get_subreddit('soccer').get_new(
        # get limit of items past the last item in the total list
        limit=100, params={""after"": total_list[-1].fullname}
    )
submissions_list_2 = [
    # iterate through the submissions generator object
    x for x in submissions
    # add item if item.created_utc is newer than an hour ago
    if datetime.utcfromtimestamp(x.created_utc) >= an_hour_ago
]
total_list += submissions_list_2
print total_list
"
How can I find the right gaussian curve given some data?,"import numpy as np
from scipy.stats import norm
from scipy.optimize import curve_fit
import matplotlib.pyplot as plt

# Beginning in one dimension:
mean = 0; Var = 1; N = 100
scatter = np.random.normal(mean,np.sqrt(Var),N)
scatter = np.sort(scatter)
mu1,sigma1 = norm.fit(scatter) # classical fit

scat_sum = np.cumsum(np.ones(scatter.shape))/N # cumulative samples
[mu2,sigma2],Cx = curve_fit(norm.cdf, scatter, scat_sum, p0=[0,1]) # curve fit
print(u""norm.fit():  µ1= {:+.4f}, σ1={:.4f}"".format(mu1, sigma1))
print(u""curve_fit(): µ2= {:+.4f}, σ2={:.4f}"".format(mu2, sigma2))

fg = plt.figure(1); fg.clf()
ax = fg.add_subplot(1, 1, 1)
t = np.linspace(-4,4, 1000)
ax.plot(t, norm.cdf(t, mu1, sigma1), alpha=.5, label=""norm.fit()"")
ax.plot(t, norm.cdf(t, mu1, sigma1), alpha=.5, label=""curve_fit()"")
ax.step(scatter, scat_sum, 'x-', where='post', alpha=.5, label=""Samples"")
ax.legend(loc=""best"")
ax.grid(True)
ax.set_xlabel(""$x$"")
ax.set_ylabel(""Cumulative Probability Density"")
ax.set_title(""Fit to Normal Distribution"")

fg.canvas.draw()
plt.show()
"
Python- Count the frequency of messages within a date range within per dynamic interval,"groupby()-based solution:
from itertools import groupby

times = (d['first_alerted_time'] for d in example_table)
bins = date_range(start_date, end_date + step, step)
def key(dt, end=[next(bins)]):
    while end[0] <= dt:
        end[0] = next(bins)
    return end[0]
print dict((end-step, sum(1 for _ in g)) for end, g in groupby(times, key=key))
"
"Java, how to start several jars that use 1 VM?","Compiling in1.js into out1.js...
Finished with status: 0
Compiling in2.js into out2.js...
Finished with status: 0
"
Breaking a list in to parts by subject,"bs = (d['b'] for d in lst)
"
Using \b in python 3,"Text: ABC   XYZ
"
compare lists in python,"import os
import threading


class ListComparator(threading.Thread):

    def __init__(self, file):

        threading.Thread.__init__(self)
        self.file = file
        self._stopevent = threading.Event()

    def run(self):
        name, extension = os.path.splitext(self.file)

        if (extension == '.txt'):

            print('comparing strings in file ' + name)

            try :
                f = open(file, 'r')

                l = [s.strip('\n') for s in f]

                f.close()

            except:
                print('unable to open file' + file)
                l = None

            if (l != None):

                try :

                    target = open(name + '_compared.txt', 'w')

                except Exception as e:
                    print(e)
                    target = None

                if (target != None):
                    for i in range(0, len(l) - 1):
                        for j in range(i + 1, len(l)):
                            result = 0
                            counter = 0

                            for k in range(len(l[i])):
                                if (int(l[i][k]) == int(l[j][k]) == 1):
                                    counter += 1

                            result = counter / len(l[i])
                            s = l[i] + ', ' + l[j] + ', ' + str(result) + '\n'

                            target.write(s)

                    target.close()

                    print(name + ' compared')
                else:
                    print(name + ' not compared')

        def stop(self):
            self._stopevent.set()


current_dir = os.getcwd()

for subdir, dirs, files in os.walk(current_dir):

    for file in files:

        try :
            comp = ListComparator(file)
            comp.start()

        except Exception as e:
            print(e)
"
Store business days according to week in Python (2.7)?,"{'week2': 4, 'week1': 1, 'week4': 5, 'week3': 5, 'week5': 5})
"
Getting the choice of optionmenu right after selection Python,"def option_changed(foo, bar, baz):
    #do stuff

#...
variable.trace(""w"", lambda *args: option_changed(qux, 23, ""hello""))
"
How to find the difference between 3 lists that may have duplicate numbers,"from collections import Counter
print Counter(n1) - Counter(n2)
# output: Counter({3: 1})
"
using if...then...else in to check if an object already exists,"new_crit = input(""Enter a name for your new critter: "")
for i in noc:
    if i.name == new_crit:  # name is a parameter used in the class Critter
        print(""That critter already exists"")
        break
else:
    # we can only get here if no such name was found, otherwise the for 
    # loop would have ended at the `break`
    Critter.noc.append(Critter(new_crit))
    print(""New critter has been created. the critter is named: "", new_crit)
"
How to reference creator object in Python?,"class A(object):
    def somemethod(self):
        b = B(self)
"
fastest way to get a hash from a list in python,"from __future__ import print_function
import sys
import timeit

setup = """"""
import array
import random
import hashlib
import marshal
import cPickle as pickle
import struct

r = [random.randrange(1, 1000) for _ in range(0, 1000000)]
ra = array.array('h', r)   # create an array of shorts equivalent

def method1(r):
    p = pickle.dumps(r, -1)
    return hashlib.md5(p).hexdigest()

def method2(r):
    p = str(r)
    return hashlib.md5(p).hexdigest()

def method3(r):
    p = ','.join(map(str, r))
    return hashlib.md5(p).hexdigest()

def method4(r):
    fmt = '%dh' % len(r)
    buf = struct.pack(fmt, *r)
    return hashlib.md5(buf).hexdigest()

def method5(r):
    a = array.array('h', r)
    return hashlib.md5(a).hexdigest()

def method6(r):
    m = marshal.dumps(r)
    return hashlib.md5(m).hexdigest()

# using pre-built array...
def pb_method1(ra):
    p = pickle.dumps(ra, -1)
    return hashlib.md5(p).hexdigest()

def pb_method2(ra):
    p = str(ra)
    return hashlib.md5(p).hexdigest()

def pb_method3(ra):
    p = ','.join(map(str, ra))
    return hashlib.md5(p).hexdigest()

def pb_method4(ra):
    fmt = '%dh' % len(ra)
    buf = struct.pack(fmt, *ra)
    return hashlib.md5(buf).hexdigest()

def pb_method5(ra):
    return hashlib.md5(ra).hexdigest()

def pb_method6(ra):
    m = marshal.dumps(ra)
    return hashlib.md5(m).hexdigest()
""""""

statements = {
    ""pickle.dumps(r, -1)"": """"""
        method1(r)
    """""",
    ""str(r)"": """"""
        method2(r)
    """""",
    ""','.join(map(str, r))"": """"""
        method3(r)
    """""",
    ""struct.pack(fmt, *r)"": """"""
        method4(r)
    """""",
    ""array.array('h', r)"": """"""
        method5(r)
    """""",
    ""marshal.dumps(r)"": """"""
        method6(r)
    """""",
# versions using pre-built array...
    ""pickle.dumps(ra, -1)"": """"""
        pb_method1(ra)
    """""",
    ""str(ra)"": """"""
        pb_method2(ra)
    """""",
    ""','.join(map(str, ra))"": """"""
        pb_method3(ra)
    """""",
    ""struct.pack(fmt, *ra)"": """"""
        pb_method4(ra)
    """""",
    ""ra (pre-built)"": """"""
        pb_method5(ra)
    """""",
    ""marshal.dumps(ra)"": """"""
        pb_method6(ra)
    """""",
}

N = 10
R = 3

timings = [(
    idea,
    min(timeit.repeat(statements[idea], setup=setup, repeat=R, number=N)),
    ) for idea in statements]

longest = max(len(t[0]) for t in timings)  # length of longest name

print('fastest to slowest timings (Python {}.{}.{})\n'.format(*sys.version_info[:3]),
      '  ({:,d} calls, best of {:d})\n'.format(N, R))

ranked = sorted(timings, key=lambda t: t[1])  # sort by speed (fastest first)
for timing in ranked:
    print(""{:>{width}} : {:.6f} secs, rel speed {rel:>8.6f}x"".format(
          timing[0], timing[1], rel=timing[1]/ranked[0][1], width=longest))
"
Huffman encoding issue,"from heapq import heappush, heappop, heapify

class Node(object):
    def __init__(self, weight, left, right):
        self.weight = weight
        self.left = left
        self.right = right
        self.code = None

    def __cmp__(self, a):
        return cmp(self.weight, a.weight)

class Symbol(object):
    def __init__(self, name, weight):
        self.name = name
        self.weight = weight
        self.code = None

    def __cmp__(self, a):
        return cmp(self.weight, a.weight)

def encode(symbfreq):
    # return pair (sym2object, tree), where
    # sym2object is a dict mapping a symbol name to its Symbol object,
    # and tree is the root of the Huffman tree
    sym2object = {sym: Symbol(sym, w) for sym, w in symbfreq}
    tree = sym2object.values()
    heapify(tree)
    while len(tree) > 1:
        lo = heappop(tree)
        hi = heappop(tree)
        heappush(tree, Node(lo.weight + hi.weight, lo, hi))
    tree = tree[0]

    def assigncode(node, code):
        node.code = code
        if isinstance(node, Node):
            assigncode(node.left, code + ""0"")
            assigncode(node.right, code + ""1"")
    assigncode(tree, """")

    return sym2object, tree

i = [('a', 1), ('b', 2), ('c', 3), ('d', 4), ('e', 5)]
s2o, t = encode(i)
for v in s2o.values():
    print v.name, v.code
"
parsing a url in python with changing part in it,">>> query['PartNo'] = 85731
"
Python: creating list of timestamps by minute,"2015-07-06 10:12:02.349574
"
PyInstaller won't load the PyQt's images to the GUI,"
import images_qr

# ... Some code here and there ...

self.setWindowIcon(QtGui.QIcon(':/img/image1.png')) # The colon is important, it must be there
"
Flask show return data on request,"return (jsonify({'username': user.username}), 201,
        {'Location': url_for('get_user', id=user.id, _external=True)})
"
"Open (read, write) a file in same directory as main app - python/kivy","fullpath = os.path.join(os.path.dirname(sys.argv[0]), 'filename.jpg')
"
Can I create a sort of cache in DB using django?,"from django.core.cache import cache

CACHE_KEY = 'events'
events = cache.get(CACHE_KEY, None)
if events is None:
    events = get_events()
    cache.set(CACHE_KEY, events, 3600) # expires in 1 hour
return events
"
Caching and reusing a function result in Tornado,"starting get_x
starting expensive_function
starting get_y
starting get_z
finished expensive_function
1 2 3
"
Django filter a reverse relationship of each item in a queryset,"users = User.objects.all()
users_with_right_answers = defaultdict(
    int,
    {
        user.id: user.right_answer_count for user in User.objects.filter(
            useranswer__value='...').annotate(
            right_answer_count=Count('useranswer')
    }
)
users_with_right_questions = defaultdict(
    int,
    {
        user.id: user.right_question_count for user in User.objects.filter(
            userquestion__value='...').annotate(
            right_question_count=Count('userquestion')
    }
)

for user in users:
    user.right_answer_count = users_with_right_answers[user.id]
    user.right_question_count = users_with_right_questions[user.id]
"
Conditional join Pandas.Dataframe,"df1['eins'] = np.nan
print df1
print df2

            zick  zack  eins
2014-06-01     1     1   NaN
2014-06-01     2     2   NaN
2014-06-02     3     3   NaN
2014-06-02     3     3   NaN

            eins  zwei
2014-06-01     2     3
2014-06-02     3     3
"
accessing custom python type properties by name,">>> pt = ProdType('Commodities', 'Equity', 'Fixed Income')
>>> pt.Cmdty
'Commodities'
>>> pt.Eqty
'Equity'
"
How to speed up my numpy loop using numpy.where(),"y = np.random.random_integers(0, 10, size=(10000,))
X = np.random.random_integers(0, 10, size=(10000,))
thresholds = np.cumsum(np.random.rand(10))

%timeit func(y, X, thresholds) # Original
1 loops, best of 3: 1.51 s per loop

%timeit func1(y, X, thresholds) # Removed for-loop
1 loops, best of 3: 1.46 s per loop

%timeit func2(y, X, thresholds) # Standardized if statements
1 loops, best of 3: 1.5 s per loop

%timeit func3(y, X, thresholds) # Vectorized ~ 500x improvement
100 loops, best of 3: 2.74 ms per loop
"
Python: Help in optimizing code,"for i in range(nrow-1,-1,-1):
    if(i == nrow-1):
        center_y[i,:] = 0.5*deltay[nrow-1]
    else:
        center_y[i,:] = center_y[i+1,:] + 0.5*deltay[i+1] + 0.5*deltay[i]
"
python what happens when a function is called?,"import dis
def f():
    def g():
        return 1
dis.dis(f)
"
Strip the html comment tags within an xml file using beautifulsoup,"for elt in ('series', 'duration', 'room'):
        print('%s: %s' % (getattr(soup, elt).name, getattr(soup, elt).string))
"
(Python) Launching an external application and wait for the end of it,"import subprocess

output = subprocess.check_output([""Matlab.exe"", ""/home/user/docs/myapp.mat""])
print output
"
Evaluation order of positional and keyword arguments,">>> x = [1, 2, 3]
>>> count(*map(float, x), **{'three': x.pop()})
Traceback (most recent call last):
  File ""<ipython-input-133-e8831565af13>"", line 1, in <module>
    count(*map(float, x), **{'three': x.pop()})
TypeError: count() got multiple values for keyword argument 'three'
"
How to use python to generate a magazine cover?,"open(""outputFile.svg"", ""w"").write(etree.tostring(document))
"
How to evaluate arbitrary code in Python?,"s = """"""
for i in range(5):
    print(i)
""""""
exec s
"
Pythonic way to group items in a list,">>> from collections import OrderedDict
>>> d = OrderedDict()
>>> for item in items:
...     d.setdefault(item['a'], []).append(item)
...     
>>> dict(d.items())
{1: [{'a': 1, 'c': 8, 'b': 9},
     {'a': 1, 'c': 4, 'b': 5}],
 2: [{'a': 2, 'c': 1, 'b': 3},
     {'a': 2, 'c': 9, 'b': 7}],
 3: [{'a': 3, 'c': 2, 'b': 8}]}
"
Creating Django Cache table using South?,"import datetime
from south.db import db
from south.v2 import DataMigration
from django.db import models
from django.core.management import call_command # Add this import

class Migration(DataMigration):
    def forwards(self, orm):
        call_command('createcachetable', 'cache')

    def backwards(self, orm):
        db.delete_table('cache')

    ...
"
Sort strings in column and print graph,"['avito.ru' 'e1.ru' 'drom.ru' 'auto.ru' 'avtomarket.ru' 'am.ru'
 'irr.ru/cars' 'cars.mail.ru/sale']
['avito.ru' 'e1.ru' 'drom.ru' 'auto.ru' 'avtomarket.ru' 'am.ru'
 'irr.ru/cars' 'cars.mail.ru/sale']
['avito.ru' 'e1.ru' 'auto.ru' 'drom.ru' 'irr.ru/cars' 'avtomarket.ru'
 'cars.mail.ru/sale' 'am.ru']
"
"Python - nested __repr__ reverts newline to ""\\n""",">>> print('First line\nSecond line')
First line
Second line
>>> print(['First line\nSecond line'])
['First line\nSecond line']
"
python re remove text between < (exclusive) and last / (inclusive) in a line,"code = '''#include <Box2D/Dynamics/Joints/b2DistanceJoint.h>
#include <Box2D/Dynamics/Joints/xyz.h> #include <Box2D/Dynamics/Joints/xyz.h>
#include <pqr.h>'''

code = re.sub(""(?:(?<=^)|(?<=[\n\r]))#include\s+<[^>]*/"", ""#include <"", code)
"
"Numpy converting range of angles from (-Pi, Pi) to (0, 2*Pi)",">>> (angles + 2 * np.pi) % (2 * np.pi)
array([ 3.14159265,  3.83972435,  4.53785606,  5.23598776,  5.93411946,
    0.34906585,  1.04719755,  1.74532925,  2.44346095,  3.14159265])
"
"python drop non-integer rows, convert to int","cln['Record Number'] = cln['Record Number'].astype(float)
"
Pull data from database to tables in Django framework,"import django_tables2 as tables
from models import *

class DeviceTable(tables.Table):
    # row_id used to have each ID in a first hidden row
    row_id = tables.columns.TemplateColumn(attrs={'cell': {'style':'display:none'}}, template_code=u'<span id=""row_id_{{ record.id }}"">', orderable=False, verbose_name=u'Row ID')    
    name = tables.columns.TemplateColumn(template_code=u'{{ record.dev_name }}', orderable=True, verbose_name=u'Device Name'))
    checkbox = tables.columns.TemplateColumn(template_code=u'<input type=""checkbox"" >',orderable=False, verbose_name=u'Checkbox')

    class Meta:
        model = Device
        attrs = {'class': 'myClass'} #Add table classes here
        fields = ('row_id', 'name', 'track_no', 'dev_type','checkbox')
        sequence = fields
        order_by = ('name', )
"
Parsing a CS:GO language file with encoding in Python,"from pyparsing import (Suppress, QuotedString, Forward, Group, Dict, 
    ZeroOrMore, Word, alphanums, Optional, dblSlashComment)

LBRACE,RBRACE = map(Suppress, ""{}"")

key_qs = QuotedString('""').setName(""key_qs"")
value_qs = QuotedString('""', escChar='\\', multiline=True).setName(""value_qs"")

# use this code to convert integer values to ints at parse time
def convert_integers(tokens):
    if tokens[0].isdigit():
        tokens[0] = int(tokens[0])
value_qs.setParseAction(convert_integers)

LBRACK,RBRACK = map(Suppress, ""[]"")
qualExpr = Word(alphanums+'$!&|')
qualExprCondition = LBRACK + qualExpr + RBRACK

value = Forward()
key_value = Group(key_qs + value + Optional(qualExprCondition(""qual"")))
def addQualifierToKey(tokens):
    tt = tokens[0]
    if 'qual' in tt:
        tt[0] += '/' + tt.pop(-1)
key_value.setParseAction(addQualifierToKey)

struct = (LBRACE + Dict(ZeroOrMore(key_value)) + RBRACE).setName(""struct"")
value <<= (value_qs | struct)
parser = Dict(key_value)
parser.ignore(dblSlashComment)

sample = open('cs_go_sample2.txt').read()
config = parser.parseString(sample)


print (config.keys())
for k in config.lang.keys():
    print ('- ' + k)

#~ config.lang.pprint()
print (config.lang.Tokens.StickerKit_comm01_burn_them_all)
print (config.lang.Tokens['SFUI_SteamOverlay_Text/$WIN32'])
"
Working with two dictionaries in one pickle file,"first pickle test
this python list gets pickled:
[{1: 'a'}, {2: 'b'}]

this is the pickle file
(lp0
(dp1
I1
S'a'
p2
sa(dp3
I2
S'b'
p4
sa.

update pickle test
this python object is read back:
[{1: 'a'}, {2: 'b'}]

this is the updated pickle:
(lp0
(dp1
I1
S'a'
p2
sS'time'
p3
cdatetime
time
p4
(S'\n2;\x02s\x95'
p5
tp6
Rp7
sa(dp8
I2
S'b'
p9
sg3
g7
sa.

and this is the updated python:
[{1: 'a', 'time': datetime.time(10, 50, 59, 160661)}, {2: 'b', 'time': datetime.time(10, 50, 59, 160661)}]
"
Flash an image in pygame,"elapsed_time += my_clock.tick(60) # 60 fps, time is in milliseconds
"
"Not writing to file, even with f.close()"," with open('file.txt','r') as myfile:
      lines=myfile.readlines()
"
Using an item from a list as a new dictionary key,">>> a = {}
>>> b = ""item""
>>> c = [""key1"",""key2""]
>>> a[c[0]] = b
>>> a
{'key1': 'item'}
"
How to cast object in Python,"@loggify
class loggedWorker(Working): pass
"
How to retrieve max (pk) in python from a table database?,"<input type='checkbox' name=""to_delete"" value=""{{l.id}}""/>
"
python pandas trying to reduce reliance on loops,"df = pd.DataFrame({ 'col_1':[True,True,True,True,False,False,False,False,
                             False,True,False,False,False,False,True,True,
                             True,True,True,True,False] })

df['col_2'] = ((df!=df.shift(1)) & (df!=df.shift(2)) & (df!=df.shift(3)) & 
               (df!=df.shift(4)) & (df!=df.shift(5)))
"
Using map function with a multi-variable function,"[6, 15, 24]
"
Getting statistics from different groups of rows,"import numpy as np
import pandas as pd

df = pd.DataFrame(np.random.randint(10, size=(20, 2)), columns=list('AB'))
result = df.groupby('A')['B'].describe().unstack()
"
Get data between two '/' using re module,">>> import re
>>> url = '/s/GETTHISDATA/canBeIgnored/canBeIgnored'
>>> re.findall('(?<=/).*?(?=/)', url)
['s', 'GETTHISDATA', 'canBeIgnored']
>>> re.findall('(?<=/).*?(?=/)', url)[1]
'GETTHISDATA'
>>>
"
Continuous results from a single function call," while cmd != ""end"":
    if cmd == ""recall"":
"
"Read a file, and print a specific line of it in Python","A21
A43
"
Django Queryset: Efficiency of Equivalent Filter Clauses,"In [10]: query2 = Blog.objects.filter(comment__created__gt=from_dt, comment__created__lt=till)
In [11]: print query2.query
SELECT ""myapp_blog"".""id"", ""myapp_blog"".""name"" 
FROM ""myapp_blog"" 

    INNER JOIN ""myapp_comment"" 
    ON (""myapp_blog"".""id"" = ""myapp_comment"".""blog_id"") 

WHERE (""myapp_comment"".""created"" > 2013-12-15 15:54:50.633000  
AND ""myapp_comment"".""created"" < 2013-12-15
15:54:50.633000 )
"
How to find a particular word in html page through beautiful soup in python?,"Found the word ""sunny"" 4 times

Whole content: ""today is a sunny day""
    Word before: ""a"", word after: ""day""
Whole content: ""I love when it's sunny outside""
    Word before: ""it's"", word after: ""outside""
Whole content: ""
Call me sunny
""
    Word before: ""me"", word after: ""None""
Whole content: ""sunny is a cool word sunny""
    Word before: ""None"", word after: ""is""
Whole content: ""sunny is a cool word sunny""
    Word before: ""word"", word after: ""None""
"
Why are stale header values still around when uploading a subsequent Item to archive.org using ia-wrapper?,"def upload_file(self, body, headers=None, ...):
    if headers is None:
        headers = {}
"
Building a GeoJSON with Python,">>> polys = []
>>> for i in range(5):
...     poly = Polygon( ((0, 0), (0, 1), (1, 1), (0, 0)) )
...     polys.append(poly)
...
>>> gc = GeometryCollection(polys)
"
"Python: Compare list of strings to list of tuples, and create a new list based on match or no match",">>> import re
>>> a=['from src1 to dest2','from src3 to dest4','from src5 to dest6']
>>> b=[['destb','dest2'],['destd','loc4'],['destf','dest6'],['desth','dest8']]
>>> result = []
>>> for x in a:
...     result.append(x)
...     for i,j in b:
...             if j in result[-1]:
...                     result[-1] = re.sub(j,i,result[-1])
...
>>> result
['from src1 to destb', 'from src3 to dest4', 'from src5 to destf']
"
getting date fields from oracle in correct format using Python and cx-oracle,">>> import datetime
>>> dtobject = datetime.datetime(2999, 12, 31, 0, 0)
>>> dtobject.strftime('%d-%b-%Y')
'31-Dec-2999'
"
"Print frequency of words, in a sentence, in a single line","from itertools import defaultdict
countlist = defaultdict(int)
for word in allwords:
    countlist[word] += 1
"
Convert pango markup string to GtkTextTag properties,"def parse_markup_string(string):
    '''
    Parses the string and returns a MarkupProps instance
    '''
    #The 'value' of an attribute...for some reason the same attribute is called several different things...
    attr_values = ('value', 'ink_rect', 'logical_rect', 'desc', 'color')

    #Get the AttributeList and text
    attr_list, text, accel = pango.parse_markup( string )
    attr_iter = attr_list.get_iterator()

    #Create the converter
    props = MarkupProps()
    props.text = text

    val = True
    while val:
            attrs = attr_iter.get_attrs()

            for attr in attrs:
                    name = attr.type
                    start = attr.start_index
                    end = attr.end_index
                    name = pango.AttrType(name).value_nick

                    value = None
                    #Figure out which 'value' attribute to use...there's only one per pango.Attribute
                    for attr_value in attr_values:
                            if hasattr( attr, attr_value ):
                                    value = getattr( attr, attr_value )
                                    break

                    #There are some irregularities...'font_desc' of the pango.Attribute
                    #should be mapped to the 'font' property of a GtkTextTag
                    if name == 'font_desc':
                            name = 'font'
                    props.add( name, value, start, end )

            val = attr_iter.next()

    return props
"
Managing resources in a Python project,"#!/usr/bin/env python

from setuptools import setup, find_packages

setup(name='proj',
      packages=find_packages(),
      package_data={'': ['*.png']})
"
python click usage of standalone_mode,"from __future__ import print_function
import click

@click.command()
@click.option('--name', help='Enter Name')
@click.pass_context
def gatherarguments(ctx, name):
    return ctx

def usectx(ctx):
    print(""Name is %s"" % ctx.params['name'])

if __name__ == '__main__':
    ctx = gatherarguments(standalone_mode=False)
    print(ctx)
    usectx(ctx)
"
"Split a string by three delimiters, and adding them to different lists","with open(""questions.txt"", ""r"") as questions:
    keys = questions.read().split('|')
    answers = keys[3]
    keys[3] = keys[3].split('/', 1)[0]

    answers = answers.split('/')[1:]

    answer = [x for x in answers if '!' in x][0].strip('!')

    answers = [x.strip('!') for x in answers]

    print(keys)
    print(answers)
    print(answer)
"
How to programmatically detect and respond to a key word(s) in chat messages,"if s.find('safe') != -1:
    print('This message is safe.')
"
"My Maxent Classifier works fine with gis algorithm but does not work with iis algorithm. It is not throwing any error, just some warnings","print accuracy(me_classifier, test_feats)
"
Python: All possible Timezone Abbreviations for given Timezone Name (and vise versa),"
In [95]: tzones['PDT']
Out[95]: 
{'America/Boise',
 'America/Dawson',
 'America/Dawson_Creek',
 'America/Ensenada',
 'America/Juneau',
 'America/Los_Angeles',
 'America/Metlakatla',
 'America/Santa_Isabel',
 'America/Sitka',
 'America/Tijuana',
 'America/Vancouver',
 'America/Whitehorse',
 'Canada/Pacific',
 'Canada/Yukon',
 'Mexico/BajaNorte',
 'PST8PDT',
 'US/Pacific',
 'US/Pacific-New'}
"
Python strip a string from config file,"In [11]: myString = ""a\\tb\\tc\\td""

In [12]: print(myString)
a\tb\tc\td

In [13]: print(repr(myString))
'a\\tb\\tc\\td'
"
Any quick way to labelize a list in Python?,"from collections import defaultdict
from functools import partial
from itertools import count

unique_count = defaultdict(partial(next, count(1)))
listFruit[:] = [unique_count[el] for el in listFruit]
"
Circular array indices in Python,"class CustomList(list):
    def __getitem__(self, index):
        return super(CustomList, self).__getitem__(index % len(self))

a = CustomList([1, 2, 3])
for index in xrange(5):
    print index, a[index]
"
"how can i change key,value format back to lines?","email02 OK
email1234 OK
email03 SPAM
email01 OK
"
Quickly create a boolean array based on inclusion of the ith element in another list,"words = set(['hello','there']) #have the words available as a set
sentance = ['hello','monkey','theres','there']
rep = [ 1 if w in words else 0 for w in sentance ]
>>> 
[1, 0, 0, 1]
"
Is there any way to format a complete python buffer in emacs with a key press?,"(setq fill-column 79)
(setq-default tab-width 4)
"
What's the cleanest way to add a decorator from a derived class to its base class?,"class Derived(Base):
    @staticmethod
    def decorator(func):
        whatever(fund)
"
Substitution of certain occurences of a string with another string in python,"def repl(match):
    if match.group(1) == 'Seq1:':
        return match.group(0)
    return match.group(1) + str(int(match.group(2)) + 10)

result = re.sub(r'(\w+\d+:)(\d+)', repl, s)
"
How can I read hexadecimal data with python?,">>> ord('\x80')
128
>>> import struct
>>> struct.unpack('B', '\x80')
(128,)
"
Python mock object instantiation,"mock_someobject.assert_called_with(arg1=val1, arg2=val2, arg3=val3)
"
How to achieve python's any() with a custom predicate?,">>> l = range(10)
>>> any(x > 10 for x in l)
False
>>> l = range(20)
>>> any(x > 10 for x in l)
True
"
Python exits CSV File before the end of File,"[['07037062611 07063724920'], [], ['08065537377 08168571687']]
"
How can I split this string in Python?,"print re.findall(r""\bLayer\b[\s\S]*?(?=\nLayer\b|$)"",x
"
Python (xml.etree) not reading XML text,"import xml.etree.ElementTree as ET
from StringIO import StringIO

s = '''<w>
  <shortening>n</shortening>
  ūmi 
  <mor type=""mor"">
    <mw>
      [extra stuff]
    </mw>
    <menx>rest</menx>
    <menx>sleep</menx>
    <gra type=""gra"" relation=""ROOT"" head=""0"" index=""1""/>
  </mor>
</w>'''

tree = ET.parse(StringIO(s))
root = tree.getroot()

for i in root.iter('shortening'):
    print i.tail
"
Remove unnecessary whitespace from Jinja rendered template,"app.jinja_env.trim_blocks = True
app.jinja_env.lstrip_blocks = True
"
Python TfidfVectorizer : Is conditional re-initialization possible?,"from sklearn.feature_extraction.text import TfidfVectorizer

t = TfidfVectorizer()

t.get_params()
Out[23]: 
{'analyzer': u'word',
 'binary': False,
 'charset': None,
 'charset_error': None,
 'decode_error': u'strict',
 'dtype': numpy.int64,
 'encoding': u'utf-8',
 'input': u'content',
 'lowercase': True,
 'max_df': 1.0,
 'max_features': None,
 'min_df': 1,
 'ngram_range': (1, 1),
 'norm': u'l2',
 'preprocessor': None,
 'smooth_idf': True,
 'stop_words': None,
 'strip_accents': None,
 'sublinear_tf': False,
 'token_pattern': u'(?u)\\b\\w\\w+\\b',
 'tokenizer': None,
 'use_idf': True,
 'vocabulary': None}

t.set_params(binary=True)
Out[24]: 
TfidfVectorizer(analyzer=u'word', binary=True, charset=None,
        charset_error=None, decode_error=u'strict',
        dtype=<type 'numpy.int64'>, encoding=u'utf-8', input=u'content',
        lowercase=True, max_df=1.0, max_features=None, min_df=1,
        ngram_range=(1, 1), norm=u'l2', preprocessor=None, smooth_idf=True,
        stop_words=None, strip_accents=None, sublinear_tf=False,
        token_pattern=u'(?u)\\b\\w\\w+\\b', tokenizer=None, use_idf=True,
        vocabulary=None)

t.set_params(smooth_idf=False)
Out[25]: 
TfidfVectorizer(analyzer=u'word', binary=True, charset=None,
        charset_error=None, decode_error=u'strict',
        dtype=<type 'numpy.int64'>, encoding=u'utf-8', input=u'content',
        lowercase=True, max_df=1.0, max_features=None, min_df=1,
        ngram_range=(1, 1), norm=u'l2', preprocessor=None,
        smooth_idf=False, stop_words=None, strip_accents=None,
        sublinear_tf=False, token_pattern=u'(?u)\\b\\w\\w+\\b',
        tokenizer=None, use_idf=True, vocabulary=None)

d = {""stop_words"":""english""}

t.set_params(**d)
Out[27]: 
TfidfVectorizer(analyzer=u'word', binary=True, charset=None,
        charset_error=None, decode_error=u'strict',
        dtype=<type 'numpy.int64'>, encoding=u'utf-8', input=u'content',
        lowercase=True, max_df=1.0, max_features=None, min_df=1,
        ngram_range=(1, 1), norm=u'l2', preprocessor=None,
        smooth_idf=False, stop_words='english', strip_accents=None,
        sublinear_tf=False, token_pattern=u'(?u)\\b\\w\\w+\\b',
        tokenizer=None, use_idf=True, vocabulary=None)
"
How to iterate two successive elements of the lists of lists in python ?,"mentionedlist=[[1,2,3,4],[1,2,3,4],[2,3,4,5],[3,4,5,5],[1,2,3,4],[1,2,3,4],[]]
for l1, l2 in zip(mentionedlist, mentionedlist[1:]):
    print l1, l2
"
Getting Row percentages in python to plot,">>> gb.div(gb.sum(axis=1).values, axis=0)
Gender    Female      Male
Day                       
Fri          NaN  1.000000
Mon     0.666667  0.333333
Weds    1.000000       NaN
"
Iterate through list and going back one item,"[0.05000000000000001, 0.024999999999999988, 0.17499999999999996, 0.25, 0.17500000000000002, 0.20000000000000004]
"
How to get a list of variable names from a c file in Python,"typedef int* myintptr;

myintptr p;   
"
Python readline on a pipe that has been opened as non-blocking,"#ifdef HAVE_GETC_UNLOCKED
#define GETC(f) getc_unlocked(f)
#define FLOCKFILE(f) flockfile(f)
#define FUNLOCKFILE(f) funlockfile(f)
#else
#define GETC(f) getc(f)
#define FLOCKFILE(f)
#define FUNLOCKFILE(f)
#endif
"
Finding blank regions in image,"[[1]]
[[1 1 1]
 [1 1 1]]
[[1 1 1 1]
 [1 0 0 0]
 [1 0 0 1]]
[[1]]
[[0 1 1 0]
 [1 0 0 1]
 [0 1 1 0]]
[[0 0 1 0 0]
 [0 1 1 1 0]
 [1 1 1 1 1]
 [0 1 1 1 0]
 [0 0 1 0 0]]
"
Reading/Writing to a file in Python,"from shutil import copy
copy(""foo.txt"", ""out.txt"")
"
Is there a better way to retrieve webpage sizes with Python?,"print urls, len(response.read())
"
Animating a rectangle in PyQT5: Why is QtCore not defined?,"from PyQt5 import QtCore
"
Create per-instance property descriptor?,"obj.attr
=> type(obj).__getattribute__(obj, 'attr') is called
=> obj.__dict__['attr'] is returned if there else:
=> type(obj).__dict__['attr'] is looked up
if this contains a descriptor object then this is used.
"
OpenERP cache features,"@tools.cache()
def _get_id(self, cr, uid, module, xml_id):
    ids = self.search(cr, uid, [('module','=',module),('name','=', xml_id)])
    if not ids:
        raise ValueError('No references to %s.%s' % (module, xml_id))
    # the sql constraints ensure us we have only one result
    return ids[0]
"
how to extract specific lines from a data file,"#!/usr/bin/env python2.7

trainFile = open(""danish.train"")
numberOfLines = 0

for line in trainFile:
    numberOfLines += 1

lengthTest = numberOfLines / 10

# rewind file to beginning
trainFile.seek(0)

numberOfLines = 0
file_number = 0
for line in trainFile:
    if numberOfLines % lengthTest == 0:
        file_number += 1
        output = open('danish.train.part-%02d' % file_number, 'w')

    numberOfLines += 1
    output.write(line)
"
How to parse russian text properly using Python 2.7 and BeautifulSoup?,"    game_title = game_title.encode(""utf-8"")
    game_category = game_category.encode(""utf-8"")
    game_description = game_description.encode(""utf-8"")
    post_date = post_date.encode(""utf-8"")
    post_time = post_time.encode(""utf-8"")
"
How to match integers in NLTK CFG?,"(S (NP I) (VP (V shot) (NP (NUM 333) (N elephants))))
"
Deterministic python generator for K disparate M-sized subsets of a set,"def gen_subsets_special(full_set, M, seed=123456):
    # generate randomish M-subsets of full_set, ""far apart"".
    import random
    from random import sample
    random.seed(seed)
    elements = list(full_set)
    N = len(elements)
    hi = set(range(N))
    lo = set()
    while True:
        assert not (hi & lo)
        assert len(lo | hi) == N
        # First take indices from hi, then (if needed) from lo.
        if len(hi) > M:
            # We can take all of them from hi, with some left over.
            ixhi = set(sample(hi, M))
            ixlo = set()
            # The ixhi counts go down by 1, so move 'em to lo
            hi -= ixhi
            lo |= ixhi
            assert hi
        else:
            # We need to take everything in hi.
            ixhi = hi.copy()
            ixlo = set(sample(lo, M - len(ixhi)))
            hi |= lo - ixlo
            lo = ixlo
        assert not (ixlo & ixhi)
        ix = ixlo | ixhi
        assert len(ix) == M
        yield set(elements[i] for i in ix)
"
Complex Data Manipulation in Python,">>> 
>>> x, y, z = [1, 2, 3]
>>> print x, y, z
1 2 3
>>> x, y = [1, 2, 3]

Traceback (most recent call last):
  File ""<pyshell#259>"", line 1, in <module>
    x, y = [1, 2, 3]
ValueError: too many values to unpack
>>> 
>>> a, b, _, _, _, _ = '1 2 3 4 5 6'.split()
>>> print a, b, _
1 2 6
>>> 
"
how do I clear a stringio object?,">>> from io import StringIO
>>> timeit(lambda: truncate(StringIO()))
0.9706327870007954
>>> timeit(lambda: new(StringIO()))
0.8734330690022034
"
python 3.3 RE How to grab possible groups?,">>> import re
>>> inputtext = ""{% url 'a' b c e %}""
>>> [r[:1] + tuple(r[1].split()) 
...  for r in re.findall(r""{% url '(\w+)'((?:\s+\w+)*) %}"", inputtext)]
[('a', 'b', 'c', 'e')]
"
Checking Websites for Updates (Web Automation with Python + Selenium),"[
    {
        ""location"": ""REGON CITY, OR"",
        ""price"": 33000000,
        ""status"": ""active"",
        ""marketing_package_url"": ""http://www.capitalpacific.com/inquiry/TrailsEndMarketplaceExecSummary.pdf""
        ...
    },
    ...
]
"
Relationship between scipy and numpy,"# Import numpy symbols to scipy name space
import numpy as _num
from numpy import oldnumeric
from numpy import *
from numpy.random import rand, randn
from numpy.fft import fft, ifft
from numpy.lib.scimath import *
"
How to efficiently create a SparseDataFrame from a long table?,">>> my_pandas_frame
         100  200
user_id          
1          1    1
2          1    0
4          0    1

>>> type(my_pandas_frame)
<class 'pandas.core.frame.DataFrame'>

>>> type(my_pandas_frame[100])
<class 'pandas.sparse.series.SparseSeries'>
"
Python: Way to speed up a repeatedly executed eval statement?,"exp_as_func()
"
Python 2.6.5: Divide timedelta with timedelta,">>> down_time.total_seconds() / server_life_period.total_seconds()
0.0003779903727652387
"
python html pop open,">>> webbrowser.get('windows-default').open('{ url path for static html page }')
"
How to extract Urdu text from a webpage using beautifulsoup,"<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"">
"
Sending javascript form data in python (post request)?,"from urllib import urlopen, urlencode
data = {'sgE-1416699-3-2':'10002', 'more_param':'param_value'}
encodeddata = urlencode(data)
url = 'http://surveygizmo.com'
"
How to add python docstring for dict,"def func(a_dict):
    """"""Some function to do something to a dictionary.

    Args:
      a_dict (dict of str: int): Some mapping, I guess?

    """"""
    ...
"
How to use a decorator to enable a spider to distinguish between scrapy pipelines,"def check_spider_pipeline(process_item_method):
    """"""
        This wrapper makes it so pipelines can be turned on and off at a spider level.
    """"""
    @functools.wraps(process_item_method)
    def wrapper(self, item, spider):
        msg = '%%s %s pipeline step' % (self.__class__.__name__,)
        if self.__class__ in spider.pipeline:
            spider.log(msg % 'executing', level=log.DEBUG)
            return process_item_method(self, item, spider)
        else:
            spider.log(msg % 'skipping', level=log.DEBUG)
            return item

    return wrapper
"
How to access a 'static' field of a child class in a base class?,"class C1:
    c=-1
    def output( self ):
        print self.c
        print C1.c

class C2( C1 ):
    c = ""1""
    def C1output():
      print C1.c
      print self.c

c = C2()

c.output()
"
Writing Python lists to columns in csv,"for row in rows:
    writer.writerow(row)
"
How to find information from the last 24 hours,"def findQuakeAge(entry):
    start = entry.find('<category label=""Age"" term=""') + 28
    end = entry.find('""/>', start)
    age = entry[start:end]
    return age
"
What's a standard way to do a no-op in python?,"class c:
  pass
"
How to remove carriage return in a dataframe,"df['location'] = df.location.str.replace(r'\r\n', '')
print df
   id country_name       location  total_deaths
0   1        India      New Delhi           354
1   2        India     Tamil Nadu            48
2   3        India      Karnataka             0
3   4        India  Andra Pradesh            32
4   5        India          Assam           679
5   6        India         Kerala           128
6   7        India         Punjab             0
7   8        India  Mumbai, Thane             1
8   9        India  Uttar Pradesh            20
9  10        India         Orissa            69
"
check whether a string is in a 2-GB list of strings in python,"cursor = conn.cursor()
for line in second_file:
    second_word = hand_waving
    cursor.execute('SELECT 1 from words where word=?', (second_word,))
    if cursor.fetchone():
         # ....
"
Python - Redefining class attribute in a derived class,"class Base(object):
    flagAtt = None

    def __init__(self) :
       pass

    @classmethod
    def flag(self):
        return self.flagAtt

class Derived(Base):
    flagAtt = True
"
Count the occurrence of a word in a txt file in python,"count = len(re.findall(r'(?<!\S)'+ word + r'(?!\S)', line, re.IGNORECASE))
"
Counting how many unique identifiers there are by merging two columns of data?,"import csv

uniq = {} #Create an empty dictionary, which we will use as a hashmap as Python dictionaries support key-value pairs.

ifile = open('data.csv', 'r') #whatever your CSV file is named.
reader = csv.reader(ifile)

for row in reader:
    joined = row[0] + row[1] #The joined string is simply the first and second columns in each row.
    #Check to see that the key exists, if it does increment the occurrence by 1
    if joined in uniq.keys():
        uniq[joined] += 1
    else:
        uniq[joined] = 1 #This means the key doesn't exist, so add the key to the dictionary with an occurrence of 1

print uniq #Now output the results
"
Compare entries in columns from CSV files and extract matched - python,"person, john, smith
person, anne, frank
person, bob, macdonald
fruit, orange, banana
fruit, strawberry, fields
fruit, ringring, banana
"
Finding centre of a polygon using limited data,"import math

def area_for_polygon(polygon):
    result = 0
    imax = len(polygon) - 1
    for i in range(0,imax):
        result += (polygon[i]['x'] * polygon[i+1]['y']) - (polygon[i+1]['x'] * polygon[i]['y'])
    result += (polygon[imax]['x'] * polygon[0]['y']) - (polygon[0]['x'] * polygon[imax]['y'])
    return result / 2.

def centroid_for_polygon(polygon):
    area = area_for_polygon(polygon)
    imax = len(polygon) - 1

    result_x = 0
    result_y = 0
    for i in range(0,imax):
        result_x += (polygon[i]['x'] + polygon[i+1]['x']) * ((polygon[i]['x'] * polygon[i+1]['y']) - (polygon[i+1]['x'] * polygon[i]['y']))
        result_y += (polygon[i]['y'] + polygon[i+1]['y']) * ((polygon[i]['x'] * polygon[i+1]['y']) - (polygon[i+1]['x'] * polygon[i]['y']))
    result_x += (polygon[imax]['x'] + polygon[0]['x']) * ((polygon[imax]['x'] * polygon[0]['y']) - (polygon[0]['x'] * polygon[imax]['y']))
    result_y += (polygon[imax]['y'] + polygon[0]['y']) * ((polygon[imax]['x'] * polygon[0]['y']) - (polygon[0]['x'] * polygon[imax]['y']))
    result_x /= (area * 6.0)
    result_y /= (area * 6.0)

    return {'x': result_x, 'y': result_y}

def bottommost_index_for_polygon(polygon):
    bottommost_index = 0
    for index, point in enumerate(polygon):
        if (point['y'] < polygon[bottommost_index]['y']):
            bottommost_index = index
    return bottommost_index

def angle_for_vector(start_point, end_point):
    y = end_point['y'] - start_point['y']
    x = end_point['x'] - start_point['x']
    angle = 0

    if (x == 0):
        if (y > 0):
            angle = 90.0
        else:
            angle = 270.0
    elif (y == 0):
        if (x > 0):
            angle = 0.0
        else:
            angle = 180.0
    else:
        angle = math.degrees(math.atan((y+0.0)/x))
        if (x < 0):
            angle += 180
        elif (y < 0):
            angle += 360

    return angle

def convex_hull_for_polygon(polygon):
    starting_point_index = bottommost_index_for_polygon(polygon)
    convex_hull = [polygon[starting_point_index]]
    polygon_length = len(polygon)

    hull_index_candidate = 0 #arbitrary
    previous_hull_index_candidate = starting_point_index
    previous_angle = 0
    while True:
        smallest_angle = 360

        for j in range(0,polygon_length):
            if (previous_hull_index_candidate == j):
                continue
            current_angle = angle_for_vector(polygon[previous_hull_index_candidate], polygon[j])
            if (current_angle < smallest_angle and current_angle > previous_angle):
                hull_index_candidate = j
                smallest_angle = current_angle

        if (hull_index_candidate == starting_point_index): # we've wrapped all the way around
            break
        else:
            convex_hull.append(polygon[hull_index_candidate])
            previous_angle = smallest_angle
            previous_hull_index_candidate = hull_index_candidate

    return convex_hull
"
How can I access namespaced XML elements using BeautifulSoup?,"from BeautifulSoup import BeautifulSoup

xml = """"""<xml>
  <web:Web>
    <web:Total>4000</web:Total>
    <web:Offset>0</web:Offset>
  </web:Web>
</xml>""""""

doc = BeautifulSoup( xml )
print doc.find( 'web:total' ).string
print doc.find( 'web:offset' ).string
"
Jinja install for python,"easy_install Jinja2
"
Python Caesar Cipher,"
Output:

>>> 
Word: HelLo
Shift: 1

HelLo
IfmMp

Repeat? [y|n]: y

Word: AbCdEF
Shift: 2

AbCdEF
CdEfGH

Repeat? [y|n]: y

Word: abc
Shift: -1

abc
`ab

Repeat? [y|n]: y

Word: 456GHh
Shift: -2

456GHh
234EFf

Repeat? [y|n]: n

>>> 
"
"seg fault when called from python, but runs normally from the command line","os.popen(cmd)
"
Fast logarithm calculation,"numexpr.detect_number_of_cores() // 2
28

%env OMP_NUM_THREADS=28
x = np.abs(np.random.randn(50000000).astype('float32'))
y = x.copy()

# GCC
%timeit log_omp(x, y)
10 loops, best of 3: 21.6 ms per loop
# ICC
%timeit log_omp(x, y)
100 loops, best of 3: 9.6 ms per loop
%timeit log_VML(x, y)
100 loops, best of 3: 10 ms per loop

%timeit cylog(x, out=y)
10 loops, best of 3: 21.7 ms per loop

numexpr.set_num_threads(28)
%timeit out = numexpr.evaluate('log(x)')
100 loops, best of 3: 13 ms per loop
"
"'Int' object is not iterable. But, it is a string","cows = ""111 cows 222 cows ""
cows_lst = [cow for cow in cows.split("" cows "") if cow]
print cows_lst # now it prints ['111', '222']
"
Finding the index of a UTF-8 character in a Python string,">>> f = codecs.open(r'c:\temp\temp.txt', 'r', 'utf-8-sig')
>>> line = f.readline()
>>> print line
This is a test.ش

>>> line.find(u'\u0634')
15
"
Python count Null and not Null values in Dataframe,"In [62]: df.groupby('Date').agg({'Name': lambda x: '{}/{}'.format(x.isnull().sum(), len(x))})
Out[62]:
     Name
Date
1995  1/3
1997  1/2
1998  1/2
"
"Why do list/dict attributes retain values outside decorators, but integer attribues do not?",">>> f = dictify(g)
... f2 = listify(f)
... f3 = intify(f2)
>>> f3()
  Incremented __int, now __int = 1
  Appended 0 to __list, now __list = [1, 2, 3, 0]
  Incremented __dictionary, now __dictionary = {0: 1}
'pennyroyal tea'
>>> f3.__list is f2.__list
True
>>> f3.__dictionary is f2.__dictionary
True
>>> f3.__int is f2.__int
False
"
Python - Exact Number of Arguments Defined by Variable,"from inspect import Parameter, signature, Signature

def get_multivar_lambda(expression, variables=[""x""]):

    params = [Parameter(v, Parameter.POSITIONAL_OR_KEYWORD) for v in variables]
    sig = Signature(params)

    def to_return(*args, **kwargs):
        values = sig.bind(*args, **kwargs)
        for name, val in values.arguments.items():
            print (name, val)

    to_return.__signature__ = signature(to_return).replace(parameters=params)
    return to_return
"
Cross-validation: finding row indices for a test set that aren't part of a training set,"n_test = 200
test_idx2 = gen.choice(test_idx, size=n_test)
"
Is there a way to verify a Python interpreter built from source is correct?,"./python -m test -j3
"
Connect to User Model in Django,"def createprofile(request):

    user_ = User.objects.get(pk=1)
    profile = Profile(user=user_)
    profile.user.first_name = 'Joe'
    profile.user.last_name = 'Soe'
    profile.user.email = 'Joe@Soe.com'
    profile.user.save()
    profile.save()
"
python filtering list for duplicate objects,"users = set(users)
"
Print different results in Python a dictionary,"import collections
sortedWords = collections.defaultdict(list)
"
most optimal way to perform double summation,"for r in range (rmin,rmax) :
    sum = 0
    sumsq = 0
    jmin = r-(rows-1)/2
    jmax = r+(rows-1)/2

    #calculate sum and sum of square of the first
    imin = cmin-(cols-1)/2
    imax = cmin+(cols-1)/2
    for j,i in product(range(jmin,jmax),range(imin,imax)) :
        xji = x(j,i) #cache xji
        sum += xji
        sumsq += xji * xji
    d = (jmax-jmin)*(imax-imin)
    #now we can calculate the first element of the row
    xb = xbar(r,cmin)
    Gxx(r,cmin) = sumsq-2*sum*xb+d*xb*xb

    #now iterate over all elements (except the first)
    for c in range(cmin+1,cmax) :
        isub = c-1-(cols-1)/2 #column to remove, (previous column = -1)
        iadd = c+(cols-1)/2 #column to add
        for j in range(jmin,jmax) :
            xji = x(j,isub)
            sum -= xji
            sumsq -= xji*xji
            xji = x(j,iadd)
            sum += xji
            sumsq += xji*xji
        #Now the sums and the sum of squares are updated
        xb = xbar(r,c)
        Gxx(r,c) = sumsq-2*sum*xb+d*xb*xb
"
"return indices from filtered, sorted array with numpy","import numpy as np

x = np.random.rand(4);
filter_bools = x < .5;
sorted_indices = np.argsort(x)
sorted_filter = filter_bools[sorted_indices]

filtered_sorted_indices = sorted_indices[sorted_filter == True]

print 'x:\t\t\t\t', x
print 'sorted indices:\t\t\t', sorted_indices
print 'indices for x < .5, sorted:\t', filtered_sorted_indices
print 'sorted, filtered x values:\t', x[filtered_sorted_indices]
"
Creating Truly Empty Types in Python,"e = Empty(initial='optional-value')
e.initial
# 'optional-value'
e.val = 'foo'
e.val
# 'foo'
e.bad
# AttributeError: 'Empty' object has no attribute 'bad'
setattr(e, 'user', 'jdi')
e.user
# 'jdi'
e['user']
# 'jdi'

# note that you dont even see anything when you dir()
dir(e)
# []

# and trying to access _obj is protected
e._obj
#AttributeError: 'Empty' object has no attribute '_obj'

# But you could even set your own _obj attribute
e._obj = 1
e._obj
# 1
"
how to sort a list of tuples with list[i][1] as key from biggest to smallest,"sorted(alpha_items, key=lambda x: x[1], reverse=True)
"
Scrape Data Point Using Python,"import smtplib,ssl

def SendMail(username,password,contents):
    server = Connect(username)
    try:
        server.login(username,password)
        server.sendmail(username,username,contents)
    except smtplib.SMTPException,error:
        Print(error)
    Disconnect(server)

def Connect(username):
    serverName = username[username.index(""@"")+1:username.index(""."")]
    while True:
        try:
            server = smtplib.SMTP(serverDict[serverName])
        except smtplib.SMTPException,error:
            Print(error)
            continue
        try:
            server.ehlo()
            if server.has_extn(""starttls""):
                server.starttls()
                server.ehlo()
        except (smtplib.SMTPException,ssl.SSLError),error:
            Print(error)
            Disconnect(server)
            continue
        break
    return server

def Disconnect(server):
    try:
        server.quit()
    except smtplib.SMTPException,error:
        Print(error)

serverDict = {
    ""gmail""  :""smtp.gmail.com"",
    ""hotmail"":""smtp.live.com"",
    ""yahoo""  :""smtp.mail.yahoo.com""
}

SendMail(""your_username@your_provider.com"",""your_password"",str(lowest_bid))
"
Python performance: heaps,"def semi_heap_sort(items, top_k=L):
    lst = []
    heap_store = items[:top_k]
"
numerical coding of mutated residues and positions,"from pandas import *

data = 'MTAQDD,MTAQDD,MTSQED,MTAQDD,MKAQHD'

df = DataFrame([list(row) for row in data.split(',')])

print DataFrame({str(col)+val:(df[col]==val).apply(int) 
        for col in df.columns for val in set(df[col])})
"
update django choice field with database results,"class dform(forms.Form):
    location = forms.ChoiceField(choices = get_location_choices())

# elsewhere
from django.db import connection
def get_location_choices():
    cursor = connection.cursor()
    cursor.execute(""select location_id, name from location_table"")
    return cursor.fetchall()
"
Python: pairwise comparison between two lists: list a >= list b?,"print(all(x >= b[ind] for ind,x in enumerate(a)))
"
QTreeView not spanning parent width or height,"    tgb_layout = QVBoxLayout(self.tgb)
"
changing namespace of current python script (class with module name),"import sys
sys.path = [dir for dir in sys.path if dir != '']
"
Counting comparisons quicksort without global Python,"def _quicksort(count, other_context, A, left=None, right=None):
    ...
    count1, other_context1 = _quicksort(count, other_context, A, left, right)
    ...
    return count + count1, other_context
"
Cumulative addition whilst looping over a list,"from itertools import groupby, islice

def accumulate(iterable): # in py 3 use itertools.accumulate
    ''' Simplified version of accumulate from python 3'''
    it = iter(iterable)
    total = next(it)
    yield total
    for element in it:
        total += element
        yield total

power = [
    ['1234-4321-1', [5, 6, -4, 11, 22]],
    ['1234-7834-1', [43, -5, 0, 0, -1]],
    ['1234-5376-1', [3, 0, -5, -6, 0]],
    ['1567-3454-1', [4, 6, 8, 3, 3]],
    ['1567-9987-1-', [1, 2, 1, -4, 5]]
]

groups = ((k, (nums for station, nums in g))
          for k, g in
          groupby(power, lambda x: x[0].partition('-')[0]))

new = [(station, zip(*(islice(accumulate(col), 1, None) for col in zip(*nums))))
        for station, nums in groups]

print new    

print dict(new) # or as a dictionary which is unordered
"
Python Simple Card Game to Learn Classes,"class Card(object):

    FACES = {11: 'Jack', 12: 'Queen', 13: 'King', 14: 'Ace'}

    def __init__(self, rank, suit):
        self.suit = suit
        self.rank = rank

    def __str__(self):
        value = self.FACES.get(self.rank, self.rank)
        return ""{0} of {1}"".format(value, self.suit)

    def __lt__(self, other):
        return self.rank < other.rank
"
How do I write a no-op or dummy class in Python?,"def create():
    return object()
"
Is there a Python dict without values?,">>> 'x' in b
False
>>> 'foo' in b
True
"
Parsing/Printing depending on char length in Python; only 98% on CodeEval,"Tom exhibited.
Amy Lawrence was proud and glad, and she tried to make Tom see it in her face - but he wouldn't look.
Tom was tugging at a button-hole and looking sheepish.
Two thousand verses is a great many - very, very great many.
Tom's mouth watered for the apple, but he stuck to his work.
"
how do i set a timeout value for python's mechanize?,"import socket

try:
    _GLOBAL_DEFAULT_TIMEOUT = socket._GLOBAL_DEFAULT_TIMEOUT
except AttributeError:
    _GLOBAL_DEFAULT_TIMEOUT = object()
"
Pandas multi-index best way to slice for ranges of subordinate levels,"
In [21]: df.index.get_loc_level(2)
Out[21]:
(slice(15, 25, None),
 MultiIndex(levels=[[u'A', u'B', u'C', u'D', u'E'], [2013-01-14 00:00:00, 2013-01-15 00:00:00, 2013-01-16 00:00:00, 2013-01-17 00:00:00, 2013-01-18 00:00:00]],
            labels=[[3, 3, 3, 3, 3, 4, 4, 4, 4, 4], [0, 1, 2, 3, 4, 0, 1, 2, 3, 4]],
            names=[u'instrument', u'date']))
"
Store different datatypes in one NumPy array?,">>> a = numpy.array(['a', 'b', 'c', 'd', 'e'])
>>> b = numpy.arange(5)
>>> records = numpy.rec.fromarrays((a, b), names=('keys', 'data'))
>>> records
rec.array([('a', 0), ('b', 1), ('c', 2), ('d', 3), ('e', 4)], 
      dtype=[('keys', '|S1'), ('data', '<i8')])
>>> records['keys']
rec.array(['a', 'b', 'c', 'd', 'e'], 
      dtype='|S1')
>>> records['data']
array([0, 1, 2, 3, 4])
"
Variable creation within a program,"names = ['Tomato', 'Snoskommer', 'Pepper'] # a list containing 3 names
vegetables = {} # an empty dictionary

for name in names: # just textual: for each name in the names list ...
    new_veg = Veg(name) # create a new vegetable with the name stored in the variable 'name'
    vegetables[name] = new_veg # add the new vegetable to the vegetable dictionary

# at this point, the vegetables dictionary will contain a number of vegetables, which you can find by
# 'indexing' the dictionary with their name:
print(vegetables['Tomato'].name) # will print 'Tomato'
"
Pre-initialize raw_input with default value,"import readline

def pre_input_hook():
    readline.insert_text('DefaultValue')
    readline.redisplay()

readline.set_pre_input_hook(pre_input_hook)

while True:
    line = raw_input('Prompt (""stop"" to quit): ')
    if line == 'stop':
        break
    print 'ENTERED: ""%s""' % line
"
converting a text list (string)to a python list,"with open('file') as f:
    my_list = [x.strip() for x in f]
"
how to get the unique combination of columns and sort by them in python data frame?,"df1 = df.groupby(['col2','col1']).size().swaplevel(0,1).reset_index(name='count')
print (df1)
  col1  col2  count
0    A     1      2
1    D     1      1
2    C     2      1
3    F     2      1
4    B     3      1
"
Remove mean from numpy matrix,">>> np.newaxis is None
True
"
Check for certain arguments and assign values to an arbitrary variable,"In [240]: parser=argparse.ArgumentParser()
In [241]: parser.add_argument('-a', dest='action',
   action='store_const', const='a value')
In [242]: parser.add_argument('-b', dest='action',
   action='store_const', const='another value')
In [243]: parser.add_argument('--foo')

In [244]: parser.parse_args('-a --foo 123'.split())
Out[244]: Namespace(action='a value', foo='123')

In [245]: parser.parse_args('-b --foo 123'.split())
Out[245]: Namespace(action='another value', foo='123')

In [246]: parser.parse_args('-c --foo 123'.split())
usage: ipython3 [-h] [-a] [-b] [--foo FOO] 
ipython3: error: unrecognized arguments: -c
SystemExit: 2
"
Fama Macbeth Regression in Python (Pandas or Statsmodels),">>> fm.summary

----------------------Summary of Fama-MacBeth Analysis-------------------------

Formula: Y ~ x + intercept
# betas :   3

----------------------Summary of Estimated Coefficients------------------------
     Variable          Beta       Std Err        t-stat       CI 2.5%      CI 97.5%
          (x)       -0.0227        0.1276         -0.18       -0.2728        0.2273
  (intercept)        0.3531        0.0842          4.19        0.1881        0.5181

--------------------------------End of Summary---------------------------------
"
Creating a matrix of options using itertools,"itertools.product([False,True],repeat=5)
"
"How to pass args to method in java, like f(*args) in python?","nonVarargMethod(args[0], args[1], args[2]);
"
Remove element from list without side-effect,"
[1, 2, 4]
"
Copy value from one column based on the value of another column,"df_copy['A'] = df['B']
df_copy.loc[df['D']=='Other', 'A'] = df['C']
"
Why does else behave differently in for/while statements as opposed to if/try statements?,"try:
   do_something()
except someException:
   pass:
IF NO EXCEPTION:
   do_something_else()
finally:
   cleanup()
"
Using a While loop to generate ints to append?,"numbList = [random.randint(2, 5) for _ in range(random.randint(15, 20))]
"
"Convert UUID 32-character hex string into a ""YouTube-style"" short id and back",">>> import uuid
>>> uuid.uuid1().bytes.encode('base64').rstrip('=\n').replace('/', '_')
'81CMD_bOEeGbPwAjMtYnhg'
"
How to separate a single list into multiple list in python,">>> s='I_appeared_there'

>>> if 'pear' in s:
    print ""yes""

yes

>>> if 'pear' in s.split('_'):
    print ""yes""

>>>
"
Calculating mean of Pandas dataframe in iterations,"      count  sum         avg
Code                        
101       1   32   32.000000
205       3  419  139.666667
722       2   66   33.000000
"
Nested for loop to search 2 lists,"returnList = [r120item for r120item in r120Final 
                 if (r120item[2].strip(), r120item[10]) not in 
                     set((str(spectraItem[0]), str(spectraItem[25])) 
                         for spectraItem in spectraFinal)]
"
"get the max of R,G,B of one image by using programming","R: 255
G: 238
B: 255
"
Working with multiple columns from a data file,"In [61]: x
Out[61]: array([100, 110, 120, 130])

In [62]: y
Out[62]: 
array([[ 1.1,  2.1,  2. ,  1.1,  1.1],
       [ 2. ,  2.1,  1. ,  1.2,  2.1],
       [ 1.2,  1. ,  1.1,  1. ,  1.2],
       [ 2. ,  1.1,  1.2,  2. ,  1.2]])
"
PyCUDA: Querying Device Status (Memory specifically),"...
kernel=mod.get_function(""foo"")
meminfo(kernel)
...
def meminfo(kernel):
    shared=kernel.shared_size_bytes
    regs=kernel.num_regs
    local=kernel.local_size_bytes
    const=kernel.const_size_bytes
    mbpt=kernel.max_threads_per_block
    print(""""""=MEM=\nLocal:%d,\nShared:%d,\nRegisters:%d,\nConst:%d,\nMax Threads/B:%d""""""%(local,shared,regs,const,mbpt))
"
Python Ternary Style: Is this good or bad style?,"for state in states: score += penalty if state == bad else bonus
"
working with regex,"re.search(r'[^,]*:[^,]*', s).group()
"
get data from server using ajax and put it in a datatable,"manage:nodes[i].cells[5].attributes['id']
"
Advanced Python Code Assistance,"Divisions: 3
Divisible by: 2
Divisible by: 3
Divisible by: 4
Number of beats to print: 10
 1:
 2:X
 3: X
 4:X X
 5:
 6:XX
 7:
 8:X X
 9: X
10:X
"
python regex doesn't match as expected (and as pythex.org does),">>> for w in ['OR', 'ELSE', 'WHAT']:
        m=re.search(r'(^|\|)(%s)($|\|)'%w,r'OR|ELSE|WHAT')
        if m:
            print(m.group())


OR|
|ELSE|
|WHAT
"
Is it possible to use Angular with the Jinja2 template engine?,"var app = angular.module('Application', []);

app.config(['$interpolateProvider', function($interpolateProvider) {
  $interpolateProvider.startSymbol('{a');
  $interpolateProvider.endSymbol('a}');
}]);
"
Remove all but certain words from a list (like a white list),"['blue', 'white', 'red']
"
fill/predict unknown values of matrix in python,"[[1 2 3 4 5]
 [1 4 5 6 6]
 [1 6 7 7 8]
 [0 5 9 8 6]
 [0 4 5 6 4]
 [0 0 1 2 2]]
"
Can portions of a python web app be secure while others are not?,"class SecureRequiredMiddleware(object):
    def __init__(self):
        self.paths = getattr(settings, 'SECURE_REQUIRED_PATHS')
        self.enabled = self.paths and getattr(settings, 'HTTPS_SUPPORT')

    def process_request(self, request):
        if self.enabled and not request.is_secure():
            for path in self.paths:
                if request.get_full_path().startswith(path):
                    request_url = request.build_absolute_uri(request.get_full_path())
                    secure_url = request_url.replace('http://', 'https://')
                    print self.paths, request_url, secure_url
                    return HttpResponsePermanentRedirect(secure_url)
        return None
"
python pandas: apply a function with arguments to a series,">>> import functools
>>> import operator
>>> add_3 = functools.partial(operator.add,3)
>>> add_3(2)
5
>>> add_3(7)
10
"
Accessing list of Python objects by object attribute,"fruits = {Fruit('apple', 'red'), Fruit('banana', 'yellow')}
"
Get response from PhanomJS server using the Requests library,"var webserver = require('webserver').create();
    page = require('webpage').create();

var service = webserver.listen(8080, function(request, response) {
    if (request.method == 'POST') {
        var url = request.post.url;
        console.log(url);
        var content = '';
        page.open(url, function (status) {
            if (status !== 'success') {
                console.log('FAIL to load the address');
                response.statusCode = 200;
                response.write('Page not responding.');
                response.close();
            } else {
                content = page.content;
                response.statusCode = 200;
                response.write(content);
                response.close();
            }
        })
    } else {
        response.statusCode = 200;
        console.log(request.method == 'GET' );
        response.write('No URL provided');
        respone.close();
    }

});
"
How to say... match when field is a number... in mongodb?,"db.zips.aggregate([
    {$project : {city:{$substr:[""$city"",0,1]}}},
    {$sort : {city : 1}}, 
    {$match: {$or: [{city: {$type: 1}}, {city: {$type: 16}}, {city: {$type: 18}}]}}
]);
"
Saving and Loading a Class Instance,"import pickle
class Character():
    def __init__(self):
        self.name = None
        self.hp = None
        self.mp = None


class Race(Character):
    def __init__(self):
        super().__init__()
        self.race = None

name_game = input('Name your game: ')

cur_save=open('saves/' + name_game + '.p', 'wb')
player = Character()
player_name = input('Name your character: ')
player.name = player_name
player_race = input('What is your race? ')
player.race = player_race
pickle.dump(player, cur_save, -1)
cur_save.close()

cur_save=open('saves/' + name_game + '.p', 'rb')
player = pickle.load(cur_save)
print(player.name)
"
last record in django models database,"class Location(models.Model):
    locationname = models.CharField(max_length=100)

    def __unicode__(self):
        return self.locationname

    def latest(self):
        return Rating.objects.values('rating').filter(von_location=self).order_by('-id')[0]

class Rating(models.Model):
   von_location = models.ForeignKey(Location,related_name=""locations_rate"")
   rating = models.IntegerField()

   def __unicode__(self):
        return ""{0}"".format(self.rating)
"
Send a string message to multiple threads,"#!/usr/bin/python3

import threading
from queue import Queue


class IRCBetBot(threading.Thread):
    def __init__(self, q, playerName, channelName, currencyName):
        super().__init__()
        self.channel = channelName
        self.playerName = playerName
        self.currencyName = currencyName
        self.queue = q 

    def run(self):
        readbuffer = """"
        while 1:
            readbuffer = self.queue.get()  # This will block until a message is sent to the queue.
            print(""{} got msg {}"".format(self.channel, readbuffer))

if __name__ == ""__main__"":

    authorisedChannels = [[""user1"",""#channel1"",""coin1""],
                          [""user2"",""#channel2"",""coin2""],
                          [""user3"",""#channel3"",""coin3""]]

threads = {}
for item in authorisedChannels:
    try:
        userName = item[0]
        channelName = item[1]
        currencyPrefix = item [2]
        myTuple = (userName,channelName,currencyPrefix)
        q = Queue() 
        thread = IRCBetBot(q, *myTuple )
        thread.start()
        threads[channelName] = (q, thread)
    except Exception as e:
        print(""An error occurred while creating threads."")
        print(str(e))

while 1:
    a = input(""Input your message (channel: msg): "")
    channel, msg = a.split("":"")
    threads[channel][0].put(msg)  # Sends a message using the queue object
"
Possible to create a @synchronized decorator that's aware of a method's object?,"@synchronized # lock bound to function1
def function1():
    pass 

@synchronized # lock bound to function2
def function2():
    pass 

@synchronized # lock bound to Class
class Class(object):  

    @synchronized # lock bound to instance of Class
    def function_im(self):
        pass 

    @synchronized # lock bound to Class
    @classmethod
    def function_cm(cls):
        pass

    @synchronized # lock bound to function_sm
    @staticmethod
    def function_sm():
        pass
"
Python compare list and store in new variable,"def add_steps(routes, finished_routes):
    new_routes = []
    for r in routes:
        end = r[-1]
        r_finished = True
        for s in steps:
            if s[0] == end:
                new_routes.append(r + [s[1]])
                r_finished = False
        if r_finished:
            finished_routes.append(r)
    return new_routes, finished_routes
"
Problems Parsing NBA Boxscore Data with BeautifulSoup,"['Name', 'Team', 'MIN', 'FGM-A', '3PM-A', 'FTM-A', 'OREB', 'DREB', 'REB', 'AST', 'STL', 'BLK', 'TO', 'PF', '+/-', 'PTS']
['Kevin Garnett', 'Boston Celtics', '32', '4-8', '0-0', '1-1', '1', '11', '12', '2', '0', '2', '5', '4', '-4', '9']
['Brandon Bass', 'Boston Celtics', '28', '6-11', '0-0', '3-4', '6', '5', '11', '1', '0', '0', '1', '2', '-8', '15']
['Paul Pierce', 'Boston Celtics', '41', '6-15', '2-4', '9-9', '0', '5', '5', '5', '2', '0', '0', '3', '-17', '23']
['Rajon Rondo', 'Boston Celtics', '44', '9-14', '0-2', '2-4', '0', '7', '7', '13', '0', '0', '4', '4', '-13', '20']
['Courtney Lee', 'Boston Celtics', '24', '5-6', '1-1', '0-0', '0', '1', '1', '1', '0', '0', '1', '5', '-7', '11']
['Jared Sullinger', 'Boston Celtics', '8', '1-2', '0-0', '0-0', '0', '1', '1', '0', '0', '0', '0', '1', '-3', '2']
['Jeff Green', 'Boston Celtics', '23', '0-4', '0-0', '3-4', '0', '3', '3', '0', '1', '0', '1', '0', '-7', '3']
['Jason Terry', 'Boston Celtics', '25', '2-7', '0-3', '4-4', '0', '0', '0', '1', '1', '0', '3', '3', '-10', '8']
['Leandro Barbosa', 'Boston Celtics', '16', '6-8', '3-3', '1-2', '0', '1', '1', '1', '0', '0', '0', '1', '+4', '16']
['Chris Wilcox', 'Boston Celtics', ""DNP COACH'S DECISION""]
['Kris Joseph', 'Boston Celtics', ""DNP COACH'S DECISION""]
['Jason Collins', 'Boston Celtics', ""DNP COACH'S DECISION""]
['Darko Milicic', 'Boston Celtics', ""DNP COACH'S DECISION""]
['Shane Battier', 'Miami Heat', '29', '2-4', '2-3', '0-0', '0', '2', '2', '1', '1', '0', '0', '3', '+12', '6']
['LeBron James', 'Miami Heat', '29', '10-16', '2-4', '4-5', '1', '9', '10', '3', '2', '0', '0', '2', '+12', '26']
['Chris Bosh', 'Miami Heat', '37', '8-15', '0-1', '3-4', '2', '8', '10', '1', '0', '3', '1', '3', '+15', '19']
['Mario Chalmers', 'Miami Heat', '36', '3-7', '0-1', '2-2', '0', '1', '1', '11', '3', '0', '1', '3', '+11', '8']
['Dwyane Wade', 'Miami Heat', '35', '10-22', '0-0', '9-11', '2', '1', '3', '4', '2', '1', '4', '3', '-6', '29']
['Udonis Haslem', 'Miami Heat', '11', '0-1', '0-0', '0-0', '0', '3', '3', '0', '0', '0', '1', '1', '-2', '0']
['Rashard Lewis', 'Miami Heat', '19', '4-5', '1-2', '1-2', '0', '5', '5', '1', '0', '1', '0', '1', '+1', '10']
['Norris Cole', 'Miami Heat', '6', '1-2', '1-2', '0-0', '0', '0', '0', '1', '0', '0', '1', '2', '+5', '3']
['Ray Allen', 'Miami Heat', '31', '5-7', '2-3', '7-8', '0', '2', '2', '2', '0', '0', '0', '1', '+9', '19']
['Mike Miller', 'Miami Heat', '7', '0-0', '0-0', '0-0', '0', '0', '0', '1', '0', '0', '0', '1', '+8', '0']
['Josh Harrellson', 'Miami Heat', ""DNP COACH'S DECISION""]
['James Jones', 'Miami Heat', ""DNP COACH'S DECISION""]
['Terrel Harris', 'Miami Heat', ""DNP COACH'S DECISION""]
"
Pythonanywhere MySQL connection,"DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': '<your_username>$<your_database_name>',
        'USER': '<your_username>',
        'PASSWORD': '<your_mysql_password>',
        'HOST': 'mysql.server',
    }
}
"
Import dictionary containings lists from csv,"with open('/tmp/test_list.json') as f:
    test_list = json.load(f)
"
How does python know to add a space between a string literal and a variable?,"print str(a) + "" plus "" + str(b) + "" equals "" + str(a+b)
"
Best way to communicate in multiprocessing between processes.,"source
import multiprocessing, sys, time

record_ev = multiprocessing.Event()
name = 'beer'

def recordLeverPos(rec_ev, name): #e = multiprocessing.Event()
    posData = []
    lever = iter(xrange(999))
    while True:
        datBuffer = str(lever.next()) + '\n'
        posData.append(datBuffer)
        print 'posData',posData
        if rec_ev.is_set():
            rec_ev.clear()
            with open('%s_leverPos.tsv' % name, 'a') as dataf:
                for dat in posData:
                    dataf.write(dat)
            print 'wrote: {}'.format(posData)
            print 'Done Writing to leverPos file.'
            posData = []
        time.sleep(1)


record_proc = multiprocessing.Process(
    target=recordLeverPos, args = (record_ev, name)
)
record_proc.start()

time.sleep(2)
print 'triggering record'
record_ev.set()

time.sleep(2)
print 'triggering record #2'
record_ev.set()

time.sleep(2)
record_proc.terminate()
record_proc.join()
sys.exit(0)
"
How can I parse a log file to JSON,"import json 
a = open('abc.log','r')
text = a.read()
text_as_list = text.split('\n')
keys = text_as_list[2].split()
result = []
for item in text.split('\n')[4:len(text_as_list)]:
    temp_dict = {}  
    for i,j in zip(keys,item.split()):  
        if j.isdigit():         
            temp_dict[i] = int(j)
        else:
            temp_dict[i] = j
    result.append(temp_dict)
print json.dumps(result)
"
Python Dictionary Methods behaving diff for 2.7.6 and 3.3 version,">>> list(d)
['C', 'B', 'A']
"
How can I properly join these strings together (by column then row)?,"print ('#'*10 + '\n')*10
"
2d list to 3d list in python,"list1 = [2,3,1,3],[2,4,6,2]

list2 = [1,2,3,4],[4,3,2,1]

from copy import deepcopy

l3 = list(map(list, map(deepcopy,(list1, list2))))


print(l3[0])
print(l3[1])
[[2, 3, 1, 3], [2, 4, 6, 2]]
[[1, 2, 3, 4], [4, 3, 2, 1]]
"
Nested If Expression with user validation - repeating the prompt for user input,"while word != solution_list1[0]:
    print ""Sorry, you are wrong. Try again!""
    user_input = raw_input(""Type in a: "" + replacement + "" "") # ask the user again
    word = word.replace(replacement, user_input)
"
Create a Reg Exp to search for __word__?,"\b__([a-zA-Z0-9_':])__\b  ### count ""'"" and "":"" as part of words

>>> re.findall(r""\b__([a-zA-Z0-9_']+)__\b"",""__Here's__ a test __sentence:__"")
[""Here's""]
>>> re.findall(r""\b__([a-zA-Z0-9_':]+)__\b"",""__Here's__ a test __sentence:__"")
[""Here's"", 'sentence:']
"
Pandas: Exponential smoothing function for column,"import pandas as pd
import datetime as DT

df = pd.DataFrame({
    'Trader': 'Carl Mark Carl Joe Mark Carl Max Max'.split(),
    'Quantity': [5, 2, 5, 10, 1, 5, 2, 1],
    'Date': [
        DT.datetime(2013, 1, 1, 13, 0),
        DT.datetime(2013, 1, 1, 13, 5),
        DT.datetime(2013, 2, 5, 20, 0),
        DT.datetime(2013, 2, 6, 10, 0),
        DT.datetime(2013, 2, 8, 12, 0),
        DT.datetime(2013, 3, 7, 14, 0),
        DT.datetime(2013, 6, 4, 14, 0),
        DT.datetime(2013, 7, 4, 14, 0),
        ]})

df.index = [df.Date, df.Trader]
df2 = df.unstack('Trader').resample('1W', how='mean').fillna(0)
print(pd.ewma(df2, span=7))
"
Fastest 2D convolution or image filter in Python,"t = timeit.timeit(stmt='ndimage.convolve(x, y, output=x)', number=1,
setup=""""""
import numpy as np
from scipy import ndimage
x = np.random.random((2048, 2048)).astype(np.float32)
y = np.random.random((32, 32)).astype(np.float32)
"""""")
print t
"
Python Django - Load column from Database into list,"SELECT `projectname_chat_messages`.`name` FROM `projectname_chat_messages`
"
run command in interactive opend bash with python,"import pexpect
child = pexpect.spawn('vlc -I rc --novideo --noaudio --rc-fake-tty -q  udp://@1.2.3.4:1234')
child.expect('>')
child.sendline('info')
response = child.before
"
How to count similar domains in emails and print every domain only once[python]?,"countFirst = myList.count(uniqueList[0])
"
How to reformat URLs to be more restful (from .../?id=123 to .../123)?,"('/details/(\d+)', DetailsPage),
"
Sorting a list inside dictionary keys,"dictionary = {'Louis': [2, 10, 1],
               'John': [6, 1, 16]
               }
for name in sorted(dictionary.keys()):
    print name
    print sorted(dictionary[name], reverse=True)
"
Is there any option where we can check the source of the AJAX request,"def yourview(request):
    if request.is_ajax(): 
        if 'abc.js' in request.GET.get('js', ''):
            # do this
        else:
            # do that
"
how connect to vertica using pyodbc,"conn = pyodbc.connect(""DSN=VerticaDB1;UID=dbadmin;PWD=mypassword"")
"
How does Python implement random.choice() from a set?,">>> random.choice(list(s))
2
"
matplotlib: remove horizontal gap between axes?,"ax.set_aspect(i)
"
How to access the PEB of another process with python ctypes,"if __name__ == '__main__':
    import os
    import sys
    import subprocess
    import textwrap

    class SECURITY_ATTRIBUTES(ctypes.Structure):
        _fields_ = (('nLength',              wintypes.DWORD),
                    ('lpSecurityDescriptor', wintypes.LPVOID),
                    ('bInheritHandle',       wintypes.BOOL))
        def __init__(self, *args, **kwds):
            super(SECURITY_ATTRIBUTES, self).__init__(*args, **kwds)
            self.nLength = ctypes.sizeof(self)

    def test_remote(use_pid=True, show_modules=False):
        sa = SECURITY_ATTRIBUTES(bInheritHandle=True)
        hEvent = kernel32.CreateEventW(ctypes.byref(sa), 0, 0, None)
        try:
            script = textwrap.dedent(r""""""
            import sys
            import ctypes
            kernel32 = ctypes.WinDLL('kernel32')
            kernel32.SetEvent(%d)
            sys.stdin.read()"""""").strip() % hEvent
            cmd = '""%s"" -c ""%s""' % (sys.executable, script)
            proc = subprocess.Popen(cmd, stdin=subprocess.PIPE,
                                    close_fds=False)
            try:
                kernel32.WaitForSingleObject(hEvent, 5000)
                if use_pid:
                    pi = ProcessInformation(proc.pid)
                else:
                    pi = ProcessInformation(handle=int(proc._handle))
                assert pi.process_id == proc.pid
                assert pi.image_path == sys.executable
                assert pi.command_line == cmd
                assert pi.module_names[0] == sys.executable
                if show_modules:
                    print('\n'.join(pi.module_names))
            finally:
                proc.terminate()
        finally:
            kernel32.CloseHandle(hEvent)

    print('Test 1: current process')
    pi = ProcessInformation()
    assert os.getpid() == pi.process_id
    assert pi.image_path == pi.module_names[0]
    print('Test 2: remote process (Handle)')
    test_remote(use_pid=False)
    print('Test 3: remote process (PID)')
    test_remote(show_modules=True)
"
Formatting output of Counter,">>> category = Counter({'a': 8508, 'c': 345, 'w': 60})
>>> category.keys() 
dict_keys(['a', 'c', 'w'])
>>> for key, value in category.items():
...     print(key, value)
... 
a 8508
c 345
w 60
"
Displaying view function in Django,"<table>
    <tr>
        <th>Title</th>
        <th>Link</th>
        <th>Published</th>
    </tr>
    {% for entry in entries %}
        <tr>
            <td>{{ entry.title }}</td>
            <td>{{ entry.link }}</td>
            <td>{{ entry.published }}</td>
        </tr>
    {% endfor %}
</table>
"
Comment Python function calls in a string with source code,"import math
class Foo:
    def __init__(self):
        self.foo = 4
    def bar(self):
        print(""hello world"")

    def foo(self):
        return self.bar()

def bar():
    return 123

f = Foo()
"
Separate one year from a data value; taking care of leap years,"from dateutil.relativedelta import  relativedelta
from dateutil import parser
d = parser.parse(StartPostingDateFilter)
print((d - relativedelta(years=1)).date())
2005-01-01
"
Python List Question,"duplicate: [
              ['95d1543adea47e88923c3d4ad56e9f65c2b40c76', 'ron\\c', ['apa.txt']], 
              ['95d1543adea47e88923c3d4ad56e9f65c2b40c76', 'ron\\c', 'knark.txt']
           ]

diff: [
          ['b5cc17d3a35877ca8b76f0b2e07497039c250696', 'ron\\a', ['apa2.txt']], 
          ['b5cc17d3a35877ca8b76f0b2e07497039c250696', 'ron\\c', 'apa1.txt'], 
          ['da39a3ee5e6b4b0d3255bfef95601890afd80709', 'ron\\a\\include', ['svin.txt']],
          ['da39a3ee5e6b4b0d3255bfef95601890afd80709', 'ron\\b\\include', 'Test.java'],
          ['da39a3ee5e6b4b0d3255bfef95601890afd80709', 'ron\\d', 'Sourcecheck.py']
      ]
"
How to parse a string and return a nested array?,"def foo(s):
    def foo_helper(level=0):
        try:
            token = next(tokens)
        except StopIteration:
            if level != 0:
                raise Exception('missing closing paren')
            else:
                return []
        if token == ')':
            if level == 0:
                raise Exception('missing opening paren')
            else:
                return []
        elif token == '(':
            return [foo_helper(level+1)] + foo_helper(level)
        else:
            return [token] + foo_helper(level)
    tokens = iter(s)
    return foo_helper()
"
Pandas: Aggregating and applying multiple functions to same column,"def ttest(arr):     
    return stats.ttest_1samp(arr, popmean=0)[1]

counts_and_means = \
    my_data.groupby(""Category"").agg (
        {
            ""Category""  : np.count_nonzero ,
            ""val_1""     : np.mean ,
            ""val_2""     : [np.mean,ttest]
        }
    )
"
Find indexes of equal numpy 2D rows,"ids = all_arr.dot(np.append(1,(all_arr.max(0)+1)[::-1][:-1].cumprod())[::-1])
"
Reading words from a file and putting into list,"WORD WORD WORD WORD
ANOTHER
WORD SCRABBLE BLAH
YES NO 
"
How to set a base template for jinja2 in python?,"class FileSystemLoaderWithBase(jinja2.FileSystemLoader):
    def __init__(self, *args, **kwargs):
        self.base_template = kwargs.pop(""base_template"", None)
        super(FileSystemLoaderWithBase, self).__init__(*args, **kwargs)

    def get_source(self, environment, template):
        (source, path, creation) = super(
            FileSystemLoaderWithBase, self).get_source(environment, template)
        if self.base_template and template != self.base_template:
            source = '{% extends ""' + self.base_template + '"" %}\n' + source
        return (source, path, creation)
"
Import python module NOT on path,"import imp
util = imp.load_source('util', 'C:/full/path/foo/util.py')
"
write chinese words in csv file using python2.7,"(user@motoom) ~/Prj/python $ python chinesecsv.py

花花公子昊天鞋类专营店 78.1
"
How to control if a component exists in a Tk object/window?,"self.label = Label().pack(side=LEFT) # pack return nothing -> None
"
Setting parent key but not child key while using endpoint-proto-datastore,">>> parent = ndb.Key(MyModel, 1)
>>> child = MyModel(parent=parent)
>>> print child.key
ndb.Key('MyModel', 1, 'MyModel', None)
"
Raising and catching exceptions in an expression in Python 3,">>> WS = type(""WS"", (Warning, StopIteration), {})
>>> warnings.simplefilter(""error"", WS)
>>> list(type(""R"", (object,), dict(__init__=lambda self, stop: (setattr(self, 'stop', stop), setattr(self, 'i', 0), None)[-1], __iter__=lambda self: self, next=lambda self: (self.i, setattr(self, 'i', self.i + 1))[0] if self.i < self.stop else warnings.warn(""Stop"", WS)))(5))
[0, 1, 2, 3, 4]
"
Accessing Pyramid database outside of WSGI instance,"if __name__ == '__main__':
    main()
"
python regex: how to replace all png files in string with prefix?,"Regex:
(?<=\b)[^\s]+?\.png
"
Python dependencies?,"import byteplay
import cjson

def _other():
    from os import path
    from sys import modules

def do_something():
    import hashlib
    import lxml
    _other()
"
"Round to the nearest 500, Python","math.ceil(x / 500.0) * 500.0
"
Returning response while server is busy,"http://google.com google.html
http://yahoo.com yahoo.html
http://news.google.com news.google.html
http://reddit.com reddit.html
http://news.ycombinator.com news.ycombinator.html
"
Python - list comprehension in this case is efficient?,"input_list = ['  \n  ','  data1\n ','   data2\n','  \n','data3\n']
"
Select rows from a DataFrame based on values in a column in pandas,"df.loc[df['column_name'] == some_value]
"
Python Decimals format,"'{0:.3g}'.format(num)
"
How to extract a file within a folder within a zip in python?,"import subprocess
def view_file(filepath):
    subprocess.Popen(filepath, shell=True).wait()
"
Return matching strings from different txt files containing lists. Each item on new line,"data = file2.read()
data = data.lower() #make it all lowercase
data = re.sub(""[,-]"","""",data) #replace unwanted punctuation
list2= data.splitlines() 
"
Computation time insanely long in python,">>> pprint.pprint(dict_corresp_media)
{'10_1': 0,
 '10_2': 0,
 '10_3': 0,
 '10_4': 0,
 '10_5': 0,
 '10_6': 0,
 '10_7': 0,
 '10_8': 0,
 '10_9': 0,
 '1_10': 0.05619465373456477,
 '1_2': 0.12077157944440875,
 '1_3': 0,
 '1_4': 0.12077157944440875,
 '1_5': 0,
 '1_6': 0.07139907404780385,
 '1_7': 0.04759366973303256,
 '1_8': 0.12077157944440875,
 '1_9': 0,
 '2_1': 0,
 '2_10': 0,
 '2_3': 0,
 '2_4': 0,
 '2_5': 0,
 '2_6': 0,
 '2_7': 0,
 '2_8': 0,
 '2_9': 0,
 '3_1': 0,
 '3_10': 0,
 '3_2': 0,
 '3_4': 0,
 '3_5': 0,
 '3_6': 0,
 '3_7': 0,
 '3_8': 0,
 '3_9': 0,
 '4_1': 0,
 '4_10': 0,
 '4_2': 0,
 '4_3': 0,
 '4_5': 0,
 '4_6': 0,
 '4_7': 0,
 '4_8': 0,
 '4_9': 0,
 '5_1': 0,
 '5_10': 0,
 '5_2': 0,
 '5_3': 0,
 '5_4': 0,
 '5_6': 0,
 '5_7': 0,
 '5_8': 0,
 '5_9': 0,
 '6_1': 0,
 '6_10': 0,
 '6_2': 0,
 '6_3': 0,
 '6_4': 0,
 '6_5': 0,
 '6_7': 0,
 '6_8': 0,
 '6_9': 0,
 '7_1': 0,
 '7_10': 0,
 '7_2': 0,
 '7_3': 0,
 '7_4': 0,
 '7_5': 0,
 '7_6': 0,
 '7_8': 0,
 '7_9': 0,
 '8_1': 0,
 '8_10': 0,
 '8_2': 0,
 '8_3': 0,
 '8_4': 0,
 '8_5': 0,
 '8_6': 0,
 '8_7': 0,
 '8_9': 0,
 '9_1': 0,
 '9_10': 0,
 '9_2': 0,
 '9_3': 0,
 '9_4': 0,
 '9_5': 0,
 '9_6': 0,
 '9_7': 0,
 '9_8': 0}
"
extract values/renaming filename in python,"import os, glob
for f in glob.glob('~*~*~*.csv'):
    os.rename(f,f.split('~')[-1])
"
Search for a key in a nested Python dictionary,"idnum = 11
print sum(idnum in idnumber for idnumber in A.itervalues())
"
Filtering a dictionary by multiple values,"st = {'2', '4', '17', '21', '22', '24', '27', '28', '29', '33', '39'}

filtered_dict = {k: v for (k, v) in my_dict.iteritems() if not st.isdisjoint(v)}
"
Get added and removed words between two strings,"['beef', 'rob', 'easy', 'test', 'guys']
['bar', 'name', 'Dave', 'hello', 'hello']
"
How to approach list of range of values,"from itertools import permutations

encompassed_ranges = []
for a, b in permutations(my_ranges, 2):
    if a not in encompassed_ranges: # to cut short if it is already there
        if is_encompassed_by(a, b):
            encompassed_ranges.append(a)

not_encompassed_ranges = [r for r in my_ranges if r not in encompassed_ranges]
"
Path not found when executing my python script from my cmd prompt,"program
   main.py
   src
      __init__.py //empty py file
      classA
           __init__.py
           classA.py

      classB
           __init__.py
           classB.py

""../../img/myimage.gif""          // to use in classA.py file
"
py.test multiple tests for different results,"import re
import socket

import pytest


def __get_pod():
    hostname = socket.gethostname()
    hostname = hostname.split('.', 1)[0]
    if '-' not in hostname:
        return 'Unknown'
    hostname = re.sub(r'\d+', '', hostname)
    return hostname.rsplit('-', 1)[0]


@pytest.mark.parametrize(['hostname', 'expected'], [
    [""web01-east.domain.com"", 'web'],
    [""redis01-master-east.domain.com"", 'redis-master'],
    [""web01.domain.com"", 'Unknown'],
])
def test__get_pod(monkeypatch, hostname, expected):
    monkeypatch.setattr(socket, 'gethostname', lambda: hostname)
    assert __get_pod() == expected
"
multiprocessing.Pool spawning new childern after terminate() on Linux/Python2.7?,"  C-c C-c[WARNING/PoolWorker-4] terminating is set
[WARNING/PoolWorker-2] terminating is set
[WARNING/PoolWorker-3] terminating is set
[WARNING/PoolWorker-1] terminating is set
"
Returning HTML elements from a view in Django,"items = {
  'an apple': '<img src=""apple.png"" />', 
  'a pear': '<img src=""pear.png"" />', 
  'an orange': '<img src=""orange.png"" />'
}
"
python keep-alive connection and download image,"Thu, 03 Oct 2013 23:15:52 GMT
"
Equivalent of Matlab 'ismember' in numpy (Python)?,"valid = (quarters <= months.max()) & (quarters >= months.min())
loc = loc[valid]
"
How do I create objects with nested items using serializers in Django REST,"{""user"": {""username"": ""xxx"", ""password"": ""xxx"", ...},
 ""language"": ""..."",
 ...
} 
"
Removing numbers from string,"no_digits = []
# Iterate through the string, adding non-numbers to the no_digits list
for i in s:
    if not i.isdigit():
        no_digits.append(i)

# Now join all elements of the list with '', 
# which puts all of the characters together.
result = ''.join(no_digits)
"
Calculate euclidean distance between two vector (bag of words) in python,"math.sqrt(sum((a.get(k, 0) - b.get(k, 0))**2 for k in set(a.keys()).union(set(b.keys()))))
"
python dictionary(dictionary(dictionary(list))) comparison,"def lists_to_sets(d):
    for k, v in d.items():
        if isinstance(v, list):
            d[k] = set(v)
        elif isinstance(v, dict):
            lists_to_sets(v)
"
Sorting a dictionary by highest value of nested list,">>> d_max = {k:max(d[k]) for k in d}
>>> d_max
{'a': 5, 'c': 3, 'b': 7}
"
Python 3- check if buffered out bytes form a valid char,"#!python3
import codecs
import sys
byte_string = '\u5000\u5001\u5002'.encode('utf8')

# Get the UTF-8 incremental decoder.
decoder_factory = codecs.getincrementaldecoder('utf8')
decoder_instance = decoder_factory()

# Simple example, read two bytes at a time from the byte string.
result = ''
for i in range(0,len(byte_string),2):
    chunk = byte_string[i:i+2]
    result += decoder_instance.decode(chunk)
    print('chunk={} state={} result={}'.format(chunk,decoder_instance.getstate(),ascii(result)))
result += decoder_instance.decode(b'',final=True)
print(ascii(result))
"
Growing matrices columnwise in NumPy,"my_data = NP.random.random_integers(0, 9, 16).reshape(4, 4)
# the line to add--does not depend on array dimensions
new_col = NP.zeros_like(my_data[:,-1]).reshape(-1, 1)
res = NP.hstack((my_data, new_col))
"
How to insert correctly different pictures to a single file ,"$ convert +append row1.jpg row2.jpg row3.jpg a4.jpg
"
Read text file and take region names in Python,"import re
re.split('\s+', line, 8)
"
Word-counter won't print foreign characters,">>> Counter(open('unicode.txt').read())
Counter({'\xe1': 2, '\x88': 2, '\xb4': 2, 'a': 1, '\xc3': 1, ' ': 1, 'i': 1, '\xa8': 1, '\xef': 1, 'o': 1, '\xbb': 1, '\xbf': 1})
>>> Counter(codecs.open('unicode.txt', encoding='utf-8').read())
Counter({u'\u1234': 2, u'a': 1, u' ': 1, u'i': 1, u'\xe8': 1, u'o': 1, u'\ufeff': 1})
"
python regex sub %H:%M:%S to %M:%s or 01:%M:%s,"# 59:59 - It's all right. - He saw us!
# 01:00:01 I heard you the first time.
"
Python - unpack struct into multiple tuples,"import struct
import itertools as IT

def unpack_formats(fmts, data):
    data = iter(data)
    return [struct.unpack(fmt, ''.join(IT.islice(data, struct.calcsize(fmt))))
            for fmt in fmts]

data = struct.pack('<?3h3h', True, 1,2,3,4,5,6)
fmts = ('<?', '<3h', '<3h')
(is_enabled,), cmd_speed, tach_speed = unpack_formats(fmts, data)
print(is_enabled, cmd_speed, tach_speed)
"
Python multiple loops at the same time,"from multiprocessing import Process
import time

def f(name):
    print('hello', name)
    time.sleep(10)

def d(name):
    print('test2', name)
    time.sleep(10)

if __name__ == '__main__':
    p1 = Process(target=f, args=('bob',))
    p2 = Process(target=d, args=('alice',))
    p1.start()
    p2.start()
    p1.join()
    p2.join()
"
What is the exact way to send erlang module and erlang function to the mapreduce face in python-riak client l,"# python ~/test.py

Count the number of values in the bucket
3

List all values in natual sort order
{""field2"": ""1data2"", ""field3"": 1, ""field1"": ""1data1"", ""zone"": ""D""}
{""field2"": ""2data2"", ""field3"": 2, ""field1"": ""2data1"", ""zone"": ""A""}
{""field2"": ""3data2"", ""field3"": 3, ""field1"": ""3data1"", ""zone"": ""C""}

List all values sorted by 'zone'
{""field2"":""2data2"",""field3"":2,""field1"":""2data1"",""zone"":""A""}
{""field2"":""3data2"",""field3"":3,""field1"":""3data1"",""zone"":""C""}
{""field2"":""1data2"",""field3"":1,""field1"":""1data1"",""zone"":""D""}

List all values sorted by 'zone', also sort the fields in each object
{""field1"":""2data1"",""field2"":""2data2"",""field3"":2,""zone"":""A""}
{""field1"":""3data1"",""field2"":""3data2"",""field3"":3,""zone"":""C""}
{""field1"":""1data1"",""field2"":""1data2"",""field3"":1,""zone"":""D""}

List just field3, sorted
{""field3"":1}
{""field3"":2}
{""field3"":3}

List just bucket,key,field3, sorted by field3
{""bucket"":""test_bucket"",""key"":""key1"",""field3"":1}
{""bucket"":""test_bucket"",""key"":""key2"",""field3"":2}
{""bucket"":""test_bucket"",""key"":""key3"",""field3"":3}

Return just the zone for key2
{""zone"":""A""}

Return the bucket,key,zone for key1 and key3
{""bucket"":""test_bucket"",""key"":""key3"",""zone"":""C""}
{""bucket"":""test_bucket"",""key"":""key1"",""zone"":""D""}
"
Remove duplicates but keep first and last record of sequence,"400102-25,6:50,90005002,1
400102-25,,90005004,2
400102-25,7:00,90002109,3
400102-25,,90002107,4
400102-25,,90002111,5
400102-25,7:05,90002106,6
600004-10,13:05,90006017,1
600004-10,,90006022,2
600004-10,13:20,90006030,3
600004-10,,90006015,4
600004-10,13:30,90006034,5
600004-10,,90006033,6
600004-10,13:40,90006002,7
"
Get elements of a tuple-indexed dictionary specifying only one field of the tuple,"[v for k,v in a.items() if k[2] == 'l1p']
"
Conveying a tkinter button's execution across different classes?,"class Interface(tk.Frame):
    def __init__(self, master, canvas):
        ...
        self._canvas = canvas
        ...
    def clearall(self):
        self._canvas.delete(tk.ALL)


class App(object):
    def __init__(self, master):
        ...
        self._canvas = tk.Canvas(master, bg='white')
        self._interface = Interface(master, self._canvas)
        ...
"
How to compare dates from Excel sheets for value filling purposes on python,"In [21]: df3 = df2.set_index(""Start Date"")

In [22]: df3
Out[22]:
            End Date Rep Month      Cost     kWh   kW
Start Date
2011-07-06  8/3/2011      July  5,065.17  76,640  205
2011-08-03  9/7/2011    August  5,572.38  86,640  195
"
How to manipulate the data after numpy.loadtxt?,"with open('131014-data-xy-conv-1.txt', 'r') as f:
    x = np.array(f.readline().split(',')[1:], int)
    y_and_data = np.genfromtxt(f, delimiter=',')
y = y_and_data[:,0]
data = y_and_data[:,1:]
"
How to add two Sparse Vectors in Spark using Python,"from scipy.sparse import csc_matrix
from pyspark.mllib.regression import LabeledPoint

m1 = csc_matrix((
   v1.values,
   (v1.indices, [0] * v1.numNonzeros())),
   shape=(v1.size, 1))

m2 = csc_matrix((
   v2.values,
   (v2.indices, [0] * v2.numNonzeros())),
   shape=(v2.size, 1))

LabeledPoint(0, m1 + m2)
"
How to write a program in python 3.3.4 that works out the area of a rectangle?,"area = [height*width]
"
alignment buttons in PyQt4 of Python,"
    Button_input1 = QtGui.QPushButton(""Reference Polygons"")
    vBox_left.addWidget(Button_input1)

    Button_input2 = QtGui.QPushButton(""Segmented Polygons"")
    vBox_left.addWidget(Button_input2)

    Button_output = QtGui.QPushButton(""Save"")
    vBox_left.addWidget(Button_output)

    Button_start = QtGui.QPushButton(""Start"")
    Button_start.setCheckable(True)

    vBox_left.addWidget(Button_input1)
    vBox_left.addWidget(Button_input2)
    vBox_left.addWidget(Button_output)
    vBox_left.addWidget(Button_start)
"
(Python) How to edit existing rows in a SQL DB?,"corrected_rows = []
for row in cursor.execute('SELECT id, name FROM company'):
    corrected_rows.append((row[0], row[1].replace(',', '')))
"
Is my thought process right?,"multiplications[(i, j)] = i * j
"
write csv row (from within for loop) out to csv file without using python csv module,"with open(sys.argv[1]) as ifile, open(sys.argv[2], mode = 'w') as ofile:
    for row in ifile:

    #...
    #You've defined some_condition to be met (you will have to replace this for yourself)
    #E.g.: the number of entries in each row is greater than 5:
        if len([term for term in row.split('#') if term.strip() != '']) > 5:
            ofile.write(row)
"
Using Class method to add a Class variable,"class MyTableClass(object):

    def __init__(self):
        self.tables = {
            'table1': PrettyTable([""Student Name"", ""Score Test 1""]),
            'table2': PrettyTable([""Student Name"", ""Score Test 2""]),
        }

    def addTable (self, newTable, **kwargs):
        self.tables[newTable] = PrettyTable(kwargs.values())

    def addTableRow(self, newTable, **kwargs):
        self.tables[newTable].add_row(kwargs.values())
"
how to access index in a pandas HDStore (pyTables),"In [24]: df_mi.to_hdf('test.h5','df_mi',table=True,mode='w')
"
YQL - No definition found for Table,"import yql
y = yql.Public()
query = 'SELECT * FROM yahoo.finance.option_contracts WHERE symbol=""SPY""'
y.execute(query, env=""store://datatables.org/alltableswithkeys"")
"
How to count numbers in a list from a csv file filtering out words and commas,"for col in cols['count']:
    print(col)
"
How can I turn a csv file into a list of list in python,"import csv

with open('test.csv') as csvfile:
    rows = csv.reader(csvfile)
    res = list(zip(*rows))
    print(res)
    # [('6', '5', '7'), ('2', '2', '3'), ('4', '3', '6')]
"
Storing a text file into SQLite3 database using python,"import sqlite3

conn = sqlite3.connect('catalog.db')
cursor = conn.cursor()
result = cursor.execute('CREATE TABLE ru (msgid TEXT, msgstr TEXT)')

# bulk insert the messages
messages = [(msg.id, msg.string) for msg in cat if msg.id]
result = cursor.executemany('INSERT INTO ru (msgid, msgstr) VALUES (?, ?)',  messages)
assert(result.rowcount == len(messages))
conn.commit()

result = cursor.execute(""SELECT * from ru where msgid = '11 inches/sec.'"")
msgid, msgstr = result.fetchone()
# .encode('utf8') can be removed for Python 3
print '""{}"" translates to ""{}""'.format(msgid, msgstr.encode('utf8'))

msgid = 'A Samba password is required to export printer drivers'
result = cursor.execute(""SELECT * from ru where msgid = ?"", (msgid,))
msgid, msgstr = result.fetchone()
print '""{}"" translates to ""{}""'.format(msgid, msgstr.encode('utf8'))
"
Ordered Dictionary is not sorting,"sorted_dict = collections.OrderedDict(sorted(ordered_dict.items()))
"
Numpy multiplication of vectors of different size avoiding for loops,"Arg = Kx[m,n]*u[i] + Ky[m,n]*v[j]
"
get mask from contour with OpenCV," cv.drawContours(mask, contours, -1, (255,255,255),1)
"
matplotlib: Don't compress plot in the horizontal direction,"plt.axis('equal')
plt.tight_layout()
"
"Sort nested dictionary python 2.7, by deepest value, return key tuples",">>> sorted(((k1, k2) for k1 in d for k2 in d[k1]), key=lambda t: d[t[0]][t[1]], reverse=True)
[(4, 'g'), (4, 'a'), (12, 'b'), (11, 'c'), (11, 'b'), (11, 'a'), (4, 'r'), (12, 'g'), (4, 'f')]
"
"If else condition with or, return variable that evalutes to FALSE","def foo(a, b):
    if a == 0 or b == 0:
       return a or b
"
How to convert a column or row matrix to a diagonal matrix in Python?,"a = np.array([[1],[2],[3],[4]])
d = np.diag(a[:,0])
"
Edit Dictionary in python,"[{'A':{'1':'a','2':'b'}},
 {'A':{'3':'Z'}}]
"
How to implement a 'before' hook that can output an alternative response?,"class MyHandler:
    @authenticated
    def get(self):
        pass
"
How to get WhoIs info by IP in Python 3?,"In [37]: from ipwhois import IPWhois

In [38]: obj = IPWhois('74.125.225.229')

In [39]: res=obj.lookup()

In [40]: res[""nets""][0]['country']
Out[40]: 'US'

In [41]: res[""nets""][0]['abuse_emails']
Out[41]: 'arin-contact@google.com'

In [42]: from pprint import pprint

In [43]: pprint(res)
{'asn': '15169',
 'asn_cidr': '74.125.225.0/24',
 'asn_country_code': 'US',
 'asn_date': '2007-03-13',
 'asn_registry': 'arin',
 'nets': [{'abuse_emails': 'arin-contact@google.com',
           'address': '1600 Amphitheatre Parkway',
           'cidr': '74.125.0.0/16',
           'city': 'Mountain View',
           'country': 'US',
           'created': '2007-03-13T00:00:00',
           'description': 'Google Inc.',
           'misc_emails': None,
           'name': 'GOOGLE',
           'postal_code': '94043',
           'state': 'CA',
           'tech_emails': 'arin-contact@google.com',
           'updated': '2012-02-24T00:00:00'}],
 'query': '74.125.225.229',
 'raw': None}
"
get all possible single bytes in python,"import itertools


itertools.product([0, 1], repeat=8)
>>> list(itertools.product([0, 1], repeat=8))
[(0, 0, 0, 0, 0, 0, 0, 0),
 (0, 0, 0, 0, 0, 0, 0, 1),
"
how to find a particular string in an element of array in python,"Parthipan match
 no match
['Parthipan', 'Parthipan', 'Parthipan', 'Parthipan'] match
['Parthipan', 'Parthipan', 'Parthipan', 'Parthipan'] match
"
Incorrect output when downloading .html files,"import requests

urls=['http://www.nydailynews.com/sports/soccer-fans-stampede-south-african-stadium-nigeria-north-korea-world-cup-warmup-article-1.179211']

 path='C:/Users/sony/Desktop/Python'

for i,site in enumerate(urls):
    print (site)
    req = requests.get(site)
    page_content = req.content
    with open ('{}{}.html'.format(path,i), 'w') as fid:
        fid.write(page_content)
"
Deploying a local django app using openshift,"yourproject/
+---wsgi/
|   +---static/
|       +---.gitkeep
+---wsgi.py
+---setup.py
+---.openshift/ (with its contents - I omit them now)
+---yourdjproject/
|   +----__init__.py
|   +----urls.py
|   +----settings.py
|   +----wsgi.py
+---+yourapp/
    +----__init__.py
    +----models.py
    +----views.py
    +----tests.py
    +----migrations
         +---__init__.py
"
How to speed up Poisson pmf function?,">>> poisson.pmf(1, -1)
nan
>>> poisson._pmf(1, -1)
/home/br/virtualenvs/scipy-dev/local/lib/python2.7/site-packages/scipy/stats/_discrete_distns.py:432: RuntimeWarning: invalid value encountered in log
  Pk = k*log(mu)-gamln(k+1) - mu
nan
"
creating dictionary containing list values using a comprehension,"d = {c: [] for c in colors}
for x in g16.nodes(data=True):
    k = x[1]['color']
    if k in d:
        d[k].append(x[0])
"
Modifying diagonals in multidimensional numpy arrays,"In [197]: a = np.arange(21*21).reshape(7,3,7,3)

In [198]: a[5, :, 5, :]
Out[198]: 
array([[330, 331, 332],
       [351, 352, 353],
       [372, 373, 374]])
"
Python failure to find all duplicates,"def choose_random(list1,n):
    import random 
    i = 0 
    set_list=[]
    major_numbers=range(1,50) + list1
    print(major_numbers) 
    while i <n: 
        set1 =random.sample(major_numbers,5) 
        set2 =random.sample(major_numbers,2) 
        while len(set(set1)) != len(set1):
            print(""Duplicate found at %i""%i)
            print set1
            print(""Changing to:"")
            set1 =random.sample(major_numbers,5) 
            print set1
        set_list.append([set1,set2])
        i +=1
    return set_list
"
updating XML attribute value in python,"import lxml.etree as ET
parser = ET.XMLParser(remove_comments=False)
tree = etree.parse('data', parser=parser)
"
PyQt4: Reorder Ok and Cancel buttons in the QDialogButtonBox,"buttonBox.layout().setDirection(QtGui.QBoxLayout.RightToLeft)
"
Current way to get Home URL (Domain) in Django Template?,"from django.conf import settings

def root_url(request):
    """"""
    Pass your root_url from the settings.py
    """"""
    return {'SITE_URL': settings.ROOT_URL_YOU_WANT_TO_MENTION}
"
How to convert a Python file docstring's to HTML,"    filter(lambda x: not x.startswith('_'), [x[0] for x in inspect.getmembers(MyClass, predicate=inspect.ismethod)])
"
Path information for a python application installed in a different folder per users,"import os

os.system(""start "" + pdf_path)
"
Getting unique items from a two dimensional array python,"[('a', 0), ('a', 1)]
"
python pandas applying for loop and groupby function,"res.ix[res['Len'] > 2, 'Lastname'] = 'The ' + res['Lastname'] + ' Family'
res.ix[res['Len'] == 2, 'Lastname'] = res['Names'] + ', ' + res['Lastname']
res.ix[res['Len'] < 2, 'Lastname'] = res['Names'] + ' ' + res['Lastname']
del res['Len']
del res['Names']

     Address            Lastname
0   200 G Ct    E and A, Johnson
1   200 G Ct             J Smith
2  60 N Blvd            L Diablo
3    63 F Wy  The Simpson Family
"
django social-auth multiple account association,"SOCIAL_AUTH_PIPELINE = (
    'social_auth.backends.pipeline.social.social_auth_user',
    'social_auth.backends.pipeline.user.get_username',
    'social_auth.backends.pipeline.user.create_user',
    'social_auth.backends.pipeline.social.associate_user',
    'social_auth.backends.pipeline.social.load_extra_data',
    'social_auth.backends.pipeline.user.update_user_details',
    'myapp.pipeline.create_profile'
)
"
pandas concat DataFrame on different Index,"                   a         b         c         d         e         f  \
2001-01-01  0.228430 -1.154375 -0.612703 -2.760826 -0.877355 -0.071581   
2001-01-03  1.452750  1.341027  0.051486  1.231563  0.428353  1.320172   
2001-01-05 -0.966979 -1.997200 -0.376060 -0.692346 -1.689897  0.549653   
2001-01-09 -0.117443 -0.888103  2.092829 -0.467220 -1.083004 -1.443015   
2001-01-11 -0.168980 -0.152663  0.365618  0.444175 -1.472091 -0.578182   

                   g         h         i         j         k         l  
2001-01-01 -0.098758  0.920457 -1.072377 -0.627720  0.223060  0.903130  
2001-01-03  1.962124  1.134501 -0.209813 -2.309090  0.358121  0.655156  
2001-01-05  1.088195 -1.705393 -0.161167 -0.339617  0.945495  0.220701  
2001-01-09  0.970829  1.931192  0.943150 -1.895580  0.815188 -1.485206  
2001-01-11  0.747193 -1.221069 -0.164531 -0.395197 -0.754051  0.922090  
"
Handling the various permutations of the diff between two lists,"today_ids = ['id1', 'id2', 'id5']
base_line_ids = ['id1','id2','id3','id4']

added_ids = set(today_ids).difference(base_line_ids)
removed_ids = set(base_line_ids).difference(today_ids)

# specific message for: no added, no removed
if set(today_ids) == set(base_line_ids):
    print('No ids added or removed')
    exit(0)

if len(removed_ids):
    print('The following ids were removed:\n{}'.format('\n'.join(removed_ids)))
else:
    print('No ids removed')

if len(added_ids):
    print('The following ids were added:\n{}'.format('\n'.join(added_ids)))
else:
    print('No ids added')
"
How to accumulate unique sum of columns across pandas index,"date
2001-05-23 19:50:14     3
2001-05-25 11:53:55     7
2001-05-27 17:36:37     9
2001-05-28 19:36:37     5
2001-05-28 19:36:38    11
2001-05-28 19:36:39    14
Name: score_sum
"
Using multiprocessing for finding network paths,"import networkx as nx
import multiprocessing as mp
import random
import sys
import itertools as IT
import logging
logger = mp.log_to_stderr(logging.DEBUG)


def worker(inqueue, output):
    result = []
    count = 0
    for pair in iter(inqueue.get, sentinel):
        source, target = pair
        for path in nx.all_simple_paths(G, source = source, target = target,
                                        cutoff = None):
            result.append(path)
            count += 1
            if count % 10 == 0:
                logger.info('{c}'.format(c = count))
    output.put(result)

def test_workers():
    result = []
    inqueue = mp.Queue()
    for source, target in IT.product(sources, targets):
        inqueue.put((source, target))
    procs = [mp.Process(target = worker, args = (inqueue, output))
             for i in range(mp.cpu_count())]
    for proc in procs:
        proc.daemon = True
        proc.start()
    for proc in procs:    
        inqueue.put(sentinel)
    for proc in procs:
        result.extend(output.get())
    for proc in procs:
        proc.join()
    return result

def test_single_worker():
    result = []
    count = 0
    for source, target in IT.product(sources, targets):
        for path in nx.all_simple_paths(G, source = source, target = target,
                                        cutoff = None):
            result.append(path)
            count += 1
            if count % 10 == 0:
                logger.info('{c}'.format(c = count))

    return result

sentinel = None

seed = 1
m = 1
N = 1340//m
G = nx.gnm_random_graph(N, int(1.7*N), seed)
random.seed(seed)
sources = [random.randrange(N) for i in range(340//m)]
targets = [random.randrange(N) for i in range(1000//m)]
output = mp.Queue()

if __name__ == '__main__':
    test_workers()
    # test_single_worker()
    # assert set(map(tuple, test_workers())) == set(map(tuple, test_single_worker()))
"
Identify values in column that occur more than once,"address,salesprice
1,RIVER TERRACE,6000000
10,LITTLE WEST STREET,2500000
15,WILLIAM STREET,1140000
15,WILLIAM STREET,885878
15,WILLIAM STREET,997885
15,WILLIAM STREET,1220881.75
120,GREENWICH STREET,625000 
"
Numpy: How to resize an random array using another array as template,">>> import numpy as np
>>> a=np.array([[ 0.,  0.,  0.,  0.,  0.],
...        [ 0.,  0.,  0.,  0.,  0.],
...        [ 0.,  0.,  0.,  0.,  0.],
...        [ 0.,  0.,  0.,  0.,  0.],
...        [ 0.,  0.,  0.,  0.,  0.]])
>>> b=np.array([[ 1.,  0., 1.],
...           [ 0.,  1., 0.]])

>>> i,j=b.shape
>>> a[:i,:j]=b
>>> a
array([[ 1.,  0.,  1.,  0.,  0.],
       [ 0.,  1.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.]])
"
Generating objects in python 3.4.3,"desired_names = ['name1', 'name2', 'name3']
objs = [foo(name,100, True) for name in desired_names]
"
Open file and save it in another function with tkinter,"self.save_name = tkFileDialog.askopenfilename(title='Select a file')
with open(self.save_name, 'rb') as f:
    self.the_data = f.read() # insert processing here
"
Python 3 pyQt4 updating GUI with variables from multiple modules/classes,"parent.wa.label.setText('Blablabla')
"
Enclose a variable in single quotes in Python,"term = urllib.quote(""'"" + term + ""'"")
"
How to use string formatting to dynamically assign variables,"instance = getattr(rsyslog, 'instance{}'.format(this_instance_number))
print getattr(instance, attribute)
"
Pandas split column name,"df['level'] = np.where(df['group_level'].str.endswith('Low'), 'Low', 'High')
df['group'] = np.where(df['group_level'].str.endswith('Low'), df['group_level'].str[:-3], df['group_level'].str[:-4])

df

    group_level level     group
0     group0Low   Low    group0
1    group0High  High    group0
2     group1Low   Low    group1
3    group1High  High    group1
4      routeLow   Low     route
5     routeHigh  High     route
6   landmarkLow   Low  landmark
7  landmarkHigh  High  landmark
"
keys with multiple values in a dictionary (Python),"l = ['A,1,1', 'B,2,1', 'C,4,4', 'D,4,5']

d = {s[0]: map(int, s[1:] ) for s in (s.split("","") for s in l)}
"
How do I send data from JS to Python with Flask?,"$.get(""/getpythondata"", function(data) {
    console.log($.parseJSON(data))
})
"
python Binary string to binary data,"with open(""foo.bin"", 'wb') as f:
    f.write('\x04\x95$\x93\xe5t')

>>> os.path.getsize(""foo.bin"")
6L
"
BeautifulSoup4 class with whitespaces not treated as single string,"soup = BeautifulSoup('<div class=""class1 class2 class3"">...</div>',""xml"")
print(soup.find('div')['class'])
class1 class2 class3
"
Python: retrieve number of rows affected with SQL DELETE query,"In [1]: import sqlite3

In [2]: db = sqlite3.connect("":memory:"")

In [3]: cursor = db.cursor()

In [4]: cursor.execute(""create table test(i)"")
Out[4]: <sqlite3.Cursor at 0x103a3c260>

In [5]: cursor.execute(""insert into test(i) values (1)"")
Out[5]: <sqlite3.Cursor at 0x103a3c260>

In [6]: cursor.execute(""insert into test(i) values (2)"")
Out[6]: <sqlite3.Cursor at 0x103a3c260>

In [7]: cursor.execute(""insert into test(i) values (3)"")
Out[7]: <sqlite3.Cursor at 0x103a3c260>

In [8]: cursor.execute(""delete from test where i >= 2"")
Out[8]: <sqlite3.Cursor at 0x103a3c260>

In [9]: cursor.rowcount
Out[9]: 2
"
Pure python implementation of greenlet API,"from cogen.core.coroutines import coroutine
from cogen.core.schedulers import Scheduler
from cogen.core import events

@coroutine
def test1():
    print 12
    yield events.AddCoro(test2)
    yield events.WaitForSignal(test1)
    print 34

@coroutine
def test2():
    print 56
    yield events.Signal(test1)
    yield events.WaitForSignal(test2)
    print 78

sched = Scheduler()
sched.add(test1)
sched.run()

>>> 12
>>> 56
>>> 34
"
python pandas extract unique dates from time series,"In [118]: df[""Date""][0].date()
Out[118]: datetime.date(2012, 10, 8)
"
Multiplication Table program won't work,"def multiTable(n)
    tableList = [""{0} X {1} => {2}"".format(n, i, n*i) for i in range(1,13)]
    for _ in tableList:
        print(_)

>> n = int(input(""Please enter a number to find the times tables:""))
## Assuming n = 2
>> multiTable(n)

2 X 1 => 2
2 X 2 => 4
2 X 3 => 6
2 X 4 => 8
2 X 5 => 10
2 X 6 => 12
2 X 7 => 14
2 X 8 => 16
2 X 9 => 18
2 X 10 => 20
2 X 11 => 22
2 X 12 => 24
"
Is there a built-in Python function to generate 100 numbers from 0 to 1?,"def my_range(start, end, how_many):
    incr = float(end - start)/how_many
    return [start + i*incr for i in range(how_many)]
"
Fitness proportionate selection (roulette wheel selection) in Python,"choices = {chromosome: chromosome.fitness for chromosome in chromosomes}
"
Displaying 6.5235375356299998e-07 without exponential notation,">>> 6.5235375356299998e-07 * 10000000
6.5235375356300001

>>> 6.5235375356299998e-07 + 10000000
10000000.000000652
"
Read out definitions of a text file based dictionary,"def read_paragraph(fp):
    """""" 
    Read lines from the file until the end of the paragraph 
    """"""
    while True:
        line = fp.readline()
        if not line.strip():
            break
        yield line

def skip_paragraph(fp):
    while fp.readline().strip():
        pass

def find_definition(fp, word):
    word = word.upper()
    while True:
        line = fp.readline()
        if not line:
            break  # end of file, consider raising an exception here

        if line.strip() == word:
            yield line          # found the word
            skip_paragraph(fp)  # move to the definition
            for defline in read_paragraph(fp):
                yield defline
            break
        else:
            # we're not interested in the current word, just skipping it
            skip_paragraph(fp)
            skip_paragraph(fp)
"
Jython random module produces different results to cpython,"rand = random.WichmannHill(1)
uuid += rand.choice(hexdigits)
"
Remove strings containing only white spaces from list,">>> starring = ['Vashu Bhagnani', 'Khemchand Bhagnani', ' ', 'Jacky Bhagnani', ' ', 'Prashant Shah', ' ']                                      
>>> starring = filter(lambda name: name.strip(), starring)
>>> starring
['Vashu Bhagnani', 'Khemchand Bhagnani', 'Jacky Bhagnani', 'Prashant Shah']
"
Ordering by subquery in SQLAlchemy,"SELECT thread.id AS thread_id 
FROM thread ORDER BY (SELECT max(post.posted_at) AS max_1 
FROM post 
WHERE post.thread_id = thread.id) DESC
"
Randomize elements of a list in jinja 2,"environment.filters['shuffle'] = filter_shuffle
"
state retention for classes and closures,"class Counter:
    def __init__(self, start=0):
        self.count = start - 1
    def __call__(self):
        self.count += 1
        return self.count
"
"Python, SQLAlchemy: Storing business hours as binary bitmask","[hour for hour in range(firsthour, secondhour) if hour in range(openinghour, closinghour)
"
ThreadPoolExecutor internals,"    if len(self._threads) < self._max_workers:
        t = threading.Thread(target=_worker,
                             args=(weakref.ref(self, weakref_cb),
                                   self._work_queue))
"
Named Entity Recognition (regex for places),"r'([A-Z][a-z]*(?:[ '-][A-Za-z]+)*), ([A-Z][a-z]*(?:[ '-][A-Za-z]+)*), ([A-Z][a-z]*(?:[ '-][A-Za-z]+)*)
"
"Read line in file, print line if it contains string","print ""{} {}"".format(line.split(',')[3], num)
"
PyCharm does not recognize dictionary value type,"def f(my_dict:""dict[int,list]""):
    my_dict[1]. #get all the list methods
"
I'm creating a quiz which is for primary school students,"class Class(object):
    def __init__(self, num, name, input_file):
        self.name = name
        self.num = num
        self.input_file = input_file
        self.students = []
        #so far it's just an empty list

    #add methods that read in the students from a file
    #parse it for info you need
    def parse():
        #parse self.input_file for info you need
        pass

class Classes(object):
    def __init__(self, input_file):
        self.input_file = input_file
        self.all_classes = []
    #this parse function should read in from a file
    #of all classes, and instantiate a new Class
    #object and put them in self.all_classes
    #this is the class that enables you to select
    #which Class you want, and Class object should
    #have methods for calculating average, per student
    #grade etc....
    def parse():
        #parse the file to fill self.all_classes
        pass


classes = Classes(input_file=""all_classes.txt"")
#this should return a Classes object named classes
#that object should contain a list of all Class objects
#those objects should have methods to retrieve avg grade etc...
"
How to execute a python notebook inside another one at google cloud datalab,"myNotebook = <relative path to notebook>

%run $myNotebook
"
re.split on multiple characters (and maintaining the characters) produces a list containing also empty strings,"import re
e = ""((12*x^3+44   * 3)*3)""
print  re.findall(""(\w+|[()\-+*/^])"", e)
"
Persistent python subprocess,">>> p = subprocess.Popen(['cat'], stdin=subprocess.PIPE, stdout=subprocess.PIPE)
>>> import fcntl, os
>>> fcntl.fcntl(p.stdout.fileno(), fcntl.F_SETFL, os.O_NONBLOCK)
0
>>> p.stdout.read()         # raises an exception instead of blocking
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
IOError: [Errno 11] Resource temporarily unavailable
"
What does numpy.max function do?,">>> a = a.reshape(3, 3, 3)
>>> max(a)
ValueError: The truth value of an array with more than one element is ambiguous [...]
>>> np.max(a)
26
"
Set matplotlib plot axis to be the dataframe column name,"data = DataFrame.from_items([('Sbet', [1,2,3,4,5]), ('Length', [2,4,6,8,10])])
"
How to pass information from html(jinja) to python(flask) through a form,"class PostForm(Form):
    post = StringField('post', validators=[DataRequired()])
    parentID = HiddenField('', validators=[DataRequired()])
"
PHP scripts that combined with Python modules,"<html>
<head><title>xmlrpc</title></head>
<body>
<h1>Php - Python - XMLRPC Demo</h1>
<?php

    // Note that the path to xmlrpc.inc file is relative.
    // to this file.
    include(""xmlrpc/lib/xmlrpc.inc"");

    // Params to python function 10 and 5.
    // Build the message you want send.
    // The message takes the function name and the params. See doc for details on how
    // build params, is pretty easy.
    $msg = new xmlrpcmsg( ""div"", array(new xmlrpcval(10, ""int""), new xmlrpcval(5, ""int"")) );
    // Build a XMLRCP - Client.
    $client = new xmlrpc_client(""/RPC2"", ""localhost"", 8000);
    // And send the message.
    $response = $client->send($msg);


    // From here all should look familier to you.
    if(!$response->faultCode())
    {
        $v=$response->value();
        echo ""The result from div is"" . htmlspecialchars($v->scalarval());

    }
    else
    {
        print ""An error occurred: "";
        print ""Code: "" . htmlspecialchars($r->faultCode())
            . "" Reason: '"" . htmlspecialchars($r->faultString()) . ""'</pre><br/>"";
    }

?>
<hr/>
</body>
</html>
"
Split many lists into 2 sections which contain strings and numbers,"tuples = [['Hussain', '1', '0', '0', '3'], ['Bon', '2', '1', '2', '3'], ['Alice', '1', '5', '2', '3'], ['Josh', '3', '1', '7', '10'], ['Jack', '2', '0', '8', '9'], ['Zyra', '3', '5', '1', '6']]

class_to_sort = 1

# reduce to classes that are requested by user
tuples = filter(lambda tuple: int(tuple[1]) == class_to_sort, tuples)

# sort the tuples
tuples = sorted(tuples, key=lambda tuple: tuple[0])

# throw out second column and converts strings to integers
tuples = [[tuple[0]] + map(int, tuple[2:]) for tuple in tuples]

# throw out all integers that aren't the maximum per tuple
tuples = [[tuple[0]] + [max(tuple[1:])] for tuple in tuples]

print tuples
"
Calculating the average grade in Python?,"if min (grade1, grade2) >= 50.0: # Both are >= 50.0
"
Write query rows in csv python,"f = csv.writer(open(""file.csv"", ""w""))
for row in data:
    f.writerow([str(row)])
"
Python - comparing sublists within two different lists,"Discard
New
Discard
Different chromosome
[['1', '10', '30'], ['1', '50', '80'], ['1', '100', '200'], ['1', '90', '98'], ['2', '25', '50']]
"
Selecting minimum value and remove maximum,">>> from collections import defaultdict
>>> m = defaultdict(list)
>>> with open('testFile.txt' ,'r') as f:
        for line in f:
            name, val = line.split()
            m[name].append(val)
>>> m
defaultdict(<type 'list'>, {'EOG66.txt': ['354'], 'EASSDS.txt': ['2738', '292'], 'EQQSDS7M.txt': ['394', '301']})
>>> with open('output.txt', 'w') as f:
        for elem in m:
            f.write(""{} {}\n"".format(elem, min(map(int, m[elem]))))
"
Pythonic way to pass around many arguments,"class SomeConcept(object):
    def __init__(self, arg1, arg2, arg3, .., argN):
        self.arg1 = arg1
        # ... etc.

    def operation1(self, external_argument):
        # use `self` attributes, return something.
"
Funny issue; localStorage and MongoDB,"var decodedData = $(""<div />"").html(encodedData).text();
"
Pythonic way to copy a key/value from one dict to another,"uid_to_orderid = {d['uid']: d['orderid'] for d in d2}
output = [dict(d, orderid=uid_to_orderid[d['uid']]) for d in d1]
"
return text file path,"import os

# path is your starting point - everything under it will be searched
path = os.getcwd()    
fname = 'file1.txt'
my_files = []

# Start iterating, and anytime we see a file that matches fname,
# add to our list    
for root, dirs, files in os.walk(path):
  for name in files:
    if name == fname:
      # root here is the path to the file
      my_files.append(os.path.join(root, name))

print my_files
"
Which Python module to use to access the Proxy setting of Windows 7?," [HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet
 Settings] ""MigrateProxy""=dword:00000001 
 ""ProxyEnable""=dword:00000001
 ""ProxyHttp1.1""=dword:00000000
 ""ProxyServer""=""http://ProxyServername:80"" 
 ""ProxyOverride""=""<local>""
"
Ensuring single-user per account with flask-login,"def login_user_with_secret_session(user, remember=False, force=False):
    auth_session_token = random.getrandbits(128)
    auth_session_token = '%032x' % auth_session_token
    # store `auth_session_token` in user table
    set_user_auth_session_token(user, auth_session_token)
    return login_user(user, remember=remember, force=force)
"
How many elements may python dictionary hold?,">>> import sys
>>> sys.getsizeof(a)
1573004
"
Python: Length of longest common subsequence of lists,">>> lcsubstring_length(a, b)
3
"
How to access members of an rdf list with rdflib (or plain sparql),"rdflib.plugin.register('sparql', rdflib.query.Processor,
                       'rdfextras.sparql.processor', 'Processor')
rdflib.plugin.register('sparql', rdflib.query.Result,
                       'rdfextras.sparql.query', 'SPARQLQueryResult')

query = """"""
SELECT ?seq_index ?name ?surname WHERE {
     <http://www.ncbi.nlm.nih.gov/pubmed/18273724> bib:authors ?seq .
     ?seq ?seq_index ?seq_bnode .
     ?seq_bnode foaf:givenname ?name .
     ?seq_bnode foaf:surname ?surname .
}
""""""
for row in sorted(g.query(query, initNs=dict(rdf=RDF,foaf=FOAF,bib=BIB)),
                                                  key=lambda x:int(x[0][44:])):
    print ""Author(%s) %s %s""%(row[0][44:],row[1],row[2])
"
Django database in Python3,"deny from all
"
Using textfile as stdin in python under windows 7,"tail --follow=textfile.txt --retry | mycmd 
# wait for data to be appended to the file and output new data to mycmd

cmd1 >> textfile.txt # append output to file
"
Find the first word of a paragraph inside a list,"l = ['start of paragraph 1','start of paragraph 2','para 3']
first_words = [p[:p.find(' ')] for p in l]
print first_words
"
List comprehension with two conditions,"[char == '.' for char in l]
"
Call .dll function from C# Ironpython,">>> import clr
>>> clr.CompileModules(""path_to.dll"", ""path_to.py"");
"
finding all unique words from a list using loops,"def getUniqueWords(allWords) :
    uniqueWords = [] 
    for i in allWords:
        if not i in uniqueWords:
            uniqueWords.append(i)
    return uniqueWords

print getUniqueWords(['a','b','c','a','b']);
"
deleting element from python dictionary,"eachitem = {'SALARY':eachitem['SALARY']}
"
how to convert cookie's GMT formated expires to float in Python http.cookiejar.Cookie method?,"from datetime import datetime
from time import mktime

YOUR_FORMAT = """"""your format""""""

date_string = 'Tue, 17-Oct-45 11:54:07 GMT'

# strip off the timezone here with split or regex, whatever you like

p = datetime.strptime(date_string, YOUR_FORMAT)
floating_number = mktime(p.timetuple())
"
How to check whether a number is divisible by another in Jinja Template (Django Framework),"template_string = """"""
{% for i in [1,2,3,4,5,6,7] %}
  {% if loop.index %3 == 0%}3{%else%}0{%endif%}\n
{% endfor %}
""""""

from jinja2 import Template

print Template(template_string).render()
"
Python Read Character by Character without printing,"import sys
import termios
import tty

old_settings = termios.tcgetattr(sys.stdin)
tty.setcbreak(sys.stdin.fileno())
"
referring to specific parts of a python dictionary in javascript,"#ajax method to retreive well data for dynamic well values, x_pos, y_pos, substance concentration
@app.route('/getWellData', methods=['GET', 'POST'])
def getWellData():
    #get all samples with that date
    date_collected = request.args.get('date_collected')
    site_id = request.args.get('site_id')
    site_map_id = request.args.get('site_map_id')
    substance_id = request.args.get('substance_id')

    well_results = wellSubstanceDataBySite(
        site_id=site_id,
        site_map_id=site_map_id,
        date_collected=date_collected,
        substance_id=substance_id)

    #return json to updateMarks ajax javascript function
    return json.dumps(well_results)
"
pandas: more elegant way to retrieve row and set value if exists?,"df = pd.DataFrame({'a': range(4), 'b': range(1, 5)})
df.b.values[df.a.values == 3] = 2
df.b.values[df.a.values == 30] = 3
>>> df
    a   b
0   0   1
1   1   2
2   2   3
3   3   2
"
Grouping in Python,"from collections import defaultdict

d = defaultdict(int)

for item in batting:
  d[item['teamID']] += item.get('R', 0) or 0

for team, r_sum in sorted(d.items(), key=lambda x: x[0]):
  print team, r_sum
"
How to count non NaN values accross columns in pandas dataframe?,"In [24]:
df['count'] = df[list('abcde')].count(axis=1)
df

Out[24]:
              Close  a   b   c   d   e      Time  count
2015-12-03  2051.25  5   4   3   1   1  05:00:00      5
2015-12-04  2088.25  5   4   3   1 NaN  06:00:00      4
2015-12-07  2081.50  5   4   3 NaN NaN  07:00:00      3
2015-12-08  2058.25  5   4 NaN NaN NaN  08:00:00      2
2015-12-09  2042.25  5 NaN NaN NaN NaN  09:00:00      1
"
Python dict to string,">>> ', '.join([' : '.join((k, str(keywordsList[k]))) for k in sorted(keywordsList, key=keywordsList. get, reverse=True)])
u'http://www.3ho.de/ : 4, ergo@ananda-pur.de : 3, roland.luethe1@gmail.com : 2, http://www.kundalini-yoga-zentrum-berlin.de/index.html : 1'
"
Python-How to find length of the longest run of monotonically increasing numbers?,"print mCount([10, 4, 6, 8, 3, 4, 5, 7, 7, 2])
"
generic command line generator in python,"parser._actions
"
How can I log in to an arbitrary user in appengine for use with the Drive SDK?,"storage = StorageByKeyName(CredentialsModel, KEY_NAME, CREDENTIALS_PROPERTY_NAME)
credentials = storage.get()
"
How to process sub-batches of asynchronous jobs?,"import concurrent.futures as cf
import logging
import os

errmsg = 'conversion of track {} failed, return code {}'
okmsg = 'finished track {}, ""{}""'
num = len(data['tracks'])
with cf.ThreadPoolExecutor(max_workers=os.cpu_count()) as tp:
    fl = [tp.submit(runflac, t, data) for t in range(num)]
    for fut in cf.as_completed(fl):
        idx, rv = fut.result()
        if rv == 0:
            logging.info(okmsg.format(idx+1, data['tracks'][idx]))
        else:
            logging.error(errmsg.format(idx+1, rv))
"
Performance considerations when populating lists vs dictionaries,"In [22]: %timeit {i: str(i) for i in range(1000000)}
1 loops, best of 3: 213 ms per loop
"
parse dates with icalendar and compare to python datetime,"#!/usr/bin/env python
import json
from datetime import date
import icalendar # $ pip install icalendar

today = date.today()
calendar = icalendar.Calendar.from_ical(ics_file)
entries = [dict(summary=event['SUMMARY'])
           for event in calendar.walk('VEVENT')
           if event['DTSTART'].dt <= today <= event['DTEND'].dt]
print(json.dumps(entries, indent=2, sort_keys=True))
"
how to pass jquery variable to django view,"import json
from django.template.loader import render_to_string

def done(request):
    params = json.loads(request.body)
    report_array = params['report_array']
    html_data = render_to_string('maps/done.html', {'reports_link': report_array})

    return HttpResponse(html_data)
"
How to download a file from URL to disk and guess filename,"require 'mechanize'
agent = Mechanize.new    
uri = URI.parse(url)    
if uri.query.nil?
  agent.get(url).save
else
  agent.get(url).save_as(File.basename(uri.path))
end
"
Python: Save page's dynamic image,"data = {'varName1': var1, 'varName2': var2, ...}
data = urllib.urlencode(data)
r = br.open('http://www.example.com/html-page-with-dynamic-image-embedded.html', data)
"
Python: How to sum up the word count for each person in a dialogue?,"import pprint
import re
import string
from collections import Counter

p = re.compile(r'(\w+?):')


def get_text_line_items(text):
    for line in text.split('\n'):
        yield line


def bundle_dialogue_items(lines):
    cur_speaker = None
    paragraphs = Counter()
    for line in lines:
        if re.match(p, line):
            cur_speaker, dialogue = line.split(':')
            paragraphs[cur_speaker] += 1
        else:
            dialogue = line

        res = cur_speaker, dialogue, paragraphs[cur_speaker]
        yield res


def filter_dialogue_items(lines):
    for name, dialogue, paragraph in lines:
        if dialogue:
            res = name, dialogue, paragraph
            yield res


to_clean = string.whitespace + string.punctuation


def clean_word(word):
    res = ''.join(c for c in word if c not in to_clean)
    return res


def clean_dialogue_items(flines):
    for name, dialogue, paragraph in flines:
        s_dialogue = dialogue.strip().split()
        c_dialouge = [clean_word(w) for w in s_dialogue]
        res = name, c_dialouge, paragraph
        yield res


speaker_stats = 'stats'


def make_catalogue(names_with_dialogue):
    speakers = {}
    for name, dialogue, paragraph in names_with_dialogue:
        speaker = speakers.setdefault(name, {})
        stats = speaker.setdefault(speaker_stats, {})
        stats.setdefault(paragraph, []).extend(dialogue)
    return speakers


def clean_dict(speakers):
    for speaker in speakers:
        stats = speakers[speaker][speaker_stats]
        for paragraph in stats:
            stats[paragraph] = [''.join(c for c in word if c not in to_clean)
                                for word in stats[paragraph]]
    return speakers


word_count = 'word_count'


def sum_words_per_paragraph_items(speakers):
    for speaker in speakers:
        word_stats = speakers[speaker][speaker_stats]
        speakers[speaker][word_count] = Counter()
        for paragraph in word_stats:
            speakers[speaker][word_count][paragraph] += len(word_stats[paragraph])
    return speakers


total = 'total'


def total_word_count(speakers):
    for speaker in speakers:
        wc = speakers[speaker][word_count]
        speakers[speaker][total] = 0
        for c in wc:
            speakers[speaker][total] += wc[c]
    return speakers


def get_text():
    text = '''BOB: blah blah blah blah
blah hello goodbye etc.

JERRY:.............................................
...............

BOB:blah blah blah
blah blah blah
blah.
BOB: boopy doopy doop
P1: Bla bla bla.
P2: Bla bla bla bla.
P1: Bla bla.
P3: Bla.'''
    text = get_text_line_items(text)
    return text


def process_catalogue(c_text):
    speakers = make_catalogue(c_text)
    s_speakers = sum_words_per_paragraph_items(speakers)
    t_speakers = total_word_count(s_speakers)
    return t_speakers


def process_text(text):
    b_text = bundle_dialogue_items(text)
    f_text = filter_dialogue_items(b_text)
    c_text = clean_dialogue_items(f_text)
    return c_text


def main():

    text = get_text()
    c_text = process_text(text)
    t_speakers = process_catalogue(c_text)

    # take a look at your hard work!
    pprint.pprint(t_speakers)


if __name__ == '__main__':
    main()
"
Assistance on automated image/text Document,"<html>
  <body>
    <h1>Trademark</h1>
    <div id=""container"">
      <div id=""photos"">
        <img src=""photo.jpg"">
      </div>
      <div id=""text"">
        {{ text }}
      </div>
    </div>
  </body>
</html>
"
Python performance: Try-except or not in?,"def make(percentmissing):
  global d
  d = dict.fromkeys(range(100-percentmissing), 1)

def addit(d, k):
  d[k] = k

def with_in():
  dc = d.copy()
  for k in range(100):
    if k not in dc:
      addit(dc, k)
    lc = dc[k]

def with_ex():
  dc = d.copy()
  for k in range(100):
    try: lc = dc[k]
    except KeyError:
      addit(dc, k)
      lc = dc[k]

def with_ge():
  dc = d.copy()
  for k in range(100):
    lc = dc.get(k)
    if lc is None:
      addit(dc, k)
      lc = dc[k]
"
Find indices where df is null,"In [24]: %timeit df.index[np.nonzero(pd.isnull(df.values).any(1))]
10000 loops, best of 3: 172 µs per loop
"
How do I take a number associated with a word and have the word printed that number of times?,"import fileinput
import sys
for line in fileinput.input(""in.txt"",inplace=True):
    if line.strip():
        w,i = line.split("","")
        sys.stdout.write(""{}\n\n"".format(w)*int(i))
"
OUT argument internally allocated to return an array of structs,"%module example

// Insert the structure definition and function to wrap into the wrapper code.
%{
  struct entry {
    char* addr_str;
    char cc[2];
  };

  int get_list(const char* string, struct entry** results)
  {
    *results = malloc(3 * sizeof(struct entry));
    (*results)[0].addr_str = malloc(10);
    strcpy((*results)[0].addr_str,""hello"");
    (*results)[0].cc[0] = string[0];
    (*results)[0].cc[1] = string[1];
    (*results)[1].addr_str = malloc(10);
    strcpy((*results)[1].addr_str,""there"");
    (*results)[1].cc[0] = string[2];
    (*results)[1].cc[1] = string[3];
    (*results)[2].addr_str = NULL;
    return 0;
  }
%}

#include <typemaps.i>

// Define the structure for SWIG
struct entry {
  char* addr_str;
  char cc[2];
};

// Define a set of typemaps to be used for an output parameter.

// This typemap suppresses requiring the parameter as an input.
// A temp variable is created and passed instead.
%typemap(in,numinputs=0) struct entry **OUTPUT (struct entry* temp) %{
  $1 = &temp;
%}

// Build a list of tuples containing the two entries from the struct.
// Append the new Python list object to the existing ""int"" result.
%typemap(argout) struct entry **OUTPUT {
  int i = 0;
  PyObject* out = PyList_New(0);
  while((*$1)[i].addr_str != NULL)
  {
    //PyObject* t = PyTuple_New(2);
    //PyTuple_SET_ITEM(t,0,PyBytes_FromString((*$1)[i].addr_str));
    //PyTuple_SET_ITEM(t,1,PyBytes_FromStringAndSize((*$1)[i].cc,2));
    //PyList_Append(out,t);
    //Py_DECREF(t);
    PyObject* s = SWIG_NewPointerObj(*$1+i,$descriptor(struct entry*),0);
    PyList_Append(out,s);
    Py_DECREF(s);
    ++i;
  }
  $result = SWIG_AppendOutput($result,out);
}

// Since a Python object was created and the data copied for each entry struct,
// free the memory returned in the structure.
//%typemap(freearg) struct entry **OUTPUT {
//  int i=0;
//  while((*$1)[i].addr_str != NULL) {
//    free((*$1)[i].addr_str);
//    ++i;
//  }
//  free(*$1);
//}

// Apply the OUTPUT typemap set to the ""results"" parameter.
%apply struct entry **OUTPUT {struct entry** results};

// Finally, define the function for SWIG
int get_list(const char* string, struct entry** results);
"
Create monthly time series with arbitrary start dates,"def my_business_date_range(day, **kwargs):
    assert(isinstance(day, int) & (day > 0) & (day < 32))
    rng0 = pd.date_range(freq = 'MS', **kwargs)
    rng1 = rng0 + pd.tseries.offsets.Day(day-1) + pd.tseries.offsets.BDay(0)
    # Correcting overflows:
    overflow_idx, = np.nonzero(rng0.month != rng1.month)
    if overflow_idx.size > 0:
        # rng1 is not mutable
        tmp = rng1.tolist()        
        bme = pd.tseries.offsets.BusinessMonthEnd(-1)
        for i in overflow_idx:
            tmp[i] = bme(rng1[i])
        rng1 = pd.DatetimeIndex(tmp)
    return rng1

my_business_date_range(30, start= '2012-01-01', periods = 6)
Out[13]: 
DatetimeIndex(['2012-01-30', '2012-02-29', '2012-03-30', '2012-04-30',
               '2012-05-30', '2012-06-29'],
              dtype='datetime64[ns]', freq=None)
"
"Python code to generate part of sphinx documentation, is it possible?",".. include:: myrst.inc
"
About num1 and num2 in python calculator,"def my_function(fn_variable_name):
    return fn_variable_name + 1

# calling directly
print my_function(1) # outputs 2

# calling with variable
another_variable_name = 45
print my_function(another_variable_name) # outputs 46

# Storing result in variable
yet_another_variable_name = my_function(32)
print yet_another_variable_name # outputs 33

# Combining the 2
var_1 = 23
var_2 = my_function(var_1)
print var_1 # outputs 23
print var_2 # outputs 24
"
Construct a list of integers from bigger to smaller in python,"def up_down(a, b):
    mn, mx = min(a), max(b)
    step = -1 if mn > mx else 1
    return range(mn, mx, step)
"
Avoid numpy distributing an operation for overloaded operator,"import astropy.units as u
(np.arange(5)*u.dimensionless_unscaled) + Example(np.arange(5)) 
#returns:
<Quantity [array([ 0.,  1.,  2.,  3.,  4.]),
           array([ 1.,  2.,  3.,  4.,  5.]),
           array([ 2.,  3.,  4.,  5.,  6.]),
           array([ 3.,  4.,  5.,  6.,  7.]),
           array([ 4.,  5.,  6.,  7.,  8.])]>
"
Why can I call all these methods that aren't explicitly defined in a class?,"    def __call__(self, **method_kwargs):
        return self._api_session(self._method_name, **method_kwargs)
"
Append a NumPy array to a NumPy array,"In [1]: a = array([1,2,3])

In [2]: b = array([4,5,6])

In [3]: numpy.vstack((a,b))
Out[3]: 
array([[1, 2, 3],
       [4, 5, 6]])
"
How to have python program listen on an environment variable?,"setup(
    # other arguments here...
    entry_points = {
        'console_scripts': ['foo = my_package.some_module:main_func']
    }
)
"
How to maintain different version of a python module?,"import mfxLib02 as mfxLib
"
Find and list duplicates in Python list,"seen = set()
uniq = []
for x in a:
    if x not in seen:
        uniq.append(x)
        seen.add(x)
"
python deque/list filtering,"key = lambda action: action[""phase""]
"
check if item is part of dict keys,"if ('admin', 'unknown') in worker:
    print(""toto"")
"
find the largest value in 2d dictionary wrt to the key,"from collections import Counter, defaultdict
import csv

counts = defaultdict(Counter)

with open(somefilename, 'rb') as f:
    reader = csv.reader(f)
    next(reader)  # skip the header
    for row in reader:
        key, time_bin, count = row[0], int(row[1]), int(row[2])
        counts[time_bin][key] += count

for time_bin in counts:
    print '{}=> {}'.format(time_bin, counts[time_bin].most_common(2))
"
How to override default create method in django-rest-framework,"from rest_framework import serializers, viewsets

class MyModelSerializer(serializers.ModelSerializer):
    def save_object(self, obj, **kwargs):
        """"""
        Save the deserialized object.
        """"""
        if getattr(obj, '_nested_forward_relations', None):
            # Nested relationships need to be saved before we can save the
            # parent instance.
            for field_name, sub_object in obj._nested_forward_relations.items():
                if sub_object:
                    self.save_object(sub_object)
                setattr(obj, field_name, sub_object)

        #####  EDITED CODE #####
        if obj.pk:
            obj.save(**kwargs)
        else:
            # Creating a new object. This is silly.
            obj = MyModel.objects.create(obj.to_user, obj.from_user, obj.wedding)
        ##### /EDITED CODE #####

        if getattr(obj, '_m2m_data', None):
            for accessor_name, object_list in obj._m2m_data.items():
                setattr(obj, accessor_name, object_list)
            del(obj._m2m_data)

        if getattr(obj, '_related_data', None):
            related_fields = dict([
                (field.get_accessor_name(), field)
                for field, model
                in obj._meta.get_all_related_objects_with_model()
            ])
            for accessor_name, related in obj._related_data.items():
                if isinstance(related, RelationsList):
                    # Nested reverse fk relationship
                    for related_item in related:
                        fk_field = related_fields[accessor_name].field.name
                        setattr(related_item, fk_field, obj)
                        self.save_object(related_item)

                    # Delete any removed objects
                    if related._deleted:
                        [self.delete_object(item) for item in related._deleted]

                elif isinstance(related, models.Model):
                    # Nested reverse one-one relationship
                    fk_field = obj._meta.get_field_by_name(accessor_name)[0].field.name
                    setattr(related, fk_field, obj)
                    self.save_object(related)
                else:
                    # Reverse FK or reverse one-one
                    setattr(obj, accessor_name, related)
            del(obj._related_data)


class MyModelViewSet(viewsets.ModelViewSet):
    serializer_class = MyModelSerializer
    queryset = MyModel.objects.all()
"
How do I order fields of my Row objects in Spark (Python),"sc.parallelize([Row(foo=1, bar=2)]).toDF().select(""foo"", ""bar"")
"
Python producing two instances of data set,"import urllib
import re
##NL East stats.
teamstate = [""wsh"",""phi"",""nym"",""mia"",""atl""]
teamnamelist = [""washington-nationals"",""philadelphia-phillies"",""new-york-mets"",""miami-marlins"",""atlanta-braves""]
teamlist = [""Washington Nationals"",""Philadelphia Phillies"",""New York Mets"",""Miami Marlins"",""Atlanta Braves""]

for x, y, z in zip(teamstate, teamnamelist, teamlist):
    url = ""http://espn.go.com/mlb/team/_/name/%s/%s"" % (x, y)
    htmlfile = urllib.urlopen(url)
    htmltext = htmlfile.read()
    regex = '<span class=""stat"">(.+?)</span>'
    pattern = re.compile(regex)
    val = re.findall(pattern,htmltext)[1]
    print ""The batting average of the %s is %s."" % (z, str(val))
"
Efficiently drawing lines using python,"import numpy as np
import matplotlib.pyplot as plt

t = np.linspace(0, np.pi*3, 301)
x = np.sin(t)
"
How to get the Reducer to emit according to key type,"if last_key != key:
    if last_key != None:
        k = last_key.split('|')
        v_id = k[0]

        if v_id == 'a':
            if tot_cnt > 1:
                sys.stdout.write(""%s\t%s\n"" % (last_key,tot_cnt))
        else:
            sys.stdout.write(""%s\t%s\n"" % (last_key,tot_cnt))
"
`map`-like function preserving sequence-type,"def sequify(func, type_arg=1):
    def wrapped(*args, **kwargs):
        it = func(f, seq)
        try:
            len(args[type_arg])
        except:
            return it
        else:
            return type(seq)(it)
    return wrapped
"
Converting Python Function into R Function,"draw_card <- function(deck){
  card <- tail(deck,1)
  deck <<- head(deck, length(deck)-1)
  return(card)
}

print(deck)
# [1]  2  3  4  5  6  7  8  9 10 10 10 10 11

print(draw_card(deck))
# [1] 11

print(deck)
#  [1]  2  3  4  5  6  7  8  9 10 10 10 10
"
Mapping data from excel with Python,"dict((x,list(a[1:] for a in y)) for x,y in
    itertools.groupby(zip(amr_list, pssr_list, inservice_list), lambda z: z[0]))
"
Variable assignment and manipulation in Python,"a[len(a):] = [x]
"
Searching items in two lists,"List1 = [('C2244_LNO70_SARM', '1/1/2', '1/2/8', 'CF164_LUJ70_SAR8', 'Router'),
('C1723_LN270_SARM', '1/1/1', '1/1/8', 'CF164_LUJ70_SAR8', 'Router'),
('CF618_JURI70_SARM', '1/1/1', '1/2/7', 'CF164_LUJ70_SAR8', 'Router'),
('CF618_JURI70_SARM', '1/1/2', '1/1/1', 'CF617_LJ370_SARM', 'Router'),
('C2335_ODR70_SARM', '1/1/2', '1/1/2', 'CF693_LAC70_SARM', 'Router')]
List2 = [('CF618_JURI70_SARM'),
('C2335_ODR70_SARM'),
('CF617_LJ370_SARM')]
"
scipy splrep() with weights not fitting the given curve,"if w is None:
    w = ones(m, float)
    if s is None:
        s = 0.0

else:
    w = atleast_1d(w)
    if s is None:
        s = m - sqrt(2*m)
"
Sorting Multi-Index to full depth (Pandas),"In [1]: arrays = [np.array(['bar', 'bar', 'baz', 'baz', 'foo', 'foo', 'qux', 'qux'])
   ...:    .....: ,
   ...:    .....:           np.array(['one', 'two', 'one', 'two', 'one', 'two', 'one', 'two'])
   ...:    .....:           ]

In [2]: df = DataFrame(randn(8, 4), index=arrays)

In [3]: df
Out[3]: 
                0         1         2         3
bar one  1.654436  0.184326 -2.337694  0.625120
    two  0.308995  1.219156 -0.906315  1.555925
baz one -0.180826 -1.951569  1.617950 -1.401658
    two  0.399151 -1.305852  1.530370 -0.132802
foo one  1.097562  0.097126  0.387418  0.106769
    two  0.465681  0.270120 -0.387639 -0.142705
qux one -0.656487 -0.154881  0.495044 -1.380583
    two  0.274045 -0.070566  1.274355  1.172247

In [4]: df.index.lexsort_depth
Out[4]: 2

In [5]: df.ix[('foo','one')]
Out[5]: 
0    1.097562
1    0.097126
2    0.387418
3    0.106769
Name: (foo, one), dtype: float64

In [6]: df.ix['foo']
Out[6]: 
            0         1         2         3
one  1.097562  0.097126  0.387418  0.106769
two  0.465681  0.270120 -0.387639 -0.142705

In [7]: df.ix[['foo']]
Out[7]: 
                0         1         2         3
foo one  1.097562  0.097126  0.387418  0.106769
    two  0.465681  0.270120 -0.387639 -0.142705

In [8]: df.sortlevel(level=1)
Out[8]: 
                0         1         2         3
bar one  1.654436  0.184326 -2.337694  0.625120
baz one -0.180826 -1.951569  1.617950 -1.401658
foo one  1.097562  0.097126  0.387418  0.106769
qux one -0.656487 -0.154881  0.495044 -1.380583
bar two  0.308995  1.219156 -0.906315  1.555925
baz two  0.399151 -1.305852  1.530370 -0.132802
foo two  0.465681  0.270120 -0.387639 -0.142705
qux two  0.274045 -0.070566  1.274355  1.172247

In [10]: df.sortlevel(level=1).index.lexsort_depth
Out[10]: 0
"
Sorting strings of different length with digit suffix,"def get_key(v):
    prefix, index = re.match(r'([a-z]+)(\d+)', v).groups()
    if prefix == 'vlan':
        prefix = '~'
    return prefix, -int(index)

>>> table_data = [""vlan1"", ""usb0"", ""eth1"", ""vlan4"", ""vlan20"", ""wlan0""]
>>> sorted(table_data, key=get_key, reverse=True)
['vlan1', 'vlan4', 'vlan20', 'wlan0', 'usb0', 'eth1']
"
How to enforce (with a warning) that parent functions are called by the children that override them?," UserWarning: Super must be defined on function: function
"
Deleting consonants from a string in Python,"re.findall(r'[aeiou]',""mississippi"")
"
How to calculate a Gaussian kernel matrix efficiently in numpy?,"import matplotlib.pyplot as plt
plt.imshow(gkern(21), interpolation='none')
"
How do I make python encrypt both uppercase and lowercase?,"caesar_cipher('This is my 3rd test!', 2)     # => 'Vjku ku oa 3tf vguv!'
"
Print list as array Python,"from __future__ import print_function
def print_list(l,size):
    for x in l: 
        print(x[2], end='')
"
Read lines in one file and find all strings starting with 4-letter strings listed in another txt file,"file_a = open(""file_a.txt"", ""r"")
file_b = open(""file_b.txt"", ""r"")

for a_line in file_a:
    # This result value will be written into your new file
    result = """"
    # This is what we will search with
    search_val = a_line.strip(""\n"")
    print ""---- Using "" + search_val + "" from file_a to search. ----""
    for b_line in file_b:
        print ""Searching file_b using "" + b_line.strip(""\n"")
        if b_line.strip(""\n"").find(search_val) == 0:
            result += (b_line)
    print ""---- Search ended ----""
    # Set the read pointer to the start of the file again
    file_b.seek(0, 0)

    if result:
        # Write the contents of ""results"" into a file with the name of ""search_val""
        with open(search_val + "".txt"", ""a"") as f:
            f.write(result)

file_a.close()
file_b.close()
"
How to convert a unformatted fortran file(modflow output ) to numpy array,"#!/usr/bin/python

import struct
import numpy as np

infile = open(""lake_example.hds"",""rb"")

blockdata = []

while infile.read(1):
    infile.seek(-1,1)
    data = infile.read(56)
    n = struct.unpack('<3i4', data[0:12])
#    print n[0], n[1], n[2]
    n = struct.unpack('<2f4', data[12:20])
#    print n[0], n[1]
#    print data[20:36]
    n = struct.unpack('<5i4', data[36:56])
#    print n[0], n[1], n[2], n[3], n[4]
    ncol = n[0]
    nrow = n[1]
    a = np.fromfile(infile,dtype='f4',count=ncol*nrow).reshape((ncol,nrow))
    blockdata.append(a)
    data = infile.read(4)
    n = struct.unpack('<i4', data)
#    print n[0]

for block in blockdata:
    print block
"
How can i access the ordering of contours in `opencv`,"import numpy as np
import cv2

im = cv2.imread('nnn.jpg') 
gray = cv2.cvtColor(im,cv2.COLOR_BGR2GRAY)
blur = cv2.GaussianBlur(gray,(5,5),0)
thresh = cv2.adaptiveThreshold(blur,255,1,1,19,4)

contours,hierarchy = cv2.findContours(thresh,cv2.RETR_LIST,cv2.CHAIN_APPROX_SIMPLE)
h_list=[]
for cnt in contours:
     [x,y,w,h] = cv2.boundingRect(cnt)
    if w*h>250:
        h_list.append([x,y,w,h])
#print h_list          
ziped_list=zip(*h_list)
x_list=list(ziped_list[0])
dic=dict(zip(x_list,h_list))
x_list.sort()
i=0
for x in x_list:
      [x,y,w,h]=dic[x]
      #cv2.rectangle(im,(x,y),(x+w,y+h),(0,0,255),1)
      im3=im[y:y+h,x:x+w]
      cv2.imwrite('objects/pix%i.png'%i,im3)
      i+=1

      cv2.imshow('norm',im)
cv2.imwrite('objects/shhh.jpg',im)
key = cv2.waitKey(0)
"
Tkinter - Can't bind arrow key events,"import Tkinter


class Application(Tkinter.Frame):
    def __init__(self, master):
        Tkinter.Frame.__init__(self, master)
        self.master.minsize(width=100, height=100)
        self.master.config()

        self.master.bind('<Left>', self.left_key)
        self.master.bind('<Right>', self.right_key)

        self.main_frame = Tkinter.Frame()
        self.main_frame.pack(fill='both', expand=True)
        self.pack()

    @staticmethod
    def left_key(event):
        print event + "" key pressed""

    @staticmethod
    def right_key(event):
        print event + "" key pressed""

root = Tkinter.Tk()
app = Application(root)
app.mainloop()
"
Toggling button state on matplotlib NavigationToolbar programmatically,"self.ToggleTool(self.wx_ids['Pan'], False)
"
how to dynamically load json data in d3js chart using python flask application,"

var margin = {
    top: 40,
    right: 10,
    bottom: 10,
    left: 10
},
width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var color = d3.scale.category20c();

var treemap = d3.layout.treemap()
    .size([width, height])
    .sticky(true)
    .value(function (d) {
    return d.size;
});

var div = d3.select(""body"").append(""div"")
    .style(""position"", ""relative"")
    .style(""width"", (width + margin.left + margin.right) + ""px"")
    .style(""height"", (height + margin.top + margin.bottom) + ""px"")
    .style(""left"", margin.left + ""px"")
    .style(""top"", margin.top + ""px"");

var url = ""http://www.mocky.io/v2/5491ee0450e288460f8b77a5"";

var dispatcher = d3.dispatch('jsonLoad');

d3.select('#loadData').on('click', function() {
    d3.json(url, callback);
});

// optional dispatcher
dispatcher.on('jsonLoad', function(data) {
    // triggered afer json is loaded (just if you want to do additional stuff here.)
    console.log(data);
});

var callback = function (error, root) {
        dispatcher.jsonLoad(root); // can trigger an event that new data are here
        var node = div.datum(root).selectAll("".node"")
            .data(treemap.nodes)
            .enter().append(""div"")
            .attr(""class"", ""node"")
            .call(position)
            .style(""background"", function (d) {
            return d.children ? color(d.name) : null;
        })
            .text(function (d) {
            return d.children ? null : d.name;
        });

        d3.selectAll(""input"").on(""change"", function change() {
            var value = this.value === ""count"" ? function () {
                    return 1;
                } : function (d) {
                    return d.size;
                };

            node.data(treemap.value(value).nodes)
                .transition()
                .duration(1500)
                .call(position);
        });
    };

function position() {
    this.style(""left"", function (d) {
        return d.x + ""px"";
    })
        .style(""top"", function (d) {
        return d.y + ""px"";
    })
        .style(""width"", function (d) {
        return Math.max(0, d.dx - 1) + ""px"";
    })
        .style(""height"", function (d) {
        return Math.max(0, d.dy - 1) + ""px"";
    });
}"
How to multiply a scalar throughout a specific column within a NumPy array?,">>> A = NP.random.rand(8, 5)
>>> A
  array([[ 0.893,  0.824,  0.438,  0.284,  0.892],
         [ 0.534,  0.11 ,  0.409,  0.555,  0.96 ],
         [ 0.671,  0.817,  0.636,  0.522,  0.867],
         [ 0.752,  0.688,  0.142,  0.793,  0.716],
         [ 0.276,  0.818,  0.904,  0.767,  0.443],
         [ 0.57 ,  0.159,  0.144,  0.439,  0.747],
         [ 0.705,  0.793,  0.575,  0.507,  0.956],
         [ 0.322,  0.713,  0.963,  0.037,  0.509]])

>>> A[:,1] *= 5.2

>>> A
  array([[ 0.893,  4.287,  0.438,  0.284,  0.892],
         [ 0.534,  0.571,  0.409,  0.555,  0.96 ],
         [ 0.671,  4.25 ,  0.636,  0.522,  0.867],
         [ 0.752,  3.576,  0.142,  0.793,  0.716],
         [ 0.276,  4.255,  0.904,  0.767,  0.443],
         [ 0.57 ,  0.827,  0.144,  0.439,  0.747],
         [ 0.705,  4.122,  0.575,  0.507,  0.956],
         [ 0.322,  3.71 ,  0.963,  0.037,  0.509]])

>>> A[:,1].sum()
  25.596156138451427
"
Export dicts to a json file,"with io.open(myFile.json, 'a', encoding='utf-8') as f:
    f.write(unicode(json.dumps(item, ensure_ascii=False)))
    f.write(u'\n')
"
Follow First 5 Pages of Google Results Python Mechanize,"/search?q=site:somedomain.com&hl=en&ei=NJ4HUo2yM-TK4ATJlYGICQ&start=10&sa=N
"
"Convert float64 to int64 using ""safe""","In [3]: whole_numbers = np.arange(1000000, dtype=float)

In [4]: fractional = np.arange(0, 100000, 0.1, dtype=float)

In [5]: float_to_int(whole_numbers)
Out[5]: array([     0,      1,      2, ..., 999997, 999998, 999999])

In [6]: float_to_int(fractional)
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-6-0a7807a592b7> in <module>()
----> 1 float_to_int(fractional)

<ipython-input-2-953668ae0922> in float_to_int(array)
      2         int_array = array.astype(int, casting='unsafe', copy=True)
      3         if not np.equal(array, int_array).all():
----> 4                 raise TypeError(""Cannot safely convert float array to int dtype. ""
      5                                 ""Array must only contain whole numbers."")
      6         return int_array

TypeError: Cannot safely convert float array to int dtype. Array must only contain whole numbers.
"
"Iterating two lists, comparing the first column and appending the second column","Name1
Name2
Name3
Name4
Name5
"
How can I create a single raw string from multiple literals in Python?,"from textwrap import dedent

s = ''.join(dedent(r""""""
    foo\tbar\n
    baz\tqux\n
"""""").splitlines())
"
How to access a KEGG entry without specifying the organism using bioservices?,"eco:b3640
"
How to directly set RGB/RGBA colors in mayavi,"#create direct grid as 256**3 x 4 array 
def create_8bit_rgb_lut():
    xl = numpy.mgrid[0:256, 0:256, 0:256]
    lut = numpy.vstack((xl[0].reshape(1, 256**3),
                        xl[1].reshape(1, 256**3),
                        xl[2].reshape(1, 256**3),
                        255 * numpy.ones((1, 256**3)))).T
    return lut.astype('int32')

# indexing function to above grid
def rgb_2_scalar_idx(r, g, b):
    return 256**2 *r + 256 * g + b

#N x 3 colors
colors = numpy.array([_.color for _ in points])

#N scalars
scalars = numpy.zeros((colors.shape[0],))

for (kp_idx, kp_c) in enumerate(colors):
    scalars[kp_idx] = rgb_2_scalar_idx(kp_c[0], kp_c[1], kp_c[2])

rgb_lut = create_8bit_rgb_lut()

points_mlab = mayavi.mlab.points3d(x, y, z
                                   keypoint_scalars,
                                   mode = 'point')

#magic to modify lookup table 
points_mlab.module_manager.scalar_lut_manager.lut._vtk_obj.SetTableRange(0, rgb_lut.shape[0])
points_mlab.module_manager.scalar_lut_manager.lut.number_of_colors = rgb_lut.shape[0]
points_mlab.module_manager.scalar_lut_manager.lut.table = rgb_lut
"
how to replace only zeros of a numpy array using a mask,"for i,tup in enumerate(tups):
    arr[tup]=np.where(arr[tup]==0,i+1,arr[tup])
"
How to look through a phrase in a dictionary?,"r.append({k: a[k] for k in (""content"", ""phrase"", ""name"")})
"
Django ManyToMany with through model implementation,"class RecipeIngredients(models.Model):
    recipe = models.ForeignKey(Recipe, related_name='ingredient_quantities')
"
tornado 403 GET warning when opening websocket,"def check_origin(self, origin):
    return True
"
check whether a server(s) has a database(s) with a table(s) that contain the information that I need on SQL server 2008 on win 7,"DECLARE @command NVARCHAR(max); 
SET @command = 
  N'use [?]; 
    select db_name() as DBName, object_name(object_id) as TableName, 
           name as ColumnName 
    from sys.all_columns where name in (''my_column_1'', ''my_column_2'');';
EXEC sp_MSforeachdb @command;
"
Is there a way to read a file in a loop in python using a separator other than newline,"def file_split(f, delim=',', bufsize=1024):
    prev = ''
    while True:
        s = f.read(bufsize)
        if not s:
            break
        split = s.split(delim)
        if len(split) > 1:
            yield prev + split[0]
            prev = split[-1]
            for x in split[1:-1]:
                yield x
        else:
            prev += s
    if prev:
        yield prev
"
How do I interact with a child process pretending to be a terminal?,"$ infocmp ansi | grep cud
        cr=^M, cub=\E[%p1%dD, cub1=\E[D, cud=\E[%p1%dB, cud1=\E[B,
        kcud1=\E[B, kcuf1=\E[C, kcuu1=\E[A, khome=\E[H, kich1=\E[L,

$ infocmp xterm | grep cud
        cud=\E[%p1%dB, cud1=^J, cuf=\E[%p1%dC, cuf1=\E[C,
        kcub1=\EOD, kcud1=\EOB, kcuf1=\EOC, kcuu1=\EOA,
"
How do I display the language name instead of language code in Django?,"{% load i18n %}
{% get_language_info for ""en"" as lang %}
{{lang.name_local}} ({{lang.code}})
"
decoding json in python,"{
    ""data"": {
        ""numberOfPages"": 512,
        ""domainSummaryDTOs"": [
            {
                ""id"": ""http://www.cdfdmy.com/"",
                ""timestamp"": ""Tue May 14 12:59:28 GMT 2013"",
                ""title"": ""【推荐】成都空压机|四川空压机|成都空气压缩机|四川空气压缩机|成都螺杆空压机|四川螺杆空压机|成都双螺杆空压机|四川双螺杆空压机|成都福道贸易有限公司"",
                ""exploitabilityLevel"": 4,
                ""bsqli"": 2,
                ""sqli"": 2,
                ""url"": ""http://www.cdfdmy.com/"",
                ""xss"": 0
            },
            {
                ""id"": ""http://www.chushijob.com/"",
                ""timestamp"": ""Tue May 14 12:59:28 GMT 2013"",
                ""title"": ""餐饮世界人才网-中国厨师人才网-中国酒店人才网"",
                ""exploitabilityLevel"": 5,
                ""bsqli"": 3,
                ""sqli"": 2,
                ""url"": ""http://www.chushijob.com/"",
                ""xss"": 2
            },
            {
                ""id"": ""http://www.hbenshi.com/"",
                ""timestamp"": ""Tue May 14 12:59:28 GMT 2013"",
                ""title"": ""恩施旅游网--恩施大峡谷 腾龙洞 利川 清江闯滩 土司城 欢迎您！"",
                ""exploitabilityLevel"": 5,
                ""bsqli"": 3,
                ""sqli"": 4,
                ""url"": ""http://www.hbenshi.com/"",
                ""xss"": 1
            },
            {
                ""id"": ""http://bbs.laiyb.com/"",
                ""timestamp"": ""Mon Apr 29 03:30:09 GMT 2013"",
                ""title"": ""莱阳论坛_莱阳吧_莱阳人的网络社区 -"",
                ""exploitabilityLevel"": 4,
                ""bsqli"": 4,
                ""sqli"": 1,
                ""url"": ""http://bbs.laiyb.com/"",
                ""xss"": 0
            },
            {
                ""id"": ""http://photostudio-town.com/"",
                ""timestamp"": ""Mon Apr 29 03:30:09 GMT 2013"",
                ""title"": ""フォトスタジオ・タウン-就職証明写真・お受験写真・オーディション写真-"",
                ""exploitabilityLevel"": 5,
                ""bsqli"": 1,
                ""sqli"": 1,
                ""url"": ""http://photostudio-town.com/"",
                ""xss"": 1
            },
            {
                ""id"": ""http://sp.sosfang.com/"",
                ""timestamp"": ""Mon Apr 29 03:30:09 GMT 2013"",
                ""title"": ""上海商铺出租/转让,上海门面房出租信息/上海门面转让-上海商铺网"",
                ""exploitabilityLevel"": 2,
                ""bsqli"": 0,
                ""sqli"": 1,
                ""url"": ""http://sp.sosfang.com/"",
                ""xss"": 0
            },
            {
                ""id"": ""http://www.msdssafe.com/"",
                ""timestamp"": ""Sat Apr 06 11:03:33 GMT 2013"",
                ""title"": ""MSDS查询网 英文MSDS查询网 MSDS MSDS报告 MSDS下载 msds是什么意思 MSDS安全网"",
                ""exploitabilityLevel"": 4,
                ""bsqli"": 15,
                ""sqli"": 3,
                ""url"": ""http://www.msdssafe.com/"",
                ""xss"": 0
            },
            {
                ""id"": ""http://www.tiananjidian.com/"",
                ""timestamp"": ""Sat Apr 06 11:15:03 GMT 2013"",
                ""title"": ""上海精工阀门厂总代理★上海精工阀门|上工牌阀门|精工阀门厂|上海阀门|精工阀门|广东阀门|广州阀门|惠州阀门|东莞阀门|佛山阀门|深圳阀门|中山阀门|潮州阀门|珠海阀门|河源阀门|汕头阀门|肇庆阀门|"",
                ""exploitabilityLevel"": 3,
                ""bsqli"": 0,
                ""sqli"": 2,
                ""url"": ""http://www.tiananjidian.com/"",
                ""xss"": 1
            },
            {
                ""id"": ""http://www.ywscocie.com/"",
                ""timestamp"": ""Sat Apr 06 11:20:46 GMT 2013"",
                ""title"": """",
                ""exploitabilityLevel"": 2,
                ""bsqli"": 0,
                ""sqli"": 2,
                ""url"": ""http://www.ywscocie.com/"",
                ""xss"": 0
            },
            {
                ""id"": ""http://bookingsbarbados.com/"",
                ""timestamp"": ""Wed May 15 00:54:31 GMT 2013"",
                ""title"": ""Bookings Caribbean | Barbados Bookings Center. Book barbados Hotels and Activities. Search, tourism "",
                ""exploitabilityLevel"": 5,
                ""bsqli"": 4,
                ""sqli"": 2,
                ""url"": ""http://bookingsbarbados.com/"",
                ""xss"": 18
            }
        ],
        ""rowsFound"": 5115,
        ""qTime"": 1
    }
}
"
Python: Pandas DataFrame for tuples,"for col in prob.columns:
    idx = (prob[col].idxmax())
    print('{}: {}'.format(prevstate.loc[idx, col], prob.loc[idx, col]))
"
"Is python suppose to allow, add a new attribute to an object?","class BooFar(object):
    def __str__(self):
        return ""I'm a BooFar with the following attributes:\n{}"".format(self.__dict__)

>>> b = BooFar()
>>> print(b)
I'm a BooFar with the following attributes:
{}
>>> b.spam = ""eggs""
>>> print(b)
I'm a BooFar with the following attributes:
{'spam': 'eggs'}
"
How to change value for item in a list of dict in python in a simple way?,">>> a = [{1: u'100'}, {2: u'200'}, {3: u'300', 4: ""not unicode""}]
>>> [{k:float(v) if isinstance(v, unicode) else v for k,v in d.iteritems()} for d in a]
[{1: 100.0}, {2: 200.0}, {3: 300.0, 4: 'not unicode'}]
"
Powershell: Convert text files to csv files,"Select-String -Path $SearchFolder -Pattern 'new-print-server, default, dymo, zebra' -NotMatch | select line, filename
"
Python - Don't Understand The Returned Results of This Concatenated Regex Pattern,"noun_patt = r'\s(?:{})\s'.format('|'.join(noun_list))
"
generate python regex at runtime to match numbers from 'n' to infinite,"def digit_match_greater(n):
    digits = str(n)
    variations = []
    # Anything with more than len(digits) digits is a match:
    variations.append(r""\d{%d,}"" % (len(digits)+1))
    # Now match numbers with len(digits) digits.
    # (Generate, e.g, for 15, ""1[6-9]"", ""[2-9]\d"")
    # 9s can be skipped -- e.g. for >19 we only need [2-9]\d.
    for i, d in enumerate(digits):
        if d != ""9"": 
            pattern = list(digits)
            pattern[i] = ""[%d-9]"" % (int(d) + 1)
            for j in range(i+1, len(digits)):
                pattern[j] = r""\d""
            variations.append("""".join(pattern))
    return ""(?:%s)"" % ""|"".join(""(?:%s)"" % v for v in variations)
"
Database on the fly with scripting languages,"from sqlalchemy import create_engine, Column, String, Integer, MetaData, Table
from sqlalchemy.orm import mapper, create_session
import csv
CSV_FILE = 'foo.csv'
engine = create_engine('sqlite://') # memory-only database

table = None
metadata = MetaData(bind=engine)
with open(CSV_FILE) as f:
    # assume first line is header
    cf = csv.DictReader(f, delimiter=',')
    for row in cf:
        if table is None:
            # create the table
            table = Table('foo', metadata, 
                Column('id', Integer, primary_key=True),
                *(Column(rowname, String()) for rowname in row.keys()))
            table.create()
        # insert data into the table
        table.insert().values(**row).execute()

class CsvTable(object): pass
mapper(CsvTable, table)
session = create_session(bind=engine, autocommit=False, autoflush=True)
"
Python array subtraction loops back to high number instead of giving negative value,"arr1 = np.array([100, 200, 255],dtype=np.uint8)
arr2 = np.array([180, 210, 100],dtype=np.uint8)

sub_arr = np.subtract(arr1, arr2.astype(np.int16)).clip(0, 255).astype(np.uint8)
print(sub_arr)
[  0   0 155]
"
How to encode categorical values in Python,">>> ''.join(np.where(np.in1d(xs, 'NY GA'.split(' ')), '1', '0'))
'101'
"
pandas reindex a dataframe with duplicate keys,">>> df2['index'] = df2.index
>>> df3 = df2.drop_duplicates(cols='index', take_last=True).reindex(df.index, method='ffill')
>>> del df3['index']
>>> df3
                             a
2013-02-21 09:51:56.615338 NaN
2013-02-22 09:51:56.615357   3
"
Showing the stack trace from a running Python application,"import code, traceback, signal

def debug(sig, frame):
    """"""Interrupt running process, and provide a python prompt for
    interactive debugging.""""""
    d={'_frame':frame}         # Allow access to frame object.
    d.update(frame.f_globals)  # Unless shadowed by global
    d.update(frame.f_locals)

    i = code.InteractiveConsole(d)
    message  = ""Signal received : entering python shell.\nTraceback:\n""
    message += ''.join(traceback.format_stack(frame))
    i.interact(message)

def listen():
    signal.signal(signal.SIGUSR1, debug)  # Register handler
"
Converting an array to hash in python,"p = []
a = ['s', 'l', 'y']
for s in a:
    p.append(('size',  s))

print(p)
"
Make sqlite3 column update faster,"cur.execute(""CREATE TABLE C(Id PRIMARY KEY)"");
"
How should I launch a Portable Python Tkinter application on Windows without ugliness?,"appicon ICON ""app.ico""
"
Python regular expressions replacing,"^settings/usergroups/g_value/cargroups/$
^settings/usergroups/g_value/other/o_value/$
^settings/account/a_value/other/o_value/$
^settings/usergroups/g_value)/other/o_value/$
"
"Can I find which parameters are ""pre-assigned"" in python?","dict(zip(argspec.args[-len(argspec.defaults):], argspec.defaults))
"
Running a separate function alongside a loop in Python,"thread1 = displayThread
thread2 = downloadThread
thread1.start()
thread2.start()
thread2.join()   //waits for download to finish while the display in being updated by the other thread
"
How do I call render_template() once per minute flask,"$.ajax({
  type: ""POST"",
  url: ""/getprice"",
})
  .done(function( price ) {
    $(""#price-box"").val(price)
  });
"
"Pandas, unexpected behavior of .resample('B')","dates = ['1953-02-28', '1953-03-31', '1953-04-30', '1953-05-31']
values = [1,2,3,4]
monthly_ts  = pd.Series(values, index = pd.to_datetime(dates))
"
"Matplotlib - Move X-Axis label downwards, but not X-Axis Ticks","pl.xlabel(""..."", labelpad=20)
"
Sum float values at each index point in nested lists,"zip(*values)
"
"How to determine file, function and line number?","import inspect

def PrintFrame():
  callerframerecord = inspect.stack()[1]    # 0 represents this line
                                            # 1 represents line at caller
  frame = callerframerecord[0]
  info = inspect.getframeinfo(frame)
  print info.filename                       # __FILE__     -> Test.py
  print info.function                       # __FUNCTION__ -> Main
  print info.lineno                         # __LINE__     -> 13

def Main():
  PrintFrame()                              # for this line

Main()
"
Taylor polynomial calculation,"entered :  [2, 3, 4] [4, 3, 2]
a + b =  6*1 + 6*x + 6*x^2
20.0855369232
2*1 + 3*x + 4*x^2
sum  2*1 + 3*x + 4*x^2
el:  4*1 + 12*x + 25*x^2 + 24*x^3 + 16*x^4
sum  6*1 + 15*x + 29*x^2 + 24*x^3 + 16*x^4
el:  4*1 + 12*x + 25*x^2 + 24*x^3 + 16*x^4
el:  8*1 + 36*x + 102*x^2 + 171*x^3 + 204*x^4 + 144*x^5 + 64*x^6
sum  14*1 + 51*x + 131*x^2 + 195*x^3 + 220*x^4 + 144*x^5 + 64*x^6
el:  4*1 + 12*x + 25*x^2 + 24*x^3 + 16*x^4
el:  8*1 + 36*x + 102*x^2 + 171*x^3 + 204*x^4 + 144*x^5 + 64*x^6
el:  16*1 + 96*x + 344*x^2 + 792*x^3 + 1329*x^4 + 1584*x^5 + 1376*x^6 + 768*x^7 + 256*x^8
sum  30*1 + 147*x + 475*x^2 + 987*x^3 + 1549*x^4 + 1728*x^5 + 1440*x^6 + 768*x^7 + 256*x^8
"
flask-login: Chrome ignoring cookie expiration?,"from flask import session

@app.route('/login')
def login():
    # ...
    if login_user(user):
        session.permanent = True
        return redirect(request.args.get('next') or url_for('index'))
    # ...
"
Python split a tuple into individual parts...getpixel(rgb),"for times, (r, g, b) in im.getcolors():
    # do something
"
subtuples for a tuple,"
>>> for x in sub_combinations(('A', 'B', 'C', 'D'), 2):
...     print(x)
...
(('A',), ('B',), ('C',), ('D',))
(('A',), ('B',), ('C', 'D'))
(('A',), ('B', 'C'), ('D',))
(('A', 'B'), ('C',), ('D',))
(('A', 'B'), ('C', 'D'))
"
My Python for loop is giving the result None,">>> my_training_data={
...     (1,2,3,4):[1,0,0],
...     (1.2,1.8,3.2,3.8):[1,0,0],
...     (1.1,1.9,3.1,3.9):[1,0,0],
...     (4,3,2,1):[0,1,0],
...     (3.8,3,2,1.8,1.2):[0,1,0],
...     (3.9,3.1,1.9,1.1):[0,1,0]
... }
>>> def part_1(my_training_data):
...    new_training_data=[]
...    for key in sorted(my_training_data):
...        new_training_data.append(list(key) + [1])
...    return new_training_data
... 
>>> part_1(my_training_data)
[[1, 2, 3, 4, 1], [1.1, 1.9, 3.1, 3.9, 1], [1.2, 1.8, 3.2, 3.8, 1], [3.8, 3, 2, 1.8, 1.2, 1], [3.9, 3.1, 1.9, 1.1, 1], [4, 3, 2, 1, 1]]
"
"Parser returns ""\n"" instead of desired output.","for player in soup1.select('ul.team1 li.player'):
    text = player.get_text().strip()
    print text
"
How to produce an arbitary string with a specific length in python?,"'x' * 100000 # or,

''.join('x' for x in xrange(100000)) # or,

from itertools import repeat
''.join(repeat('x', times=100000))
"
How to print non-ascii characters to file in Python 2.7,"f.write(chr(510).encode('utf-8'))
"
Is there a Python equivalent of range(n) for multidimensional ranges?,"0 0
0 1
1 0
1 1
2 0
2 1
"
how to quickly check if an object is in a list in python,"for o in main_object_list:
    o.my_special_flag = True 

for o in main_object_list:
    obj_list = o.get_this_object_list()
    for i in obj_list:
        if hasattr(i, 'my_special_flag'):
"
Numpy Modular arithmetic,">>> import numpy
>>> x = numpy.array([[0,0],[1,1]])
>>> y = numpy.array([[1,0],[0,1]])
>>> x ^ y
array([[1, 0],
       [1, 0]])
"
append multiple values for one key in Python dictionary,"years_dict = dict()

for line in list:
    if line[0] in years_dict:
        # append the new number to the existing array at this slot
        years_dict[line[0]].append(line[1])
    else:
        # create a new array in this slot
        years_dict[line[0]] = [line[1]]
"
How can I set Polymorphic Identity after a class is defined?,"from sqlalchemy import *
from sqlalchemy.orm import *
from sqlalchemy.ext.declarative import declarative_base

from sqlalchemy.orm import class_mapper

Base= declarative_base()


class A(Base):
    __tablename__ = ""a""

    id = Column(Integer, primary_key=True)
    type = Column(String)
    __mapper_args__ = {""polymorphic_on"": type, ""polymorphic_identity"": ""a""}

class B(A):
    pass

mapper = class_mapper(B)
mapper.polymorphic_identity = ""b""
mapper.polymorphic_map[""b""] = mapper

e = create_engine(""sqlite://"", echo=True)

Base.metadata.create_all(e)

s = Session(e)

s.add_all([A(), B(), B(), A(), A()])
s.commit()

s.close()

assert [obj.type for obj in s.query(B).order_by(A.id)] \
            == ['b', 'b']

assert [type(obj) for obj in s.query(B).order_by(A.id)] \
            == [B, B]

assert [obj.type for obj in s.query(A).order_by(A.id)] \
            == ['a', 'b', 'b', 'a', 'a']
"
How do I print the content of a .txt file in Python?,"f.close()
"
Display PyGame Mask on screen,"olist = myImage_mask.outline()
pygame.draw.lines(blankSurf,(200,150,150),1,olist)
"
Multiplying 2d array by 1d array,"In [19]: a
Out[19]: 
array([[2, 8],
       [4, 7],
       [1, 2],
       [5, 2],
       [7, 4]])

In [20]: b
Out[20]: array([3, 5, 5])

In [21]: b*a[...,None]
Out[21]: 
array([[[ 6, 10, 10],
        [24, 40, 40]],

       [[12, 20, 20],
        [21, 35, 35]],

       [[ 3,  5,  5],
        [ 6, 10, 10]],

       [[15, 25, 25],
        [ 6, 10, 10]],

       [[21, 35, 35],
        [12, 20, 20]]])
"
Create a random door in pygame,"RandomDoorCreator(level) #Create a random door BEFORE we create walls
x = y = 0
for row in level:
    for col in row:
        if col == ""W"" or col == ""R"": #Only row changed -- we just want to account for our new R values
            Wall((x, y))
        x += 16
    y += 16
    x = 0
for wall in walls:
        pygame.draw.rect(screen, (255, 255, 255), wall.rect)
"
No highgui in python,"import cv2
img  = cv2.imread(""image name"")
cv2.imshow(""window name"", img)
cv2.waitKey(0)
"
How to merge typedefs spread across multiple lines to single line?,"$ sed -f sedscr infile
#include <iostream>
#include <list>
#include <map>

using namespace std;

#define MIN_LEN 10
#define MAX_LEN 100

typedef list<int> IntList;

typedef map<int, string> Names;

typedef Record { int id; string name; } MyRecord;

void putname(int a, string name)
{
    // do something...
}
"
How to remove a tooltip in wxpython?,"if col in relevanCols:
    event.GetEventObject().SetToolTipString(""Hai"")
else:
    self.grid.SetToolTip(None)
"
Issue storing multi valued json format dictionary into mysql table in DJango,"data: {
    'radinput_Aj' : JSON.stringify(fun()),
    'csrfmiddlewaretoken': $(""input[name=csrfmiddlewaretoken]"").val()
},
"
Split an array according to it's information,"filtered_arr = arr[(arr[:,0]<=20)*(arr[:,0]>=0),:]
"
How can I create dictionary in python3?,"months =['January','February','March','April','May','June','July','August','September','October','November','December']

d_months = {}

for i, month in enumerate(months):
    d_months[i+1] = month

print(d_months)
"
Pythonic macro syntax,"macro PrintMacro:
  syntax:
    ""print"", OneOrMore(Var(), name='vars')

  return Printnl(vars, None)
"
Python: Using replace function to replace item from string with item from list,"s = ""foo foobar foo""
l = [""hello world ""]

print s.replace(""foobar"",l[0])
foo hello world  foo

l = [""hello world "",""different string""]

print s.replace(""foobar"",l[-1])
foo different string foo



old_story =  ""This is a {word}.""
new_word_list = [""one"",""two"",""three"",""four""]

spl = old_story.split() #  split  into individual words
for ind, new_s in enumerate(new_word_list):
    spl[ind] = new_s # replace element at matching index
print ("" "".join(spl)) # rejoin string from updated list
one two three four

old_story =  ""This {foo} is {a} {foo} {bar}.""
new_word_list = [""is"",""my"",""final"",""solution""]
spl = old_story.split()
for ind, word in enumerate(spl):
    if word.startswith(""{""):
         spl[ind] = new_word_list.pop(0)
print ("" "".join(spl))
This is is my final solution
"
Method argument conversion: 'tuple' has no attribute 'attribute',"class foo:
    def __init__(self, position=(0.0, 0.0), velocity=(1.0, 1.0)):
        self.position = vec2()
        self.velocity = vec2(*velocity)

    def update(self, dt):
        if isinstance(dt, tuple):
            dt = vec2(*dt)
        self.position += self.velocity * dt;
"
How to store a list as a dictionary - python,"newvalue
"
Store the extracted SURF descriptors and keypoints in *.npy file,"def read_features_from_file(filename):
    """""" Read feature properties and return in matrix form. """"""
    if os.path.getsize(filename) <= 0:
        return np.array([]), np.array([])
    f = np.load(filename)
    if f.size == 0:
        return np.array([]), np.array([])
    f = np.atleast_2d(f)
    return f[:,:7], f[:,7:] # feature locations, descriptors

def write_features_to_file(filename, locs, desc):
    np.save(filename, np.hstack((locs,desc)))
"
Merging one-by-many CSV files in Python,"fieldnames = ['Run', 'ID', 'Var', 'Var2', 'Var3']
f = open('combined.csv', 'wb')
csvwriter = csv.DictWriter(f, fieldnames = fieldnames)
csvwriter.writerow(dict((fn,fn) for fn in fieldnames)) # 2.7 has writeheader, which is cleaner
[csvwriter.writerow(row) for row in values]
f.close()


$ cat combined.csv 
Run,ID,Var,Var2,Var3
1,1,7,0.89,0.10
1,2,9,0.45,0.98
1,3,4,0.27,0.05
2,1,3,0.89,0.10
2,2,4,0.45,0.98
2,3,8,0.27,0.05
"
storing for loop iteration data,"[{""path"": get_path(file), ""name"": get_name(file), ...} for file in input]
"
How to run Django's test database only in memory?,"if 'test' in sys.argv:
    DATABASE_ENGINE = 'sqlite3'
"
Django get all records of related models,"Activity.objects.filter(list__topic__user=my_user)
"
Simple syntax error in Python if else dict comprehension,"a = {k: d.get(k, 0) for k in d}
"
Adding new line to data for csv in python,"Boston,1,67,47.9,19.6,5.2,7.2,1.8,0.5,4.3,4.1,4.3,0.9,6.8-16.1,.421,1.6-4.9,.324,4.4-5.4,.816,19.7,-6.8
San Antonio,2,67,47.8,19.7,5.0,8.7,1.9,0.3,3.5,3.3,4.2,0.8,7.4-18.0,.411,1.5-4.6,.317,3.4-4.2,.819,20.7,-2.4
Atlanta,3,67,48.7,19.2,5.6,8.4,2.3,0.6,4.1,3.7,4.6,1.0,7.1-17.6,.401,2.0-5.8,.338,3.2-3.8,.828,20.8,-5.6
Miami,4,67,49.8,20.6,5.2,8.0,1.9,0.3,3.2,3.6,4.3,0.9,7.6-18.5,.407,1.9-5.3,.348,3.7-4.5,.814,21.0,2.1
L.A.Clippers,5,66,48.2,21.0,5.7,8.7,1.9,0.2,4.1,4.5,4.6,1.1,7.6-18.7,.405,1.9-5.4,.346,3.9-4.9,.799,21.1,-7.0
Toronto,6,66,48.0,20.5,5.3,8.8,1.7,0.6,3.8,3.7,4.4,0.9,7.4-18.0,.412,2.1-5.9,.349,3.6-4.4,.826,21.6,-4.3
Charlotte,7,66,48.1,19.3,6.0,9.1,1.6,0.6,3.4,4.1,5.1,0.9,7.1-17.8,.399,2.0-6.4,.321,3.0-3.7,.802,21.7,-4.5
Milwaukee,8,68,48.8,19.3,5.4,9.1,1.9,0.3,4.2,3.5,4.6,0.8,6.8-15.9,.425,1.9-6.0,.311,3.9-5.0,.788,21.7,2.1
...
Sacramento,27,66,49.7,23.7,5.9,9.5,2.3,0.4,4.0,3.6,4.8,1.0,8.6-19.8,.436,2.6-7.5,.346,3.9-4.7,.834,25.9,-0.3
New Orleans,28,66,49.9,24.3,5.7,8.9,1.6,0.4,3.5,3.6,4.8,0.9,8.7-18.2,.475,2.6-6.3,.415,4.4-5.3,.821,26.9,0.8
L.A.Lakers,29,68,49.5,24.5,6.0,9.8,1.9,0.4,3.4,3.3,4.9,1.1,9.3-20.6,.449,2.3-6.7,.349,3.6-4.5,.818,26.9,4.8
Phoenix,30,67,49.0,25.3,5.8,9.5,2.3,0.4,4.1,4.0,4.7,1.1,9.2-20.3,.452,2.6-6.6,.388,4.4-5.6,.788,27.0,7.1
"
How do I remove XML elements without removing content from the elements' tail?,"<root>
<p id=""S6CV0001P0-00507""><member>The Minister for Overseas Development (Mr. Neil Marten)
</member><membercontribution>: a policy foobar barforb</membercontribution></p>
</root>
"
Searching and updating hexadecimal values in python,"from collections import defaultdict

freq = defaultdict(int)
freq['182666828988'] += 1
freq['182666828988'] += 1
freq['183a2d4e3a12'] += 1

print(freq)
"
deleting multiple elements without updating till the end,"for index in sorted(indices_to_delete, reversed=True):
    del oldlist[index]
"
Remove part of first row in a list,">>> y = ['none,none,none,none,none,none,OBJECTID,FULL_ADDRESS', '8724,CANARY',
     '8759,CARDINAL', '9774,W WABASH', '17745,WESTCHESTER']
>>> y[0] = y[0].replace('none,','')
>>> y
['OBJECTID,FULL_ADDRESS', '8724,CANARY', '8759,CARDINAL', '9774,W WABASH', '17745,WESTCHESTER']
>>> y[0] = y[0].replace('none,','')
>>> y
['OBJECTID,FULL_ADDRESS', '8724,CANARY', '8759,CARDINAL', '9774,W WABASH', '17745,WESTCHESTER']
>>> 
"
Regular expression cant be extended to find similar pattern in Python,"\b([\d]{1,2}[\s/-]+[\d]{2,4}[-:–\s.]+\d{1,2}[\s/-]+[\d]{2,4}[\s/-]+)
"
Python : nested key value data parsing,"{'Countries': {'USA': 1, 'Technical Fault': 0, 'No Connections': 0, 'Delayed': 0, 'Connections': {'17 Flights': 0, '10 Flights': 0, '11 Flights': 0, 'More than 25 Flights': 0, '14 Flights': 0, '15 Flights': 0, '12 Flights': 0, '18 Flights': 0, '16 Flights': 0, '1 Flights': 0, '13 Flights': 0}, 'Single Connections': 0, 'Others': 0}}
"
Python Numpy Matrix - Return the value contained in the matrix?,">>> m = matrix([[-1.0/6 + (2.0j/3)]])
>>> m
matrix([[-0.16666667+0.66666667j]])
>>> m.shape
(1, 1)
>>> m[0,0]
(-0.16666666666666666+0.66666666666666663j)
>>> m[(0,0)]
(-0.16666666666666666+0.66666666666666663j)
"
How to use the confusion matrix module in NLTK? - python,"labels = set('DET NN VB IN JJ'.split())

true_positives = Counter()
false_negatives = Counter()
false_positives = Counter()

for i in labels:
    for j in labels:
        if i == j:
            true_positives[i] += cm[i,j]
        else:
            false_negatives[i] += cm[i,j]
            false_positives[j] += cm[i,j]

print ""TP:"", sum(true_positives.values()), true_positives
print ""FN:"", sum(false_negatives.values()), false_negatives
print ""FP:"", sum(false_positives.values()), false_positives
"
Different colors for shapes through iterations in Python / Pygame?,"        for (completedOval, color) in completedOvals:
            pygame.draw.ellipse(windowSurface, color, completedOval)
"
how to not remove apostrophe only for some words in text file in python,"import re

sentences = [""""""""'This has punctuation, and it's hard to remove. ?"" """""",
             ""Did you see Cress' haircut?."",
             ""This 'thing' hasn't a really bad habit, you know?."",
             ""'I bought this for $30 from Best Buy it's. What a waste of money! The ear gels are 'comfortable at first, but what's after an hour.""]

for s in sentences:
    # Remove the specified characters
    new_s = re.sub(r""""""[""?,$!]|'(?!(?<! ')[ts])"""""", """", s)

    # Deal with the final dot
    new_s = re.sub(r""\."", "" ."", new_s)
    print(new_s)
"
Fine-Uploader in depth information on the use of Azure Blob Storage through python flask,"from azure.storage import AccessPolicy
 from azure.storage.sharedaccesssignature import (
 SharedAccessPolicy,
 SharedAccessSignature,
 )

 DEV_STORAGE_ACCOUNT_NAME =""xxxxx""
 DEV_STORAGE_ACCOUNT_KEY =""xxxxx""
 CONTAINER_NAME='xxxxx'
 STORAGE_URL = 'xxxxx'

 def generate_signature_blob(dev_storage_account_name,dev_storage_account_key,container_name):
 sas = SharedAccessSignature(account_name=dev_storage_account_name,account_key=dev_storage_account_key)
 accss_plcy = AccessPolicy()
 accss_plcy.expiry = '2016-10-12'
 accss_plcy.permission = 'w'
 sap = SharedAccessPolicy(accss_plcy)
 sasToken = sas.generate_signed_query_string(container_name,'container',sap)
 return sas._convert_query_string(sasToken).replace(""container"",""c"")
"
Python equivalent of a ruby Gem file,"pip install mypackage
"
Calling the same method in all the objects from a class,"  obj1 = numbers(1,2) # say these are your objects
  obj2 = numbers(7,16)
  ...
 objs.append(obj1) # add them to the list
"
How to strip the string which contain forward slash?,"In [15]: ""/stack/overflow"".replace('/overflow', '')
Out[15]: '/stack'
"
Numpy: efficient way to generate combinations from given ranges,">>> a = np.mgrid[0:2, 0:2]
>>> a
array([[[0, 0],
        [1, 1]],

       [[0, 1],
        [0, 1]]])
"
Access float value from astropy Distance object,"d = []
for _ in range(10):
    d.append(Distance(_, unit=u.kpc).value)
"
Running test cases for C program in run time via python,"tcProcess = subprocess.Popen( ['app','tc']) # assuming tc is going as an argument to app
"
Storing Python dictionaries,"with open('data.p', 'rb') as fp:
    data = pickle.load(fp)
"
python-social-auth require email field,"def create_user(backend, details, response, user=None, *args, **kwargs):
    email = details.get('email')[:255]

    EMAIL_RE = re.compile(r'[^@]+@[^@]+\.[^@]+')

    if not EMAIL_RE.match(email):
        # return to a separate page and display an error
        response = HttpResponseRedirect('/some-url/') 
        messages.error(request, ""An email address is required"")
        return response 
    else:
        # logic to create a user
"
How to avoid adding rows to SQLAlchemy if value didn't change since last entry?,"if value not in database:
    session.add(value)
session.commit()
"
Count non-empty end-leafs of a python dicitonary/array data structure - recursive algorithm?,"def count (result):
    if isinstance (result, list):
        total = 0
        positive = 0
        for e in result:
            r = count (e)
            total += r [1]
            positive += r [0]
        return (positive, total)
    else: return (0 if result == '' else 1, 1)

a = byPath (x, 'top.middle.XX.nested')
b = byPath (x, 'top.last.XX.nested.XX.first')
c = byPath (x, 'top.last.XX.nested.XX.second')
d = byPath (x, 'other')

for x in [a, b, c, d]: print (count (x) )
"
PyGame Moniter dimming during game,"import win32api, win32con
def move(x,y,press=False):
    win32api.SetCursorPos((x,y))
    if press:
        click(x,y)
def click(x,y):
    win32api.mouse_event(win32con.MOUSEEVENTF_LEFTDOWN,x,y,0,0)
    win32api.mouse_event(win32con.MOUSEEVENTF_LEFTUP,x,y,0,0)
move(10,10,True)
"
Writing to a CSV with python without brackets,"print ""Tmin="", "", "".join(Tmin)
"
negative lookbehind assertion in Python,"\[([^][]+)]         # for the whole substring (with a capturing group)
"
How do you get the magnitude of a vector in Numpy?,"np.linalg.norm(x,order=1)
"
Regex to ensure group match doesn't end with a specific character,">>> 'Name.Of.Show.101'.rpartition('.')
('Name.Of.Show', '.', '101')
"
Create Nested Python Dictionary From Tuple of Keys,"reduce(lambda x, y: {y: x}, keys[::-1], value)
"
Explanation of the mod result of long,"600851475143 % 3 = 2 
"
Python: get MAC address of default gateway,"Iface   Destination     Gateway         Flags   RefCnt  Use     Metric  Mask            MTU     Window  IRTT                                                       
eth0    00000000        B91A210A        0003    0       0       100     00000000        0       0       0                                                                             
"
deleting entries in a dictionary based on a condition,"for k, v in data.items():
    if v[0] > 30:
        del data[k]
"
How to copy specific data out of a file using python?,"with open('out.txt', mode = 'w') as filehandle:
    filehandle.write('\n'.join(results))
"
subprocess.Popen output: how to overcome the differences with commandline execution,">>> stringy = res.decode('utf-8') # or whatever encoding your system uses
>>> print(type(stringy), stringy.splitlines()[0])
<class 'str'> COPYING
"
Custom Python shell for Emacs python-mode,"(defvar python-version-checked nil)
(defun python-check-version (cmd)
  ""Check that CMD runs a suitable version of Python.""
  ;; Fixme:  Check on Jython.
  (unless (or python-version-checked
          (equal 0 (string-match (regexp-quote python-python-command)
                     cmd)))
    (unless (shell-command-to-string cmd)
      (error ""Can't run Python command `%s'"" cmd))
    (let* ((res (shell-command-to-string
                 (concat cmd
                         "" -c \""from sys import version_info;\
print version_info >= (2, 2) and version_info < (3, 0)\""""))))
      (unless (string-match ""True"" res)
    (error ""Only Python versions >= 2.2 and < 3.0 are supported"")))
    (setq python-version-checked t)))
"
lxml[.objectify] documentElement tagName,">>> from lxml import objectify
>>> import StringIO
>>> tree = objectify.parse(StringIO.StringIO('<parent><child>Billy</child><child>Bob</child></parent>'))
>>> root = tree.getroot()
>>> root.tag
'parent'
>>> [(foo.tag, foo.text) for foo in root.getchildren()]
[('child', 'Billy'), ('child', 'Bob')]
>>>
"
Return a list of string letters grouped by two,"def my_awesome_grouping_function(shv, n):
    return [shv[i:i+n] for i in range(0, len(shv)-(n-1), n)]
"
Convert weird Python date format to readable date,"Output
2014-08-31 22:00:00+00:00
2014-09-01 00:00:00+02:00
"
Nearest Neighbour Algorithm,"# Expected order is 0,2,3,1,4
A = np.array([
    [0, 2, 1, 2, 2],
    [2, 0, 2, 1, 1],
    [1, 2, 0, 1, 2],
    [2, 1, 1, 0, 2],
    [2, 1, 2, 2, 0]])
print NN(A,0)
"
Django - Have a class based view and Crispy form parrallell to each other on same page,"from django.contrib.auth.views import login

def login_with_preview(request, extra_context=None, *args, **kwargs):
    if extra_context is None:
        extra_context = {}
    extra_context['object_list'] = Request.objects.all()
    return login(request, authentication_form=LoginForm, extra_context=extra_context, *args, **kwargs)
"
Alternative to Using Expression as Variable?,"print(""How many teams would you like?"")
numberteam = int(input(""Number: ""))
# Create a dictionary, where each team has an emtpy list
teams = dict([('Team{}'.format(i), []) for i in range(numberteam)])
# The following also works
# teams = {'Team{}'.format(i):[] for i in range(numberteam)}
"
Python Regex - Capturing a sentence based on the beginning and ending,">>> re.search(r""\b(\d{2}:\d{2}:\d{2}(?:\.\d{3})?) ENTRY '([^']*)'"", description).group(1)
'11:26:16'
>>> re.search(r""\b(\d{2}:\d{2}:\d{2}(?:\.\d{3})?) ENTRY '([^']*)'"", description).group(2)
'Insert Imaginative Description of a person'
>>> re.search(r""\b(\d{2}:\d{2}:\d{2}(?:\.\d{3})?) ENTRY '([^']*)'"", description).group()
""11:26:16 ENTRY 'Insert Imaginative Description of a person'""
"
How can I split a long function into separate steps while maintaining the relationship between said steps?,"class Helper(object):
    def __init__(self):
        self.allowed = self.funcA
    def funcA(self):
        if self.allowed is not self.funcA:
            raise Error(""Cannot run funcA now"")
        # do stuff
        self.allowed = self.funcB
        return whatever
    # etc
"
Celery: is there a way to write custom JSON Encoder/Decoder?,"# Register your new serializer methods into kombu
from kombu.serialization import register
from .myjson import my_dumps, my_loads

register('myjson', my_dumps, my_loads, 
    content_type='application/x-myjson',
    content_encoding='utf-8') 

# Tell celery to use your new serializer:
CELERY_ACCEPT_CONTENT = ['myjson']
CELERY_TASK_SERIALIZER = 'myjson'
CELERY_RESULT_SERIALIZER = 'myjson'
"
"how to do a left,right and mid of a string in a pandas dataframe",">>> df['state'].apply(lambda x: x[len(x)/2-1:len(x)/2+1])
0    kl
1    ta
2    in
3    ne
4    il
"
Values Hidden From Source Code- Webscraping Python,">>> data[0]['price']
u'$18.03'
>>> data[0]['name']
u'2016 1 oz Canadian Silver Cougar | Predator Series'
"
What is the python equivalent of 'var myNumber = dictionary['myNumber'] || 3,"myNumber = dictionary.get('myNumber', 3)
"
"python search string for numbers, put brackets around them","numbers = re.compile(r'(\d+)')

a = numbers.sub(r'\ref{\1}', a)
"
Getting a specific value from a tuple within a list,"for tail_num, xposition, yposition in tails:  # tuple assignment in for-loop
    pygame.draw.rect(windowSurface, RED, (xposition, yposition, 16, 16))
"
Selecting specific anchor tags using python,"http://www.example.com/mobiles-tablets
http://www.example.com/printers-scanners
http://www.example.com/fashion
http://www.example.com/audio-visual
http://www.example.com/computers-servers
http://www.example.com/cameras
"
Print PDF document with python's win32print module?,"gsprint -printer \\server\printer ""test.pdf""
"
Saving list from python to text file in format,"fantasy,12/03/2014
sci-fi,13/04/2014
history,03/04/2014
"
Changing environmental variable for python 2.6.6 on Mac OSX,"export VERSIONER_PYTHON_VERSION=2.6
"
Pass a variable from python to shell script,"var1 = '1'
var2 = '2'
call(['bash', 'run.sh', var1, var2])
"
How do I secure an AWS API Gateway with Cognito?,"sessionToken = identity.get_open_id_token(IdentityId=identity_id)
"
Is there an elegant and concise syntax to do this in Python?,"string_representation = ' '.join(','.join(row) for row in nums)
"
Pass an array of math.functions as parameters with multiple variables,"[1.0, 6.0, 9]
"
Python: search in file with multiple criteria,"print(min(values, key = my_dist_fn)[-1])
"
Pass client-side function to celery task,"import marshal
def foo(x): return x*x
code_string = marshal.dumps(foo.func_code)
"
Python-sent MIME email attachments not showing up in mail.live,"msg = MIMEMultipart('html')
"
"Django modelfield, how do I get the actual value?","dec = format(dec, '.2f') #Or change the precision to cater to your needs
"
How to show EOF in Python? / how to identify lines?,"data = []
while True:
    line = input('Enter a line; leave it blank to stop: ')
    if not line:
        break
    data.append(line)
"
Calling methods from models.py inside views.py without creating instance,"
class City(models.Model):
    title = models.CharField(max_length=200)
    alias = models.CharField(max_length=200)
    country = models.ForeignKey(Country, null=True)
    is_visible = models.BooleanField(default=False)

    def __str__(self):
        return self.title

    @staticmethod # Changed here
    def get_in_country(self, country_id):
"
Tell python to wait/pause a for loop,"input(""Press Enter to continue..."")
"
Using Regular Expressions to extract specific urls in python,">>> s=""""""<script>
...     [irrelevant javascript code here]
...     sources:[{file:""http://url.com/folder1/v.html"",label:""label1""},
...     {file:""http://url.com/folder2/v.html"",label:""label2""},
...     {file:""http://url.com/folder3/v.html"",label:""label3""}],
...     [irrelevant javascript code here]
... </script>""""""

>>> re.findall(r'""(http.*?)""',s,re.MULTILINE|re.DOTALL)
['http://url.com/folder1/v.html', 'http://url.com/folder2/v.html', 'http://url.com/folder3/v.html']
"
Work with tuple of dictionaries,"foo(1,(2,3))
"
Avoiding expensive calculations in Python IRC bot,"import sys

def factorial(n):
    fact = 1
    while (n > 0):
        fact = float(fact) * float(n)
        n -= float(1)
        if float(fact) > sys.float_info.max:
            return ""Too big""
    return str(fact)

print factorial(50e500)
"
Python Regex and the Copyright Symbol,"In [225]: re.search(u'(\N{COPYRIGHT SIGN}|\N{TRADE MARK SIGN}|\N{REGISTERED SIGN})', text)
Out[225]: <_sre.SRE_Match at 0x9a1ebe0>
"
Which is the best way to get a list of running processes in unix with python?,"import subprocess
ps = subprocess.Popen(""ps -U 0"", shell=True, stdout=subprocess.PIPE)
print ps.stdout.read()
ps.stdout.close()
ps.wait()
"
Lost in XML and Python,"from cStringIO import StringIO
from lxml import etree

xmlfile = StringIO(""""""
<ThisIsMyData>
  <ITEM>
    <Number>0</Number>
    <Flag1>TRUE</Flag1>
    <Flag2>FALSE</Flag2>  
    <Flag3>FALSE</Flag3>
    <Label>RED</Label>
    <Path>C:\\test\\</Path>
    <file>test.png</file>
  </ITEM>
  <ITEM>
    <Number>1</Number>
    <Flag1>TRUE</Flag1>
    <Flag2>FALSE</Flag2>
    <Flag3>FALSE</Flag3>
    <Label>Blue</Label>
    <Path>c:\\test\\test2\\</Path>
    <file>blue.png</file>
  </ITEM>
 </ThisIsMyData>
"""""".strip())

datafile = StringIO(""""""
Label;FullPath
YELLOW;C:\\test\\test.png
YELLOW;c:\\test\\test2\\blue.png
"""""".strip())

# Read ""csv"". Simple, no error checking, skip first line.
filenameToLabel = {}
for l,f in (x.strip().split(';') for x in datafile.readlines()[1:]):
  filenameToLabel[f] = l

def first(seq,default=None):
  """"""xpath helper function""""""
  for item in seq:
    return item
  return None

doc = etree.XML(xmlfile.read())

for item in doc.xpath('//ITEM'):
  item_filename = first(item.xpath('./Path/text()'),'').strip() + first(item.xpath('./file/text()'),'').strip()
  label = filenameToLabel.get(item_filename)
  if label is not None:
    first(item.xpath('./Flag1')).text = 'TRUE'
    first(item.xpath('./Flag2')).text = 'FALSE'
    first(item.xpath('./Flag3')).text = 'FALSE'
    first(item.xpath('./Label')).text = label

print etree.tostring(doc)
"
Generating a numpy array with all combinations of numbers that sum to less than a given number,"%timeit partition0([3,6] * 5, 20)
1 loops, best of 3: 11.9 s per loop

%timeit partition1([3,6] * 5, 20)
The slowest run took 12.68 times longer than the fastest. This could mean that an intermediate result is being cached 
1 loops, best of 3: 2.33 s per loop
# MemoryError in another test

%timeit partition2([3,6] * 5, 20)
1 loops, best of 3: 877 ms per loop

%timeit partition3([3,6] * 5, 20)
1 loops, best of 3: 739 ms per loop
"
Create multiple columns in Pandas Dataframe from one function,"df[[""IV"", ""Vega""]] = df.apply(newtonRap, axis=1)
"
Get Xpath dynamically using ElementTree getpath(),"tree = etree.parse(xmlFileUrl)
nsmap = {'def':'http://www.w3.org/2005/Atom'}
for entry in tree.xpath('//def:entry', namespaces=nsmap):
    category = entry.xpath('category')
"
Python-passing variable between classes,"b= BasicInfoPage(...)
"
word count problem,"REGEXP = re.compile(r'([^\s]+)/(\(.*?\))')
"
Parse Excel Report,"In [4]: df.Instrument.fillna(method=""ffill"", inplace=True)

In [5]: df
Out[5]:
      Instrument Identifier  Quantity  Start       End    Total
0            NaN        NaN       NaN    NaN       NaN      NaN
1  North America        NaN       NaN    NaN       NaN      NaN
2  North America        XYZ       100      0         0  1893.52
3  North America        NaN       NaN    NaN  Subtotal  1893.52
4  North America        NaN       NaN    NaN       NaN      NaN
5         Europe        NaN       NaN    NaN       NaN      NaN
6         Europe        ABC        50     10        20  4653.21
7         Europe        NaN       NaN    NaN  Subtotal  4653.21
"
Reading non well-formed XML file without quotation marks in attribute - python,"mytext=""""""<contextfile concordance=brown>
<context filename=br-a01 paras=yes>
<p pnum=1>
....
<wf cmd=done pos=VB lemma=say wnsn=1 lexsn=2:32:00::>said</wf>
<wf cmd=done pos=NN lemma=friday wnsn=1 lexsn=1:28:00::>Friday</wf>
<wf cmd=ignore pos=DT>an</wf>
....
....
<punc>``</punc>
<wf cmd=ignore pos=DT>no</wf>
<wf cmd=done pos=NN lemma=evidence wnsn=1 lexsn=1:09:00::>evidence</wf>
<punc>''</punc>
....
<wf cmd=done pos=NN lemma=irregularity wnsn=1 lexsn=1:04:00::>irregularities</wf>
<punc>.</punc>
</s>
</p>
</context>
</contextfile>""""""

from lxml import html
parsed = html.fromstring(mytext)
for x in parsed.getiterator(): print x.tag, x.attrib, x.text, x.tail
"
pandas - apply UTM function to dataframe columns,"        City   Latitude  Longitude       minx       maxx       miny       maxy
0       Roma  41.892916  12.482520  11.274474  13.690566  40.993594  42.792238
1      Paris  48.856614   2.352222   0.985506   3.718938  47.957292  49.755936
2  Barcelona  41.385064   2.173403   0.974837   3.371969  40.485742  42.284386
3     Berlin  52.519171  13.406091  11.928356  14.883826  51.619849  53.418493
4     Moscow  55.755826  37.617300  36.019417  39.215183  54.856504  56.655148
"
Need help to modify flood fill algorithm,"def fill(matrix, x, y, color1, color2):
    def fill(x, y):
        if 0 <= x < matWidth and 0 <= y < matHeight and matrix[x][y] == color1:
            matrix[x][y] = color2
            fill(x - 1, y)
            fill(x + 1, y)
            fill(x, y - 1)
            fill(x, y + 1)
    matWidth = len(matrix)
    matHeight = len(matrix[0])
    fill(x, y)
    return matrix
"
"In Python, how can I detect whether the computer is on battery power?","# Get power status of the system using ctypes to call GetSystemPowerStatus

import ctypes
from ctypes import wintypes

class SYSTEM_POWER_STATUS(ctypes.Structure):
    _fields_ = [
        ('ACLineStatus', wintypes.BYTE),
        ('BatteryFlag', wintypes.BYTE),
        ('BatteryLifePercent', wintypes.BYTE),
        ('Reserved1', wintypes.BYTE),
        ('BatteryLifeTime', wintypes.DWORD),
        ('BatteryFullLifeTime', wintypes.DWORD),
    ]

SYSTEM_POWER_STATUS_P = ctypes.POINTER(SYSTEM_POWER_STATUS)

GetSystemPowerStatus = ctypes.windll.kernel32.GetSystemPowerStatus
GetSystemPowerStatus.argtypes = [SYSTEM_POWER_STATUS_P]
GetSystemPowerStatus.restype = wintypes.BOOL

status = SYSTEM_POWER_STATUS()
if not GetSystemPowerStatus(ctypes.pointer(status)):
    raise ctypes.WinError()
print 'ACLineStatus', status.ACLineStatus
print 'BatteryFlag', status.BatteryFlag
print 'BatteryLifePercent', status.BatteryLifePercent
print 'BatteryLifeTime', status.BatteryLifeTime
print 'BatteryFullLifeTime', status.BatteryFullLifeTime
"
Iterate over chunks of dataframe by time period,"In [11]: df
Out[11]:
                   A         B         C         D
2000-01-03  1.991135  0.045306 -0.657898  0.311375
2000-01-04  0.690848  1.862244  0.709432 -2.080355
2000-01-05  0.602610 -0.205035  1.248848  0.192274
2000-02-01 -0.108412  0.188484 -0.568542  0.335969
2000-02-02  0.855690 -0.283225  1.471867  0.309235
2000-02-03 -0.266090  0.684080  0.187856  1.734062

In [12]: g = df.groupby(pd.TimeGrouper(""M""))
"
fetch a list of items from a table without using database software,"awk 'FNR==NR { a[$1]=$0; next } $1 in a { print a[$1] }' table list
"
Python factorization,"def genfactors(fdict):
    factors = [1]

    for factor, count in fdict.iteritems():
        newfactors = factors
        for ignore in range(count):
            newfactors = map(lambda e: e*factor, newfactors)
            factors += newfactors

    return factors
"
how to open a URL with non utf-8 arguments,"foo= u'\u65E5\u672C\u8A9E' # 日本語
url= 'http://www.example.jp/something?foo='+urllib.quote(foo.encode('cp932'))
"
Flatten Arbitrary Length of Dictionary Items Into List of Paths in Python,"['a/b/c/d', 'a/b/e/f', 'a/b/g/h', 'a/b/i/j/k/l', 'a/b/i/j/m/n', 'a/b/o/p/q/r', 'a/b/o/p/q/s', 'a/b/o/p/t/u']
"
Maya Adding Numerical Compound attribute (non-API)," cmds.setAttr(""polyCube1.example[0].atx"", 1)
 cmds.setAttr(""polyCube1.example[0].aty"", 1)
 cmds.setAttr(""polyCube1.example[1].atx"", 2)
 cmds.setAttr(""polyCube1.example[1].aty"", 2)

 print cmds.getAttr(""polyCube1.example[1].aty"")
 # 2.0
"
Limit return size of GAE url_fetch get method?,"host = 'http://www.wikipedia.org/somepath/tosome/file.mp3'
req = urllib2.Request(host, headers={'User-Agent' : ""Magic Browser""})
response = urllib2.urlopen(req).read(4*1024)
"
Redirecting command output to a string - Python 3.4.3 - Not working on the new version,"Replacing /bin/sh shell backquote
---------------------------------
output=`mycmd myarg`
==>
output = Popen([""mycmd"", ""myarg""], stdout=PIPE).communicate()[0]
"
How to use symbolic group name using re.findall(),"[{'toto': '1', 'bip': 'xyz'}, {'toto': '15', 'bip': 'abu'}]
"
Most idiomatic way to provide default value in python?,"x = x or y
"
How to use a negative lookbehind,"Edit 1
ss = '''    background: #f09 url('images#06F'); 
    background=#00f url('images #889'); 
    color:#E4aaa0 url('images#890'); 
    background: #fff #dddddd#125e88    #ae3;
    Walter (Elias) Disney: #f51f51 '''

print ss+'\n'

import re

three = '(?:[0-9A-Fa-f]{3})'

regx = re.compile('^ *[^=:]+[ =:]*#(%s{1,2})' % three,re.MULTILINE)
print regx.findall(ss)

print '-----------------------------------------------------'

regx = re.compile('(?:(?:^ *[^=:]+[ =:]*)|(?:(?<=#%s)|(?<=#%s%s)) *)'
                  '#(%s{1,2})' % (three,three,three,three),
                  re.MULTILINE)
print regx.findall(ss)
"
How to make mechanize script multthread in python,"import threading
file_lock = threading.Lock()
class WriteThread(threading.Thread):
    def __init__(self, text, output):
        threading.Thread.__init__(self)
        self.text = text
        self.output = output
    def run(self):
        # Acquire Lock
        file_lock.acquire()
        output.write(text)
        # Release Lock
        file_lock.release()

with open(""output.txt"", ""a+"") as f:
    # Create threads
    a = WriteThread(""foo"", f)
    b = WriteThread(""bar"", f)
    # Start threads
    a.start()
    b.start()
"
Sum of elements in a list of lists with varying lengths in Python,">>> a = [[1,2], [3,4,5], [6,7,8,9]] # Tim Pietzcker's example
>>> [sum(p) for p in product(*a)]
[10, 11, 12, 13, 11, 12, 13, 14, 12, 13, 14, 15, 11, 12, 13, 14, 12, 13, 14, 15, 13, 14, 15, 16]
"
Encode and assemble multiple features in PySpark,"from pyspark.ml import Pipeline
pipeline = Pipeline(stages=[indexer, encoder, vector_indexer, assembler])
model = pipeline.fit(df)
transformed = model.transform(df)
"
Python regex with devanAgarI,"lines = sys.stdin.readlines()
"
"Python 3, increment iterator",">>> with open('testFile.txt', 'r') as f:
        for line in f:
            if 'cat' in line:
                final_string = next(f)
"
Get of number of lines of a Text tkinter widget,"import Tkinter as Tk

def countlines(event):
    (line, c) = map(int, event.widget.index(""end-1c"").split("".""))
    print line, c

root = Tk.Tk()
root.geometry(""200x200"")
a = Tk.Text(root)
a.pack()
bindtags = list(a.bindtags())
bindtags.insert(2, ""custom"")
a.bindtags(tuple(bindtags))
a.bind_class(""custom"", ""<Key>"", countlines)

root.mainloop()
"
Python Extract Word/Token counts from items in a list?,"import csv
with open(filename, 'w') as outfile:
    writer = csv.writer(outfile)
    writer.writerow(['Word', 'Length'])
    for line in mylist:
        for word in line.split("", ""):
            writer.writerow([word, str(len(word))])
"
Every way to organize N objects in M list slots,"In [98]: import itertools as IT

In [99]: list(IT.combinations(range(4), 2))
Out[99]: [(0, 1), (0, 2), (0, 3), (1, 2), (1, 3), (2, 3)]
"
Mocking function argument names to work with inspect.getargspec,"In [4]: inspect.getargspec(mockfun)
Out[4]: ArgSpec(args=['a', 'b'], varargs=None, keywords=None, defaults=<Mock name='mock.func_defaults' id='140160757665168'>)
"
Convert triangle matrix to square (Python | NumPy)?,"np.where(np.eye(A.shape[0],dtype=bool),A,A.T+A)
"
Convert date-time format to Unix Time stamp Pandas,"import pandas as pd
import numpy as np
import io

temp=u""""""1466f7b93975983f6e292a8a4faaa4b2,1619b4d0d283c0dddb17d24a359a3b49,36db348cde68592a31d502366fc52932,2010-03-08 17:09:00.472544,2010-03-12 16:09:58.122987
367c13356a5d22158f0ae56977134e2c,eedb7d0714796b64767a8710ea3844a7,925476200929fd346ea312cbe9a046fe,2010-03-08 17:08:29.174236,2010-03-12 16:09:58.122987
edf6b1e4f67b0e8a5080d299c9f9aeb2,7cb7681b90388a7522d0f06578591567,ffde0649a72ded8e33522c503a4d5cbe,2010-03-08 17:08:22.030524,2010-03-12 16:09:58.122987
6bb2ad8bc78897e99072d4d76cf0f19c,b644947ac4db03bdb518cfa71765f8c8,eb25089d396c06255cbb5f1bad801cc4,2010-03-08 17:07:55.819137,2010-03-12 16:09:58.122987""""""
"
How to get s subset sum to print out the integers it used (python),"from itertools import combinations

def com_subset_sum(seq, target):
    if target == 0 or target in seq:
        return True

    for r in range(len(seq),1,-1):
        for subset in combinations(seq, r):
            if sum(subset) == target:
                print subset
                return True
    return False


print com_subset_sum([1,3,5,1,6,8,7],10)
"
Python Emulate strptime behavor,"User1234
"
Transform Python list into columnar data,"data=[u'Intake Received Date:',
 u'9/11/2012',
 u'Intake ID:',
 u'CA00325127',
 u'Allegation Category:',
 u'Infection Control',
 u'Investigation Finding:',
 u'Substantiated',
 u'Intake Received Date:',
 u'5/14/2012',
 u'Intake ID:',
 u'CA00310421',
 u'Allegation Category:',
 u'Quality of Care/Treatment',
 u'Investigation Finding:',
 u'Substantiated',
 u'Intake Received Date:',
 u'8/15/2011',
 u'Intake ID:',
 u'CA00279396',
 u'Allegation Category:',
 u'Quality of Care/Treatment',
 u'Sub Categories:',
 u'Screening',
 u'Investigation Finding:',
 u'Unsubstantiated',]
"
Looping over multiple lists in Django Template,"key1 = {'df1' : df1TableHTML, 'df2' : df2TableHTML}
labels = ['label1', 'label2']
"
Python regex for detecting additions,"In [4]: int('30W'[:-1])
Out[4]: 30
"
"Generally speaking, how are (Python) projects structured?","    QtGui.QApplication.setApplicationName('progname')      
    QtGui.QApplication.setApplicationVersion('0.1')
"
converting a list of lists ina dictionary where inner lists are key-value pairs,"result = {
    key: value[0] if len(value) == 1 else value
    for key, value in result.items()}
"
How to calculate mean of values in the list omitting a special value?,">>> import numpy as np
>>> a = np.array([1,2,3,4,5])
>>> np.mean(a)
3.0
>>> np.mean(a[a<=3])
2.0
>>> np.mean(a[a!=4])
2.75
"
How to find strings in pandas,"dataset[dataset['Postcode'].str.startswith(""EC4"")]
"
Speed of different prime factor functions,"def prime_factors(n):
    factors = []
    if n % 2 == 0:
        factors.append(2)
        while n % 2 == 0:
            n //= 2
    candidate = 3
    while candidate * candidate <= n:
        if n % candidate == 0:
            factors.append(candidate)
            while n % candidate == 0:
                n //= candidate
        candidate += 2
    if n != 1:
        factors.append(n)
    return factors
"
Find deepest nested path?,"def find_leafes( root ):
    """""" finds folders with no subfolders """"""
    for root, dirs, files in os.walk(root):
        if not dirs: # can't go deeper
            yield root

print longest_path(find_leafes( root ))
"
How do I run code when a Python class is evaluated,"In [4]: FirstClass.__subclasses__()
Out[4]: [__main__.SecondClass]
"
Python: Count how many times a word occurs in a file,"3
"
Splitting a list in python,">>> l = [11,12,13,14,15,16,1,2,3,4,5,6,7,8,9,10]
>>> sorted(x for x in l if x > 13)
[14, 15, 16]
"
python: how to perfrom whois with uwhoisd proxy,"$ wget https://raw.githubusercontent.com/kgaughan/uwhoisd/master/extra/uwhoisd.ini
"
How can I stop a scrapy CrawlSpider and later resume where it left-off?,"scrapy crawl thespider --set SCHEDULER_DIR=run1 
"
extracting nested items with beautifulsoup,"from BeautifulSoup import UnicodeDammit
from lxml import html


def decode_html(html_string):
    converted = UnicodeDammit(html_string, isHTML=True)
    if not converted.unicode:
        raise UnicodeDecodeError(
            ""Failed to detect encoding, tried [%s]"",
            ', '.join(converted.triedEncodings))
    # print converted.originalEncoding
    return converted.unicode


tag_soup = open('mess.html').read()

# Use BeautifulSoup's UnicodeDammit to detect and fix the encoding
decoded = decode_html(tag_soup)

# Use lxml's HTML parser (faster) to parse the document
root = html.fromstring(decoded)

spans = root.xpath(""//span[@style='font-size:14px;']"")
wanted_spans = spans[2:]

blocks = []
for span in wanted_spans:
    line = span.text.strip().replace('\n', '')
    blocks.append(line)

description = '\n'.join(blocks)
print description
"
Python multithreading/subprocess with functions,"import time
from multiprocessing import Process


def thing_1():
    """"""We'll run this in a subprocess.""""""
    for i in range(10):
        print('thing_1: {}'.format(i))
        # let's make it take a bit longer
        time.sleep(1)


def thing_2():
    """"""We'll run this as a normal function in the current python process.""""""
    time.sleep(1)
    c = 5 * 2
    print('thing_2: {}'.format(c))
    # let's make this take a bit longer too
    time.sleep(1)



if __name__ == '__main__':
    # start the first thing running ""in the background""
    p = Process(target=thing_1)
    p.start()
    # keep a record of when we started it running
    start_thing_1 = time.time()

    # let's run the other thing
    start_thing_2 = time.time()
    thing_2()
    end_thing_2 = time.time()

    # this will wait for the first thing to finish
    p.join()
    end_thing_1 = time.time()

    print('thing 1 took {}'.format(end_thing_1 - start_thing_1))
    print('thing 2 took {}'.format(end_thing_2 - start_thing_2))
"
How can I kill a cron program?,"$ ps aux | grep hello.py
"
how to update existing data frame in pandas?,">>> df1['val'] = df2['val'].combine_first(df1['val'])
>>> df1
Out[26]:
    c1  c2  val
0    a   x   12
1    a   y   31
2    b   x   14
3    b   y   0
"
Resuming Python after Tar SSH Pipe shell call?,"tar czpf - ./source_folder/ | ssh username@ip_or_hostname ""tar xzpf - -C /destination_folder/""
"
Is there a python code to concatenate values into 1 cell in excel,"#!/usr/bin/env python

import csv

dict={}
with open('gene_test.csv','rB') as f:
    reader = csv.reader(f)
    for line in reader:
        try:
            dict[line[1]].append(line[0])
        except:
            dict[line[1]]=[line[0]]

with open('out_gene_test.csv','wb') as f:
    writer = csv.writer(f, delimiter='|')
    for key in dict:
        writer.writerow([','.join(dict[key]),key])
"
"Find particular words in a string, Python","sum(text.count(word) for word in words)
"
How to make a longer if rather than a for loop,"johns = names.count(""John"")
"
Can I explicitly close a ctypes CDLL?,">>> from ctypes import *
>>> 
>>> file = CDLL('./file.so')
SO loaded
>>> 
>>> file.function()
Hello
6
>>> cdll.LoadLibrary('libdl.so').dlclose(file._handle)
SO unloaded
0
>>> 
"
python how to efficiently group together terms,"sort <inputfile> | python merger.py
"
Python - Can't create instances from a list or random instances,"isintance(goblina, Enemy) 
"
"Extracting (interval) values from multiple dictionaries inside one large list, and combining these with corresponding lists inside another large list","from collections import defaultdict
res = defaultdict(list)
for word, start, end in w_list:
    res[word].append({'start':time_dict[start[1:]], 'end': time_dict[end[1:]] }) 
"
"Python: How to print a message within a ""frame"", using if,for and while control statements? Really confused","def _one_frame(text):                 # text is supposed to be a list of lines
    lt = len(text[0])
    horz = '+' + '-'*lt + '+'         # Make the horizontal line +-------+
    result = [horz]                   # Top of the frame
    for line in text:
        result.append( '|'+line+'|' ) # Add the borders for each line
    result.append(horz)               # Bottom of the frame
    return result

def frame(text, repeat, thickness):
    text = ["" %s ""%text]*repeat       # add spaces and repeat as a list
    for i in range(thickness):
        text = _one_frame(text)       # draw one frame per iteration
    return '\n'.join(text)            # join lines

print(frame('Hello World', 3, 2))
"
Python: removing characters except digits from string,"$ python3.1 -mtimeit -s'import re;  x=""aaa12333bb445bb54b5b52""' 're.sub(r""\D"", """", x)'
100000 loops, best of 3: 8.43 usec per loop
$ python3.1 -mtimeit -s'import xx; x=""aaa12333bb445bb54b5b52""' 'x.translate(xx.DD)'
10000 loops, best of 3: 24.3 usec per loop
"
How can I apply a namedtuple onto a function?,"func(**r._asdict())
"
Does importing a module (but not using it) decrease performance in Python?,"# much used module: mymodule
def set_trace():
    import ipdb
    ipdb.set_trace()
"
How to add some self process when using Python eve?,"# note that the signature has changed
def manipulate_inbound_documents(docs):
    # no need to branch on the resource name
    for doc in docs:
        doc['id_field'] = '001'
        doc['qr'] = 'mycqcode'

app = Eve()
# only fire the event on 'activity' endpoint
app.on_insert_activity += manipulate_inbound_documents
"
python: making array index generation more efficient/elegant,"[np.arange(1 if l==i else 0, e) for l,e in enumerate(shape)]
"
"Conditioning xpath on presence of sibling , lxml","for r in p.xpath('.//w:t[./ancestor::w:r[(.//w:b or .//w:bCs[@w:val=""0""]) and count(.//w:b|.//w:bCs)=1]]',namespaces={'w': w}):
     text2 += r.text
"
"how to break up lines most reasonably, staying ""within 80 chars"" in python?","class TestFilewise():
    def setup(self):
        import os
        self.fixture_dir = os.path.abspath(os.path.dirname(__file__)) \
              + ""/fixtures/""
        assert os.access( self.fixture_dir, os.F_OK ), \
            ""Oops! the fixture dir should be here "" + self.fixture_dir
        assert os.access( self.fixture_dir+""profiles-source1.csv"", os.F_OK )
"
"New to Python, creating a craps game when given n games","dice1 = roll()
while True: # Loop until either lost or won
    if dice1 == 7:
        break # Player lost, don't do anything
    elif dice1 == dice:
        count += 1 # Player won, increase count
        break
    else:
        dice1 = roll()
"
How to render django form field in template,"#in templatetags/user_list_tags.py
from django import template
from django import forms
register = template.Library()

#this is djangp template tag for user selection form
@register.filter
def user_select_field(form, userid):
    """"""
    returns UserSelectionForm field for a user with userid
    """"""
    key = str(userid)
    if key not in form.fields.keys():
        print 'Key %s not found in dict' % key
        return None
    #here i use BoundField:
    boundField = forms.forms.BoundField(form, form.fields[key], key)
    return unicode(boundField)
"
Shorter way to manipulate region of two-dimensional list,"data[x:x+2, y:y+2] = average
"
"How to differentiate capital and small letters in using Django admin ""prepopulated_fields""?","class MyModelAdmin(admin.ModelAdmin):
    def save_model(self, request, obj, form, change):
        video_id = forms.cleaned_data.get('video_id', None)
        # If we are creating the object, and the video id is present
        if video_id and not change:
            obj.embed_code = video_id
        obj.save()
"
python parse xml,"data = root.findall('data/METAR')
for sky in data.findall('sky_condition'):
    print ""Sky Condition: {0} at {1} ft AGL"".format(
        sky.attrib['sky_cover'],
        sky.attrib['cloud_base_ft_agl']
      )
"
Changing the colour of the tk.optionmenu widget,"optionmenu['menu'].config(bg='red')
"
super call to DjangoSpider's parse method not working,"Output
h
e
l
l
o
w
o
r
l
d
"
Access 1D array with array of lists or arrays,"split_indices = np.cumsum([len(x) for x in duplicates])[:-1]
np.split(flat_labels,split_indices)

# [array([2, 3]), array([3, 2]), array([0, 0, 0])]
"
Multiply two Pandas dataframes with same shape and same columns names,"C = A.mul(B)
"
"How can i do calculations on subsets , Panda's way, without looping","In [141]: eventday_idxs.diff().head()
Out[141]: 
0       NaT
1   24 days
2   15 days
3   62 days
4   23 days
Name: 0, dtype: timedelta64[ns]
"
How to generate a permutation list of lists in python,"from itertools import product, chain

def choose_from_2d_lol(lol):
    flattened_options = list(chain.from_iterable(lol))
    for p in product(*flattened_options):
        p_iter = iter(p)
        new_list = [[next(p_iter) for elem in row] for row in lol]
        yield new_list
"
RegEx up to a certain group of characters,">>> x = ['Ceo and founder at xyz labs', 'bartender | manager', 'Buyer & Seller at sailaway']
>>> import re
>>> [re.split(r""\band\b|\||&"", y)[0].strip() for y in x]
['Ceo', 'bartender', 'Buyer']
"
Calling a Python function from C++,"#include <iostream>
#include ""Python.h""

int
main(int argc, char** argv)
{
    Py_Initialize();

    // First set in path where to find your custom python module.
    // You have to tell the path otherwise the next line will try to load
    // your module from the path where Python's system modules/packages are
    // found.
    PyObject* sysPath = PySys_GetObject(""path"");
    PyList_Append(sysPath, PyString_FromString(""/home/shanil/project""));

    // Load the module
    PyObject *pName = PyString_FromString(""my_mod"");
    PyObject *pModule = PyImport_Import(pName);

    // Random use-less check
    std::cout<< ""Works fine till here\n"";

    if (pModule != NULL) {
        std::cout << ""Python module found\n"";

        // Load all module level attributes as a dictionary
        PyObject *pDict = PyModule_GetDict(pModule);

        // Remember that you are loading the module as a dictionary, the lookup you were
        // doing on pDict would fail as you were trying to find something as an attribute
        // which existed as a key in the dictionary
        PyObject *pFunc = PyDict_GetItem(pDict, PyString_FromString(""my_func""));

        if(pFunc != NULL){
            PyObject_CallObject(pFunc, NULL);
        } else {
            std::cout << ""Couldn't find func\n"";
        }
    }
    else
        std::cout << ""Python Module not found\n"";
    return 0;
}
"
"removing ""()"" using python",">>> import re
>>> s = 'N1B N 1.2620(4) 0.3320(4) 0.0049(7)'
>>> re.sub('\(.*?\)', '', s)
'N1B N 1.2620 0.3320 0.0049'
"
What does `features['contains(%s)' % word.lower()] = True` mean in NLTK?,">>> a = 'apple'
>>> o = 'orange'
>>> '%s' % a
'apple'
>>> '%s and' % a
'apple and'
>>> '%s and %s' % (a,o)
'apple and orange'
"
How integrate two ModelForms to render one form?,"form.html
<html>
<body>
<form action='/{{ action }}/' method='post'>
    {% csrf_token %}
    <table>
        {{ form.as_table }} <!-- added as table which was missing from original post. -->
        {{ form2.as_table }}
    </table>
    <input type='submit' value='Adicionar' />
</form>
</body>
"
How to sort a list of strings with a different order?,"class MyStrOrder:
    def __init__(self, inner):
        self.inner = inner

    def __lt__(self, other):
        for i in range(min(len(self.inner), len(other.inner))):
            a = POS.get(self.inner[i])
            b = POS.get(other.inner[i])
            if a != b:
                return a < b
        return len(self.inner) < len(other.inner)

lst = [""abc"", ""ab"", ""aá""]
lst.sort()
print(lst)

lst = [""abc"", ""ab"", ""aá""]
lst.sort(key = MyStrOrder)
print(lst)
"
How to get CherryPy to follow symbolic links?,"import os
print os.stat('/path/to/filename').st_size
"
Python 3.3.4. How to swap values within an array,"def main():
    array = [""susan"", ""mary"", ""david"", ""tom"", ""richard"", ""mark""]

    places_moved = int(input(""How many places would you like to move?\n"" + \
                             ""(positive is to the right) ""))

    new_list = []
    for seat in range(6):
        new_list.append(array[(seat + 6 - places_moved) % 6])

    print new_list

    return 0

if __name__ == '__main__':
    main()
"
remove empty last line from string (output from pipe),"from __future__ import print_function

print(file_contents, end='')
"
How to generate data for matplotlib filled contour plots given the real coordinates?,"H, xedges, yedges = np.histogram2d(x, y, bins=[nx, ny], weights=z)
"
How to share attributes without an is-a relationship in Python?,"def has_many_properties(cls):
    return has_prop1(has_prop2(has_prop3(cls)))

@has_many_properties
class C(object):
    pass
"
"SQLAlchemy Flask, match some or all","...
schools = School.query

if form.name.data:
    schools = schools.filter(School.name == form.name.data)

if form.city.data:
    schools = schools.filter(School.city == form.city.data)

if form.state.data:
    schools = schools.filter(School.state == form.state.data)

# at this point schools is a query filtered with whatever was given
...
"
os.chdir() is not working in mac,"directoryPath = os.path.join(directoryPath, directoryName)
"
Why is concatenating strings running faster than joining them?,"Python 3.3.0 (v3.3.0:bd8afb90ebf2, Sep 29 2012, 10:57:17) [MSC v.1600 64 bit (AMD64)] on win32
Type ""copyright"", ""credits"" or ""license()"" for more information.
>>> ================================ RESTART ================================
>>> 
>>> test()
Short strings
concat:             0.5453461176251436
concat_from_list:   0.5185697357936024
join:               0.7099379456477868
join_tuple:         0.5900842397209949
join_from_list:     0.4177281794285359

Long Strings
concat:             2.002303591571888
concat_from_list:   1.8898819841869416
join:               1.5672863477837913
join_tuple:         1.4343144915087596
join_from_list:     1.231374639083505
"
Networkx graph: finding if path exists between any node in a given set of nodes and another set of nodes,"class Object
  #
  # breadth first search for references from the given object to self
  #
  def reference_path_to(to_object, length, trace = false)
    paths = [[to_object]]
    traversed = IdentitySet.new
    traversed.add(to_object)
    start_size = 1 if trace
    while not paths.empty? and paths.first.size <= length
      references = paths[0][0].find_references_in_memory
      # if we print here a SecurityError mey occur
      references.each{ |reference| 
        return [reference] + paths[0] if reference.equal?(self)
        unless traversed.include?(reference) or paths.any?{ |path| reference.equal?(path)}
          paths.push([reference] + paths[0])
          traversed.add(reference)
        end
      }
      if trace and start_size != paths[0].size
        puts ""reference_path_length: #{paths[0].size}""
        start_size = paths[0].size
      end
      paths.delete_at(0)
    end
    return nil
  end
end # from https://github.com/knub/maglevrecord/blob/60082fd8c16fa7974166b96e5243fc0a176d172e/lib/maglev_record/tools/object_reference.rb
"
join function of a numpy array composed of string,"print([len("""".join(a)) for a in binary_split_array])
print([len("""".join(a)) for a in binary_list])
[0, 8, 8, 8, 8, 8, 8, 8, 8, 8]
[8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
"
Apply a value to all instances of a number based on conditions,"In [44]: df
Out[44]:
   ID  Number
0   1       0
1   1       0
2   1       1
3   2       0
4   2       0
5   3       1
6   3       1
7   3       0

In [56]: grouped = df.groupby('ID')['Number'].max().to_dict()

In [58]: df['Total'] = df.apply((lambda row:5 if grouped[row['ID']] else 0), axis=1)

In [59]: df
Out[59]:
   ID  Number  Total
0   1       0      5
1   1       0      5
2   1       1      5
3   2       0      0
4   2       0      0
5   3       1      5
6   3       1      5
7   3       0      5
"
avoid data loss when stopping python script that runs in windows command prompt,"python -u MyScraper.py > outputOfMyScraper.txt
"
How to add and show some attributes to a many2many relationship (OpenERP7)?,"_columns = {
    'partner_id': fields.many2one('res.partner', 'Partner', ondelete='cascade'),
    'course_id': fields.many2one('training.course', 'Course', ondelete='cascade'),
    'date': fields.date('Joining date'),
}

_sql_constraints = [
    ('rel_unique', 'unique(partner_id, course_id, date)', 'This course already give to this company!!'),
]
"
Generate all cubes with a given volume,"def prisms(V):
    for a in range(1, V+1):
        for b in range(1, V+1):
            if V % (a*b) == 0:
                c = V / (a*b)
                print a,b,c
"
slicing a matrix in python vs matlab,"s = Mtx.sum(0)
newMtx = Mtx[:,(s.A1 > 0)]
"
Find location of pair of elements in two arrays in numpy,"In [20]: list(np.where(np.logical_and(x == 1, y == 4))[0])
Out[20]: [3]
"
how to merge duplicate elements?,"print([tuple(d) for d in n.values()]) # [(3,), (3, 2), (5,)]
"
Assignment to discontinuous slices in python,"a = range(5)
b = range(5, 7)
a[1::2] = b
print a
"
Numbers used as string in Pandas index,"
In [154]: df.info()
<class 'pandas.core.frame.DataFrame'>
Index: 16 entries, 9896342 to 9760247   # <-- a generic Index, not a Int64Index
Data columns (total 1 columns):
 FG    16 non-null object
dtypes: object(1)
memory usage: 256.0+ bytes

In [155]: df.index[0]
Out[155]: '9896342'

In [156]: type(df.index[0])
Out[156]: str
"
How to rearrange a date in python,"In [35]:
pd.to_datetime(df['date']).apply(lambda x: dt.datetime.strftime(x, '%m/%d/%y %H:%M:%S'))

Out[35]:
index
0     01/01/15 17:25:00
1     02/01/15 11:43:00
2     04/01/15 18:21:00
3     07/01/15 16:17:00
4     12/01/15 20:12:00
5     01/14/15 11:09:00
6     01/15/15 16:05:00
7     01/16/15 21:02:00
8     01/26/15 03:00:00
9     01/27/15 08:32:00
10    01/30/15 11:52:00
Name: date, dtype: object
"
How do create new column in csv file using python by shifting one row,"#!/usr/bin/env python

last = ""0""

with open('input.csv') as csv:
    print next(csv).strip().replace(';', ';PSR;', 1)
    for line in csv:
        field = line.strip().split(';')
        if field[3] == last: field.insert(1, ""0"")
        else: field.insert(1, last)
        last = field[4]
        print ';'.join(field)
"
How to do SEO Url changes and Redirects for google AppEngine Webapp2 Urls?,"from webapp2_extras.routes import DomainRoute

app = webapp2.WSGIApplication([

    DomainRoute('www.domain.com', [
            webapp2.Route(r'/<:.*>', handler=RedirectWWW),
    ]),

    ('/', IndexPage),
    ('/discover', DiscoverPage),
    ('/about', AboutPage),
    ('/help', HelpPage),
    ('/terms-and-privacy', TermsPage)
], debug=True)
"
Python: Get flattr count,"import urllib2
import lxml.html as LH
from PyQt4 import QtGui, QtCore, QtWebKit
import sys

class Render(QtWebKit.QWebPage):
    def __init__(self, url):
        self.app = QtGui.QApplication(sys.argv)
        QtWebKit.QWebPage.__init__(self)
        self.loadFinished.connect(self._loadFinished)
        self.mainFrame().load(QtCore.QUrl(url))
        self.app.exec_()

    def _loadFinished(self, result):
        self.frame = self.mainFrame()
        self.app.quit()

def main():
    liste = []
    for k in range(2, 3):
        url = ""http://www.spiegelfechter.com/wordpress/page/"" + str(k)
        r = Render(url)
        content = unicode(r.frame.toHtml())
        doc = LH.fromstring(content)
        for span in doc.xpath('//span[@class=""commentbutton""]'):
            a = span.xpath('a')[0]
            post = a.attrib['href']
            kommentare = a.text_content()
            # kommentare is expected to be a string such as '14 Kommentare'
            comments = int(kommentare.split()[0])

            iframe = span.xpath('iframe')[0]
            flattr_url = (iframe.attrib['src'])
            flattr_doc = LH.parse(flattr_url)
            span = flattr_doc.xpath('//span[@class=""flattr-count""]')[0]
            flattr_count = int(span.text_content())
            liste.append((comments, flattr_count, post))
        for elt in sorted(liste):
            print(elt)

if __name__ == '__main__':
    main()
"
Create Columns on DataFrame with parsed list values,"genres = ['Drama', 'Comedy', ..]
for genre in genres:
    df['OMDB_GENRE_{}'.format(genre)] = df.OMDB_GENRE.apply(lambda x: 1 if genre in x else 0)
"
python dictionary match key values in two dictionaries,"for (key, value) in aa.viewitems() & bb.viewitems():
    print '%s: %s is present in both aa and bb' % (key, value)
"
How to test ModelForm save() method saves changes in model?,"class PersonForm(ModelForm):
    class Meta:
        model = Person
        exclude = ('user',)
    ...
"
NLTK: can I add terminal to grammar that is already generated,">>> import nltk
>>> original_grammar = nltk.data.load('grammars/large_grammars/atis.cfg')
>>> original_parser = ChartParser(original_grammar)
>>> sent = ['show', 'me', 'northwest', 'flights', 'to', 'detroit', '.']
>>> for i in original_parser.parse(sent):
...     print i
...     break
... 
(SIGMA
  (IMPR_VB
    (VERB_VB (show show))
    (NP_PPO
      (pt_pron_ppo me)
      (NAPPOS_NP (NOUN_NP (northwest northwest))))
    (NP_NNS (NOUN_NNS (pt207 flights)) (PREP_IN (to to)))
    (AVPNP_NP (NOUN_NP (detroit detroit)))
    (pt_char_per .)))
"
Python Custom Zipf Number Generator Performing Poorly,"In [1]: import numpy as np

In [2]: import math

In [3]: alpha = 0.1

In [4]: n = 5

In [5]: tmp = [1. / (math.pow(float(i), alpha)) for i in range(1, n+1)]

In [6]: zeta = reduce(lambda sums, x: sums + [sums[-1] + x], tmp, [0])

In [7]: tmp
Out[7]: 
[1.0,
 0.9330329915368074,
 0.8959584598407623,
 0.8705505632961241,
 0.8513399225207846]

In [8]: zeta
Out[8]: 
[0,
 1.0,
 1.9330329915368074,
 2.82899145137757,
 3.699542014673694,
 4.550881937194479]
"
Remove or adapt border of frame of legend using matplotlib,"leg = plt.legend()
leg.get_frame().set_linewidth(0.0)
"
Why use **kwargs in python? What are some real world advantages over using named arguments?,"Model.objects.filter(foo__lt = 4, bar__iexact = 'bar')
"
Writing a recursive function in Python,"*****    # 5 stars ...
****     # ...followed by a 4-row triangle
***
**
*
"
Why is the same SQLite query being 30 times slower when fetching only twice as many results?,"3 tables with 10 rows each => 1,000 comparision

3 tables with 10, 10 and 40 rows => 4,000 comparisons

3 tables with 20 rows each => 8,000 comparisons
"
F# library or .Net Numerics equivalent to Python Numpy function,"static void Main(string[] args)
{
  using (Py.GIL()) {
    dynamic np = Py.Import(""numpy"");
    dynamic sin = np.sin;
    Console.WriteLine(np.cos(np.pi*2));
    Console.WriteLine(sin(5));
    double c = np.cos(5) + sin(5);
    Console.WriteLine(c);
    dynamic a = np.array(new List<float> { 1, 2, 3 });
    dynamic b = np.array(new List<float> { 6, 5, 4 }, Py.kw(""dtype"", np.int32));
    Console.WriteLine(a.dtype);
    Console.WriteLine(b.dtype);
    Console.WriteLine(a * b);
    Console.ReadKey();
  }
}
"
Python WebDriver - can not use send_keys to uploading file to site. API will active file selection window,"<input type=""file"" />
"
Python lxml iterfind w/ namespace but prefix=None,"nsmap = {'atom': 'http://www.w3.org/2005/Atom'}
for x in root.iterfind('atom:entry', namespaces=nsmap):
    print x
"
How to filter objects of an object_list of a generic view in Django,"<form method=""get"" action="""">
<ul>{{ search_form.as_ul }}</ul>
<input type=""submit"" value=""Search"" />
</form>
"
How to convert an xml string to a dictionary in Python?,"import cElementTree as ElementTree

class XmlListConfig(list):
    def __init__(self, aList):
        for element in aList:
            if element:
                # treat like dict
                if len(element) == 1 or element[0].tag != element[1].tag:
                    self.append(XmlDictConfig(element))
                # treat like list
                elif element[0].tag == element[1].tag:
                    self.append(XmlListConfig(element))
            elif element.text:
                text = element.text.strip()
                if text:
                    self.append(text)


class XmlDictConfig(dict):
    '''
    Example usage:

    >>> tree = ElementTree.parse('your_file.xml')
    >>> root = tree.getroot()
    >>> xmldict = XmlDictConfig(root)

    Or, if you want to use an XML string:

    >>> root = ElementTree.XML(xml_string)
    >>> xmldict = XmlDictConfig(root)

    And then use xmldict for what it is... a dict.
    '''
    def __init__(self, parent_element):
        if parent_element.items():
            self.update(dict(parent_element.items()))
        for element in parent_element:
            if element:
                # treat like dict - we assume that if the first two tags
                # in a series are different, then they are all different.
                if len(element) == 1 or element[0].tag != element[1].tag:
                    aDict = XmlDictConfig(element)
                # treat like list - we assume that if the first two tags
                # in a series are the same, then the rest are the same.
                else:
                    # here, we put the list in dictionary; the key is the
                    # tag name the list elements all share in common, and
                    # the value is the list itself 
                    aDict = {element[0].tag: XmlListConfig(element)}
                # if the tag has attributes, add those to the dict
                if element.items():
                    aDict.update(dict(element.items()))
                self.update({element.tag: aDict})
            # this assumes that if you've got an attribute in a tag,
            # you won't be having any text. This may or may not be a 
            # good idea -- time will tell. It works for the way we are
            # currently doing XML configuration files...
            elif element.items():
                self.update({element.tag: dict(element.items())})
            # finally, if there are no child tags and no attributes, extract
            # the text
            else:
                self.update({element.tag: element.text})
"
How do I import the white project into an IronPython program?,"import clr
clr.AddReference(""White.Core"")
clr.AddReference(""White.NUnit"")
from White.NUnit import *
from White import *
from White.Core import *
from White.Core.Configuration import *
from White.Core.UIItems import *
from White.Core.UIItems.WindowItems import *
from White.Core.UIItems.ListBoxItems import *
from White.Core.UIItems.Container import *
from White.Core.UIItems.Finders import *
from White.Core.Factory import *
from White.Core.Finder import *
from White.Core.AutomationElementSearch import *
from White.Core.WindowsAPI import *
"
In Python what's some other ways to write a if x==1 or x==5 or x==10...?,"myset = set((1, 5, 10, 22))

[...]

if x in myset:
    pass
"
python : searching through nested list by key and storing it into nested list,"Output:
[('A', 10), ('D', 40), ('Y', 250)]
"
Pythonic way to append list of strings to an array,"entry_list.extend([entry.title.text for entry in feed.entry])
"
Run setup code exactly once for different test statements using timeit,"""from __main__ import name_1, name_2, name_3""
"
Python Input Sanitization,"&lt;&gt;
"
ECDF in python without step function?,">>> xx.sort()
>>> plt.plot(xx, ecdf(xx))
[<matplotlib.lines.Line2D object at 0x07A87090>]
>>> plt.show()
"
A PYTHONSTARTUP file for a specific directory,"export PYTHONSTARTUP=$HOME/myproject/.pystartup
python ~/myproject/start.py

export PYTHONSTARTUP=$HOME/myotherproject/.pystartup
python ~/myotherproject/start.py
"
parsing xliff file using lxml library,"end: g text2  text3 
end: x None None
end: x None text4
end: source text1  None
"
python xml parser with ElementTree amazon api,"<?xml version=""1.0"" ?>
<BrowseNodeLookupResponse xmlns=""http://webservices.amazon.com/AWSECommerceService/2011-08-01"">
    <OperationRequest>
        <HTTPHeaders>
            <Header Name=""UserAgent"" Value=""Python-urllib/3.5""/>
        </HTTPHeaders>
        <RequestId>54e05f2a-e792-11e5-8694-85b3fa7a9fcf</RequestId>
        <Arguments>
            <Argument Name=""AWSAccessKeyId"" Value=""xxxxx""/>
            <Argument Name=""AssociateTag"" Value=""xxx-21""/>
            <Argument Name=""BrowseNodeId"" Value=""2844434031""/>
            <Argument Name=""Operation"" Value=""BrowseNodeLookup""/>
            <Argument Name=""Service"" Value=""AWSECommerceService""/>
            <Argument Name=""Signature"" Value=""cf1A3M8S30Y32EdxVVoBljYUNrt4ZiqgvM+/B1uPrDg=""/>
            <Argument Name=""Timestamp"" Value=""2016-03-11T14:05:38Z""/>
            <Argument Name=""Version"" Value=""2011-08-01""/>
        </Arguments>
        <RequestProcessingTime>0.005945883</RequestProcessingTime>
    </OperationRequest>
    <BrowseNodes>
        <Request>
            <IsValid>True</IsValid>
            <BrowseNodeLookupRequest>
                <BrowseNodeId>2844434031</BrowseNodeId>
            </BrowseNodeLookupRequest>
        </Request>
        <BrowseNode>
            <BrowseNodeId>2844434031</BrowseNodeId>
            <Name>Categorie</Name>
            <IsCategoryRoot>1</IsCategoryRoot>
            <Children>
                <BrowseNode>
                    <BrowseNodeId>2892859031</BrowseNodeId>
                    <Name>Donna</Name>
                </BrowseNode>
                <BrowseNode>
                    <BrowseNodeId>2892862031</BrowseNodeId>
                    <Name>Uomo</Name>
                </BrowseNode>
                <BrowseNode>
                    <BrowseNodeId>2892857031</BrowseNodeId>
                    <Name>Bambine e ragazze</Name>
                </BrowseNode>
                <BrowseNode>
                    <BrowseNodeId>2892858031</BrowseNodeId>
                    <Name>Bambini e ragazzi</Name>
                </BrowseNode>
                <BrowseNode>
                    <BrowseNodeId>1739205031</BrowseNodeId>
                    <Name>Prima infanzia</Name>
                </BrowseNode>
                <BrowseNode>
                    <BrowseNodeId>2892860031</BrowseNodeId>
                    <Name>Abbigliamento specifico e altre marche</Name>
                </BrowseNode>
            </Children>
            <Ancestors>
                <BrowseNode>
                    <BrowseNodeId>2844433031</BrowseNodeId>
                    <Name>Abbigliamento</Name>
                </BrowseNode>
            </Ancestors>
        </BrowseNode>
    </BrowseNodes>
</BrowseNodeLookupResponse>
"
What am I doing wrong(implementing alternative equality with overloading in python),"a == b ⇒ hash(a) == hash(b)
"
finder.apply_ngram_filter in nltk.collocations to classify some ngrams,"blacklist = [""olive leaf plucked"", ""during mating searson""]
blacklist = [tuple(b.split()) for b in blacklist]
finder3.apply_ngram_filter(lambda w1, w2, w3: (w1,w2,w3) in blacklist)

print finder3.nbest(trigram_measures.pmi, 10)
"
Plotting histogram of list of tuplets matplotlib,"from collections import Counter
k = [(8, 8),(10, 10),(8, 8),
 (8, 8),(12, 12),(7, 7),(8, 8),
 (9, 9),(10, 10),(10, 10),(8, 8),(9, 9),(13, 13),
 (10, 10),(8, 8),(8, 8),(7, 7)]

c=Counter(k)
>>> Counter({(8, 8): 7, (10, 10): 4, (9, 9): 2, (7, 7): 2, (13, 13): 1, (12, 12): 1})
"
Slice only working on the last line in a file using 'with open' and 'readline',"Filename? > demo.txt
31 45 34 42
31 45 33 42
31 45 32 42
31 45 31 42
31 43 44 42
31 43 43 42
31 43 42 42
32 36 33 42
"
is python subprocess module quirky?,"airodump = subprocess.Popen(..., stdout=open(""/dev/null"", ""w""), stderr=open(""/dev/null"", ""w""))
"
patterns in python-complex,"def upanddown(n):
    return range(1, n) + range(n, 0, -1)

def triangle(rows):
    for num in xrange(1, rows + 1):
        print ' '.join(map(str, upanddown(num))).center(rows * 4 - 3)

rows = input(""Number of rows: "")
triangle(rows)
"
Matplotlib color according to class labels,"import numpy
import pylab
xy = numpy.zeros((2, 1000))
xy[0] = range(1000)
xy[1] = range(1000)
colors = [int(i % 23) for i in xy[0]]
pylab.scatter(xy[0], xy[1], c=colors)
pylab.show()
"
What makes my python code so slow (Linked List Cycle)?,">>> b = Solution()
>>> dis.dis(b.hasCycle)
 18           0 SETUP_EXCEPT            69 (to 72)

 19           3 LOAD_FAST                1 (head)
              6 LOAD_ATTR                0 (next)
              9 LOAD_ATTR                0 (next)
             12 STORE_FAST               2 (fast)

 20          15 LOAD_FAST                1 (head)
             18 LOAD_ATTR                0 (next)
             21 STORE_FAST               3 (slow)

 22          24 SETUP_LOOP              37 (to 64)
        >>   27 LOAD_FAST                2 (fast)
             30 LOAD_FAST                3 (slow)
             33 COMPARE_OP               3 (!=)
             36 POP_JUMP_IF_FALSE       63

 23          39 LOAD_FAST                2 (fast)
             42 LOAD_ATTR                0 (next)
             45 LOAD_ATTR                0 (next)
             48 STORE_FAST               2 (fast)

 24          51 LOAD_FAST                3 (slow)
             54 LOAD_ATTR                0 (next)
             57 STORE_FAST               3 (slow)
             60 JUMP_ABSOLUTE           27
        >>   63 POP_BLOCK           

 26     >>   64 LOAD_GLOBAL              1 (True)
             67 RETURN_VALUE        
             68 POP_BLOCK           
             69 JUMP_FORWARD             8 (to 80)

 27     >>   72 POP_TOP             
             73 POP_TOP             
             74 POP_TOP             

 28          75 LOAD_GLOBAL              2 (False)
             78 RETURN_VALUE        
             79 END_FINALLY         
        >>   80 LOAD_CONST               0 (None)
             83 RETURN_VALUE     
"
"Python return without "" ' """,">>> 1 # just a number, so no quotes
1
>>> ""hi"" # just a string, displayed with quotes
'hi'
>>> print(""hi"") # being *printed* to the screen, so do not show quotes
hi
>>> ""'hello'"" # string with embedded single quotes
""'hello'""
>>> print(""'hello'"") # *printing* a string with embedded single quotes
'hello'
"
"Python list of dictionaries projection, filter, or subset?","def project(key, d):
    return {k: d[k]}

map(partial(project, ""name""), mine)
"
"Python: Reading thru CSV file, finding columns with same value and appending their other column values","Location    Movie Title Date    
Edgebrook Park, Chicago     A League of Their Own   7-Jun   
Edgebrook Park, Chicago     It's a Mad, Mad, Mad, Mad World 9-Jun  
"
How to execute celery task when new message arrives to queue?,"@app.task(serializer='json', name='task_name')
def task1(arg1):
    print arg1
"
Day names or first 3 characters,"import java.util.regex.*;
public class PartialMatch {
   public static void main(String[] args) {
      String[] tests = {
         ""sunday"", ""sundae"", ""su"", ""mon"", ""mondayyyy"", ""frida""
      };
      Pattern p = Pattern.compile(""(?:sun|mon|tues|wednes|thurs|fri|satur)day"");
      for (String test : tests) {
         Matcher m = p.matcher(test);
         System.out.printf(""%s = %s%n"", test, 
            m.matches() ? ""Exact match!"" :
            m.hitEnd() ? ""Partial match of "" + test.length():
            ""No match!""
         );
      }
   }
}
"
Counting number of occurance of a string in python,"with open(filename, 'r') as f:
    c = Counter(line.strip() for line in f if line.strip())
"
Is there a faster way to get input in python?,"import sys
for line in sys.stdin:
    x,y = [ord(x)-48 for x in line.split()]
"
Parsing specific contents in a file,"def partition_by(l, f):
    t = []
    for e in l:
        if f(e):
            if t: yield t
            t = []
        t.append(e)
    yield t

blocks = partition_by(content, lambda l: l.startswith('['))
"
How do you add integer variables from objects?,">>> a = saved_money()
>>> a.set_amount(20)
'$20.00'
>>> globalTotal
20
>>> b = saved_money()
>>> b.set_amount(50)
'$50.00'
>>> globalTotal
70
"
Python: Get data BeautifulSoup,">>>import bs4 
>>>html='''<div id=""accounts"" class=""elementoOculto"">             <table align=""center"" border=""0"" cellspacing=0 width=""90%"">         <tr><th align=""left"" colspan=2>                 permisos            </th></tr><tr>     <td colspan=2>         <table width=100% align=center border=0 cellspacing=1>             <tr>                 <th align=center width=""20%"">cuen</th>                 <th align=center>Mods</th>             </tr>         </table>     </td> </tr> </table> <table align=""center"" border=""0"" cellspacing=1 width=""90%"">     <tr bgcolor=""whitesmoke"" height=""08"">         <td align=""left"" width=""20%"">             <font face=""arial"" font-size=""16px"" color=""navy"">001970000521</font>         </td>         <td>......   <table align=""center"" border=""0"" cellspacing=1 width=""90%"">         <tr bgcolor=""whitesmoke"" height=""08"">             <td align=""left"" width=""20%"">                 <font face=""arial"" font-size=""16px"" color=""navy"">001970000521</font>             </td> '''
>>>print bs4.BeautifulSoup(html).find_all(attrs={""face"":""arial"",""font-size"":""16px"",""color"":""navy""})
 [<font color=""navy"" face=""arial"" font-size=""16px"">001970000521</font>, <font color=""navy"" face=""arial"" font-size=""16px"">001970000521</font>]
"
list comprehension with np.where to compare two arrays and combine them it first entry is equal,">>> res
array([[  5.,   2.,   3.,   4.,   3.,   0.,   1.],
       [  3.,  22.,  23.,  24.,   0.,   0.,   0.],
       [  2.,  31.,  32.,  34.,   2.,   0.,   5.],
       [  1.,  41.,  42.,  44.,   6.,   0.,  55.],
       [  4.,  51.,  52.,  54.,   4.,   0.,   0.],
       [  8.,  61.,  62.,  64.,   0.,  44.,   0.]])
"
checking if any element in a list starts with any of a number of prefixes in Python?,">>> nextmatch = next(((t,p) for t,p in product(targets,prefixes) if t.startswith(p)), None)
>>> print(nextmatch)
[('abar', 'a')]
"
Python Pandas Dataframe pull column value/index down by one,"In [62]:
df = pd.DataFrame({'name':['john', 'bla', 'tim','walter','john'], 'place':['new york','miami','paris','rome','sydney']},index=np.arange(1,6))    
df.index.name = 'id'
df

Out[62]:

      name     place
id                  
1     john  new york
2      bla     miami
3      tim     paris
4   walter      rome
5     john    sydney

In [63]:   
df['name'] = df['name'].shift(-1)
df = df.iloc[:-1]
df

Out[63]:

      name     place
id                  
1      bla  new york
2      tim     miami
3   walter     paris
4     john      rome
"
"Numpy Lookup (Map, or Point)","D = np.argsort(B)[C].reshape(A.shape)
"
Efficient way to maintain a sorted list of access counts in Python,"def handle_request(req):
    for h in handlers:
        if h[1].handles(req):
            h[0] += 1
            handlers.sort(reverse=True)
            break
    else:
        return None
    return h[1]
"
Comparing and reducing difference between two numbers regardless of which is larger,"if x > y: x, y = y, x   # swap x and y if x > y
for x in range(x, y+1):
    diff = y-x
"
return key under condition,"max_key = {}
for key, values in mydict.iteritems():
    for value in myset.intersection(values):
        if key > max_key.get(value, float('-inf')):
            max_key[value] = key

result = {key: val for val, key in max_key.iteritems()}
"
Download big files via FTP with python,"01-12-2011 23.30 - Connected to FTP
01-12-2011 23.30 while > try, run retrbinary
02-12-2011 00.31 while > except, something going wrong: timed out
    file lenght is: 1754695793 > 1754695793
02-12-2011 00.31 - Connected to FTP
Done with file, attempt to download m5dsum
"
Parsing csv file and writing rows to file according to relative size,"for line_number, row in enumerate(reader):
"
"Is it possible to create a class that represents another type in Python, when directly referenced?","class CustomVal(object):
    def __init__(self, value):
        self.value = value

    def __getattr__(self, attr):
        return getattr(self.value, attr)
"
Python Instantiate All Classes Within a Module,">>> actions = [obj() for obj in Action.__subclasses__()]
>>> actions
[<__main__.Move at 0x10fc14fd0>, <__main__.Look at 0x10fc14668>]
"
C function name-dependent segfault with Python ctypes,"$ gcc -x c test.c --shared -fvisibility=hidden -o test.so
$ python -c 'import ctypes; ctypes.cdll.LoadLibrary(""./test.so"").run()'
before
inside
after
"
Datetime to decimal to pull into matplotlib with Python,"hours = td.total_seconds() / 3600
"
Python CGI Script: Basic HTML Form With Two Submit Buttons,"<input type=""submit"" value=""Submit"" name=""Submit1"" />
<input type=""submit"" value=""Submit"" name=""Submit2"" />
"
How do I optimize Python Code?,"hour  | Occurences
21    |1
22    |2
23    |1
"
Python - order columns and compare rows in csv,"import csv
from collections import defaultdict

seen = defaultdict(list)

with open('file.csv', 'rb') as my_file:
    reader = csv.reader(my_file)
    for row in reader:
        key = (row[0], row[1], row[2])  # sender, receiver, id
        seen[key].append(row)

    with open('new.csv', 'wb') as outf:
        writer = csv.writer(outf)
        for collected in seen.values():
            if len(collected) > 1:
                writer.writerows(collected)
"
Extract a specific file from a zip archive without maintaining directory structure in python,"import os
import shutil
with zipfile.ZipFile(tDir + mainapk[0]) as z:
    with z.open(icon[1]) as zf, open(os.path.join(tDir, os.path.basename(icon[1])), 'wb') as f:
        shutil.copyfileobj(zf, f)
"
Making Text look like it's being typed in the Python Shell,"import time
Move+=[""/"",""|"",""\\"",""-""]
text = input('Text to be displayed: ')
for i in text:
    print(i, end='', flush=True)
    time.sleep(0.1)
print('\n')
"
Python JPEG to movie,"w = cvCreateVideoWriter(filename, -1, <your framerate>, 
                        <your frame size>, is_color=1)
"
"BeautifulSoup: get elements that have a certain attribute, independent of its value",">>> from bs4 import BeautifulSoup
>>> sample = '''\
... <div id=""id1"">This has an id</div>
... <div>This has none</div>
... <div id=""id2"">This one has an id too</div>
... <div>But this one has no clue (or id)</div>
... '''
>>> soup = BeautifulSoup(sample)
>>> soup.find_all('div', id=True)
[<div id=""id1"">This has an id</div>, <div id=""id2"">This one has an id too</div>]
>>> soup.find_all('div', id=False)
[<div>This has none</div>, <div>But this one has no clue (or id)</div>]
>>> soup.select('div[id]')
[<div id=""id1"">This has an id</div>, <div id=""id2"">This one has an id too</div>]
"
cartopy set_xlabel set_ylabel (not ticklabels),"import matplotlib.pyplot as plt
import cartopy
ax = plt.axes(projection=cartopy.crs.PlateCarree())
ax.add_feature(cartopy.feature.COASTLINE)
gridlines = ax.gridlines(draw_labels=True)
# this would not function, due to the gridliner
# ax.set_xlabel('lon')
# ax.set_ylabel('lat')
plt.show()
"
How to get the filtered dataframe for calculations while retaining the original one in pandas?,"In [44]: df[bf.all(1)]
Out[44]: 
   A  B
0  a  e

[1 rows x 2 columns]
"
Turn off auto-closing parentheses in ipython,"require(['base/js/namespace', 'base/js/events'], function(IPython, events) {
  events.on('app_initialized.NotebookApp', function() {
    IPython.CodeCell.options_default.cm_config.autoCloseBrackets = false;
  });
});
"
More elegant way of declaring multiple variables at the same time,">>> flags = dict.fromkeys([""a"", ""b"", ""c""], True)
>>> flags.update(dict.fromkeys([""d"", ""e""], False))
>>> print flags
{'a': True, 'c': True, 'b': True, 'e': False, 'd': False}
"
switch database by ip or something else,"export VARNAME='value'
"
python writing a list to a file incorrectly,"new.append(line.strip('*\n'))
new.append('*')
"
Decide when to refresh OAUTH2 token with Python Social Auth,"def refresh_token(self, token, *args, **kwargs):
    """"""
    Overridden method to add extra info during refresh token.
    Args:
        token (str): valid refresh token
    Returns:
        dict of information about the user
    """"""
    response = super(EdxOrgOAuth2, self).refresh_token(token, *args, **kwargs)
    response['updated_at'] = datetime.utcnow().timestamp()
    return response
"
"boost python, using a namespace other than main global","object main_module = import(""__main__"");
object main_namespace = main_module.attr(""__dict__"");
"
How can I quickly set a Python bytearray to 0,"In [64]: s = bytearray('Hello World')

In [65]: s
Out[65]: bytearray(b'Hello World')

In [66]: import string

In [67]: zero = string.maketrans(buffer(bytearray(range(256))),buffer(bytearray(256)))

In [68]: s.translate(zero)
Out[68]: bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')
"
Could as_view() (for class-based views) be implemented in a decorator?,"import re

class Views(object):
    """"""Empty object for holding as_view method""""""
views = Views()

def convert_name(name):
    """"""convert CapWords into cap_words""""""
    return name[0].lower() + re.sub(r'([A-Z])', lambda m:""_"" + m.group(0).lower(), name[1:])

def as_view(views):
    """"""Adds decorated class-based views' as_view methods to views container""""""
    def decorator(cls):
        name = convert_name(cls.__name__)
        setattr(views, name, cls.as_view)
        return cls
    return decorator
"
"Python - Narrowing down itertools permutations results with ""if"" statements. How to with repeated element?","observed_comma_indices = [index for index, p in enumerate(perm) if p == "",""]
if comma_indices == observed_comma_indices:
    lst.append(perm)
"
"Finding week of year with week ending on Saturday and first week containing atleast 4 days, in python","(arbitrary_day - first_sunday) // timedelta(days=7)
"
Python: class static member pointing to itself?,"class ShortRib(object):
    def __init__(self, owner):
        self.owner = owner

class Cow(object):
    shortRib = None
    def __new__(cls, *args, **kwargs):
        if cls.shortRib == None:
            cls.shortRib = ShortRib(cls)
        return super(Cow, cls).__new__(cls, *args, **kwargs)

Cow()
Cow.shortRib.owner
"
Preceding Word Length,"In [61]: l = [1,2,3,4]

In [62]: it = iter(l)

In [63]: next(it)
Out[63]: 1

In [64]: next(it)
Out[64]: 2
# consumed two of four so we are left with two
In [65]: list(it)
Out[65]: [3, 4]
"
Query for items using filter for most recent entry in a related table,"destroyedStatus = Status.objects.get(description=""destroyed"")
clients_destroyed_items = StorageItem.objects.filter(client=client, 
    itemstatushistory__status=destroyedStatus)
"
What's the difference between subprocess Popen and call (how can I use them)?,"returncode = call(*args, **kwargs) 
"
2D NumPy array comparison in given range,">>> a = np.array([[1,2,1],[2,3,2],[2,3,4],[1,2,3],[1,3,2]])
>>> b = np.array([[1,2,1],[2,3,2],[2,3,4],[1,2,3],[1,3,2]])
>>> abs(a-b)
array([[0, 0, 0],
       [0, 0, 0],
       [0, 0, 0],
       [0, 0, 0],
       [0, 0, 0]])
>>> abs(a-b) <= 1
array([[ True,  True,  True],
       [ True,  True,  True],
       [ True,  True,  True],
       [ True,  True,  True],
       [ True,  True,  True]], dtype=bool)
>>> (abs(a-b) <= 1).all()
True
"
"Python, checksum of a dict","hash(repr(d))
"
Possible to use wide-character members in Python extension objects?,"int i = 0;
Py_ssize_t size = PyUnicode_GetSize(self->wtext);
Py_UNICODE *chars = PyUnicode_AS_UNICODE(self->wtext);
for (i = 0; i < size; i++) {
    // use chars[i]
    ...
"
I need help fixing this hangman function,"def hangman(secret, guessCount=7):
    assert guessCount > 0  # Never really good to hard code magic numbers.

    w = ['_'] * len(secret)  # Make 'w' a list instead because list is mutable
    while guessCount > 0:
        guess = input(""Guess: "")
        if guess in secret:
            indices = indexes(secret, guess)  # I'm guessing indexes is defined elsewhere?
            for i in indices:
                w[i] = guess  # Make it explicit. secret[i] == guess anyway.
            print("""".join(w))  # Join w into a word
        else:
            guessCount -= 1  # More concise
            print(""Incorrect. "", guessCount, "" incorrect guesses remaining."")
"
Null a dictionary inside a function in python,"a = None
"
Pandas Datframe1 search for match in range of Dataframe2,"def temp(row):
    index = df2[((row-df2).abs() < .3).all(axis=1)].index
    return df2.loc[index[0], :] if len(index) else [None]*df2.shape[1]
"
How to iterate through alpha and numeric numbers,"len2 = itertools.product(numbers, alnum) # length 2
len3 = itertools.product(numbers, alnum, alnum) # length 3
...
"
Spatial index/query (finding k nearest points),"> db.runCommand({geoNear: ""places"", near: [-90, 50], spherical: true, 
                 maxDistance: 800/6378});
(summarizing results as they're too verbose to include)
""MN""  dis: 0.087..
""WI""  dis: 0.100..
""ND""  dis: 0.120..
"
"In python, can you pass variadic arguments after named parameters?","function(bob=""Hi bob"", sally=""Hello sally"", **values)
"
How do I delete a row in Pandas dataframe when a specific column contains a value that signals to me that the row should be deleted?,"print df.loc[~(df['CBSM'] == 'Y')] 
   A CBSM  L
1  1    N  6
2  2    N  3
"
removing duplicates from a list of django models,"if somemodel not in cleaned_up_list:
    print (""SomeModel is not already in :"" cleaned_up_list)
    cleaned_up_list.append(somemodel)
"
How to read file N lines at a time in Python?,"from itertools import islice
with open(filename, 'r') as infile:
    lines_gen = islice(infile, N)
"
"Pop max value from a heapq python, Is there a max-heap in Python?","import functools

@functools.total_ordering
class ReverseCompare(object):
    def __init__(self, obj):
        self.obj = obj
    def __eq__(self, other):
        return isinstance(other, ReverseCompare) and self.obj == other.obj
    def __le__(self, other):
        return isinstance(other, ReverseCompare) and self.obj >= other.obj
    def __str__(self):
        return str(self.obj)
    def __repr__(self):
        return '%s(%r)' % (self.__class__.__name__, self.obj)
"
print list of dictonaries to template,"template_var['settings'] = settings
"
Optimizing MasterMind Code and string operations in python,">>> a = [1, 2, 3, 4]
>>> b = [5, 6, 7, 8]
>>> zip(a, b)
[(1, 5), (2, 6), (3, 7), (4, 8)]
"
How do I multiply corresponding elements in numpy arrays efficiently?,">>> %timeit (y[:, np.newaxis] * x.reshape((-1, n))).flatten()
100000 loops, best of 3: 7.4 µs per loop

>>> %timeit (x.reshape((n, -1), order='f') * y).ravel('f')
100000 loops, best of 3: 4.98 µs per loop
"
Cleaner way to move renamed files when walking over directory,"if first_check != None:
"
Convert a deafultdict to numpy matrix or a CSV of 2D Matrix,"items = list(data.items())  # list only needed for python3
vs = [v for (i,j), v in items]
ii = [i for (i,j), v in items]
j j= [j for (i,j), v in items]
matrix = scipy.sparse.coo_matrix((vs, (ii, jj))
"
Formatting a tuple of floats,">>> pi=3.14159265359
>>> e=2.71828182
>>> z=(pi,e)
>>> print ' '.join(format(f, '.3f') for f in z)
3.142 2.718
"
"For list of dicts: merge same key values, sum another diff. values, count each merge iteration +1","{'112801710': {'comment_likes': 5, 'comments_left': 4}, '52879933': {'comment_likes': 0, 'comments_left': 2}}
"
How to get current day of the week in vimscript?,":nnoremap <F5> ""=strftime(""%w"")<CR>P
"
Is it possible to hierarchically label a matplotlib (pyplot) bar plot?,"In [143]: ax = df.plot(kind='bar')

In [144]: ax.set_xticklabels(['|'.join(t) for t in df.index])
"
How to calculate python 2D scatter points occupied area,"import matplotlib
import matplotlib.pyplot as plt

import numpy


x = numpy.random.normal(size=10000)
y = numpy.random.normal(size=10000)

fig = plt.figure()
s = fig.add_subplot(1, 1, 1, aspect=1)
s.set_xlim(-4, 4)
s.set_ylim(-4, 4)
s.scatter(x, y)
fig.savefig('t1.png')
"
Is there a way to create subclasses on-the-fly?," SubClass = type('SubClass', (EntityResource,), {'A': 1, 'B': 2})
"
How can I change the display text of a MenuItem in Gtk2?,"menuitem = gtk.MenuItem('This is the label')
"
Python requests module url encode,">>> from urllib import unquote
>>> unquote('%7B%22rajNames%22%3A%5B%22WAR%22%5D%7D')
'{""rajNames"":[""WAR""]}'
"
PyQt4: why do we need to pass class name in call to super(),"super(NameOfCurrentClass, self)
"
How to define a system-wide alias for a Python script?,"ln -s /Users/xyz/long/absolute/path/to/script.py /usr/bin/script.py
"
How can I do the following comparison without having to write 20 if-statements or making 20 lists/dictionaries?,"acids = [codon_lookup[codon] for codon in mutated_codon]
"
Is there a cross-platform way to open a file browser in Python?,"if sys.platform=='win32':
    os.startfile(d)
"
"making python programs ""chat"" via pipe","process.stdin.write(""4\n"")    
process.stdin.flush()    
output = process.stdout.readline()    
print output
"
Save game feature for Python?,"import pickle
stats = {'hp': 150, 'mp': 100, 'speed': 15}
pickle.dump(stats, open('stats.p', 'wb'))
"
Numpy Array Broadcasting with different dimensions,">>> a.dot(v)
array([[ 3.,  3.,  3.],
       [ 3.,  3.,  3.],
       [ 3.,  3.,  3.]])
"
"Proper use of ""with"" together with stdout in Python","with func(fname) as fhandle:
    ... your code ...
"
How do I get the IP address from a http request using the requests library?,"('2a00:1450:4009:809::1017', 80, 0, 0)
"
Efficiently page query results,"seenIds = [ 3, 5 ];
lastScore = 5;
"
Python searching for number of IPs in Apache log file,"def ips_in_log(log_name):
   with open(log_name, 'r') as f:
      log = f.read()
   ipcount = len(re.findall(r'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}',log))
   print(ipcount)
"
TTK Notebook Share data between imported tabs,"import Tkinter as tk
import ttk
from page1 import Page1
from page2 import Page2

class Example(tk.Frame):
    def __init__(self, parent):
        tk.Frame.__init__(self, parent)

        self.notebook = ttk.Notebook(self)
        self.notebook.pack(fill=""both"", expand=True)

        page1 = Page1(self.notebook)
        page2 = Page2(self.notebook)
        self.notebook.add(page1, text=""Page 1"")
        self.notebook.add(page2, text=""Page 2"")

if __name__ == ""__main__"":
    root = tk.Tk()
    Example(root).pack(fill=""both"", expand=True)
    root.mainloop()
"
generating a grid in a function,">>> nodes = 3
>>> res=[[0]*nodes]*nodes
>>> res
[[0, 0, 0], [0, 0, 0], [0, 0, 0]]
>>> res[0][0] = 'echo'
>>> res
[['echo', 0, 0], ['echo', 0, 0], ['echo', 0, 0]]
"
"python generator ""send"" function purpose?","@defer.inlineCallbacks
def doStuff():
    result = yield takesTwoSeconds()
    nextResult = yield takesTenSeconds(result * 10)
    defer.returnValue(nextResult / 10)
"
Write text at the 8th line in file,"commentCounter = 0
"
How to read part of the line into array with python-pandas?,">>> df
                                             attributes
3100   [6.5e-05, 0.00207, 0.000683, 0.000869, 0.001768]
3211  [0.003847, 0.002695, 0.025881, 0.001689, 0.01251]
1211  [0.006311, 0.002108, 0.000508, 0.000301, 0.022...

>>> df.loc[3100, 'attributes']
array([  6.50000000e-05,   2.07000000e-03,   6.83000000e-04,
         8.69000000e-04,   1.76800000e-03])
"
Python method available for both instantiated/uninstantiated class,"class Foo(object):
    @class_or_instance_method
    def details(cls_or_self, id=None):
        if isinstance(cls_or_self, type):
            # called on a class
        else:
            # called on an instance
"
Multiple values for same variable when designing Objects (use of self in Python),"A Person is created!
Tim
temp
"
Is it possible to implement a break statement using a user input in python,"#guess_999.py
import sys
import os
import fcntl
import time

fl = fcntl.fcntl(sys.stdin.fileno(), fcntl.F_GETFL)
fcntl.fcntl(sys.stdin.fileno(), fcntl.F_SETFL, fl | os.O_NONBLOCK)

time_started = time.time()
while True:
    try:
        stdin = sys.stdin.read()
        if ""999"" in stdin:
            print ""It took %f seconds"" % (time.time() - time_started)
            break
    except IOError:
        pass
"
Python how to find out the unique elements in a text file and output in another text file,"with open('input_file','r') as f:                                                                                                                                                                                                                                                 
    distinct_content=set(f.readlines())                                                                                                                                                                                                                                                   

to_file=""""                                                                                                                                                                                                                                                                       
for element in distinct_content:                                                                                                                                                                                                                                                               
    to_file=to_file+element                                                                                                                                                                                                                                                           
with open('output_file','w') as w:                                                                                                                                                                                                                                                  
    w.write(to_file) 
"
Create a new array from numpy array based on the conditions from a list,"array([('a1v1', 'a2v1', 'a3v1', 'a4v1', 'a5v1'),
       ('a1v1', 'a2v2', 'a3v1', 'a4v1', 'a5v1'),
       ('a1v1', 'a2v3', 'a3v2', 'a4v1', 'a5v2')], 
      dtype=[('a1', '|S4'), ('a2', '|S4'), ('a3', '|S4'), ('a4', '|S4'), ('a5', '|S4')])
"
Finding a string pattern and printing the following characters for multiple occurrences in Python 3,">>> [seq[index-3:index+5] for index in [i.start() for i in re.finditer('ga', seq)]]
['tcagagcc', 'cccgagcg', 'agcgactt', 'gcagaaac', 'gccgaccc']
"
converting unix timestamp to local time,"import datetime

now = datetime.datetime.now().timestamp()
"
"Pandas boolean indexing vs comparision of two lists: Same (?) methods, different results","print(set(nee))
# set(['A', 'A2'])

print(set(nejsou.ASS.tolist()))
# set(['A', 'AF2', 'AF'])
"
Working with Hashes,"hash = {
  ""abc"" => 1,
  ""def"" => 2,
}

new_hash = {}

hash.each_pair do |key, val|
  key.each_char do |char|
    new_hash[char] = val
  end
end

p new_hash

--output:--
{""a""=>1, ""b""=>1, ""c""=>1, ""d""=>2, ""e""=>2, ""f""=>2}
"
"Generating Ngrams (Unigrams,Bigrams etc) from a large corpus of .txt files and their Frequency","import nltk
from nltk import word_tokenize
from nltk.util import ngrams
from collections import Counter

text = ""I need to write a program in NLTK that breaks a corpus (a large collection of \
txt files) into unigrams, bigrams, trigrams, fourgrams and fivegrams.\ 
I need to write a program in NLTK that breaks a corpus""
token = nltk.word_tokenize(text)
bigrams = ngrams(token,2)
trigrams = ngrams(token,3)
fourgrams = ngrams(token,4)
fivegrams = ngrams(token,5)

print Counter(bigrams)

Counter({('program', 'in'): 2, ('NLTK', 'that'): 2, ('that', 'breaks'): 2,
 ('write', 'a'): 2, ('breaks', 'a'): 2, ('to', 'write'): 2, ('I', 'need'): 2,
 ('a', 'corpus'): 2, ('need', 'to'): 2, ('a', 'program'): 2, ('in', 'NLTK'): 2,
 ('and', 'fivegrams'): 1, ('corpus', '('): 1, ('txt', 'files'): 1, ('unigrams', 
','): 1, (',', 'trigrams'): 1, ('into', 'unigrams'): 1, ('trigrams', ','): 1,
 (',', 'bigrams'): 1, ('large', 'collection'): 1, ('bigrams', ','): 1, ('of',
 'txt'): 1, (')', 'into'): 1, ('fourgrams', 'and'): 1, ('fivegrams', '.'): 1,
 ('(', 'a'): 1, (',', 'fourgrams'): 1, ('a', 'large'): 1, ('.', 'I'): 1, 
('collection', 'of'): 1, ('files', ')'): 1})
"
Average time series with missing time value,"In [459]: df
Out[459]: 
             0         1
0  1977.262917  0.965209
1  1977.282917  0.969835
2  1977.302917  0.970732
3  1977.322917       NaN
4  1977.342917       NaN
5  1977.362917  0.948716
6  1977.382917       NaN
7  1977.402917  0.945410

In [460]: df.interpolate(method='linear')
Out[460]: 
             0         1
0  1977.262917  0.965209
1  1977.282917  0.969835
2  1977.302917  0.970732
3  1977.322917  0.963393
4  1977.342917  0.956055
5  1977.362917  0.948716
6  1977.382917  0.947063
7  1977.402917  0.945410

In [462]: df.interpolate(method='nearest')
Out[462]: 
             0         1
0  1977.262917  0.965209
1  1977.282917  0.969835
2  1977.302917  0.970732
3  1977.322917  0.970732
4  1977.342917  0.948716
5  1977.362917  0.948716
6  1977.382917  0.948716
7  1977.402917  0.945410
"
From QVariant to Integer and String,"if myVariant.canConvert(QMetaType.Int):
    value = myVariant.toInt()
elif myVariant.cannConvert(QMetaType.QString)
    value = myVariant.toString()
"
Detecting if a file is a video in Python?,"regex2.dll from sourceforge.net/projects/gnuwin32/files/regex/
zlib1.dll from sourceforge.net/projects/gnuwin32/files/zlib/
magic1.dll from sourceforge.net/projects/gnuwin32/files/file/
"
Printing text once sprite meets position,"if block.rect.y >= 600:
"
Pandas to form clusters based on diff column,"In [13]: g.Coef.idxmax()
Out[13]:
Time
0       1
1       2
2       3
3       4
4       5
Name: Coef, dtype: int64
"
Subtracting rows in panda having different column types,"df.loc[:,'1Y':'3Y'] = df.loc[:,'1Y':'3Y'].applymap(lambda x: float(x.replace("","",""."")))
df2 = df.set_index('Date').groupby('Currency').apply(lambda x: x.loc[:,'1Y':'3Y'].diff()).fillna(0)
print df2
"
django limiting file size and file format in view,"CONTENT_TYPES = ['image']
MAX_UPLOAD_PHOTO_SIZE = ""2621440""
content = request.FILES.getlist(""file"")
content_type = content.content_type.split('/')[0]
if content_type in CONTENT_TYPES:
    if content._size > MAX_UPLOAD_PHOTO_SIZE:
        #raise size error
    if not content.name.endswith('.jpg'):
       #raise jot jpg error
else:
    #raise content type error
"
Find the equilibrium point in a numpy array,"class SplitpointTest(unittest.TestCase):
    def testFloatRounding(self):
        # Due to rounding error, the cumulative sums for these inputs are
        # [1.1, 3.3000000000000003, 3.3000000000000003, 5.5, 6.6]
        # and [0.1, 0.7999999999999999, 0.7999999999999999, 1.5, 1.6]
        # Note that under default settings, numpy won't display
        # enough precision to see that.
        self.assertEquals(2, splitpoint([1.1, 2.2, 1e-20, 2.2, 1.1]))
        self.assertEquals(2, splitpoint([0.1, 0.7, 1e-20, 0.7, 0.1]))

    def testIntRounding(self):
        self.assertEquals(1, splitpoint([1, 1, 1]))
    def testIntPrecision(self):
        self.assertEquals(2, splitpoint([2**60, 1, 1, 1, 2**60]))
    def testIntMax(self):
        self.assertEquals(
            2,
            splitpoint(numpy.array([40, 23, 1, 63], dtype=numpy.int8))
        )

    def testIntZeros(self):
        self.assertEquals(
            4,
            splitpoint(numpy.array([0, 1, 0, 2, 0, 2, 0, 1], dtype=int))
        )
    def testFloatZeros(self):
        self.assertEquals(
            4,
            splitpoint(numpy.array([0, 1, 0, 2, 0, 2, 0, 1], dtype=float))
        )
"
How to choose a random input from 7 given input?,"import random
print ""WELCOME TO LOTTERY HACK MACHINE!!!\n""
today = int(raw_input( ""Please enter today's date: "" ))
if today<=31:
    print ""Please enter the 4-digit prize winning lottery number for the last 7 days""
    y = raw_input( ""Enter 7 numbers separated by commas: "" )
    input_list = y.split(',')
    numbers = [list(x.strip()) for x in input_list]
    choice = random.choice(numbers)
    random.shuffle(choice)
    print ''.join(choice)

elif today>31:
    print ""A month has only 31 days ;P""
"
Convert redundant array to dict (or JSON)?,"Output
{'a': {10: {1: 0.1, 2: 0.2}, 20: {2: 0.3}}, 'b': {10: {1: 0.4}, 20: {2: 0.5}}}
"
It is possible to execute a Python script that is on a Raspberry Pi using Web2Py which is installed on an other machine?,"// server.py

def leds_set(state):
  import paramiko
  ssh = paramiko.SSHClient()
  ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
  ssh.connect('127.0.0.1', username='ahah', password='lol')
  if state:
    state = 'on'
  else:
    state = 'off'
  stdin, stdout, stderr = ssh.exec_command('python /home/ahah/ledson.py ' + state)
  print(stdin, stdout, stderr)
  return dict()

// view.html
{{extend 'layout.html'}}

<form>
<input type=""button"" onclick=""leds_set(True);"" value=""leds on""/>
<input type=""button"" onclick=""leds_set(False);"" value=""leds off""/>
</form>
"
How to programmatically add bindings to the current class scope in Python?,"class AgentMeta(type):
    def __new__(meta, classname, bases, classdict):
        for clsname in classdict['__states__']:
            classdict[clsname] = type(clsname, (State,), {})
        return type.__new__(meta, classname, bases, classdict))
"
How do I read only some of the line using line.rstrip,"if line.rstrip() == mysales + date + file:
"
"Specifics of converting a custom __repr__, __str__ on a custom python class","class ClusterAssignment(object):

    def __str__(self):
        return ""[string]""

    __repr__ = __str__
"
Fastest way to compute upper-triangular matrix of geometric series (Python),"In [12]: n = 5

In [13]: b = 0.5

In [14]: toeplitz(b**np.arange(n), np.zeros(n)).T
Out[14]: 
array([[ 1.    ,  0.5   ,  0.25  ,  0.125 ,  0.0625],
       [ 0.    ,  1.    ,  0.5   ,  0.25  ,  0.125 ],
       [ 0.    ,  0.    ,  1.    ,  0.5   ,  0.25  ],
       [ 0.    ,  0.    ,  0.    ,  1.    ,  0.5   ],
       [ 0.    ,  0.    ,  0.    ,  0.    ,  1.    ]])
"
"Inheritance in Python, init method overrriding","class Data(LogFile):
    def __init__(self,log_file):
        super(Data, self).__init__(log_file)
        self._data = ''

class DataNET(Data):
    def __init__(self, logfile):
        super(DataNET, self).__init__(logfile)
        self._data = {}
"
crawling imdb database using python and lxml,"movie['title'] = hxs.xpath('//*[@id=""overview-top""]/h1/span[1]/text()')[0].strip()
print movie['title']
"
New lines with Python's ConfigParser?,"cleaned = [item.strip() for item in eg.split(',')]
print cleaned  # ['item 1', 'item 2', 'item 3']
"
Instantiating object in Python same as Java using jython,"from java.lang import Math
"
Merge list of timestamps in Python,">>> for bucket in result:
...     print(bucket)
...
[datetime.datetime(2014, 4, 11, 8, 0)]
[datetime.datetime(2014, 4, 11, 9, 0, 35), datetime.datetime(2014, 4, 11, 9, 0, 40)]
[datetime.datetime(2014, 4, 11, 11, 0)]
"
Ironworker job done notification,"@app.route(""/worker"", methods=[""GET"", ""POST""])
def worker():
#refresh the interface or whatever is necessary
    if flask.request.method == 'POST':
        return 'Worker endpoint reached'
    elif flask.request.method == 'GET':
        worker = IronWorker()
        task = worker.queue(code_name=""hello"", payload={""WORKER_DB_URL"": app.config['WORKER_DB_URL'],
                            ""WORKER_CALLBACK_URL"": app.config['WORKER_CALLBACK_URL']})
        details = worker.task(task)
        flask.flash(""Work queued, response: "", details.status)
        return flask.redirect('/')
"
Creating sublist from a give list of items,"Suppose a is the new item
for each j:
    if M[j] != 0:
        M_next[j+a] = M[j+a] + M[j]
"
Scraping website that uses javascript,"{u'parameters': {u'LeagueID': u'00',
                 u'PlayerID': 2544,
                 u'Season': u'2013-14',
                 u'SeasonType': u'Regular Season'},
 u'resource': u'playergamelog',
 u'resultSets': [{u'headers': [u'SEASON_ID',
                               u'Player_ID',
                               u'Game_ID',
                               u'GAME_DATE',
                               u'MATCHUP',
                               u'WL',
                               u'MIN',
                               u'FGM',
                               u'FGA',
                               u'FG_PCT',
                               u'FG3M',
                               u'FG3A',
                               u'FG3_PCT',
                               u'FTM',
                               u'FTA',
                               u'FT_PCT',
                               u'OREB',
                               u'DREB',
                               u'REB',
                               u'AST',
                               u'STL',
                               u'BLK',
                               u'TOV',
                               u'PF',
                               u'PTS',
                               u'PLUS_MINUS',
                               u'VIDEO_AVAILABLE'],
                  u'name': u'PlayerGameLog',
                  u'rowSet': [[u'22013',
                               2544,
                               u'0021301192',
                               u'APR 12, 2014',
                               u'MIA @ ATL',
                               u'L',
                               37,
                               10,
                               22,
                               0.455,
                               3,
                               7,
                               0.429,
                               4,
                               8,
                               0.5,
                               3,
                               5,
                               8,
                               5,
                               0,
                               1,
                               3,
                               2,
                               27,
                               -13,
                               1],
                              [u'22013',
                               2544,
                               u'0021301180',
                               u'APR 11, 2014',
                               u'MIA vs. IND',
                               u'W',
                               35,
                               11,
                               20,
                               0.55,
                               2,
                               4,
                               0.5,
                               12,
                               13,
                               0.923,
                               1,
                               5,
                               6,
                               1,
                               1,
                               1,
                               2,
                               1,
                               36,
                               13,
                               1],
                              [u'22013',
                               2544,
                               u'0021301167',
                               u'APR 09, 2014',
                               u'MIA @ MEM',
                               u'L',
                               41,
                               14,
                               23,
                               0.609,
                               3,
                               5,
                               0.6,
                               6,
                               7,
                               0.857,
                               1,
                               5,
                               6,
                               5,
                               2,
                               0,
                               5,
                               1,
                               37,
                               -8,
                               1],
    ...
}
"
Python debugger in Emacs: set keybindings similar to perldb?,"(define-key gud-mode-map ""x"" (lambda () (interactive)  (insert ""print "")))
"
"Match and index all substrings, including overlapping ones","[[9, 17], [24, 32]]
['GTTTGCAG', 'GTTTGCAG']
"
Serving simple image with App Engine django patch?,"<img src=""/my_app/media/a.jpg"" />
"
How to pull information from classes through raw input,"from weapons import Sword, Bow, Axe, MachinneGun
from medicine import HealthPotion, MaxHealthPotion, Poison, Antidote
"
Recursive Relationship with a Description in Django Models,"class DupeSeries(Model):
    description = CharField(...)
    members = ManyToManyField(""image"", related_name=""dupes"", ...)
"
"pandas xlsxwriter, format header","pd.formats.format.header_style = None
"
Get multiple individual values from generator in Python,"first = nth(iteration, 0)
tenth = nth(iteration, 8)  # since we've already taken one
hundredth = nth(iteration, 89)  # since we've already taken ten
# etc
"
replace lines in a text file from another text file,"line = ""83,  44.257790830341,  58.187003960661,  50.0""
first_char = line.split(',')[0].strip() #first char is 83
# lets check whether to replace it or not
if first_char in replacement_data.keys(): 
    # if key exists, we have to replace
    line = replacement_data[first_char]
    print line # so that it writes to file
"
Detect process abort,"#include <assert.h>

int main() {
    assert(0);
}
"
Finding dict objects with duplicated key values in array,"{'id': 1234, 'title': 'apple'}
{'id': 1235, 'title': 'orange'}
{'id': 1236, 'title': 'apple 2'}
{'id': 1237, 'title': 'kiwi'}
"
Simple Image viewer,"def openimage():
    picfile = tkFileDialog.askopenfilename()
    if picfile:
        canvas.img = ImageTk.PhotoImage(file=picfile)
        canvas.create_image(0,0, anchor=NW, image=canvas.img) 
"
map array of numbers to rank efficiently in Python,"import numpy as np

def rank1(x):
    # Sort values i = 0, 1, 2, .. using x[i] as key
    y = sorted(range(len(x)), key = lambda i: x[i])
    # Map each value of x to a rank. If a value is already associated with a
    # rank, the rank is updated. Iterate in reversed order so we get the
    # smallest rank for each value.
    rank = { x[y[i]]: i for i in xrange(len(y) -1, -1 , -1) }
    # Remove gaps in the ranks
    kv = sorted(rank.iteritems(), key = lambda p: p[1])
    for i in range(len(kv)):
        kv[i] = (kv[i][0], i)
    rank = { p[0]: p[1] for p in kv }
    # Pre allocate a array to fill with ranks
    r = np.zeros((len(x),), dtype=np.int)
    for i, v in enumerate(x):
        r[i] = rank[v]
    return r

def rank2(x):
    x_sorted = sorted(x)
    # creates a new list to preserve x
    rank = list(x)
    for v in x_sorted:
        rank[rank.index(v)] = x_sorted.index(v)
    return rank
"
Generating random strings with few characters,"['2', '8', 'G', 'o', 'U', 'e', 'K', 'f', 'w', '7']

>>> ''.join(gen_str)

'28GoUeKfw7'
"
Split a key that is a string of numbers into single digit keys in Python,"{4: {3: {8: {8: {1: {'words': ['got']},
                 4: {6: {4: {'words': ['getting']}}}}}}},
 8: {2: {7: {8: {6: {2: {'words': ['Taruma', 'Varuna']}}}}}}}
"
Replacing selected elements in a list in Python,"def elements_replaced(lst, new_element, indices):
    return [new_element if i in indices else e for i, e in enumerate(lst)]
"
Python-social-auth how can i get uid fullname etc. with facebook,"social = user.social_auth.get(provider='facebook')
userid = social.uid
first_name = social.extra_data['first_name']
last_name = social.extra_data['last_name']
"
Long elif chains vs dictionary with exec(),"Button( ..., text=""knight"", command=foo.knight)
"
"What is an ElementTree object exactly, and how can I get data from it?",">>> for line in tree.xpath('.//s:sp[@who=""Barnardo""]/s:l/text()', namespaces=nsmap):
...     print line.strip()
... 
Who's there?
Long live the king!
He.
'Tis now struck twelve; get thee to bed, Francisco.
Have you had quiet guard?
Well, good night.
If you do meet Horatio and Marcellus,
The rivals of my watch, bid them make haste.
Say,
What, is Horatio there?
Welcome, Horatio: welcome, good Marcellus.
I have seen nothing.
Sit down awhile;
And let us once again assail your ears,
That are so fortified against our story
What we have two nights seen.
Last night of all,
When yond same star that's westward from the pole
Had made his course to illume that part of heaven
Where now it burns, Marcellus and myself,
The bell then beating one,

In the same figure, like the king that's dead.
Looks 'a not like the king? mark it, Horatio.
It would be spoke to.
See, it stalks away!
How now, Horatio! you tremble and look pale:
Is not this something more than fantasy?
What think you on't?
I think it be no other but e'en so:
Well may it sort that this portentous figure
Comes armed through our watch; so like the king
That was and is the question of these wars.
'Tis here!
It was about to speak, when the cock crew.
"
python parse Json for all null values,"#!/usr/bin/env python

# used to parse the json text
import json
with open('json.txt', 'r') as f:
    d = json.load(f)
# define list of what your consider as ""missing""
missings = [None, """"]

# recursive function to collect missing paths and alter the aggregator list
# make sure to add cases if needed
def aggregate_missing_paths(aggregator, path, item):
    if isinstance(item, list):
        # check all list items
        map(lambda x: aggregate_missing_paths(aggregator, path, x), item)
    if isinstance(item, dict):
        # check all dict items
        map(lambda kv: aggregate_missing_paths(aggregator, path + '.' + kv[0], kv[1]), item.iteritems())
    if item in missings:
        # alter list to cotain path to missing
        aggregator.append(path)

aggregator = []
aggregate_missing_paths(aggregator, 'root', d)
print aggregator
"
Print dict items in alphabet order,"#Additional import
from collections import OrderedDict
channels = OrderedDict()
for elem in tv_elem.getchildren():
    if elem.tag == 'channel':
       channels[elem.attrib['id']] = self.load_channel(elem)
       for channel_value in channels.items():
           print channel_value.get_display_name()
"
adding two items in a list to make into one item,"deposits = [""0434512"", ""03145234"", ""012341347"", ""0511112345"", ""0475746"",""03654534"", ""02112""]
deposits.sort()

from collections import OrderedDict

mydict = OrderedDict()

for i in deposits:
    mydict[i[:2]] = 0

for i in deposits:
    mydict[i[:2]] += float(i[2:])/100
"
How can I diff and patch/merge strings instead of files?,"merge = self.inline_merge.diff_apply_bulk(text3, [diff1, diff2], reverse=True)
"
printing variables in python using % and variable name,">>> print ""The number is {number} and the text is {text}"".format(number=a, text=b)
The number is 1.2 and the text is hi
"
Same name regular and property functions under the same class in python,"f = foo()
f.x.extend([1,2,3])

print f.get_x[0] # 1
print f.get_x(1) # 2
print f.x(2)     # 3 
"
CSV of Distances to Triangular Distance Matrix in Python,"id_to_name = dict((id, name) for name, id in name_to_id.iteritems())
"
Selenium - get all iframes in a page (even nested ones)?,"frametree = 
{'child1' : 'framepath' : [], 'children' : {'child1.1' : 'framepath' : ['child1'], 'children' : {...etc}}, 
 'child2' : 'framepath' : [], 'children' : {'child2.1' : 'framepath' : ['child2'], 'children' : {...etc}}}
"
what's Python asyncio.Lock() for?,"def parse_stuff():
    stuff = yield from get_stuff()
    # do some parsing

def use_stuff():
    stuff = yield from get_stuff()
    # use stuff to do something interesting

def do_work():
     out = yield from aiohttp.request(""www.awebsite.com"")
     # do some work with out


tasks = [
     asyncio.async(parse_stuff()),
     asyncio.async(use_stuff()),
     asyncio.async(do_work()),
]
loop = asyncio.get_event_loop()
loop.run_until_complete(asyncio.wait(tasks))
"
Python Sleep is way off,"import time

timestamp = time.time()
while time.time() < timestamp + 10:
    print(""start loop at "" + str(i))
    try:
        if self.driver.find_element_by_link_text(text).is_displayed():
            break
    except:
        print(""pass"")
        pass
else:
    print(""failing on timeout"")
    self.fail(""time out"")
"
python run shell script that spawns detached child processes,"screen -S redisScreenName -X quit
"
Move data from key to value in Python dictionary,">>> my_dict = {'John': 23, 'Matthew': 8, 'Peter': 45}
>>> data = [{""name"": key, ""age"": value} for key, value in my_dict.items()]
>>> data
[{'age': 8, 'name': 'Matthew'}, {'age': 23, 'name': 'John'}, {'age': 45, 'name': 'Peter'}]
"
Finding index values in a pandas data frame where columns are the same,"In [51]: mask = df[['PhaseA','PhaseB','PhaseC']].isin([415,423,427,432]).all(axis=1)
In [52]: mask 
Out[52]: 
Index
2013-01-07 00:00:00    False
2013-01-07 00:01:00    False
2013-01-07 00:02:00     True
2013-01-07 00:03:00    False
2013-01-07 00:04:00     True
2013-01-07 00:05:00    False
dtype: bool

In [53]: df.ix[mask]
"
Tkinter keybinding for Control-Shift-Tab,"'<Control-ISO_Left_Tab>'.
"
Python: removing duplicates from a list of lists,"$ python -mtimeit -s'import nodup' 'nodup.donewk([[i] for i in range(12)])'
10000 loops, best of 3: 25.4 usec per loop
$ python -mtimeit -s'import nodup' 'nodup.dogroupby([[i] for i in range(12)])'
10000 loops, best of 3: 23.7 usec per loop
$ python -mtimeit -s'import nodup' 'nodup.doset([[i] for i in range(12)])'
10000 loops, best of 3: 31.3 usec per loop
$ python -mtimeit -s'import nodup' 'nodup.dosort([[i] for i in range(12)])'
10000 loops, best of 3: 25 usec per loop
"
Patten searching in Python,"Merging\s+\d+[^=]*=\s*'\w+@\w+\.\w+'\""
"
"""With"" statement in Python with multiple files to handle","from contextlib import nested

with nested(open(spam), open(eggs)) as (f_spam, f_eggs):
    # do something
"
How to create a JSON file from a NDB database using Python,"albums_dict = {}
for album in albums:
    if not album.singer_name in albums_dict:
        albums_dict[album.singer_name] = []
    albums_dict[album.singer_name].append(album.album_name)
"
How do you search each line in a file for all contents of a list?,"for target in mac_addr:
    print(""'{}' vs '{}' -> {}"".format(addr, target, addr == target))
"
Python: Find a word in a 2d list and return the intersection that is the row index and column index of that word in a list,"def find_word_horizontal (crosswords, word):
    for row_index, row in enumerate(crosswords):
        print('input: ', row_index, row)
        row_string = ''.join(row)
        print('joined row: ', row_string)
        column_index = row_string.find(word)
        if(column_index > -1):
            return [row_index, column_index]

find_word_horizontal(crosswords, word)
"
Smooth circular data,">>> plot(x, smoothed)
"
creating a output file when the output file exists in the path,"filename
filename_001
filename_002
filename_003
"
Passing SOME of the parameters to a function in python,"from functools import partial

foo2 = partial(foo, my_string=""my_string_example"")
"
How to serve static files in Flask,"from flask import Flask, request, send_from_directory

# set the project root directory as the static folder, you can set others.
app = Flask(__name__, static_url_path='')

@app.route('/js/<path:path>')
def send_js(path):
    return send_from_directory('js', path)

if __name__ == ""__main__"":
    app.run()
"
Can somebody explain why is this datetime comparsion showing output the way it is in python?,"cursor.execute(""Select LastUpdatedTime from Timing"")
# Note that I'm not converting this to a string.
lastUpdatedTime=datetime.strptime(list(cursor.fetchone())[0],'%Y-%m-%dT%H:%M:%SZ')
"
Python 2.7 how should I parse a dict object?,"for row in parse(dic):
    row = map(str, row)
    print '.'.join(row[:-1]) + '->' + row[-1]
"
Pulling data from external Active Directory in Django,"""""""
This code provide an example of how to connect to LDAP (specifically, Active Directory)
using Python 3.

Requires python-ldap3, available via the following command:
pip install git+https://github.com/rbarrois/python-ldap.git@py3
""""""

import ldap

LDAP_URI = 'ldap://ldap.server.com'
LDAP_DN = 'dc=server,dc=com'
LDAP_USERNAME = 'ldap_user@server.com'
LDAP_PASSWORD = ''
USER_NAME = 'username-to-test'
USER_IN_GROUP = 'CN=SomeGroup,DC=server,DC=com'
USER_NOT_IN_GROUP = 'CN=SomeGroupThatDoesNotExist,DC=server,DC=com'

try:
    # Connect to LDAP / Active Directory
    ldap_con = ldap.initialize(LDAP_URI)
    ldap_con.protocol_version = 3
    ldap_con.set_option(ldap.OPT_REFERRALS, 0)
    ldap_con.simple_bind_s(LDAP_USERNAME, LDAP_PASSWORD)

    # sAMAAccountName is Active Directory's 'username'
    user_filter='(&(objectCategory=person)(objectClass=user)(sAMAccountName=' + USER_NAME + '))'
    attrs = ['memberOf']

    # Perform the search.
    ldap_user = ldap_con.search_s(LDAP_DN, ldap.SCOPE_SUBTREE, user_filter, attrs)

    # Active Directory returns a list of byte literals. Convert them to strings in a more sensibly named list.
    ldap_groups = []
    for value in ldap_user[0][1]['memberOf']:
        ldap_groups.append(value.decode('utf-8'))

    # Print the LDAP groups the user above is a member of, one per line.
    for value in ldap_groups:
        print(value)

    # Perform check to see whether a user is in a group, or explicitly, a user it not in a group.
    if USER_IN_GROUP in ldap_groups:
         print(USER_NAME + "" is a member of "" + USER_IN_GROUP)
    else:
         print(USER_NAME + "" is not a member of "" + USER_IN_GROUP)

    if USER_NOT_IN_GROUP in ldap_groups:
         print(USER_NAME + "" is a member of "" + USER_NOT_IN_GROUP)
    else:
         print(USER_NAME + "" is not a member of "" + USER_NOT_IN_GROUP)

    # Unbind from LDAP / Active Directory.
    ldap_con.unbind()
except ldap.LDAPError:
    print(ldap.LDAPError)
"
Python : Compare two files,"def diff(a, b):
    y = []
    for x in a:
        if x not in b:
            y.append(x)
        else:
            b.remove(x)
    return y

with open('output_ref.txt', 'r') as file1:
    with open('output_ref1.txt', 'r') as file2:
        same = diff(list(file1), list(file2))
        print same
        print ""\n""

if '\n' in same:
    same.remove('\n')

with open('some_output_file.txt', 'w') as FO:
    for line in same:
        FO.write(line)
"
Python & URLLIB2 - Request webpage but don't wait for response,"from threading import Thread

def open_website(url):
    return urllib2.urlopen(url)

Thread(target=open_website, args=[""http://google.com""]).start()
"
Writing a print statement to a text file,"with open('output.txt', 'w') as f:
    def my_print(str):
        print str
        f.write(str + '\n')

    for filename in glob.glob('*.txt'):
        my_print(filename)
"
Code transformation from BS4 to lxml parser,"tree = xml.getroot()
nsmap = {""ix"":tree.nsmap[""ix""]}

fractions = xml.xpath(""//ix:nonFraction[contains(@name, 'AuditFeesExpenses')]"", namespaces=nsmap)

for fraction in fractions:
    print(fraction.get(""name""))
    print(fraction.text)
"
How to programmatically create new objects from rows of data in Python / Pandas,"EventObjects = {}

# and for each row and col that you want to create the objec
EventObjects[worksheet.cell(row, column).value] = Event(etc..)
"
Python: Optimising a list comprehension which compares two integers,"import collections as coll
import itertools

add_dict = coll.defaultdict(list)
for atom_1, atom_2 in itertools.product(atoms_1, atoms_2):
    if atom_1 == atom_2: continue
    (atom_min, atom_max) = (atom_1, atom_2) if atom_1 < atom_2 else (atom_2, atom_1)
    add_dict[atom_min].append(atom_max)
"
How to treat a hex as string?,">>> str(0x61cc1000)
'1640763392'  # int value of the hex number as a string
"
How to fit a double Gaussian distribution in Python?,"params = [c1, mu1, sigma1, c2, mu2, sigma2]
"
How To Change Lists of Unicode to ASCII,">>> x = [u'B', u'84']
>>> x
[u'B', u'84']
>>> x[0]
u'B'
>>> x[1]
u'84'
>>> str(x[0])
'B'
>>> str(x[1])
'84'
"
"Python PIL - changing colour profile to untagged RGB on crop, scale and save","def scale(self, image):
    images = []

    image.seek(0)

    try:
        im1 = PIL.open(image)
        icc_profile = im1.info.get(""icc_profile"")
    except IOError, e:
        logger.error(unicode(e), exc_info=True)

    images.append({""file"": image, ""url"": self.url, ""size"": ""original""})

    for size in IMAGE_WEB_SIZES:
        d = cStringIO.StringIO()
        try:
            im = crop(image, size[""width""], size[""height""])

            im.save(d, ""JPEG"", icc_profile=icc_profile)
            images.append({""file"": d, ""url"": self.scale_url(size[""name""]), ""size"": size})
        except IOError, e:
            logger.error(unicode(e), exc_info=True)
            pass

    return images
"
Python list simultaneous update,">>> from collections import Counter
>>> tree = [Counter()] * 3
>>> tree[0] is tree[1]
True
>>> tree[0] is tree[2]
True
>>> another_counter = Counter()
>>> tree[0] is another_counter
False

>>> for counter in tree: print id(counter)
...
40383192
40383192
40383192
"
How to use py.test from Python?,"args_str = ""-k test_myfavorite""
py.test.cmdline.main(args_str.split("" ""))
"
Numpy loadtxt Behavior change with Python 3,"m[0][0]
Out[22]: b'BKNIF'

type(m[0][0])
Out[23]: numpy.bytes_
"
How can I get the decorators of a function?,"class options(object):
    def __init__(self, somearg):
        self.somearg = somearg

    def __call__(self, func):
        func.options = self
        return func

>>> @options('foo')
... def myfunc(): pass
...
>>> myfunc.options
... <__main__.options at 0x19f6d90>
>>> myfunc.options.somearg
... 'foo'
"
flip keys and values in dictionary python,"from itertools import product, chain

tuples = chain.from_iterable(product(vs, [k]) for k, vs in orig_dict.items())
# note this is identical to:
# # tuples = []
# # for k, vs in orig_dict.items():
# #     for tup in [(v, k) for v in vs]:
# #         tuples.append(tup)
"
Translate Python requests code to Java (UniRest),"req = req.fields(params); 
req = req.field(""data"", f);
"
"In the context of a buildbot master.cfg file, how do I instantiate a class based on a string using native modules","2015-03-13 12:11:05-0400 [-] two something else setup called
2015-03-13 12:11:05-0400 [-] one something setup called
"
searching an element in list of list,"l = [[""lsn"",""tid"",""status"",""type"",""item"",""AFIM"",""BFIM""],
     [1,1,""Active"",""Read"",""X"",""-"",""-""],
     [2,1,""Active"",""Write"",""X"",""2"",""0""]]

for row in l:
    if row[1] == 1 and row[3] == 'Write':
        print(row)

# will print ...
# [2, 1, 'Active', 'Write', 'X', '2', '0']
"
"Python code, self not defined","_sentinel = object()

class makeCode:
    def echo(self, start=0, stop=_sentinel, search=None):
        if stop is _sentinel:
            stop = len(self.codeSegment)
"
How to reference a ModelView in flask-admin,"URL for User model default view is: {{model_view_user.index_view}} 
URL for Role model default view is: {{model_view_role.index_view}} 
"
String checking on multiple types,"def tryconvert(value, default, *types):
    """"""Converts value to one of the given types.  The first type that succeeds is
       used, so the types should be specified from most-picky to least-picky (e.g.
       int before float).  The default is returned if all types fail to convert
       the value.  The types needn't actually be types (any callable that takes a
       single argument and returns a value will work).""""""
    value = value.strip()
    for t in types:
        try:
            return t(value)
        except (ValueError, TypeError):
            pass
    return default
"
Find indices of a value in 2d matrix,"[(index, row.index(val)) for index, row in enumerate(mymatrix) if val in row]
"
Is it possible to get the mountpoint of a pendrive knowing its serialnumber using python?,"/dev/disk/by-id/usb-Generic_Flash_Disk_12345678-0:0 -> ../../sdd
"
"For loop, how can i use loop variable outside loop"," 380     (27, 30, 31)        (9, 8, 9)
 290     (27, 30, 31)       (9, 8, 12)
 240     (27, 30, 31)       (9, 8, 14)
 340     (27, 30, 31)       (9, 8, 10)
 430     (27, 30, 31)        (9, 8, 8)
 340     (27, 30, 31)        (9, 9, 9)
"
How to extract sheet from *.xlsm and save it as *.csv in Python?,"import csv
import xlrd

workbook = xlrd.open_workbook('test.xlsm')
for sheet in workbook.sheets():
    if sheet == ""Sheet_name_to_be_saved"":
        with open('{}.csv'.format(sheet.name), 'wb') as f:
            writer = csv.writer(f)
            for row in range(sheet.nrows):
                out = []
                for cell in sheet.row_values(row):
                    if isinstance(cell, float):
                        out.append(cell)
                    else:
                        out.append(cell.encode('utf8'))
                writer.writerow(out)
"
"How do I search a file, count the number of hits and write the number to column B in a .csv?","f_out.writelines(line for line in f_in if ""timeout of"" in line)
"
Searching for items in a many-to-many relationship,"SELECT Image.key
  FROM Image
  JOIN TagRelationship
    ON Image.ID = TagRelationship.ImageID
  JOIN Tag
    ON TagRelationship.TagID = Tag.ID
 GROUP BY Image.key
HAVING SUM(CASE WHEN Tag.tag IN (mandatory tags ) THEN 1 ELSE 0 END) = N  /*the number of mandatory tags*/
   AND SUM(CASE WHEN Tag.tag IN (optional tags  ) THEN 1 ELSE 0 END) > 0
   AND SUM(CASE WHEN Tag.tag IN (prohibited tags) THEN 1 ELSE 0 END) = 0
"
How to delete a value in a list without using .remove?,"my_list.pop(my_list.index(x))
"
Creating dictionaries from a text file,"['name1', '1', 'name2', '1', '2', 'name3', '1', '2', '3']
{None: [], 'name2': ['1', '2'], 'name3': ['1', '2', '3'], 'name1': ['1']}
"
Python Running cumulative sum with a given window,"[(sum(lis[:i+1]),sum(lis[i-(w-1):i+1]))[i>(w-1)]  for i in range(len(lis))]
"
Is it possible to do partial inheritance with Python?,"method = Class2.__dict__[""method""]
"
Having a python arg set another flag as true in addition to itself,"'count' - This counts the number of times a keyword argument occurs. For example, this is useful for increasing verbosity levels:

>>>
>>> parser = argparse.ArgumentParser()
>>> parser.add_argument('--verbose', '-v', action='count')
>>> parser.parse_args('-vvv'.split())
Namespace(verbose=3)
"
Invoking Test Methods with a Method for a unittest.TestCase Subclass Python,"import test


def run_tests(module):
    module.unittest.main(module.__name__)


if __name__ == '__main__':
    run_tests(test)
"
create a data frame using lists,"from pprint import pprint
import math
import csv

# function to massage each row into desired values
def calc_new_vals(row):
    newQuantity = float(row[2]) + 1.0
    newCompetitiveScore = float(row[1]) + math.log(newQuantity, 100)
    return [ float(row[1]), 
             float(row[2]), 
             newQuantity, 
             float(row[4]), 
             newCompetitiveScore ]

# read data from file and recalculate each row
f = open('./data.csv', 'r')
reader = csv.reader(f)
records = [ calc_new_vals(record) for record in reader ]

# This sorts by the three columns in reverse
# see this page for more: http://wiki.python.org/moin/HowTo/Sorting/
records = sorted(records, key=lambda record: record[3], reverse = True)
records = sorted(records, key=lambda record: record[2], reverse = True)
records = sorted(records, key=lambda record: record[4], reverse = True)

new_records = []
rank = 1
for row in records:
    row.append( rank )
    new_records.append( row )
    rank += 1
pprint(new_records)
"
How to iterate through list in number of elements at once?,">>> it = iter(l)
>>> zip(it, it, it)
[(1, 2, 3), (4, 5, 6), (7, 8, 9)]
"
Fasted Python way to bulk csv convert outside of using pandas,"1.41840219498
0.56161403656
"
How do I get a list of all parent tags in BeautifulSoup?,">>> [p.get('name') for p in bookmarks[0].findParents('folder')]
[u'folder2']

>>> [p.get('name') for p in bookmarks[0].findParents()]
[u'folder2', None]
"
Python idiom to return first item or None,"x = get_first(get_first_list())
if x:
    ...
y = get_first(get_second_list())
if y:
    ...
"
"Writing Greek in matplotlib labels, titles","# -*- coding: utf-8 -*-
"
how to match two numpy array of unequal length?," def closest(ar1, ar2, iter):
    x = np.abs(ar1[iter] - ar2)
    index = np.where(x==x.min())
    value = ar2[index]
    ar2[ar2==value] = -10000000
    return value
"
Using counter on array for one value while keeping index of other values,"most_common_food = max(food_groups, key=lambda f: len(food_groups[f]))  # just the food group name
most_common_food_items = max(food_groups.values(), key=len)  # just the food group name
"
How can I replace parts of strings in a list?,"x = ['apples', 'oranges', 'bananas']
for i, item in enumerate(x): 
    item=item.replace('app', 'spam') 
    x[i] = item
    #Or just 
    #x[i] = item.replace('app', 'spam') 
"
how do imports work for a module used as a singleton?,"$ python3.4 a.py
"
Transform filter function to Python code,"x[1:]=-2*x[1:]/(-0.9*x[1:]-0.9*x[:-1])
"
python3.4.2 how to assign a string with texts and variables,">>> length=22
>>> slope=45
>>> newstring='length {}, slope {}'.format(length, slope)
>>> newstring
'length 22, slope 45'
"
web2py - for loop and function to change background color?,"severities = ['Green', 'Yellow', 'Red']

db.define_table('repo',
    Field('body','text',requires=IS_LENGTH(500,1),label=""report""),
    Field('severity', requires=IS_IN_SET(severities)),
    Field('posted_on','datetime', readable=False, writable=False),
    Field('posted_by','reference auth_user', writable=False))
"
filling the missing points in the time series data with pandas.date_range and pandas.reindex python,"import pandas as pd
import numpy as np
import io

temp=u""""""""2011-08-26 00:00:00"",1155179,3.232,23.7,3.281,0.386,25.27,111.5665,28.92,29.83,19.13,0,111.5,13.02,29.77,345.7
""2011-08-26 00:00:30"",1155180,3.289,20.44,2.153,0.222,25.25,111.5735,28.94,29.82,19.53,0,111.5,13.02,29.79,342.4
""2011-08-26 23:59:30"",1155297,12.62,28.06,3.162,1.356,24.3,111.4614,28.65,29.84,19.53,0,111.4,13.06,29.50,350.1""""""

#after testing replace io.StringIO(temp) to filename
df = pd.read_csv(io.StringIO(temp), sep="","", index_col=[0], parse_dates=[0], header=None)
print df
                          1       2      3      4      5      6         7   \
0                                                                            
2011-08-26 00:00:00  1155179   3.232  23.70  3.281  0.386  25.27  111.5665   
2011-08-26 00:00:30  1155180   3.289  20.44  2.153  0.222  25.25  111.5735   
2011-08-26 23:59:30  1155297  12.620  28.06  3.162  1.356  24.30  111.4614   

                        8      9      10  11     12     13     14     15  
0                                                                         
2011-08-26 00:00:00  28.92  29.83  19.13   0  111.5  13.02  29.77  345.7  
2011-08-26 00:00:30  28.94  29.82  19.53   0  111.5  13.02  29.79  342.4  
2011-08-26 23:59:30  28.65  29.84  19.53   0  111.4  13.06  29.50  350.1  
"
"Remove strings containing words from list, without duplicate strings","from itertools import chain
chain.from_iterable(finding(key) for key in ['cats', 'apples'. 'doggs'])
"
Understanding/implementing this enumeration solution for maximum subarray,"  if current_sum > max_subset_sum:
    max_subset_sum = current_sum
    start_subset_index = i
    stop_subset_index = j
"
Sending http headers with python,"client.send('HTTP/1.0 200 OK\r\n')
"
How to calculate difference on previous within set of grouped rows in a dataframe,">>> df[""SUBMISSION_DATE""] = pd.to_datetime(df[""SUBMISSION_DATE""],dayfirst=True)
>>> df
    #  USER_ID CONTRACT_REF     SUBMISSION_DATE
0   1        1            A 2014-06-20 01:00:00
1   2        1            A 2014-06-20 02:00:00
2   3        1            B 2014-06-20 03:00:00
3   4        4            A 2014-06-20 04:00:00
4   5        5            A 2014-06-20 05:00:00
5   6        5            B 2014-06-20 06:00:00
6   7        7            A 2014-06-20 07:00:00
7   8        7            A 2014-06-20 08:00:00
8   9        7            A 2014-06-20 09:30:00
9  10        7            B 2014-06-20 10:00:00

[10 rows x 4 columns]
"
Python's enumerate in Ruby?,"a = %w(do re mi fa)
a.each_with_index do |s,i|
    puts ""#{s} at index #{i}""
end
"
Concurrent insertions in a Suffix Tree,"for word in wordlist:
    q.put(word)
for i in range(numthreads):
    q.put(terminate)          # terminate all the worker threads
for t in threadlist:
    t.join()                  # wait for them all to finish
"
modelling the google datastore/python,"apple_lover_key_names = WhoLikes.get_by_key_name('apples')
apple_lovers = UserModel.get_by_key_names(apple_lover_key_names.users)
"
Python: Print to one line with time delay between prints,"print c,
"
Digram list manipulation with Python,"def replace(t, a, b):
    # Flatten the list
    t1 = []
    l = len(t)-1
    for items in [t[i][0:(1 if i>-1 and i<l else 2)] for i in range(0,l+1)]:
        t1.extend(items)
    replaced = []
    # Iterate the elements of the flattened list
    # Let the elements that do not match a in and replace the ones that
    # do not match with the elements of b
    for elem in t1:
        if elem == a:  # this element matches, replace with b
            replaced.extend(b)
        else:          # this element does not, add it
            replaced.append(elem) 
    # break up the replaced, flattened list with groups of 2 elements
    return [replaced[x:x+2] for x in range(len(replaced)-1)]
"
Efficiently take moving average of sparse data and filter above threshold in python,"In [2]: %timeit sparse_mov_avg(indices, values, 10)
10 loops, best of 3: 33.7 ms per loop

In [3]: %timeit sparse_mov_avg(indices, values, 100)
1 loops, best of 3: 378 ms per loop

In [4]: %timeit sparse_mov_avg(indices, values, 1000)
1 loops, best of 3: 4.33 s per loop
"
Creating a dictionary with list of lists in Python,"inlinkDict[docid] = adoc[1:]
"
Importing complex data from .mat file as a numpy array,"import numpy as np
import h5py
f = h5py.File('trial.mat','r')
zz = f['a'].value.view(np.double).reshape((10,10,10,2))
zzj = zz[:,:,:,0] + 1j*zz[:,:,:,1]
zzk = f['a'].value.view(np.complex)
np.all(zzk == zzj)  # result is ""True""
zzj.shape  # result is (10, 10, 10)
zzk[9,9,9].imag == f['a'][9,9,9][1]  # result is ""True""
zzk[9,9,9]  # result is (0.8667498969993187+0.36728591513136899j) consistent with Matlab
"
tkinter and configparser : looking for a more beautiful solution,"root.protocol(""WM_DELETE_WINDOW"", saveConfig)
"
Unable to execute the else part of an if statment when conditon does not match in python,"logindb = {row[1]:row[2] for row in prsnobj.result}

if login in logindb and logindb[login] == password:
    print ""WELCOME !!"" 
else:
    print ""<h4>Invalid Login</h4>""
"
How to set a variable with pressing a button on an html file to the flask server route,"# `line` is `""/cameradump/2016-01-21""`

data = line.split('/')[-1]
"
Python: Get Image size WITHOUT loading image into memory,"def open(fp, mode=""r""):
    ""Open an image file, without loading the raster data""
"
How to use python-requests and event hooks to write a web crawler with a callback function?,"import grequests
from bs4 import BeautifulSoup


def get_urls_from_response(r):
    soup = BeautifulSoup(r.text)
    urls = [link.get('href') for link in soup.find_all('a')]
    return urls


def print_url(args):
    print args['url']


def recursive_urls(urls):
    """"""
    Given a list of starting urls, recursively finds all descendant urls
    recursively
    """"""
    if len(urls) == 0:
        return
    rs = [grequests.get(url, hooks=dict(args=print_url)) for url in urls]
    responses = grequests.map(rs)
    url_lists = [get_urls_from_response(response) for response in responses]
    urls = sum(url_lists, [])  # flatten list of lists into a list
    recursive_urls(urls)
"
Speed up NumPy loop,"while x != orig_x:
    height_needed = shadow_map[( (x - orig_x) % x_len)]
"
Python: more concise logic/syntax on empty strings,"if input is not None and (
   not var_a or var_a not in input or  # Should this be 'or' or 'and'? 'or' looks unusual here
   not var_b or var_b not in input):
    pass
"
Calculating days using string dates in Python,"import datetime
day = datetime.datetime.strptime('Tue Feb 19 00:09:28 +1100 2013', '%a %b %d %H:%M:%S +1100 %Y')
delta = day - datetime.datetime.now()
print delta.days
"
Numpy array loss of dimension when masking,"array([[[[ 0, 11],
         [ 0, 22],
         [ 0, 33]],

        [[ 4, 44],
         [ 5, 55],
         [ 6, 66]]],


       [[[ 7, 77],
         [ 8, 88],
         [ 9, 99]],

        [[ 0, 32],
         [ 0, 33],
         [ 0, 34]]]])
"
"How to compare the last index to the first in a list whilst iterating, or looping","diff = [left-right for left, right in zip(angles, angles[1:]+angles[:1])]
"
Find object in list that has attribute equal to some value (that meets any condition),"next((x for x in test_list if x.value == value), None)
"
How to reduce xticks label resolution when showing clock time,"from matplotlib.dates import AutoDateFormatter, AutoDateLocator

xtick_locator = AutoDateLocator()
xtick_formatter = AutoDateFormatter(xtick_locator)
xtick_formatter.scaled[30.] = '%d %b'
xtick_formatter.scaled[1.] = '%d %b'
xtick_formatter.scaled[1/24.] = '%d/%m %H:%M'
xtick_formatter.scaled[1/(24.*60.)] = '%d/%m %H:%M'
xtick_formatter.scaled[1/(24.*60.*60.)] = '%d/%m %H:%M:%S'
ax_av.xaxis.set_major_locator(xtick_locator)
ax_av.xaxis.set_major_formatter(xtick_formatter)
"
One liner to determine if dictionary values are all empty lists or not,"python -mtimeit -s""my_dict=dict(zip(range(1000),[0]*1000))"" ""bool([a for a in my_dict.values() if a != []])""
10000 loops, best of 3: 198 usec per loop
"
Looking into getting into Python specifically for a project that involves threads and graphs,"import matplotlib as plt

X = [0, 1, 2]
Y = [0, 1, 2]
plt.plot(X, Y)
plt.show()
"
saving an 'lxml.etree._ElementTree' object,"import urllib2
myobject = ET.parse(urllib2.urlopen(url))
"
How can I split a text file into multiple text files using python?,"import re

with open('input.txt', 'r') as f:
    data = f.read()

found = re.findall(r'\n*(A.*?\n\$\$)\n*', data, re.M | re.S)

[open(str(i)+'.txt', 'w').write(found[i-1]) for i in range(1, len(found)+1)]
"
Openstack: how to get client's IP in the python API,"weight_properties['context'].remote_address
"
My code is not executing properly in Python,"from  bisect import bisect
def grade(score, breakpoints=[60, 70, 80, 90], grades='FDCBA'):
        i = bisect(breakpoints, score)
        return grades[i] 

while True:
    try:
       grad = float(raw_input(""what is ur grade"")) *100
       print grade(grad)
       break
    except:
         print 'Enter Correct value'
"
iterate through all dataframe columns,"df1.apply(lambda x: np.sum(df2.values == x.values), axis=1)

0    5
1    3
2    7
3    6
4    6
5    8
6    5
7    8
8    8
9    7
"
What's the easiest way to quickly check a Scrapy behaviour / bug?,"scrapy runspider file_with_my_spider.py
"
"How can I plot a correlation matrix as a set of ellipses, similar to the R open-air package?","data = df.corr()
fig, ax = plt.subplots(1, 1)
m = plot_corr_ellipses(data, ax=ax, cmap='Greens')
cb = fig.colorbar(m)
cb.set_label('Correlation coefficient')
ax.margins(0.1)
"
Python regex search AND split,">>> re.split('(ddd)', 'aaa bbb ccc ddd eee fff', 1)
['aaa bbb ccc ', 'ddd', ' eee fff']
"
Python DST & Time Zone Detection After Addition,"print(repr(sumVal))
# datetime.datetime(2012, 10, 28, 3, 30, tzinfo=<DstTzInfo 'Europe/London' BST+1:00:00 DST>)
"
Minimum sum from a dictionary of lists in Python,"minVal = min(dict, key=lambda i: sum(dict[i]))
"
"Numpy: Creating an (x,y,2,2) array from 4 (x,y) arrays","ac =np.concatenate((a[:,:,np.newaxis],c[:,:,np.newaxis]),axis=-1)
bd =np.concatenate((b[:,:,np.newaxis],d[:,:,np.newaxis]),axis=-1)
abcd =np.concatenate((ac[:,:,:,np.newaxis],bd[:,:,:,np.newaxis]),axis=-1)
"
I can not use the import command,"logger.addHandler(logging.NullHandler())
"
Parse MEDLINE file for GWAS mining,"print ("" ""x9, join ""  "", @categories, ""\n""); 
for $num (keys %paper) {
  print $num  ;
  map{ printf ""%19d"", $_ }  values %{ $paper{$num} } ;
  print ""\n"";   
}
"
python descriptors sharing values across classes,"MyClass().varx
"
if statement vs. expression,">>> def bar():
...     x = ((x + 1) % 2)
... 
>>> dis.dis(bar)
  2           0 LOAD_FAST                0 (x)
              3 LOAD_CONST               1 (1)
              6 BINARY_ADD          
              7 LOAD_CONST               2 (2)
             10 BINARY_MODULO       
             11 STORE_FAST               0 (x)
             14 LOAD_CONST               0 (None)
             17 RETURN_VALUE        
"
Convert One Key Value from List of Dictionaries to List,"names = Person.objects.values_list('name', flat=True)
"
grabbing info from a table with loops (python),"[('CTCTCT', '27.66%'), ('GTTTCG', '9.04%'), ('NNNNNN', '3.67%'), ('ATTCGG', '7.41%'), ('GACGAT', '6.90%'), ('GAACCC', '13.29%'), ('GTAACA', '9.50%'), ('ATCGCC', '56.24%')]
[('TGTGTG', '27.54%'), ('ATTCCT', '5.78%'), ('TTCAGA', '3.11%'), ('CGAATC', '6.70%'), ('ATTCGG', '6.45%'), ('TGCTGT', '13.18%'), ('TGCTGT', '8.64%'), ('GCTATT', '9.98%')]
"
Read large text file without read it into RAM at once,"with open('test', 'r') as f:
    for line in f:
        print(line.strip())
"
Multiple return values in python,"def foo(return_2nd=False):

    x = 2
    y = 2
    return (x+y) if not return_2nd else (x+y),(x-y)
"
dict.setdefault appends one extra (default?) item into the value list,"csvDicData_.setdefault(key, []).append(value)
"
How to redirect output of Python script to terminal,"$ mkfifo /tmp/my_fifo
$ cat producer.py
f = open(""/tmp/my_fifo"", ""w"")
f.write(""hello, world!\n"")
f.close()
"
Convert a 3D array to 2D array based on dictionary,"In [8]: index = np.array([3,2,1,0])

In [10]: arr[index]
Out[10]: array([40, 30, 20, 10])
"
Matplotlib PDF plots don't respond to figsize,"from mpl_toolkits.mplot3d import Axes3D
from matplotlib import cm
from matplotlib.ticker import LinearLocator, FormatStrFormatter
import matplotlib.pyplot as plt
import numpy as np

fig = plt.figure()
fig.set_figheight(10)
fig.set_figwidth(12)
ax = fig.gca(projection='3d')
X = np.arange(-5, 5, 0.25)
Y = np.arange(-5, 5, 0.25)
X, Y = np.meshgrid(X, Y)
R = np.sqrt(X**2 + Y**2)
Z = np.sin(R)
surf = ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap=cm.coolwarm,
        linewidth=0, antialiased=False)
ax.set_zlim(-1.01, 1.01)

ax.zaxis.set_major_locator(LinearLocator(10))
ax.zaxis.set_major_formatter(FormatStrFormatter('%.02f'))

fig.colorbar(surf, shrink=0.5, aspect=5)
fig.savefig(""myfig.png"", dpi=600) # useful for hi-res graphics
plt.show()
"
"Sum over rows (but not all), give other rows default value","df1['sum'] = df1['sum'].fillna(0).astype(int)
print df1
   stream  feat  another_feat  sum
a       1     8             4    0
b       2     5             5   10
c       2     7             7   14
d       3     3             2    0
"
How to use a list of strings [which may contain any character] as keys?,">>> d[frozenset(['foo', 'bar'])] = 'baz'
>>> d[frozenset(['bar', 'foo'])]
'baz'
>>> d[frozenset(['bar', 'foo', 'bar'])]
'baz'
"
Expected speedup from embarrassingly parallel task using Python Multiprocessing,">run -p6 -v ..\teamprimes
PARLANSE RTS: Version 19.1.53
# Processors = 6
Number of primes found: 664579
Parallel computed in 2.443123 seconds
---- PARLANSE RTS: Performance Statistics
  Duration = 2.538972 seconds.
  CPU Time Statistics:
Kernel CPU Time: 0.000s
User   CPU Time: 14.102s
Total  CPU Time: 14.102s
  Memory Statistics:
Peak Memory Usage    : 4.28 MBytes
  Steals: 459817  Attempts: 487334  Success rate: 94.4%  Work Rediscovered: 153
"
How to write this snippet in Python?,">>> d
{1: 2}
>>> d.setdefault(1, 3)
2
>>> d
{1: 2}
>>> d.setdefault(3, 3)
3
>>> d
{1: 2, 3: 3}
"
Pandas Dataframe.describe() : Which kind of standard deviation?,"In [14]: sqrt(1./(len(s)-1) * ((s - s.mean()) ** 2).sum())
Out[14]: 0.7071067811865476
"
"Get last ""column"" after .str.split() operation on column in pandas DataFrame","In [104]: d2[""price""] = d2[""price""].str.replace(""p"","""").astype(float)

In [105]: d2
Out[105]: 
  symbol       date  price
0    spx  5/25/2001    500
1    spx  5/25/2001    600
2    spx  5/25/2001    700
"
Get dictionary with lowest key value from a list of dictionaries,">>> min(lst, key=lambda item: float(item['cost']))
{'cost': '76.56', 'probability': '0.55923884'}
"
Python inheritance best practice for 'object histories',"c = Contact(""me"", ""123-123-123"", ""foo@example.com"")
c.update_phone(""456-456-456"")
print c
for i, hist in enumerate(c.view_history()):
    print ""{}. {}"".format(i, hist)
"
Formating date in Web2py Python,"{{=row.datetime_field.date}}
"
How to return a value from a method back to the input value,"zipcode = zipcode.replace("" "", """").upper()
"
"Python - Find sequence in array: start when two values below threshold, end when two values above threshold","[0, 1, 10, 14, 15, 16, 19, 20, 21, 22, 26, 27]
[12, 24, 30]
[(0, 12), (14, 24), (26, 30)]
"
Grouping and summarizing data into a new pandas dataframe,"In [145]: (df.groupby(['time_since', pd.cut(df['dist_from_origin'], BINS)])
              .size().unstack('dist_from_origin').fillna(0))
Out[145]:
dist_from_origin  (0, 5]  (100, 150]  (150, 225]  (5, 25]  (50, 100]
time_since
0                      1           3           0        0          1
1                      1           0           2        0          0
2                      0           1           0        1          1
3                      2           1           1        0          1
4                      1           0           1        1          1
"
Convert Time Zone + format in Python from Twitter API,"#!/usr/bin/env python
from datetime import datetime
from email.util import parsedate_tz, mktime_tz

def to_local_time(tweet_time_string):
    """"""Convert rfc 5322 -like time string into a local time
       string in rfc 3339 -like format.

    """"""
    timestamp = mktime_tz(parsedate_tz(tweet_time_string))
    return datetime.fromtimestamp(timestamp).strftime('%Y-%m-%d %H:%M:%S')

time_string = to_local_time('Thu Mar 19 12:37:15 +0000 2015')
# use time_string here..
"
"Equivalent of ""in"" keyword or subquery in pandas",">>> df = pd.DataFrame({'A':[1,2,3,4,5], 'B':list('ABCDE')})
>>> f = pd.Series([1,2])
>>> df[df['A'].isin(f)]
   A  B
0  1  A
1  2  B
"
Fast selection of a Timestamp range in hierarchically indexed pandas data in Python,"In [68]: %timeit df2.loc['20010201':'20010301']
1 loops, best of 3: 470 ms per loop
"
How can I access an external python module from a script in booggie 2?,"def setEnvironment():
"""""" GrGenSignature:  setEnvironment(): boolean     """"""

import sys
import os

# Asking your computer for its name
computer_name = os.getenv(""COMPUTERNAME"")   

# Define path for PC1. That's where your modules are.
# Make sure to use two backslashes!
if computer_name == ""PC1"":
    source_path = ""D:\\path\\to\\your\\project\\source"" 

# Add src folder to python enironment
sys.path += [ os.path.join(source_path) ]


# For those who want some info during the transformation
print((""----------- Setting the environment for your project -----------""))
print(""This is computer:"" + computer_name)
print(""Source path: "" + str(source_path))
print(""----------------------------------------------------------------------"")
"
Equivalent for str.join in pandas,"In [34]: %timeit (df + ' ').sum(axis=1)
1000 loops, best of 3: 368 us per loop

In [38]: %timeit df[0] + ' ' + df[1] + ' ' + df[2]
1000 loops, best of 3: 482 us per loop

In [40]: %timeit (df + ' ').sum(axis=1).str.strip()
1000 loops, best of 3: 556 us per loop

In [47]: %timeit df[cols[0]].str.cat(df[cols[1:]].values.transpose(), sep = ' ')
1000 loops, best of 3: 870 us per loop

In [49]: %timeit df[[0,1,2]].apply(' '.join, axis=1)
1000 loops, best of 3: 937 us per loop
"
TypeError: unsupported operand type(s) for -: 'list' and 'list',"
>>> import numpy as np
>>>
>>> def Naive_Gauss(Array,b):
...     n = len(Array)
...     for column in xrange(n-1):
...         for row in xrange(column+1, n):
...             xmult = Array[row][column] / Array[column][column]
...             Array[row][column] = xmult
...             #print Array[row][col]
...             for col in xrange(0, n):
...                 Array[row][col] = Array[row][col] - xmult*Array[column][col]
...             b[row] = b[row]-xmult*b[column]
...     print Array
...     print b
...     return Array, b  # <--- Without this, the function will return `None`.
...
>>> print Naive_Gauss(np.array([[2,3],[4,5]]),
...                   np.array([[6],[7]]))
[[ 2  3]
 [-2 -1]]
[[ 6]
 [-5]]
(array([[ 2,  3],
       [-2, -1]]), array([[ 6],
       [-5]]))
"
Combine two lists of tuples by key,"lst3 = [(k, v, dict2[k]) for k, v in lst1]
"
Generator expressions vs yield,">>> import dis
>>> dis.dis(compile('(n for n in stream if n % 2 == 0)', '', 'exec').co_consts[0])
  1           0 LOAD_FAST                0 (.0)
        >>    3 FOR_ITER                27 (to 33)
              6 STORE_FAST               1 (n)
              9 LOAD_FAST                1 (n)
             12 LOAD_CONST               0 (2)
             15 BINARY_MODULO
             16 LOAD_CONST               1 (0)
             19 COMPARE_OP               2 (==)
             22 POP_JUMP_IF_FALSE        3
             25 LOAD_FAST                1 (n)
             28 YIELD_VALUE
             29 POP_TOP
             30 JUMP_ABSOLUTE            3
        >>   33 LOAD_CONST               2 (None)
             36 RETURN_VALUE
>>> dis.dis(compile('''\
... def evens(stream):
...     for n in stream:
...         if n % 2 == 0:
...             yield n
... ''', '', 'exec').co_consts[0])
  2           0 SETUP_LOOP              35 (to 38)
              3 LOAD_FAST                0 (stream)
              6 GET_ITER
        >>    7 FOR_ITER                27 (to 37)
             10 STORE_FAST               1 (n)

  3          13 LOAD_FAST                1 (n)
             16 LOAD_CONST               1 (2)
             19 BINARY_MODULO
             20 LOAD_CONST               2 (0)
             23 COMPARE_OP               2 (==)
             26 POP_JUMP_IF_FALSE        7

  4          29 LOAD_FAST                1 (n)
             32 YIELD_VALUE
             33 POP_TOP
             34 JUMP_ABSOLUTE            7
        >>   37 POP_BLOCK
        >>   38 LOAD_CONST               0 (None)
             41 RETURN_VALUE
"
How do I sort a list of class intances(objects) based on multiple values of the objects in Python,"sortedlist = sorted(alist, key=lambda x: (x.firstname , x.lastname))
"
Assigning variables from inputs in FOR loop in python,"... inputFor['5c'] ...
... inputFor['10c'] ...
... inputFor['20c'] ...
... inputFor['50c'] ...
... inputFor['$1'] ...
... inputFor['$2'] ...
"
Alias to Launch Python .py Script,"alias runstepper='python home/pi/mystepper6.py'
alias moveit='sudo python home/pi/moveit.py'
                          ^-- missing / here
"
What is the function of this python script(python-exec tool)?,"$ python-exec -l python -f html -o /tmp/test.file
#this is the input#
print 'hello world'
....
"
Passing an argument as a attribute in a function?,"getattr(df, keyword)
"
Converting PANDAS dataframe from monthly to daily,"start_date = df.index.min() - pd.DateOffset(day=1)
end_date = df.index.max() + pd.DateOffset(day=31)
"
get indices of original text from nltk word_tokenize,"offsets = [span[0] for span in spans]
[0, 5, 13, 18, 24, 27, 31]
"
Python logging module is printing lines multiple times,"def _get_logger(self):
    loglevel = logging.INFO
    l = logging.getLogger(__name__)
    if not getattr(l, 'handler_set', None):
        l.setLevel(logging.INFO)
        h = logging.StreamHandler()
        f = logging.Formatter('%(asctime)s %(levelname)s %(message)s')
        h.setFormatter(f)
        l.addHandler(h)
        l.setLevel(loglevel)
        l.handler_set = True
    return l  
"
Aggregating over timestamps in pandas,"In [12]: df['exchtime'] = pd.to_datetime(df['exchtime'],unit='s')

In [13]: df
Out[13]: 
                    exchtime     bid     ask
0 2014-01-08 11:00:14.587758  520.00  541.00
1 2014-01-08 11:00:30.462050  540.43  540.87
2 2014-01-08 11:00:30.462050  540.43  540.87
3 2014-01-08 11:00:30.468602  540.43  540.86
4 2014-01-08 11:00:30.468602  540.43  540.86
5 2014-01-08 11:00:47.675000  540.43  540.85
6 2014-01-08 11:00:47.675000  540.43  540.85
7 2014-01-08 11:00:47.735410  540.43  540.84
8 2014-01-08 11:00:47.735410  540.43  540.84

[9 rows x 3 columns]
"
Get PyQt4 to open another Qt window when a button is pressed,"# Python Qt4 bindings for GUI objects
from PyQt4 import QtGui
# Numpy functions for image creation
import numpy as np
# Matplotlib Figure object
from matplotlib.figure import Figure
import matplotlib
matplotlib.use('Qt4Agg')
# import the Qt4Agg FigureCanvas object, that binds Figure to
# Qt4Agg backend. It also inherits from QWidget
from matplotlib.backends.backend_qt4agg \
import FigureCanvasQTAgg as FigureCanvas
# import the NavigationToolbar Qt4Agg widget
from matplotlib.backends.backend_qt4agg \
import NavigationToolbar2QTAgg as NavigationToolbar

class Qt4MplCanvas(FigureCanvas):

    def __init__(self, parent):
        # plot definition
        self.fig = Figure()
        self.axes = self.fig.add_subplot(111)
        t = np.arange(0.0, 3.0, 0.01)
        s = np.cos(2*np.pi*t)
        self.axes.plot(t, s)
        # initialization of the canvas
        FigureCanvas.__init__(self, self.fig)
        # set the parent widget
        self.setParent(parent)
        # we define the widget as expandable
        FigureCanvas.setSizePolicy(self,
        QtGui.QSizePolicy.Expanding,
        QtGui.QSizePolicy.Expanding)
        # notify the system of updated policy
        FigureCanvas.updateGeometry(self)

class ApplicationWindow(QtGui.QMainWindow):
    def __init__(self):
        # initialization of Qt MainWindow widget
        QtGui.QMainWindow.__init__(self)
        # set window title
        self.setWindowTitle(""Matplotlib Figure in a Qt4 Window With NavigationToolbar"")
        # instantiate a widget, it will be the main one
        self.main_widget = QtGui.QWidget(self)
        # create a vertical box layout widget
        vbl = QtGui.QVBoxLayout(self.main_widget)
        # instantiate our Matplotlib canvas widget
        qmc = Qt4MplCanvas(self.main_widget)
        # instantiate the navigation toolbar
        ntb = NavigationToolbar(qmc, self.main_widget)
        # pack these widget into the vertical box
        vbl.addWidget(qmc)
        vbl.addWidget(ntb)
        # set the focus on the main widget
        self.main_widget.setFocus()
        # set the central widget of MainWindow to main_widget
        self.setCentralWidget(self.main_widget)

#deleted the main function here
"
Multiple text fields with id's in django,"[
    {
        'id': 1,
        'value': u'foo'
    },
    {
        'id': 4,
        'value': u'bar'
    },
    {
        'id': 5,
        'value': u'baz'
    }
]
"
How do I pass the argument correctly in Python,"COLORS = {
    'BLUE': bytearray(b'\x00\x00\xff'),
    'GREEN': bytearray(b'\x00\xff\x00'),
    'RED': bytearray(b'\xff\x00\x00')
}
"
How to distribute `.desktop` files and icons for a Python package in Gnome (with distutils or setuptools)?,"from setuptools import setup

setup(
  # ...
  data_files=[
    ('share/icons/hicolor/scalable/apps', ['data/mypackage.svg']),
    ('share/applications', ['data/mypackage.desktop'])
  ],
  entry_points={
    'console_scripts': ['startit=mypackage.cli:run']
  }
)
"
searching a value in a list and outputting its key,"if fields[0] in value:
"
Override function declaration in autodoc for sphinx,"def myfunc(val=foobar):
    '''myfunc(val=foobar)

    Blah blah blah'''
    pass
"
Python Twisted: separate protocol from processing,"def dataReceived(self, data):
    print ""Received: %s"" % data
    if self.factory._logic_callback:
        ret = self.factory._logic_callback.process(data)
        print ""Sent: %s"" % ret
        self.transport.write(ret)
"
Programmatically choose template to include?,"{% include ""foo.html"" %}
"
"python string processing, strip out date-time patterns",">>> strs = '+CMGL: 1,""REC READ"",""+111111111111"",""13/05/25,05:15:16+04"",25-05-13,05:15:20, 0.668'
>>> "", "".join( x for x in strs.split("","")[5:] )
'25-05-13, 05:15:20,  0.668'
"
Python clean imports for models - SQL Alchemy,"from application import db
...
"
Iterable multiprocessing Queue not exiting,"q = multiprocessing.Queue()
q.put(1)
q.put(2)
q.put(None)  # None is our sentinel, you could use 'Done', if you wanted
the_pool.map(thisworker, iter(q.get, None)) # This will call q.get() until None is returned
"
Python 2.7: How to build getter/setter functions to access class attributes without inheritance?,"class Foo():
    def __init__(self):
        self._spam = 0

    @property
    def spam(self):
        print(""in the getter: "")
        return self._spam

    @spam.setter
    def spam(self, move):
        print(""in the setter: "")
        self._spam = move + self._spam

f = Foo()
f.spam = 2
print(f.spam)
"
Subsetting stacked pandas dataframe,"df['country_total'] = df.groupby(['Country_FAO']).mean_area.transform(sum)
"
How can I recreate the following using list comprehensions?,"table = [ ""a"", ""b"", ""c"", ""d""]

table[:] = [x for i in table for x in [i + ' |', '-'*(2+len(table[0]))]]

print (table)

# Result:
# ['a |', '---', 'b |', '---', 'c |', '---', 'd |', '---']
"
Scrape table without no class BS4 python,"Aali Industries | A.Yobu | 1, Ayyanar Koil 4th Street Sellur Madurai - 625 002 | 2530132,9345204255,9345204256 | aaliyobu@yahoo.com | 
Accurate Engineers, | S.BALASUNDAR | Kadir Complex,4/153-1,Thilagar St. Melamadai Main Road, Thasildhar Nagar | 2520049,RE:2534603,98652-40049 | accurate_engineers@yahoo.co.in | 
Akber Ali Industries | S. Abuthalif | 73/15/1, East Anna Thoppu Street Madurai - 625 001  | 2343526,2341100 |  | 
Alagu Wire Products | Rm.Meiyappan | 193/4-A, Trichy Road Pudukottai - 2  | 236624,98424-44624,98428-44624 |  | 
Allwin Fasetners | S.Joseph Vasudevan | XXXXX6,Parasakthi Nagar XXXXXXXXAvaniapuram XXXXXXXMadurai - 625 012. | 2670577 |  | 
Allwinraj Metals Centre, | P.SELVARAJ NADAR | 180 and 181 East Veli Street, Madurai - 625 001.  | 2622181, RES:2626914 |  | 
Amirtham Engineering Works | G.Amirtharaj | 7A,Govindan Chetty Street, Simmakkal, Madurai - 625 001. | 2622417 |  | 
Amudha Wire Products, | A.M.P. Shanmugavel | Swahath Residency C-1, 3rd Floor, 708-A, 17th East Street, Anna Nagar | 6534939,99449-55199 |  | 
Ananthasiva Engg.Works, | P.KALUVAN | 19-B New Ramnad Road, Madurai - 625 009.  | 2337434,RES:2532598,2311910 | 98421-22200 | 
Angalamman Industries, | Palanivel | 40/C, Chinnandan Koil Road, Near Angalamman Koil, Karur - 639 001. | NIL |  |
"
.doc to pdf using python,"word = win32com.client.Dispatch('Word.Application')
"
Embedding binary data in a script efficiently,"import bz2
data = 'QlpoOTFBWSZTWcl9Q1UAAABBBGAAQAAEACAAIZpoM00SrccXckU4UJDJfUNV'
with open('/tmp/testfile', 'w') as fdesc:
    fdesc.write(bz2.decompress(data.decode('base64')))
"
How to use a turtle superclass,"Turtle.__init__(self, shape = ""circle"")
solar_element.__init__(self, Name, Radius, Mass, Colour)
"
how to group elements in a list based on frequency into a tuple,"In [7]: from collections import Counter

In [8]: l1=[2,2,2,5,5,7]

In [9]: Counter(l1).keys()
Out[9]: [2, 5, 7]

In [10]: Counter(l1).values()
Out[10]: [3, 2, 1]

In [11]: zip(Counter(l1).keys(), Counter(l1).values())
Out[11]: [(2, 3), (5, 2), (7, 1)]

In [12]: Counter(l1).items()
Out[12]: [(2, 3), (5, 2), (7, 1)]
"
Python List of Strings created from a list of one string,">>> list(itertools.chain.from_iterable(elem.split(', ') for elem in li))
['x', 'y', 'z', 'dogs', 'cats']
"
How to get backend instance from python-social-auth,"social = request.user.social_auth.get(provider='MyOAuth')
backend = social.get_backend_instance()
"
How to match all words that does not contain two digits in a row?,">>> p = re.compile(pattern)
>>> bool(p.search(""data_pt01_pr""))
True
>>> bool(p.search(""data_pt02_2""))
True
>>> bool(p.search(""data_pt01_01_pr""))
False
>>> bool(p.search(""data_pt22_22""))
False
"
Definition and difference between a shared array view and a copy of array data?,"In [11]: a = np.array([1, 2, 3])

In [12]: b = a[0:2]

In [13]: c = a.copy()

In [14]: np.may_share_memory(a, b)
Out[14]: True

In [15]: np.may_share_memory(a, c)
Out[15]: False

In [16]: np.may_share_memory(b, c)
Out[16]: False
"
python search file for a list of words,">>> f = ['hello','foo','bar']
>>> s = '''hello
hai
Foo
Bar'''.splitlines()
>>> for line in s:
        if re.search(r""(?i)""+'|'.join(f), line):
            print(line)


hello
Foo
Bar
"
Pythonic ways to re-group / pivot database output,"from itertools import groupby
temp = {k:list(g) for k,g in groupby(ca, lambda x: x['photo_id'])}
# I shortened the name comments_atomic to ca here
"
Can't figure out how to bind the enter key to a function in tkinter,"import tkinter as tk

class Application(tk.Frame):
    def __init__(self):
        self.root = tk.Tk()
        self.root.geometry(""300x200"")

        tk.Frame.__init__(self, self.root)
        self.create_widgets()

    def create_widgets(self):
        self.root.bind('<Return>', self.parse)
        self.grid()

        self.submit = tk.Button(self, text=""Submit"")
        self.submit.bind('<Button-1>', self.parse)
        self.submit.grid()

    def parse(self, event):
        print(""You clicked?"")

    def start(self):
        self.root.mainloop()


Application().start()
"
How to get a data miner to do specific search on web page?,"from lxml.html import parse
from urllib2 import urlopen

SID_URL = 'http://www.cfilt.iitb.ac.in/indowordnet/ajax/onto.jsp?sid=%s'

url = 'http://www.cfilt.iitb.ac.in/indowordnet/first?langno=3&queryword=%E0%A6%97%E0%A6%BE%E0%A6%A7%E0%A6%BE'
tree = parse(urlopen(url))

sid = tree.find('.//label[@id=""sid""]').text

tree = parse(urlopen(SID_URL % sid))
for record in tree.xpath('//ontorecord'):
    print record.find('onto_label').text
"
How to specify one optional argument several times in docopt,"if __name__ == '__main__':
    opts = docopt(__doc__)
    opts['--comment'] == ['ASDF', 'QWERTY']
    opts['FILE'] == 'my_file'
"
Read the next word in a file in python,"with open(""offsetfile.txt"") as wordfile:
    wordgen = words(wordfile)
    for word in wordgen:
        if word in searchterms:   # searchterms should be a set() to make this fast
            break
    else:
        word = None               # makes sure word is None if the word wasn't found

    foundwords = [word, next(wordgen, None), next(wordgen, None)]
"
Adaptive Threshold parameters confusion,"Python: cv2.adaptiveThreshold(src, maxValue, adaptiveMethod, thresholdType, blockSize, C[, dst]) → dst
"
Plotting multiple lines with pandas dataframe,"for key, grp in df.groupby(['color']):
"
Save JSON outputed from a URL to a file,"wget 'http://search.twitter.com/search.json?q=hi' -O hi.json
"
Reading 32 bit signed ieee 754 floating points from a binary file with python?,"struct.unpack('f'*n, file.read(4*n))
"
python define replica set configuration,">>> from pymongo import Connection
>>> c = Connection(""morton.local:27017"", slave_okay=True)
>>> d.command( ""replSetInitiate"", c );
"
Python function pointers within the same Class,"def operation(func):
    func.is_operation = True
    return func

class Test(object):
    def run_operations(self, operation, *args, **kwargs):
        method = getattr(self, operation, None)
        if method is None:
            # raise or log or whatever
        elif not method.is_operation:
            # raise or log or whatever
        else:
            method(*args, **kwargs)

    @operation
    def operation_a(self, *args, **kwargs):
        print ""A""

    @operation
    def operation_b(self, *args, **kwargs):
        print ""B""

    def not_an_operation(self):
        print ""not me""
"
Intersection between two list of strings python,"a a
ab ba
abb bba
abba abba
abbab babba
abbabb bbabba
abbabba abbabba

c y
co ty
cod ity
codi lity
codil ility
codili dility
codilit odility
codility codility
"
Using Python list in a C extension,"from distutils.core import setup, Extension

lolan = Extension('lolan', sources = ['lolanmodule.c'])

setup (name = 'Example',
        version = '1.0',
        description = 'Just an exapmle',
        ext_modules = [lolan])
"
How to get the variable names from the string for the format() method,">>> from string import Formatter
>>> yourstring = ""My name is {myname}""
>>> [fn for _, fn, _, _ in Formatter().parse(yourstring) if fn is not None]
['myname']
"
Equivalent of grep -C in Pandas,"In [342]: df
Out[342]:
   txt
0    q
1    f
2    i
3    t
4    y
5    n
6    r
7    o
8    f
9    g
10   m
11   s
12   f
13   o
14   v
15   e
16   s
17   a
18   n
19   h
20   w
21   q
22   a
23   i
24   a
25   s
26   l
27   e
28   l
29   f

In [343]: pattern = 'a'

In [344]: N = 2

In [345]: idx = df[df.txt.str.contains(pattern)].index

In [346]: filtered_idx = sorted(list(set([x for tup in zip(idx-N, idx+N) for x in range(tup[0], tup[1]+1)])))

In [347]: df.loc[filtered_idx]
Out[347]:
   txt
15   e
16   s
17   a
18   n
19   h
20   w
21   q
22   a
23   i
24   a
25   s
26   l
"
convert unsigned integer to float in python,"packed_v = struct.pack('>l', b)
"
Python - Understanding __repr__,"int2meth = {1: ""current_balance"", 2: ""deposit_funds"",
            3: ""withdraw_funds"", 4: ""__repr__""}
"
Improving Python/django view code,"# forms.py

class UserProfileForm(forms.ModelForm):
    class Meta:
        model = UserProfile
        widgets = {
            'user': forms.HiddenInput() # initial data MUST be used to assign this
        }
"
Check for pattern recursively,"print LineOfOnesChecker(matrix).has_any()
"
Efficiency of imports in Python,"# time python import.py

7.83s user 0.55s system 99% cpu 8.381 total
1.52s user 0.11s system 99% cpu 1.630 total
1.54s user 0.09s system 100% cpu 1.626 total
1.48s user 0.15s system 100% cpu 1.623 total
"
Python guesses my number (reverse number guess) UnboundLocalError,"        if greater_or_smaller in ['g','s']:
            number = randint(number, 50) if greater_or_smaller == 'g' else randint(1, number)
            answer = raw_input(""Is your number %d? y/n> "" % number)
            if answer == 'y':
                print ""Hooray!""
            elif answer == 'n':
                greater_or_smaller()
"
How to save nas's all files path info into one file? Only 10M RAM Free,"def f():
    w = os.walk('/')
    for path in w:
        if os.path.isfile(path[0]) yield path[0]
"
What's the most efficient way to accumulate dataframes in pyspark?,"from itertools import chain
from functools import reduce
from pyspark.sql.types import StructType
from pyspark.sql.functions import col, lit, max
from pyspark.sql import DataFrame

df1 = sc.parallelize([
    (""U1"", 0, 1), (""U2"", 1, 1)
]).toDF([""Key"", ""FeatureA"", ""FeatureB""])

df2 = sc.parallelize([
  (""U1"", 0, 0, 1)
]).toDF([""Key"", ""FeatureC"", ""FeatureD"", ""FeatureE""])

df3 = sc.parallelize([(""U2"", 1)]).toDF([""Key"", ""FeatureF""])

dfs = [df1, df2, df3]
"
How to apply time-window related data analysis via Pandas in Python,"df1.loc[~df1.name.duplicated() & df1.time_diff.notnull(),:]
df1
  name  timestamp  time_diff
2    b        150         10
"
Open a text file window using Python,"import os
os.startfile(filename)
"
Python - making decorators with optional arguments,"@register_gw_method
def my_function():
    print('hi...')

@register_gw_method('say_hi')
def my_function():
    print('hi...')
"
loop variable aware numpy's slicing and vectorized calculations,"h_indices, w_indices = np.indices(shape=(h,w))
out_img = foo(img, h_indices, w_indices)
"
Most Pythonic way to plot a vector function,"num_charges = 4
charges = np.random.random_integers(-5,5,num_charges)
charges[charges==0] = 5
charges_positions = np.random.random((num_charges, 2))

y,x = np.mgrid[0:1:40j, 0:1:40j]
xdist = x - charges_positions[:,0].reshape(-1,1,1)
ydist = y - charges_positions[:,1].reshape(-1,1,1)

denom = ((xdist**2 + ydist**2)**1.5)
# Ignoring Coulomb's constant here...
Ex = (charges.reshape(-1,1,1) * xdist / denom).sum(axis=0)
Ey = (charges.reshape(-1,1,1) * ydist / denom).sum(axis=0)
"
Extract the number and following letter from regex,"currency, amount, _, multiplier =  re.match(r'(\D+)(\d+(\.\d+)?)([mMkK])', '$1.5k').groups()
"
What's the best practice for installing development versions of Python modules in Anaconda?,"(matplotlib-dev)~$ pip install -e git+git://github.com/matplotlib/matplotlib.git#egg=matplotlib-dev
Obtaining matplotlib from git+git://github.com/matplotlib/matplotlib.git#egg=matplotlib-dev
  Cloning git://github.com/matplotlib/matplotlib.git to ./src/matplotlib
...
Installing collected packages: matplotlib
  Running setup.py develop for matplotlib
Successfully installed matplotlib-1.5.0+337.g595868a

(matplotlib-dev)~$ python -c ""import matplotlib; print(matplotlib.__version__)""
1.5.0.post337+g595868a

(matplotlib-dev)~$ source deactivate
discarding /home/alistair/anaconda/envs/matplotlib-dev/bin from PATH

~$ python -c ""import matplotlib; print(matplotlib.__version__)""
1.4.3
"
Horizontal analysis by generating list using while-loop,">>> data = [[1,2,3],[4,5,6]]
>>> zip(*data)
[(1, 4), (2, 5), (3, 6)]
"
Python regular expression to modify paths,"(schemaLocation=)\s*\""(.*\/)?(.*\"")(.*)
"
Extra characters Extracted with XPath and Python (html),"my_answer = item1['Title'][0].strip()
"
Counting with scipy.sparse,">>> from sklearn.feature_extraction import DictVectorizer
>>> documents = [{""the"":1, ""boy"":1, ""ran"":1}, {""the"":1, ""dog"":1, ""ran"":1}]
>>> X = vectorizer.fit_transform(documents)
>>> X.toarray()
array([[ 1.,  0.,  1.,  1.],
       [ 0.,  1.,  1.,  1.]])
>>> vectorizer.inverse_transform(X[0])
[{'ran': 1.0, 'boy': 1.0, 'the': 1.0}]
"
Floating Point Equality Handling in Python,">>> '%0.20f' % (.1+.1+.1,)
'0.30000000000000004441'
>>> '%0.20f' % (.3,)
'0.29999999999999998890'
"
Passing objects from Django to Javascript DOM,"var myDjangoList = ((""{{django_list |safe}}"").replace(/&(l|g|quo)t;/g, function(a,b){
            return {
                l   : '<',
                g   : '>',
                quo : '""'
            }[b];
        }));

myDjangoList = myDjangoList.replace(/u'/g, '\'')
myDjangoList = myDjangoList.replace(/'/g, '\""')

myData = JSON.parse( myDjangoList );
"
Arbitrary Dictionary (JSON) to Stricter Tree-like Dictionary (JSON) in Python,">>> tree = { ""a"": { ""b"": 1 }}
>>> transform_node(""root"", tree)
{'name': 'root', 'children': [{'name': 'a', 'children': [{'name': 'b', 'value': 1}]}]}
"
Reading csv containing a list in Pandas,">>> df = pd.DataFrame.from_records(df[1].tolist(), index=df[0],
...                           columns=list('ABC')).reset_index()
>>> df['C'] = pd.to_datetime(df['C'])
>>> df
    0       A       B                          C
0  HK  5328.1  5329.3 2013-12-27 13:58:57.973614
1  HK  5328.1  5329.3 2013-12-27 13:58:59.237387
2  HK  5328.1  5329.3 2013-12-27 13:59:00.346325
"
Can I easily get datetime with less resolution in Python?,"dt = datetime.datetime.now()
#Now get rid of seconds and microseconds component:
dt = dt.replace(second=0, microsecond=0)
"
What is function.__code__ behavior across multiple program executions?,"1         0 LOAD_CONST               0 (<code object f at 0x7fe8a5902300, file ""p.py"", line 1>)
          3 LOAD_CONST               1 ('f')
          6 MAKE_FUNCTION            0
          9 STORE_NAME               0 (f)
         12 LOAD_CONST               2 (None)
         15 RETURN_VALUE
"
Error in mongo query execution through python when queries and collection name are varying,"result = mongo_result('spam') #spam is my collection's name.
for doc in result:
    print(doc)

{'_id': ObjectId('54dafa385a28b3f71731efbd'), 'name': 'search string'}
{'_id': ObjectId('54dafa3d5a28b3f71731efbe'), 'name': 'search string1'}
{'_id': ObjectId('54dafa3f5a28b3f71731efbf'), 'name': 'search string2'}
"
fd in subprocess.Popen,"__init__(self, args, bufsize=0, executable=None, stdin=None,
stdout=None, stderr=None, preexec_fn=None, close_fds=False, 
shell=False, cwd=None, env=None, universal_newlines=False, 
startupinfo=None, creationflags=0)
"
Pygame restart function,"start pygame and set global variables;
while the program is running:
    set all of the initial variables for the game (snake position, etc)
    while the snake is alive:
        handle input;
        check to see if the snake is dead;
"
"Index, for loops and making things look cleaner","lv_temp2 = LV.objects.all().order_by('id')
lv_temp4 = []
for lv_temp3 in lv_temp2:
    lv_temp4.append(lv_temp3.id)
"
Flatten the results of a group by in a python dataframe after printing the grouped instance counts,"col5  col2
1     A       1
1     D       3
2     B       2
3     A       3
3     C       1
4     B       1
5     B       2
6     B       1
dtype: int64
"
Table extraction with Selenium and PhantomJS never finishes,"In [13]: import requests

In [14]: from bs4 import BeautifulSoup, Tag

In [15]: url = 'http://www.moneycontrol.com/stocks/fno/marketstats/options/active_calls/index.php'

In [16]: r = requests.get(url)

In [17]: soup = BeautifulSoup(r.content, ""lxml"")

In [18]: table = soup.select_one(""table.tblList"")

In [19]: cols = [th.text.strip() for th in table.select_one(""tr"") if isinstance(th, Tag)]

In [20]: print(cols)
[u'Symbol', u'Expiry\n Date', u'Option Type', u'Strike Price', u'LastPrice', u'Change\n \t\t\t\t\t\t\t\tChg%', u'High\n  Low', u'Shares', u'Contracts', u'Value (Rs. Lakh)', u'Open Interest', u'Open Int Chg']

In [21]: elems = [[td.text.strip() for td in row if isinstance(td, Tag)] for row in table.select(""tr + tr"")]

In [22]: print(elems[0])
[u'IFCI', u'30-Jun-16', u'CE', u'27.50', u'0.50', u'0.25100.00%', u'0.650.20', u'18,760,000', u'938', u'90.05', u'6,000,000', u'2,520,00072.41%']

In [23]: print(elems[-1])
[u'EICHERMOT', u'30-Jun-16', u'CE', u'20,800.00', u'30.00', u'-30.00-50.00%', u'30.0030.00', u'25', u'1', u'0.01', u'225', u'00.00%']

In [24]: len(elems)
Out[24]: 1585
"
Python random lottery results,">>> a = get_user_input()
how many lines would you like? 5
>>> for i in range(a):
    create_lotter_numbers()


[47, 22, 4, 7, 41, 16]
[12, 30, 36, 1, 39, 10]
[7, 19, 7, 13, 1, 17]
[5, 26, 9, 49, 32, 22]
[32, 30, 5, 34, 45, 6]
"
How to convert rows into list using pandas python?,"In [35]: df = pd.DataFrame([['A', 10, 5, 3, 2], ['B', 8, 2, 2, 4]],
   ....:                   columns=['product', 'count', 'value1', 'value2', 'value3'])

In [36]: df
Out[36]:
  product  count  value1  value2  value3
0       A     10       5       3       2
1       B      8       2       2       4
"
"What does python sys.intern do, and when should it be used?",">>> import sys
>>> a = sys.intern('why do pangolins dream of quiche')
>>> a
'why do pangolins dream of quiche'
"
Python: changing IDLE's path in WIN7,">>> from os.path import abspath
>>> abspath('.')
"
Trying to write and read two matrices in text file,"#ElR is the first matrix and ShR is the second matrix
with open(""house.txt"", ""w"") as fE:
    fE.writelines(','.join(str(j) for j in i) + '\n' for i in ElR)

with open(""house.txt"", ""a"") as fS: # <-- notice the a
    fS.writelines(','.join(str(j) for j in i) + '\n' for i in ShR)
"
Moving Gif in Pygame?,"
img_names = [*my image names*]
all_imgs = {}
for img in img_names:
    all_imgs[img] = pygame.image.load(img)
"
Remove occuring elements from multiple lists (shorten multiple lists) by value,"x = [[0,0,0,1,2,3],[0,0,0,4,5,6],[0,0,0,0,7,8],[0,0,0,0,0,9]]

max(x)
Out[2]: [0, 0, 0, 4, 5, 6]
"
Menu Interface Player Records,"sweepers = [player for player in players if player.running_speed >= running_min]
"
Add multi-index to pandas dataframe and keep current index,"import numpy as np
import pandas as pd

df1 = pd.DataFrame(np.random.rand(3, 2))
df2 = pd.DataFrame(np.random.rand(4, 2))
df3 = pd.DataFrame(np.random.rand(5, 2))

print pd.concat([df1, df2, df3], keys=[""A"", ""B"", ""C""])
"
Find all combinations of a list of numbers with a given sum,"[(1, 2, 7), (1, 2, 7), (1, 9), (3, 7), (3, 7), (10,)]
"
What is the most effective way to incremente a large number of values in Python?,"childrenScores = np.zeros(10, dtype=int)
...
for box in boxes:
    if box[0]:
        childrenScores[box[1]] += 1 # NumPy advanced indexing
"
How to create a dictionary of lists from two columns in a dataframe,"from collections import defaultdict
d = defaultdict(list)
for i, j in zip(df.A,df.B):
    d[i].append(j)
"
Streaming two line graphs using bokeh,"C:\>bokeh serve --show myplot.py
"
"Pandas, Get count of a single value in a Column of a Dataframe","In [135]: %timeit np.in1d(a,1).sum()
The slowest run took 7.29 times longer than the fastest. This could mean that an intermediate result is being cached 
10000 loops, best of 3: 48.5 µs per loop

In [136]: %timeit np.sum(a == 1)
The slowest run took 5.23 times longer than the fastest. This could mean that an intermediate result is being cached 
1000 loops, best of 3: 273 µs per loop

In [137]: %timeit (a == 1).sum()
1000 loops, best of 3: 271 µs per loop
"
Flask-SQLAlchemy: How to conditionally insert or update a row,"existing_provider = Provider.query.get(1) # or whatever
# update the rssfeed column
existing_provider.rssfeed = form.rssfeed.data
db.session.commit()
"
Python sum of classes,"class AorB:
    def __new__(cls, par=None):
        if cls is not AorB: return super().__new__(cls)
        return super().__new__(A) if par else super().__new__(B)

class A(AorB):
    def __init__(self, par):
        self.par = par

class B(AorB):
    def __init__(self, par=None):
        pass
"
Iterate over a list to apply a method to each member,">>> config = ['a b','c d']
>>> [item.split() for item in config]
[['a', 'b'], ['c', 'd']]
"
"Assigning the inputs, with respect to its len()","[0, 13, 22, 13, 6, 4, 21, 9, 6, None,
 43, 51, 25, 41, 93, 98, 41, 43, 33, 68,
 145, 121, 138, 103, 145, 124, 133, 127, 110, 109, 106, 116, 132, 77, 109, 25, 35, 43, 67, 46, 53, 28, 103, 129, 143, 112, 76, 66, 47, 125, 86, 86, 71, 73, 112, 113, 126, 89, 57, 26, 51, 107, 33, 115, 51, 54, 70, 50, 44, 91, 30, ...]
"
unit converting program using python tkinter (trouble with creating windows),"    elif lol.get()==""m"":
"
Django - limit the choices of a choice field in a form,"def __init__(self, *args, **kwargs):
    is_staff = kwargs.pop('is_staff')
    super(AddMovementForm, self).__init__(*args, **kwargs)
    if is_staff:
        self.fields['status'].choices = STAFF_STATUS_CHOICES
    else:
        self.fields['status'].choices = STATUS_CHOICES
"
Byte Array in Python,"# Python 3
key = bytes([0x13, 0x00, 0x00, 0x00, 0x08, 0x00])

# Python 2
key = ''.join(chr(x) for x in [0x13, 0x00, 0x00, 0x00, 0x08, 0x00])
"
Fetching names from DesignMatrix in patsy,">>> DataFrame(dm, columns=dm.design_info.column_names)
   Intercept  carbs[T.lo]  carbs[T.very_high]  score
0          1            1                   0    1.0
1          1            0                   0    2.4
2          1            1                   0    1.2
3          1            1                   0    1.4
4          1            0                   1    1.8

[5 rows x 4 columns]
"
Why dual __init__ in python?,"(eg)
class MinimumBalanceAccount(BankAccount, LoanAccount):
    def __init__(self, minimum_value):
        super(MinimumBalanceAccount, self).__init__() # Calls BankAccount.__init__()
        super(MinimumBalanceAccount, self).__init__() # Still calls the same
"
"python writing txt file 500* 36 zero,then wrap lines in every 16","for i in range(500):
    for j in range (16):
        print '%8.1f' % (0),
    print 
    for j in range (16):
        print '%8.1f' % (0),
    print
    for j in range (4):
        print '%8.1f' % (0),
    print 
"
How do I send data from JS to Python with Flask?,"[{'foo':'bar','baz':'jazz'}] #[0: {'foo':'bar','baz':'jazz'}]
"
How to place numbers in a python list at the index of their magnitude,">>> max_len=max(l)
>>> new = [[0 for _ in range(max_len)] for _ in range(max_len)]
>>> for i,v in enumerate(l):
...     new[i][v-1] = v
... 
>>> new
[[0, 0, 0, 0, 5], [0, 2, 0, 0, 0], [1, 0, 0, 0, 0], [0, 0, 0, 4, 0], [0, 0, 3, 0, 0]]
"
Creating unique hash for directory in python,"import os
import hashlib

def sha1OfFile(filepath):
    sha = hashlib.sha1()
    with open(filepath, 'rb') as f:
        while True:
            block = f.read(2**10) # Magic number: one-megabyte blocks.
            if not block: break
            sha.update(block)
        return sha.hexdigest()

def hash_dir(dir_path):
    hashes = []
    for path, dirs, files in os.walk(dir_path):
        for file in sorted(files): # we sort to guarantee that files will always go in the same order
            hashes.append(sha1OfFile(os.path.join(path, file)))
        for dir in sorted(dirs): # we sort to guarantee that dirs will always go in the same order
            hashes.append(hash_dir(os.path.join(path, dir)))
        break # we only need one iteration - to get files and dirs in current directory
    return str(hash(''.join(hashes)))
"
Python appending after updating the line to a file,"def parse_file1():
   id_dict = {'at_id':'th3674','full_name':'Tom Harry'}
   f=open('ports.dat','a+')
   lines = f.readlines()
   if lines:
       last = lines[-1]
       last = last.replace(last.split('$')[0],id_dict['at_id'])
       last = last.replace(last.split('$')[1],id_dict['full_name'])
       last = split_colon(last)
       f.write('\n')
       f.write(last)

def split_colon(line):
    for i in range(2,5): 
        key = line.split('$')[i]
        for j in range(4):
            v = key.split(':')[j]
            line = line.replace(v, str(int(v) + 1))
    return line

if __name__=='__main__':
    parse_file1()
"
Using python iscpy module,"import iscpy

# Read in an existing config file
with open('/tmp/named.conf') as input_config_file:
    config_string = input_config_file.read()
config_dict = iscpy.ParseISCString(config_string)

# Modify the configuration
config_dict['zone ""example.com""'] = {
    'file':'""zone/example.com""',
    'type':'master'
}

# Write out the new config
config_string = iscpy.MakeISC(config_dict)
with open('/tmp/named-new.conf', 'w') as output_config_file:
    output_config_file.write(config_string)
"
How to remove escape sequence like '\xe2' or '\x0c' in python,">>> re.sub(r'[\x00-\x1f\x7f-\xff]', '', ''.join(map(chr, range(256))))
' !""#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~'
"
Implementing a bit-swap hack in Python,"def sb(b):
    return (b * 0x0202020202 & 0x010884422010) % 1023

def harness(i):
    print '{:4}: {} -> {}'.format(i,bin(i)[2:].zfill(8),bin(sb(i))[2:].zfill(8))    

for i in range(256):
    harness(i)
"
Convert datetime index in pandas to separate columns,"In [162]: df.columns = range(3, 9)

In [163]: df
Out[163]:
                   3         4          5         6         7         8
2015-01-01  2.847222 -5.197222 -13.900000  1.913889  0.872222  3.988889
2015-01-02  3.202778 -6.925000 -15.386111  0.911111  0.858611  4.352778
"
How do I change button size in Python?,"button1 = Button(self, text = ""Send"", command = self.response1, height = 100, width = 100) 
"
How to store arrays of pixels in Pygame,"coords = {}
coords['y1'] = [[255,255,255],[255,0,0]] #add dynamic keys to your dictionary and fill them with the right values
"
Parsing a message notification index in python using regular expressions,">>> re.match(r'\+CMTI: ""SM"",(\d+)', '+CMTI: ""SM"",0').group(1)
'0'
>>> re.match(r'\+CMTI: ""SM"",(\d+)', '+CMTI: ""SM"",234566').group(1)
'234566'
"
Finding duplicates within strings,"
Regular Module

Option Explicit
Option Compare Text
Public cP As cPairs, colP As Collection
Public colCityPairs As Collection
Public vSrc As Variant
Public vRes() As Variant
Public rRes As Range
Public I As Long, J As Long
Public V As Variant
Public sKey As String

Sub FindPairs()
vSrc = Range(""A1"", Cells(Rows.Count, ""C"").End(xlUp))
Set colP = New Collection
Set colCityPairs = New Collection

'Collect Pairs
For I = 2 To UBound(vSrc)
    V = Split(Replace(vSrc(I, 3), "" "", """"), "","")

    If UBound(V) >= 1 Then
        'sort the pairs
        SingleBubbleSort V

    Select Case UBound(V)
        Case 1
            AddPairs V(0), V(1)

        Case 2
            AddPairs V(0), V(1)
            AddPairs V(0), V(2)
            AddPairs V(1), V(2)
    End Select
    End If
Next I

ReDim vRes(0 To colCityPairs.Count, 1 To 3)
    vRes(0, 1) = ""Date""
    vRes(0, 2) = ""Location""
    vRes(0, 3) = ""Pairs""

For I = 1 To colCityPairs.Count
    With colCityPairs(I)
        vRes(I, 1) = .DT
        vRes(I, 2) = .City
        vRes(I, 3) = .Trainer1 & "", "" & .Trainer2
    End With
Next I

Set rRes = Range(""E1"").Resize(UBound(vRes, 1) + 1, UBound(vRes, 2))
With rRes
    .EntireColumn.Clear
    .Value = vRes
    With .Rows(1)
        .HorizontalAlignment = xlCenter
        .Font.Bold = True
    End With

    .Sort key1:=.Columns(3), order1:=xlAscending, key2:=.Columns(1), order2:=xlAscending, _
            Header:=xlYes
    .EntireColumn.AutoFit

    V = VBA.Array(vbYellow, vbGreen)
    J = 0
    For I = 2 To rRes.Rows.Count
        If rRes(I, 3) = rRes(I - 1, 3) Then
            .Rows(I).Interior.Color = .Rows(I - 1).Interior.Color
        Else
            J = J + 1
            .Rows(I).Interior.Color = V(J Mod 2)
        End If
    Next I
End With
End Sub

Sub AddPairs(T1, T2)

Set cP = New cPairs
With cP
    .Trainer1 = T1
    .Trainer2 = T2
    .City = vSrc(I, 2)
    .DT = vSrc(I, 1)
    sKey = .Trainer1 & ""|"" & .Trainer2

    On Error Resume Next

    colP.Add cP, sKey
    If Err.Number = 457 Then
        Err.Clear
        colCityPairs.Add colP(sKey), sKey & ""|"" & colP(sKey).DT & ""|"" & colP(sKey).City
        colCityPairs.Add cP, sKey & ""|"" & .DT & ""|"" & .City
    Else
        If Err.Number <> 0 Then Stop
    End If

    On Error GoTo 0

End With

End Sub

Sub SingleBubbleSort(TempArray As Variant)
'copied directly from support.microsoft.com
    Dim Temp As Variant
    Dim I As Integer
    Dim NoExchanges As Integer

    ' Loop until no more ""exchanges"" are made.
    Do
        NoExchanges = True

        ' Loop through each element in the array.
        For I = LBound(TempArray) To UBound(TempArray) - 1

            ' If the element is greater than the element
            ' following it, exchange the two elements.
            If TempArray(I) > TempArray(I + 1) Then
                NoExchanges = False
                Temp = TempArray(I)
                TempArray(I) = TempArray(I + 1)
                TempArray(I + 1) = Temp
            End If
        Next I
    Loop While Not (NoExchanges)
End Sub
"
splitting file into smaller files using by number of fields,"import csv
import sys
with open('filename.csv') as fin:
    csvout = csv.writer(sys.stdout, delimiter='|')
    for row in csv.reader(fin):
        csvout.writerow(row)
"
How to create an index on a ndarray using pandas,"df = pan.to_frame()
"
Matplotlib Colorbar scientific notation offset,"fig, ax = plt.subplots()                
im = ax.imshow(np.random.random((10,10)))                    
cb = fig.colorbar(im)     
cb.formatter.set_powerlimits((0, 0))
cb.ax.yaxis.set_offset_position('right')                         
cb.update_ticks()
plt.show()
"
Custom login and register form in web2py," form1 = SQLFORM(....)
"
"get elements in ""AND"" in logic string with Python","import re
import itertools
"
Return file from python module,"import glob
import os.path

import cherrypy
from cherrypy.lib.static import serve_file


class Root:
    def index(self, directory="".""):
        html = """"""<html><body><h2>Here are the files in the selected directory:</h2>
        <a href=""index?directory=%s"">Up</a><br />
        """""" % os.path.dirname(os.path.abspath(directory))

        for filename in glob.glob(directory + '/*'):
            absPath = os.path.abspath(filename)
            if os.path.isdir(absPath):
                html += '<a href=""/index?directory=' + absPath + '"">' + os.path.basename(filename) + ""</a> <br />""
            else:
                html += '<a href=""/download/?filepath=' + absPath + '"">' + os.path.basename(filename) + ""</a> <br />""

        html += """"""</body></html>""""""
        return html
    index.exposed = True

class Download:
        def index(self, filepath):
        return serve_file(filepath, ""application/x-download"", ""attachment"")
        index.exposed = True

if __name__ == '__main__':
    root = Root()
    root.download = Download()
    cherrypy.quickstart(root)
"
How to restrict user to select date between range of years in django?,"class Completion(models.Model):
    start_date = models.DateField(validators=[validate_current_century])
    end_date = models.DateField(validators=[validate_current_century])
"
How to make Netcat display Payload of packet,"IP 10.22.4.45.20 > 10.1.2.3:1234: Flags [S], seq 0:7, win 8192, length 7
IP 10.1.2.3:1234 > 10.22.4.45:20: Flags [S.], seq 2668993358, ack 1, win 14600, options [mss 1460], length 0
IP 10.22.4.45:20 > 10.1.2.3:1234: Flags [R], seq 1, win 0, length 0
"
Printing variable headers,"Using your original code:
x = 'hba_test'
y = 'abort/""Basic Sanity"" delayedabort/""Abort Control List""'
disable = False
test = 'disable='

#print header to seperate tests
l1 = len(x)
l2 = len(y)


if disable:
    headerBreak =""+"" + ""=""*(l1+12) + ""+""
    print headerBreak
    print ""| Skipping: %s |"" % x
else:
    headerBreak =  ""+"" + ""=""*(max(l1,l2)+11) + ""+""
    print headerBreak
    print ""| Running: %s"" % x, ' '*(l2-l1)+ '|'
    if 'disable=' in test:
       print ""| Skipping:%s |"" % y 
print headerBreak
"
wxPython auinotebook.GetSelection() return index to the first page,"def new_panel(self, nm):
        pnl = wx.Panel(self)
        pnl.identifierTag = nm
        self.nb.AddPage(pnl, nm, select=True) 
        self.sizer = wx.BoxSizer()
        self.sizer.Add(self.nb, 1, wx.EXPAND)
        self.SetSizer(self.sizer)
        #self.nb.SetSelection(self.nb.GetPageCount()-1)
        pnl.SetFocus() # Have focused the last panel.
        print self.nb.GetSelection()
"
Matching parts of lines in a file (python),"bc = {'A': 'T', 'C': 'G', 'G': 'C', 'T': 'A', 'N':'N'}

f = open('chr22.fa')
l = ''.join(line.strip() for line in f)
f.seek(0)

for line in f:
    fields = line.split('\t')
    gene_ID, chr, strand = fields[:2]

    start = int(fields[3])
    end = int(fields[4])

    if strand == '-':
        start, end = -(start + 1), -(end + 1)

    geneseq = ''.join(bc[base.upper()] for base in l[start:end])
"
Pandas reindexing data frame issue,"In [15]: df.reset_index() # col_fill=['A', 'B'])
Out[15]: 
   index  B
0      1  2
1      3  4
"
Understanding Python List Comprehension equivalent,"listOfStrings = ['i_am_exercising', 'python_functional', 'lists_comprehension']

result = [ """".join([elem.title() for elem in split]) for split in [el.split(""_"")for el in listOfStrings]]
print result

result = []
for split in [el.split(""_"") for el in listOfStrings]:
    result.append("""".join([elem.title() for elem in split]))
print result

result = []
temp1 = []
for el in listOfStrings:
    temp1.append(el.split(""_""))
for split in temp1:
    result.append("""".join([elem.title() for elem in split]))
print result

result = []
temp1 = []
for el in listOfStrings:
    temp1.append(el.split(""_""))
for split in temp1:
    temp2 = []
    for elem in split:
        temp2.append(elem.title())
    result.append("""".join(temp2))
print result
"
FIltering more then one string with list comprehension,"blacklist = ('.jpg', '.jpeg', '.png')
filtered = [elem for elem in li if not elem.endswith(blacklist)]
"
How to pick a random element in an np array only if it isn't a certain value,"In [281]:

x = np.array([1.0,0.0,1.5,0.0,6.0])
non_zero_idx=np.argwhere(x!=0).flatten()
np.random.shuffle(non_zero_idx)
random_pick=x[non_zero_idx]
random_pick[0]
Out[281]:
1.5
In [282]:

%%timeit

x = np.array([1.0,0.0,1.5,0.0,6.0])
non_zero_idx=np.argwhere(x!=0).flatten()
np.random.shuffle(non_zero_idx)
random_pick=x[non_zero_idx]
random_pick[0]
10000 loops, best of 3: 104 µs per loop
"
are there dictionaries in javascript like python?,"states_dictionary={ 
     ""CT"":[""alex"",""harry""], 
     ""AK"":[""liza"",""alex""], 
     ""TX"":[""fred"", ""harry""]
};
"
Insert repeated value across list slices,"slices = [np.s_[3:6], np.s_[11:17]]
for s in slices:
    bools[s] = False
"
Fastest way to count the occurance of a string,"Counter({'led bulb': 2, 'earphones': 2, 'mobile': 2, 'memory card': 1, 'shoes': 1})
"
How to tree-search an html file tag with no specific type,"def get_str_between(s, before, after):
  # gets a substring between two strings in a string in python
  # by: Cody Kochmann
  unique=""~~~~the~obvious~way~to~do~it~~~~""
  return(s.replace(before, unique).replace(after, unique).split(unique)[1])

def get_every_str_between(s, before, after):
  # returns an array of substrings between ""before"" and ""after""
  # by: Cody Kochmann
  unique=""~~~~this~is~the~obvious~way~to~do~it~~~~""
  second_unique=""~~~~i~think~you'll~like~this~~~~~""
  s=(s.replace(before, unique).replace(after, second_unique).split(unique))
  out=[]
  while len(s):
    tmp=s.pop()
    if second_unique in tmp:
      out.append(tmp.split(second_unique)[0])
  return(out)

target = '<span style=""color: blue; font-size: 36px; font-weight: 600;""> string </span>'

print get_every_str_between(target, "">"", ""</"")
"
scipy.optimize.minimize : compute hessian and gradient together,">>> f_jac([3,2])
new elaboration
Out: [6, 4]
>>> f_hes([3,2])
fetch cached value
Out: [[2, 0], [0, 2]]
"
nested if-else as one-liners,"parent = ('    ' if comment['parent'] == cid-1 else commit['parent']) if 'parent' in commit else '<no parent>'
"
parse blocks of text from text file using Python,"open(files[0]).read().split('1:', 1)[1].split('\n')[:19]
"
Apply a pairwise shapely function on two numpy arrays of shapely objects,"contains_vectorized(geo_polygons, geo_points[:,np.newaxis])
"
Python modifies newlines when writing a file,"with open('file.txt', 'w', newline='') as f:
"
How to make a menu in a Base Template(Django)?,"{% for item in menu %}
    <a href=""{{ item.link }}"">{{ item.name }}</a>
{% empty %}
    Do something for empty...
{% endfor %}
"
Python: Sorting a list by class objects,"def get_occ(d): return d.occ
fullset.sort(key=get_occ)
"
Static lists in Python for arithmetic manipulations,">>> 12 * b + 20 * c + 30 * d
204
"
Using Python in vimscript: How to export a value from a python script back to vim?,"function! TestPy() range

    let startline = line(""'<"")
    let endline = line(""'>"")
    echo ""vim-start:"".startline . "" vim-endline:"".endline
python << EOF
import vim
s = ""I was set in python""
vim.command(""let sInVim = '%s'""% s)
start = vim.eval(""startline"")
end = vim.eval(""endline"")
print ""start, end in python:%s,%s""% (start, end)
EOF
    echo sInVim
endfunction
"
Remove duplicate method for Python Pandas doesnt work,"In [106]:

df = df.drop_duplicates('new', take_last=False)
df.groupby('new').max()
Out[106]:
            A         B         C         D  new2
new                                              
1   -1.698741 -0.550839 -0.073692  0.618410     1
3    0.519596  1.686003  1.395585  1.298783     2
4    1.557550  1.249577  0.214546 -0.077569     4
5   -0.183454 -0.789351 -0.374092 -1.824240     5
7   -1.176468  0.546904  0.666383 -0.315945     7
8   -1.224640 -0.650131 -0.394125  0.765916     8
10  -1.045131  0.726485 -0.194906 -0.558927     5
"
To ignore space in python argparse,"$ python test.py -s 90030#95000#m#6099#bc 90031#95001#s#1#+100ABC \
    90032#95002#s#2#+200ABC 90033#95003#s#3#+300\ ABC
"
Is there an easy way to restart a python 3 code once it has ended?,"pi = 22./7
print (u""Eureka! \u03C0 == %.2f""%pi)
"
issue extracting html page's string using bs4,"                        Please could you stop the noise,
I'm trying to get some rest
From all the unborn chicken voices in my head
What's that?
What's that?

When I am king, you will be first against the wall
With your opinion which is of no consequence at all
What's that?
What's that?

...
"
Using Nearest Neighbor search on an n element object,"def metric(a, b):
    s = 0
    for x, y in zip(a,b):
        s += abs(x-y)
    return s / len(a)
"
Python - fill the no-used dates,"def add_missing(l):
    st = set(map(itemgetter(0), data))
    it = iter(l)
    start, end = min(st), max(st)
    for day in range((end - start).days + 1):
        dte = start + timedelta(days=day)
        if dte not in st:
            yield (dte, 0)
        else:
            yield next(it)
"
Accessing file path in the os,"PATH = os.path.abspath(os.path.join(os.path.dirname(sys.argv[0])))
"
Remove dtype datetime NaT,"  col1 col2        date
0    a    b  2014-08-14
1    c                 
"
Python - While Loop Locks Application,"from Tkinter import *
import tkMessageBox
import threading
import time
root = Tk()
root.geometry(""450x250+300+300"")
root.title(""Raspberry PI Test"")
print dir(root)
count = 0
def start_counter():
    global count
    count = 500
    root.after(1,update_counter)
def update_counter():
    global count
    count -= 1
    if count < 0:
        count_complete()
    else:
        root.after(1,update_counter)

def count_complete():
    print ""DONE COUNTING!! ... I am now back in the main thread""
def mymessage():
    tkMessageBox.showinfo(title=""Alert"", message=""Hello World!"")

buttonLoop = Button(root, text=""Start Loop"", command=myloop)
buttonLoop.place(x=5, y=15)

buttonMessage = Button(root, text=""Start Loop"", command=mymessage)
buttonMessage.place(x=85, y=15)


root.mainloop()
"
Rescale a whole Panel in order to fit in a window,"import wx

    class MyPanel(wx.Panel):   # panel embedded in the main panel
        def __init__(self, parent):
            wx.Panel.__init__(self, parent, -1)
            sizer = wx.BoxSizer(wx.VERTICAL)
            txt = wx.StaticText(self, label=""Missing Bitmap"");
            sizer.Add(txt, 0, wx.SHAPED, 10)

            self.SetInitialSize((1200, 800))
            self.BackgroundColour = wx.RED
            self.Sizer = sizer

            self.Bind(wx.EVT_SIZE, self.OnSize)

        def OnSize(self, evt):
            hsize = evt.Size[0] * 0.75 # Constrain max height to 75% of width
            self.SetSizeHints(-1, hsize, maxH=hsize)
            evt.Skip()
"
How to understand python decorator arguments pass,"() {}
"
Remove all hex characters from string in Python,">>> s.decode('utf8').encode('ascii', errors='ignore')
'http://www.google.com blah blah#%#@$^blah'
"
How to slice a list with START being larger than STOP,">>> x = list(range(8))
>>> foo(x, 5, 2)
[5, 6, 7, 0, 1]
"
Naming/Calling Generated Object w/ Classes,"def clicked(self, mouse):
    if mouse.x >= self.x and mouse.x <= self.x+self.width:
        if mouse.y >= self.y and mouse.y <= self.y+self.height:
            return self
    return False
"
Removing words containing digits from a given string,"import re

def checkio(text):

    text = re.sub('[,\.\?\!]', ' ', text).lower()
    words = [w for w in text.split() if not re.search(r'\d', w)]
    print words ## prints [] in this case
"
not getting date time from correctly formatted string,">>> from dateutil import parser
>>> parser.parse(s)
datetime.datetime(2015, 5, 15, 11, 22, 54)
"
Python creating timestamps at different locations/classes to log function block run time,"import mytimer

def somefun():
    mytimer.start()

somefun()
"
Converting Python objects to JavaScript for PyV8,">>> ctx.locals.blub3 = get_js_obj({'a':[1,2,3]})
>>> ctx.locals.blub4 = get_js_obj([1,2,3])
>>> ctx.eval(""blub3.a.length"")
3
>>> ctx.eval(""blub4.length"")
3
"
change CLIENT_FOUND_ROWS flag in django for mysql-python (MySQLdb)?,"DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.',
        'NAME': '',                      
        'USER': '',                      
        'PASSWORD': '',                  
        'HOST': '', 
        'PORT': '',                      
        'OPTIONS': {
            'client_flag': 0
        }
    }
}
"
Compare two columns using pandas,"df['que'] = df.apply(lambda x : x['one'] if x['one'] >= x['two'] and x['one'] <= x['three'] else """", axis=1)
"
Polymorphic belongs-to relationships in SQLAlchemy?,"class Artist(HasPhotos, db.Model):
    pass
"
Passing method as function in Scala - conversion from Python,"def run(f: Int => Int) {
  println(""before call: 1, after call "" + f(1))
}

def f(x: Int) = x + 1
run(f)
// before call: 1, after call 2
"
Python call a package submodule with variable module name,"# in colors/__init__.py
import blue
import red
"
python: how to sort a list which is returned from a sql query?,">>> lis = [('a', Decimal('1420.3345345278832575')), ('b', Decimal('380.0000000000000000')),('c', Decimal('382.0000000000000000'))]
>>> lis.sort(key=itemgetter(1))
>>> lis
[('b', Decimal('380.0000000000000000')), ('c', Decimal('382.0000000000000000')), ('a', Decimal('1420.3345345278832575'))]
"
How to get the item with max date value in a python dictionary?,"min(a, key=lambda k: a[k] if isinstance(a[k], datetime) else datetime.max)
"
Using index in Python to iterate through columns,"name = motif[1] ### using column index
print name
for value in column[1]: ### using column index
    if value == ""1"":
        print coordinates
        out = open(""%s.bed"" %name, ""a"")
        out.write(str(coordinates)+""\n"")
    elif value == ""0"":
        pass
"
How do I capture multiple patterns from a line in python?,"[('a', '111.222.222.111', '22.222.111.111')]
[('b', '22.111.22.222', '153.33.233.111')]
[('c', '222.30.233.121', '44.233.111.111')]
[('d', '22.111.22.222', '153.33.233.111')]
"
How does youtube-dl generate direct link?,"_VALID_URL = r""""""(?x)^
                 (
                     (?:https?://|//)                                    # http(s):// or protocol-independent URL
                     (?:(?:(?:(?:\w+\.)?[yY][oO][uU][tT][uU][bB][eE](?:-nocookie)?\.com/|
                        (?:www\.)?deturl\.com/www\.youtube\.com/|
                        (?:www\.)?pwnyoutube\.com/|
                        (?:www\.)?yourepeat\.com/|
                        tube\.majestyc\.net/|
                        youtube\.googleapis\.com/)                        # the various hostnames, with wildcard subdomains
                     (?:.*?\#/)?                                          # handle anchor (#/) redirect urls
                     (?:                                                  # the various things that can precede the ID:
                         (?:(?:v|embed|e)/(?!videoseries))                # v/ or embed/ or e/
                         |(?:                                             # or the v= param in all its forms
                             (?:(?:watch|movie)(?:_popup)?(?:\.php)?/?)?  # preceding watch(_popup|.php) or nothing (like /?v=xxxx)
                             (?:\?|\#!?)                                  # the params delimiter ? or # or #!
                             (?:.*?&)?                                    # any other preceding param (like /?s=tuff&v=xxxx)
                             v=
                         )
                     ))
                     |youtu\.be/                                          # just youtu.be/xxxx
                     |(?:www\.)?cleanvideosearch\.com/media/action/yt/watch\?videoId=
                     )
                 )?                                                       # all until now is optional -> you can pass the naked ID
                 ([0-9A-Za-z_-]{11})                                      # here is it! the YouTube video ID
                 (?!.*?&list=)                                            # combined list/video URLs are handled by the playlist IE
                 (?(1).+)?                                                # if we found the ID, everything can follow
                 $""""""
"
Trouble with pandas to_csv function,"nd = df.values[i]
test = pd.DataFrame(data=[nd], index=None, columns=None)
test.to_csv('SGX[Defunct]' + '.txt', mode='a', sep='\t', header=0, index=0)
"
Adding a Floatformat to Django Custom Tag,"{% average total_traffic.Monday total_sales.Monday as result %}
 <td>{{result|floatformat:2}}</td>
"
Python macro in regular expression,"frequncy_str = ('Lateral', 'Daily', 'Weekly', 'Monthly')
re_str = '(?i)<h5>(' + '|'.join(frequency_str) + ')</h5>'
"
Get length of line in Java file using python,"bad_chars = ' \t\n\r'

def count_chars():
    with open('someclass.java', 'r') as javafile:
        for line in javafile:
            cleaned = filter(lambda c: c not in bad_chars, line)
            if cleaned:
                yield len(cleaned)
"
Python quickly hash mutable object,">>> hb1[2] = 'z'
>>> d[hb2] = 2
>>> d
{bytearray(b'abzd'): 1, bytearray(b'abcd'): 2}
"
How to use SHGetFileInfo with SHGFI_PIDL in python,"python setup3.py install
"
How do I filter values in a Django form using ModelForm?,"form = ExcludedDateForm(user=request.user)
"
Perform operation on every array element pair quickly,"from itertools import combinations
a = [5,2,8,14,6,13]

print [sum(i) for i in list(combinations(a, 2))]
"
Pandas - group by consecutive ranges,"df = pd.DataFrame([[1,3,10], [4,10,7], [11,17,6], [18,26, 12],
[27,30, 15], [31,40,6], [41, 42, 6]], columns=['start','end', 'height'])
"
What is the correct syntax for using logical or boolean indexing with Pandas DataFrames?,"df.loc[df['B'] > 30,'B'] = df.loc[df['B'] > 30,'B'] - 10
"
Trying to send a POST-request with urllib.request returns the same page,"params = {
    'name_ffb': '',
    'ort_ffb': '',
    'strasse_ffb': '',
    'plz_ffb': '50000',
    'plz_ff2b': '50030',
    'land_ff': '',
    'rubrik_ff': '',
    'submit22': 'Suchen'
}
DATA = urllib.parse.urlencode(params)
DATA = DATA.encode('utf-8')
"
How to create dummy variable and then aggregate using scikit-learn?,"result = to_sparse_pivot(df, 'id', 'item', 'count')
"
How to get the list of edge values corresponding to all possible paths of a particular length in a graph in Python?,">>> list(findPaths(graph, 'L0', 3))
[['01', '14', '45'], ['01', '12', '23']]
>>> list(findPaths(graph, 'L0', 4))
[['01', '12', '23', '31']]
>>> list(findPaths(graph, 'L0', 2))
[['01', '14'], ['01', '12']]
"
Convert AWK regex to Python script,">>> line.split()
['2011-05-16', '09:46:22,361', '[Thread-4847133]', 'PDU', 'D', '<G_CC_SMS_SERVICE_51408_656.O_', 'CC_SMS_SERVICE_51408_656-ServerThread-VASPSessionThread-7ee35fb0-7e87-11e0-a2da-00238bce423b-TRX', '-', '2011-05-16', '09:46:22', '-', 'OUT', '-', '(submit_resp:', '(pdu:', 'L:', '53', 'ID:', '80000004', 'Status:', '0', 'SN:', '25866)', '98053090-7f90-11e0-a2da-00238bce423b', '(opt:', ')', ')', '>']
"
Python itertools product start from certain,"START_VALUE = 200
all_combos = itertools.product(letters,repeat=9)

#start at START_VALUE and stop at None (the end)
combos = itertools.islice(all_combos,START_VALUE,None)

for i,password in enumerate(combos,start=START_VALUE):
    ...
"
Flask-SQLAlchemy - How to append a value to a column?,"user = ...# some code that creates or selects a user
class_ = ...# some code that creates or selects a class
# here is the addition
class_.participants.append(user)
session.commit()
"
Is Pythons random.randint statistically random?,"import random
ba = bytearray([random.randint(0,255) for n in xrange(1000000)])
with open('randint.dat', 'w+') as f:
    f.write(ba)
"
Populating a SQLite3 database from a .txt file with Python,"create(parliament='7', name='Marta Andreasen', country='United Kingdom', ...)
"
Why does this class program not return the balance?,"def balance(self):
    return self.balance
"
Python Programming - input/output,"def open_recipes(path):
    try:
        with open(path) as stream:
            return json.loads(stream.read())
    except FileNotFoundError:
        # start a new database
        return {}

def save_recipes(path, recipes):
    with open(path, 'w') as stream:
        stream.write(json.dumps(recipes, indent=2))
"
Find peak of 2d histogram,"H, xedges, yedges = np.histogram2d(x, y, range=rang, bins=binsxy)
"
Decorating a function with a method (with arbitrary arguments),"@foo
def bar():
    pass
"
multiple replacement values in python3,"000000000000001   -0000000000000000000020000200000000000000000003   -10000100000000000000500000000000000000000000
"
How to iterate in a cartesian product of lists,">>> from itertools import product
>>> for word, letter, hours in product([""AAA"", ""BBB"", ""CCC""], [""M"", ""Q"", ""S"", ""K"", ""B""], [""00:00"", ""01:00"", ""02:00"", ""03:00""]):
...     print word, letter, hours
... 
AAA M 00:00
AAA M 01:00
AAA M 02:00
AAA M 03:00
...
CCC B 00:00
CCC B 01:00
CCC B 02:00
CCC B 03:00
"
python module organisation,"def core_function():
    print ""core function""
"
How can I get pandas Timestamp offset by certain amount of months?,"In [135]:
k=2
t1 + pd.datetools.relativedelta(months=k)

Out[135]:
Timestamp('2013-06-01 00:00:00')
"
Create current class default instance in its base class,"def add_default(cls):
    cls.default = cls()
    return cls


@add_default
class Bird(Animal):
   # stuff
"
Node.js Python-shell: while true loop not working,"var PythonShell = require('python-shell');

var pyshell = new PythonShell('test.py',{scriptPath:""./"", pythonOptions: ['-u']});

pyshell.on('message', function (message) {
  // received a message sent from the Python script (a simple ""print"" statement) 
  console.log(message);

});

// end the input stream and allow the process to exit 
pyshell.end(function (err) {
  if (err) throw err;
  console.log('finished');
});
"
Get python class object from string,"import importlib

TWO_FACTOR_BACKENDS = (
    'id.backends.AllowToBeDisabled', # Disable this to enforce Two Factor Authentication
    'id.backends.TOTPBackend',
    'id.backends.HOTPBackend',
    #'id.backends.YubikeyBackend',
    #'id.backends.OneTimePadBackend',
    #'id.backends.EmailBackend',
)

backends = [getattr(importlib.import_module(mod), cls) for (mod, cls) in (backend.rsplit(""."", 1) for backend in TWO_FACTOR_BACKENDS)]
"
Python: Replace tags but preserve inner text?,">>> s = 'This is an [[example]] sentence. It is [[awesome]].'
>>> s.replace('[[', '<b>').replace(']]', '</b>')

'This is an <b>example</b> sentence. It is <b>awesome</b>.'
"
Python multiprocessing for expensive operation with 2D array,"from multiprocessing import Pool

def f(x):
    return x*x

pool = Pool(processes=4)
print pool.map(f, range(10))
"
How to run Multi threaded jobs in apache spark using scala or python?,"val userProdSet = buy_values
    .map{case (user, product, _) => (user, product)} 
    .aggregateByKey(Set.empty[Int])((s, e) => s + e, (s1, s2) => s1 ++ s2)
"
Is it possible to have multiple statements in a python lambda expression?,"map(lambda x: heapq.nsmallest(x,2)[1],  list_of_lists)
"
"Sort a numpy array by another array, along a particular axis, using less memory",">>> c = numpy.rec.fromarrays([a, b], names='f, i')
"
Python subprocess Popen.communicate() equivalent to Popen.stdout.read()?,"def communicate(self, input=None):
    ...
    # Optimization: If we are only using one pipe, or no pipe at
    # all, using select() or threads is unnecessary.
    if [self.stdin, self.stdout, self.stderr].count(None) >= 2:
        stdout = None
        stderr = None
        if self.stdin:
            if input:
                self.stdin.write(input)
            self.stdin.close()
        elif self.stdout:
            stdout = self.stdout.read()
            self.stdout.close()
        elif self.stderr:
            stderr = self.stderr.read()
            self.stderr.close()
        self.wait()
        return (stdout, stderr)

    return self._communicate(input)
"
How to apply Condition in regex,"\/(?:dp|product)\/|[&?]page=
"
Move some part of column to another python,"(1, 11) (2, 2)  (3, 3)  (5, 5)  (7, 7)  (9, 19)
(1, 31)         (3, 13)         (7, 17) (9, 29)
(1, 41)         (3, 23)         (7, 37) (9, 59)
(1, 61)         (3, 43)         (7, 47) (9, 79)
(1, 71)         (3, 53)         (7, 67) (9, 89)
                (3, 73)         (7, 97)     
                (3, 83)                     
"
How to create new class instances dynamically at runtime in python?,"def pop(self):
    if self.child is not None:
        item = self.child.pop()
        if len(self.child.items) == 0:
            self.child = self.child.child
            if self.child is not None:
                self.child.parent = self
    else:
        item = self.items.pop()
    return item

def popAt(self, stacknumber):
    s = self
    for i in range(stacknumber):
        s = s.child
        if s is None:
            return None
    if len(s.items) == 0:
        return None
    item = s.items.pop()
    if len(s.items) == 0 and s.parent is not None:
        s.parent.child = s.child
        if s.child is not None:
            s.child.parent = s.parent
    return item
"
how to kill running subprocess while another subprocess is completed (in multiprocessing),"from multiprocessing import Process, Event

class MyProcess(Process):
    def __init__(self, event, *args, **kwargs):
        self.event = event
        Process.__init__(self, *args, **kwargs)

    def run(self):
        Process.run(self)
        self.event.set()

class PythonHelper(object):
    @staticmethod
    #with your fix
    def run_in_parallel(*functions):
        event = Event()
        processes=[]
        for function in functions:
            process=MyProcess(event, target=function)
            process.start()
            processes.append(process)
        # wait for any process to complete
        event.wait()
        # one process completed
        # terminate all child processes
        for process in processes:
            process.terminate()
        for process in processes:
            process.join()


class Logger(object):
    def run_numbers_1(self):
        for i in range(90000):
            print(""1 number: {}"".format(i))
    def run_numbers_2(self):
        for i in range(10000):
            print(""2 number: {}"".format(i))
    def run_logger(self):
        PythonHelper.run_in_parallel(self.run_numbers_1,self.run_numbers_2)

if __name__==""__main__"":
    logger=Logger()
    logger.run_logger()
"
How to pack the elements of product of matrix multiplication back,"from operator import mul
from itertools import starmap, izip, imap

def matmul(a, b):
     c = zip(*b)
     def element(row):
         # or   [sum(map(mul, row, col)) for col in c]  
         # or   [sum(imap(mul, row, col)) for col in c]  
         return [sum(starmap(mul, izip(row, col))) for col in c]
     print [element(row) for row in a]
"
How to round pandas dataframe to fractions?,"print (df[['B', 'C']].apply(lambda x: (x / 0.25).round()* 0.25))

      B     C
0  0.50  1.25
1 -1.25  1.00
2  1.50  1.00
3 -0.25 -2.00
4 -0.75 -0.25
5  1.00  0.00
6  0.75  0.50
7 -0.75  0.25
8  0.00  1.25
9 -2.25 -1.50
"
Pythonic inverse dict non-unique mappings,"from timeit import timeit

methods = [['Vroomfondel1', '''from collections import defaultdict
import itertools
dict1 = {'a':[1,2,3], 'b':[1,2,3,4], 'c':[1,2]}
dict2 = defaultdict(list)
for k,v in itertools.chain.from_iterable([itertools.product(vals,key) for key,vals in dict1.items()]):
    dict2[k].append(v)'''],

['Vroomfondel2', '''from collections import defaultdict
import itertools
dict1 = {'a':[1,2,3], 'b':[1,2,3,4], 'c':[1,2]}
dict2 = defaultdict(list)
[dict2[k].append(v) for k,v in itertools.chain.from_iterable([itertools.product(vals,key) for key,vals in dict1.items()])]'''],


['***Vroomfondel2 mod', '''dict1 = {'a':[1,2,3], 'b':[1,2,3,4], 'c':[1,2]}
dict2 = {item: [key for key in dict1 if item in dict1[key]] for value in dict1.values() for item in value}'''],

['mhlester1', '''dict1 = {'a':[1,2,3], 'b':[1,2,3,4], 'c':[1,2]}
dict2 = {}
for key, values in dict1.items():
    for value in values:
        dict2.setdefault(value, []).append(key)'''],

['mhlester1 mod', '''from collections import defaultdict
dict1 = {'a':[1,2,3], 'b':[1,2,3,4], 'c':[1,2]}
dict2 = defaultdict(list)
for key, values in dict1.items():
    for value in values:
        dict2[value].append(key)'''],

['mhlester2', '''from collections import defaultdict
dict1 = {'a':[1,2,3], 'b':[1,2,3,4], 'c':[1,2]}
dict2 = defaultdict(list)
for key, values in dict1.items():
    for value in values:
        dict2[value].append(key)'''],

['initial', '''from collections import defaultdict
dict1 = {'a':[1,2,3], 'b':[1,2,3,4], 'c':[1,2]}
dict2 = defaultdict(list)
for i in dict1:
    for j in dict1[i]:
        dict2[j].append(i)''']

]

for method in methods:
    print ""% 15s"" % (method[0]), '\t', timeit(method[1], number=10000)
"
Python simple naked objects,"class Foo(object):
    pass

myobject = Foo()
myobject.foo = 'bar'
"
Where should I subtract 1 when generating random numbers as a list index?,"random.choice(array)
"
Obtain Latitude and Longitude from a GeoTIFF File,"Driver: GTiff/GeoTIFF
Size is 512, 512
Coordinate System is:
PROJCS[""NAD27 / UTM zone 11N"",
    GEOGCS[""NAD27"",
        DATUM[""North_American_Datum_1927"",
            SPHEROID[""Clarke 1866"",6378206.4,294.978698213901]],
        PRIMEM[""Greenwich"",0],
        UNIT[""degree"",0.0174532925199433]],
    PROJECTION[""Transverse_Mercator""],
    PARAMETER[""latitude_of_origin"",0],
    PARAMETER[""central_meridian"",-117],
    PARAMETER[""scale_factor"",0.9996],
    PARAMETER[""false_easting"",500000],
    PARAMETER[""false_northing"",0],
    UNIT[""metre"",1]]
Origin = (440720.000000,3751320.000000)
Pixel Size = (60.000000,-60.000000)
Corner Coordinates:
Upper Left  (  440720.000, 3751320.000) (117d38'28.21""W, 33d54'8.47""N)
Lower Left  (  440720.000, 3720600.000) (117d38'20.79""W, 33d37'31.04""N)
Upper Right (  471440.000, 3751320.000) (117d18'32.07""W, 33d54'13.08""N)
Lower Right (  471440.000, 3720600.000) (117d18'28.50""W, 33d37'35.61""N)
Center      (  456080.000, 3735960.000) (117d28'27.39""W, 33d45'52.46""N)
Band 1 Block=512x16 Type=Byte, ColorInterp=Gray
"
How can I add different elements to a list in a list? Python 3,">>> blokk = [[]]*15
>>> blokk
[[], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
>>> blokk[0].append(1)
>>> blokk
[[1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]
>>> blokk = [[] for _ in range(15)]
>>> blokk
[[], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
>>> blokk[0].append(1)
>>> blokk
[[1], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
"
Regex on unicode string,"<meta http-equiv=""Content-Type"" content=""text/html; charset=euc-kr"">
"
Compare two different files line by line and write the difference in third file - Python,"def build_set(filename):
    # A set stores a collection of unique items.  Both adding items and searching for them
    # are quick, so it's perfect for this application.
    found = set()

    with open(filename) as f:
        for line in f:
            # [:2] gives us the first two elements of the list.
            # Tuples, unlike lists, cannot be changed, which is a requirement for anything
            # being stored in a set.
            found.add(tuple(sorted(line.split()[:2])))

    return found

set_more = build_set('100rwsnMore.txt')
set_del = build_set('100rwsnDeleted.txt')

with open('results.txt', 'w') as out_file:
   # Using with to open files ensures that they are properly closed, even if the code
   # raises an exception.

   for res in (set_more - set_del):
      # The - computes the elements in set_more not in set_del.

      out_file.write("" "".join(res) + ""\n"")      
"
How does a recursive function returns a tuple of lists?,"def separate(p, L, idx=0):
    if idx == len(L):
        return [], []

    l1, l2 = separate(p, L, idx + 1)

    item = L[idx]

    if p(item):
        l1.append(item)
    else:
        l2.append(item)
    return l1, l2    
"
Does my code prevent directory traversal?,">>> import os.path
>>> os.curdir
'.'
>>> startdir = os.path.abspath(os.curdir)
>>> startdir
'/home/jterrace'
"
Flask use URL variable in function,"from flask import Flask, request
app = Flask(__name__)

@app.route('/<pathVariable>/')
def test(pathVariable):

    test = pathVariable
    path = request.path
    script_root = request.script_root
    base_url = request.base_url
    url = request.url
    url_root = request.url_root
    url_rule = request.url_rule

    print (""test is: %s"" %path)
    print (""path is: %s"" %path)
    print (""script_root is: %s"" %script_root)
    print (""base_url is: %s"" %base_url)
    print (""url is: %s"" %url)
    print (""url_root is: %s"" %url_root)
    print (""url_rule is: %s"" %url_rule)

    return render_template('/example.html', pathVariable=pathVariable)

if __name__ == '__main__':
    app.run()
"
search in pandas series des not work,"In [123]:

df = pd.DataFrame({'name':['hello','world','python']})
df
Out[123]:
     name
0   hello
1   world
2  python

In [126]:

specifc_names = ['hello', 'world']
df[df['name'].isin(specifc_names)]
Out[126]:
    name
0  hello
1  world
"
Storing Credentials for Offline Access in Datastore,"flow = OAuth2WebServerFlow(
            client_id=client_id,
            client_secret=client_secret,
            scope=scope,

            access_type = 'offline',
            approval_prompt='force',
            redirect_uri=self.request.relative_url('/admin/auth_return'))
# Get the url now
authorize_url = flow.step1_get_authorize_url()
# Save flow object in memcache for later retrieval on OAuth callback,
# and redirect this session to Google's OAuth 2.0 authorization site.
logging.info('saving flow for user ' + user.user_id())
memcache.set(user.user_id(), pickle.dumps(flow))
# redirect directly
self.redirect(authorize_url, abort=True)
"
random forest with characters in scikit-learn/python,"from sklearn.preprocessing import LabelEncoder
import pandas as pd

data = pd.DataFrame()

data['age'] = [17,33,47]
data['gender'] = ['m','f','m']

enc = LabelEncoder()

print(data)
enc.fit(data['gender'])
data['gender'] = enc.transform(data['gender'])
print(data)
"
Performance of inverse dictionary mapping,"new_d = {k:v for k, v in d.items() if v == 3}
"
Pass list as argument to Python C module?,"/* iterate over items of the list, grabbing strings, and parsing
   for numbers */
for (i=0; i<numLines; i++){

/* grab the string object from the next element of the list */
strObj = PyList_GetItem(listObj, i); /* Can't fail */

/* make it a string */
line = PyString_AsString( strObj );

/* now do the parsing */
"
substitute of function pointers in python,"bark! hungry
sleeping on floor
meow! hungry
sleeping on keyboard
"
How to sort python dictionary/list?,"for person in sorted(cat1, key=lambda x: sum(cat1.get(x))/len(cat1.get(x)), reverse=True):
    print(person, sum(cat1.get(person))/len(cat1.get(person)))
"
Pandas: read_csv with only HH:MM:SS in the index,"In [54]: df
Out[54]: 
                 flare  praia   spot  ruido
17:10:09.326000  1.036  1.059  1.069  1.051
17:10:10.327000  1.038  1.061  1.077  1.063
17:10:11.328000  1.033  1.055  1.068  1.051

In [55]: df.index
Out[55]: TimedeltaIndex(['17:10:09.326000', '17:10:10.327000', '17:10:11.328000'], dtype='timedelta64[ns]', freq=None)
"
check if numpy array is subset of another array," array([[ 4,  5,  8],
        [ 3,  4,  5],
        [ 6,  7,  8],
        [ 4,  5,  8],
        [12, 13, 14],
        [15, 16, 17],
        [18, 19, 20],
        [ 4,  5,  8],
        [24, 25, 26],
        [27, 28, 29]])
"
Adding a new column on CSV with Python,"l =['Number', 1,2,3,4]
from shutil import move
from tempfile import NamedTemporaryFile
with open('in.csv') as csvfile, NamedTemporaryFile(""w"",dir=""."", delete=False) as temp:
    r = csv.reader(csvfile)
    wr = csv.writer(temp,delimiter="" "")
    for row,new in zip(r,l):
        wr.writerow(row+[new])

move(temp.name,""in.csv"")
"
Python strptime takes weekday name and returns tm_mday = 1 regardless of actual mday,"In [14]: calendar.monthcalendar(year_int, month_int)
Out[14]: 
[[0, 0, 1, 2, 3, 4, 5],
 [6, 7, 8, 9, 10, 11, 12],
 [13, 14, 15, 16, 17, 18, 19],
 [20, 21, 22, 23, 24, 25, 26],
 [27, 28, 29, 30, 31, 0, 0]]
"
"Using the observer pattern to delete an Observer when a Subject has been ""deleted"" in Python","class B(Observer):
    ''' class B is an observer of A '''

    def __init__(self, name, a):
        self.name = name

        # don't keep a reference to 'a', or 'a' will not be deleted!
        a.registerObserver(self)

    def __str__(self):
        return ""B[ {0} ]"".format(self.name)

    def __del__(self):
        print(""{0}.__del__"".format(self))

    def deleting(self, subject):
        ''' notification from the subject (A) that it is being deleted. I'm
        assuming here that the subject is actually the one we registered in
        __init__, since I couldn't store a reference or else __del__ would
        not have been called! '''
        print ""B[{0}].deleting, subject={1}"".format(self.name, subject)

        del self
"
Pairwise matrix from a pandas dataframe,"           Al01  BBR60  CA07  NL219
Al01      4      0     2      3
BBR60     0      1     0      0
CA07      2      0     3      3
NL219     3      0     3      4

[4 rows x 4 columns]
"
Assign Python class variable with a method of that class,"class MyClass():
   @staticmethod
   def my_func():
       pass

   class_variable = my_func.__func__()
"
Tokenizing User Input in Python,"('ID', 'abcd')
('SPACE', ' ')
('ID', 'xvc')
('SPACE', '  ')
('DIGIT', '23432')
('SPACE', ' ')
('STRING', '""exampe""')
('SPACE', ' ')
('DIGIT', '366')
"
pandas dataframe: index is DatetimeIndex and 4 columns. Some NaN,"anyNA = frame[(frame.A.isnull()) | (frame.B.isnull()) | (frame.C.isnull())]
"
"Python CherryPy server, what does cherrypy.Application do?","def __call__(self, environ, start_response):
    return self.wsgiapp(environ, start_response)
"
Biopython Large Sequence splitting,"$ python main.py
$ ls
generate.py   group_1.fasta group_3.fasta group_5.fasta group_7.fasta main.py
group_0.fasta group_2.fasta group_4.fasta group_6.fasta long.fasta
$ wc -c group_*
1060 group_0.fasta
1060 group_1.fasta
1060 group_2.fasta
1060 group_3.fasta
1060 group_4.fasta
1060 group_5.fasta
1060 group_6.fasta
1060 group_7.fasta
8480 total
"
accessing lambda value passed to function python,"def func(f):
    return f  # parenthesis unnecessary.
func(lambda x: x*2)(3)
"
How to get a variable from the shell in python?,"#!/usr/bin/env python
import execnet

gw = execnet.makegateway(""ssh=user@host"")
channel = gw.remote_exec(""""""
import dbus, sys

bus = dbus.SystemBus()
remote_object = bus.get_object('daemon.location', '/daemon')
controller = dbus.Interface(remote_object, 'daemon.path')

channel.send(controller.getValue())
"""""")
tuple_ = channel.receive()
print tuple_
print tuple_[0]
"
Specify valid values for arguments using docopt,"""""""Test Control Program

Usage: 
  test.py bitwrite ([--off=<bits>...][--on=<bits>...])
  test.py regwrite ([regA | regB]<value>)

Options:
  -o <bits>... --off <bits>...  #Turn bits off
  -i <bits>... --on <bits>...   #Turns bits on

Arguments:

      bits: 1 - on
            0 - off

""""""
from docopt import docopt, DocoptExit


if __name__ == '__main__':
    try:
        arguments = docopt(__doc__, version='Test Control Program')
        print(arguments)
    except DocoptExit:
        print(__doc__)
"
reindex multiindex pandas dataframe,">>> (df
     .set_index('date_arrived')
     .groupby([pd.TimeGrouper('H'), 'station_arrived'])
     .station_arrived
     .count()
     .unstack()
     .reindex(idx)
     .fillna(0)
     )
station_arrived      56  85
2010-02-02 00:00:00   0   0
2010-02-02 01:00:00   0   0
2010-02-02 02:00:00   0   0
2010-02-02 03:00:00   0   0
2010-02-02 04:00:00   0   0
2010-02-02 05:00:00   0   0
2010-02-02 06:00:00   0   0
2010-02-02 07:00:00   0   0
2010-02-02 08:00:00   0   0
2010-02-02 09:00:00   0   0
2010-02-02 10:00:00   0   0
2010-02-02 11:00:00   0   0
2010-02-02 12:00:00   0   0
2010-02-02 13:00:00   0   0
2010-02-02 14:00:00   1   0
2010-02-02 15:00:00   1   0
2010-02-02 16:00:00   0   0
...
"
Matplotlib plot_surface spurious faces,"longitudes = np.linspace(0, 2*np.pi, N_POINTS)
"
AttributeError: 'function' object has no attribute 'my_args',"main function
one function
i got args from one(): ['QA-65']
QA-65
"
converting nested parenthesis tree to nested list,"$ python lispparse.py  
[['Satellite',
  ['span 69 74'],
  ['rel2par Elaboration'],
  ['Nucleus',
   ['span 69 72'],
   ['rel2par span'],
   ['Nucleus', [...], [...], [...], [...]],
   ['Satellite', [...], [...], [...], [...]]],
  ['Satellite',
   ['span 73 74'],
   ['rel2par Elaboration'],
   ['Nucleus', [...], [...], [...]],
   ['Satellite', [...], [...], [...]]]]]
"
selecting edges based on source/target in igraph,"g.incident(root, mode=""out"")
"
Passing variables between Powershell commands in a python script,"C:\Temp>py state.py


    Directory: C:\Python34


Mode                LastWriteTime     Length Name
----                -------------     ------ ----
d----        24/10/2014     11:52            DLLs
d----        24/10/2014     11:52            Doc
d----        24/10/2014     11:52            include
d----        24/10/2014     11:52            Lib
d----        24/10/2014     11:52            libs
d----        05/11/2014     16:53            Scripts
d----        24/10/2014     11:52            tcl
d----        24/10/2014     11:52            Tools
-a---        06/10/2014     22:19      31073 LICENSE.txt
-a---        21/09/2014     21:03     367504 NEWS.txt
-a---        06/10/2014     22:15      27136 python.exe
-a---        06/10/2014     22:15      27648 pythonw.exe
-a---        06/10/2014     22:10       6942 README.txt
-a---        19/11/2014     11:59          5 £.txt



Do some processing here...

                                 Length FullName
                                 ------ --------
                                 367504 C:\Python34\NEWS.txt
                                   6942 C:\Python34\README.txt
                                      5 C:\Python34\£.txt
"
"IronPython: EXE compiled using pyc.py cannot import module ""os""","#References to created DLL of python modules
clr.AddReference('StdLib')
"
Generalize stacking of array elements' neighbors into 3-D array,"import numpy as np

# Parameters
R = 3  # Radius
M1,N1 = padded.shape
rowlen = N1 - R + 1
collen = M1 - R + 1

# Linear indices for the starting R x R block
idx1 = np.arange(R)[:,None]*N1 + np.arange(R)

# Offset (from the starting block indices) linear indices for all the blocks
idx2 = np.arange(collen)[:,None]*N1 + np.arange(rowlen)

# Finally, get the linear indices for all blocks
all_idx = idx1.ravel()[None,None,:] + idx2[:,:,None]

# Index into padded for the final output
out = padded.ravel()[all_idx] 
"
Python string comparison whilst in loop,"for char in text:
    try:
        print(""Character {0} found in row {1}"".format(char, chars[char]))
    except KeyError:
        pass
"
How can I replace a module without importing it?,"$ python test_real.py 
Traceback (most recent call last):
File ""test_real.py"", line 2, in <module>
    import x
File ""x.py"", line 3, in <module>
    y.foo()
File ""y.py"", line 3, in foo
    raise RuntimeError(""Nope."")
RuntimeError: Nope.
"
"Combinations or permutations of input, for a given length","In [62]: [''.join(p) for p in itertools.product('LE', repeat=3)]
Out[62]: ['LLL', 'LLE', 'LEL', 'LEE', 'ELL', 'ELE', 'EEL', 'EEE']
"
Dynamic Table Creation and ORM mapping in SqlAlchemy,">>> players_table = Table('players', metadata,
...   Column('id', Integer, primary_key=True),
...   Column('name', String),
...   Column('score', Integer)
... )
>>> metadata.create_all(engine) # create the table
"
python dictionary evaluates true if key is not present,"if 'verision' in a and 'importance' in a:
"
Remove Brackets from Python List for an SQL query,"sql = ""select * from dataBase where cus IN ({0})"".format(', '.join(['%s'] * len(cus2)))
"
Computing diffs within groups of a dataframe,"mask = df.ticker != df.ticker.shift(1)
df['diffs'][mask] = np.nan
"
Pandas Sort Order of Columns by Row,"%%timeit
df.T.sort_values(df.index[-1], ascending=False).T

1000 loops, best of 3: 444 µs per loop
"
Python: Repeat elements in a list comprehension?,"coordinate_list = [ ]
for location in locations:
    coord = Coordinates(location.latitude, location.longitude)
    coordinate_list.extend([coord] * location.number_of_times)
"
create a dict with unique keys and various list values from a tuple,"from collections import defaultdict
x = defaultdict(list)
for tup in data:
    x[tup[0]].append(tup[1:])
"
Fastest way to rank items with multiple values and weightings,"[(330.0, 'key3'), (230.0, 'key2'), (130.0, 'key1')]
"
Python iterate through section using lxml,">>> for elem in tree.xpath(""//div[@id='slider1']//div[@id='gridshow']""):
...    for elem_a in elem.xpath(""./a""):
...       for elem_img in elem_a.xpath(""./img""):
...          print '<A> HREF=%s'%(elem_a.attrib['href'])
...          print '<IMG> ALT=""%s""'%(elem_img.attrib['alt'])
<A> HREF=/3player/show/392/58784/1/Tallafornia
<IMG> ALT=""3player | Tallafornia, 01/02/2013. A fresh romance blossoms in the Tallafornia house. Marc challenges Cormac to a 'bench off' in the gym""
<A> HREF=/3player/show/46/58765/1/Coronation-Street
<IMG> ALT=""3player | Coronation Street, 01/02/2013. Tyrone bumps into Kirsty in the street and tries to take Ruby from her pram""
../..
"
Modifying logging message format based on message logging level in Python3,"fmt = MyFormatter()
hdlr = logging.StreamHandler(sys.stdout)

hdlr.setFormatter(fmt)
logging.root.addHandler(hdlr)
logging.root.setLevel(DEBUG)
"
django-endless with class based views example,"url(r'^entries/$', ListView.as_view(model=Entry, paginate_by=10))
"
Running function from script it was imported by,"import scripttwo
def test():
    print ""Hello World""

scripttwo.test(test)
"
How can I handle several regexp cases neatly in python,"class helper:
    def __call__(self, match):
        self.match= match
        return bool(match)

h= helper()
for l in big_input:      
    if h(matchOK.search(l)):
        # do something with h.match     
    elif h(matchFailed.search(l)):
        # do something with h.match 
    ... # a bunch more of these
    else:
        # error handling
"
Conversion of unix epoch time to windows epoch time in python,">>> tstamp = 1325178061  # right about now
>>> from datetime import datetime
>>> datetime.fromtimestamp(tstamp)
datetime.datetime(2011, 12, 29, 18, 1, 1)
"
Subclassing method decorators in python,"sillyDecorator = decoMaker(""Some really long message about koalas that you don't want to type over and over"")

class UsefulObject(object):
    def __init__(useful_object_self, noun):
        useful_object_self.noun = noun

    @sillyDecorator
    def red(useful_object_self):
        print ""red %s""%(useful_object_self.noun)

>>> u = UsefulObject(""balloons"")
... u.red()
Some really long message about koalas that you don't want to type over and over
red balloons
"
XPath: Select Current and Next Node's text by Current Node Attributes,"  (//p[@class='titlestyle'])[2]/text()[1]
|
  (//span[@class='title2'])[2]/text()
|
  (//span[@class='title2'])[2]/following-sibling::a[1]/text()
|
  (//span[@class='title2'])[3]/text()
|
  (//span[@class='title2'])[3]/following-sibling::a[1]/text()
"
python unittest multiple mixins,"class BaseTestSuite(unittest.TestSuite):
    xmlfile = None

    def addTest(self, test):
        if isinstance(test, BaseTestCase):
            test.xmlfile = self.xmlfile

        super(BaseTestSuite, self).addTest(test)
"
Why Celery does not embed a timestamp into the queued message?,"@app.task(bind=True)
def add(self, x, y):
    print('Approximate queue time: {0}'.format(
        time.time() - self.request.headers.get('time_sent', 0),
    ))
    return x + y
"
Python - Delete comments in a Python code,"x = 5   # like this
"
Minimize the sum of solution of linear equation,"a b c d e f g h i x
-------------------
1 1 1 1 0 0 1 0 0 0
1 1 1 0 1 0 0 1 0 0
1 1 1 0 0 1 0 0 1 1
1 0 0 1 1 1 1 0 0 0
0 1 0 1 1 1 0 1 0 0
0 0 1 1 1 1 0 0 1 1
1 0 0 1 0 0 1 1 1 1
0 1 0 0 1 0 1 1 1 1
0 0 1 0 0 1 1 1 1 1
"
Message displaying in QListWidget/View on boolean condition,"self.aMessages = {""bMessage1"": [False, ""This is the message 1"", 0],
                  ""bMessage2"": [False, ""This is the message 2"", 0],
                  ""bMessage3"": [False, ""This is the message 3"", 0],
                  ""bMessage4"": [False, ""This is the message 4"", 0],
                  ""bMessage5"": [False, ""This is the message 5"", 0]}
"
Partial merge in Pandas,"In [8]: pdf = mdf.price_y
In [9]: pdf = pandas.DataFrame(pdf)

In [10]: del mdf['price_y']

In [11]: mdf.rename(columns = {'price_x':'price'},inplace=True)
In [12]: pdf.rename(columns = {'price_y':'price'},inplace=True)
In [13]: mdf
Out[13]: 
   value method  number  price loc  get
0   0.50    add  489245    600  aa  up 
1   0.70    add  489245    NaN  aa  up 
2   0.70    mul  584682    225  ab  NaN
3   0.90    mul  624602    NaN  bb  NaN
4   0.95    mul  624602    NaN  bb  NaN
5   0.99    mul  624602    NaN  bb  NaN
6    NaN    NaN  900000    300  cc  dn 
7    NaN    add  900000    NaN  cc  dn 

In [14]: pdf
Out[14]: 
   price
0    200
1    200
2    NaN
3    NaN
4    NaN
5    NaN
6    NaN
7    NaN
"
I want to enumerate a text from a file using python,"with open('data1.txt','a') as f,open('data1.txt') as f1:
    lines=[x.strip() for x in f1]        #read the lines
    num=len(lines)+1
    f.write(""{0}.{1:22s}{2}\n"".format((num),name,ha))
"
Indexing in numpy array,"colors[a]
"
I can't find a way to access a variable in my html template,"{% for key, value in records_list.1.items %}
    {% if value.5 > 0 %}
        <tr class=""success"">
            <td>{{ key }}</td>
            <td>{{ value.0 }}</td>
            <td>{{ value.1 }}</td>
            <td>{{ value.2 }}</td>
            <td>{{ value.3 }}%</td>
            <td>{{ value.4 }}%</td>
            <td>{{ value.5 }}</td>

        </tr>
"
What's an elegant way for one loop iteration to affect another?,"from tools.itertoolz import sliding_window, remove
pairs = sliding_window(2, sys.stdin)
cond = lambda x: x[0].startswith('---(more') or x[1].startswith('---(more')
res = remove(cond, pairs)
for line in res:
    print line
"
xpath selecting elements and iterating over the tag,"for p in site.select('.//*[contains(@class, ""summary"")]/p'):
    p.select('//text()').extract()
"
Convert JSON to SQLite in Python - How to map json keys to database columns properly?,"[u'medicoes', u'veiculos', u'coord', u'modalidade', u'sentido', u'local', u'pistas', u'regime']
"
Segmenting License Plate Characters,"
MATLAB code
clear all;
close all;

% Read in image
I = imread('http://i.stack.imgur.com/5DnwY.jpg');

% Remove some columns from the beginning and end
I = I(:,60:end-20);

% Cast to double and do log.  We add with 1 to avoid log(0) error.
I = im2double(I);
I = log(1 + I);

% Create Gaussian mask in frequency domain
% We must specify our mask to be twice the size of the image to avoid
% aliasing.
M = 2*size(I,1) + 1;
N = 2*size(I,2) + 1;
sigma = 10;
[X, Y] = meshgrid(1:N,1:M);
centerX = ceil(N/2);
centerY = ceil(M/2);
gaussianNumerator = (X - centerX).^2 + (Y - centerY).^2;

% Low pass and high pass filters
Hlow = exp(-gaussianNumerator./(2*sigma.^2));
Hhigh = 1 - Hlow;

% Move origin of filters so that it's at the top left corner to match with
% input image
Hlow = ifftshift(Hlow);
Hhigh = ifftshift(Hhigh);

% Filter the image, and crop
If = fft2(I, M, N);
Ioutlow = real(ifft2(Hlow .* If));
Iouthigh = real(ifft2(Hhigh .* If));

% Set scaling factors then add
gamma1 = 0.3;
gamma2 = 1.5;
Iout = gamma1*Ioutlow(1:size(I,1),1:size(I,2)) + ...
       gamma2*Iouthigh(1:size(I,1),1:size(I,2));

% Anti-log then rescale to [0,1]
Ihmf = exp(Iout) - 1;
Ihmf = (Ihmf - min(Ihmf(:))) / (max(Ihmf(:)) - min(Ihmf(:)));

% Threshold the image - Anything below intensity 65 gets set to white
Ithresh = Ihmf < 65/255;

% Remove border pixels
Iclear = imclearborder(Ithresh, 8);

% Eliminate regions that have areas below 160 pixels
Iopen = bwareaopen(Iclear, 160);

% Show all of the results
figure;
subplot(4,1,1);
imshow(I);
title('Original Image');
subplot(4,1,2);
imshow(Ihmf);
title('Homomorphic Filtered Result');
subplot(4,1,3);
imshow(Ithresh);
title('Thresholded Result');
subplot(4,1,4);
imshow(Iopen);
title('Opened Result');
"
Logging Process' STDIN and STDOUT," with open(""file.log"",""wb"") as in logfile:
 subprocess.Popen(cmd, shell=True, universal_newlines = True, stdin=logfile, stdout=logfile)
"
eventFilter on a QWidget with PyQt4,"    if event.type() == QtCore.QEvent.MouseMove:
"
Right data structure for containing shapes and spatial relations between them,"[('3-gon', '5-gon', {'relation': 'inside'}), 
 ('4-gon', '3-gon', {'relation': 'below'}), 
 ('4-gon', '5-gon', {'relation': 'inside'})]
"
Preventing xticks from overlapping yticks,"fig, ax = subplots(1)
ax.plot(arange(10),rand(10))
ax.locator_params(prune='lower',axis='both')
"
Find all paths in graph from A to N,"[[[""A""]+y for y in find_all_paths(G,x,""A"")] for x in graph[""A""]]
"
How to find Title case phrases from a passage or bunch of paragraphs,"Conan Doyle
Holmes
Dr. Joseph Bell
Doyle
Edinburgh Royal Infirmary. Like Holmes
Bell
Michael Harrison
Ellery Queen
Mystery Magazine
Wendell Scherer
England
"
append the same element to several sublists in python,"type(L)
# <type 'numpy.ndarray'>
type(L[0,0])
# <type 'list'>
"
define different function for different versions of python,"def __str__(self):
    return unicode(self).encode('UTF-8')
cls.__str__ = __str__
"
iterating with python while loops,"sum(1:N) = N * (N + 1) / 2
"
pandas : efficiently multiplay row based on condition,"df = df.groupby('condition', as_index=False, sort=False)
        .apply(lambda x: pd.concat([x]*x.condition.values[0], ignore_index=True))
        .reset_index(drop=True)
df['condition'] = 1
print df
   condition   k  s
0          1  K0  a
1          1  K1  b
2          1  K1  c
3          1  K1  c
4          1  K1  c
5          1  K2  d
6          1  K2  d
"
Pandas: Average over the same hour,"
import pandas as pd
df = pd.DataFrame(
    {'ATMOSPHERIC PRESSURE (hPa) mean': 
     [1011.937618, 1011.721583, 1011.348064, 1011.30785, 1011.3198, 1011.403372, 
      1011.485108, 1011.270083, 1010.936331, 1010.920958, 1010.816478, 1010.899142, 
      1010.209392, 1009.700625, 1009.457683, 1009.268081, 1009.718639, 1010.745444, 
      1011.062028, 1011.168117, 1010.771281, 1010.138053, 1009.509119, 1008.703811, 
      1008.021547, 1007.774825],
     'YYYY-MO-DD HH-MI-SS_SSS': 
     ['2/24/2016 13:00', '2/24/2016 14:00', '2/24/2016 15:00', '2/24/2016 16:00', 
      '2/24/2016 17:00', '2/24/2016 18:00', '2/24/2016 19:00', '2/24/2016 20:00', 
      '2/24/2016 21:00', '2/24/2016 22:00', '2/24/2016 23:00', '2/25/2016 00:00', 
      '2/25/2016 01:00', '2/25/2016 02:00', '2/25/2016 03:00', '2/25/2016 04:00', 
      '2/25/2016 05:00', '2/25/2016 06:00', '2/25/2016 07:00', '2/25/2016 08:00', 
      '2/25/2016 09:00', '2/25/2016 10:00', '2/25/2016 11:00', '2/25/2016 12:00', 
      '2/25/2016 13:00', '2/25/2016 14:00']})
df['YYYY-MO-DD HH-MI-SS_SSS'] = pd.to_datetime(df['YYYY-MO-DD HH-MI-SS_SSS'])

hour = pd.to_timedelta(df['YYYY-MO-DD HH-MI-SS_SSS'].dt.hour, unit='H')
hour.name = 'Hour'
result = df.groupby(hour).mean()
"
Python while/if statements not working,"letter1 = """"
letter2 = """"
letter3 = """"
letter4 = """"
letter5 = """"
letter6 = """"

position1 = 0
position2 = 1
position3 = 2
position4 = 3
position5 = 4
position6 = 5

letter1 += word[position1]
letter2 += word[position2]
letter3 += word[position3]
letter4 += word[position4]
letter5 += word[position5]
letter6 += word[position6]
"
urllib2.urlopen(): getting the size of the content,">>> result = urllib2.urlopen('http://www.spiegel.de')
>>> result.headers['content-length']
'181291'
"
slow python code seems like a suitable fit for itertools: how to optimize?,"entity_key = 'pid'

data = [ { 'pid': 5011, 'a': 3, 'b': 20, 'c': 33 },{ 'pid': 5012, 'a': 3, 'b': 20, 'c': 33 }, 
{ 'pid': 5011, 'a': 3, 'b': 20, 'c': 33 },{ 'pid': 5012, 'a': 3, 'b': 20, 'c': 33 }]


from collections import defaultdict

totals = [""a"", ""b"", ""c""]

dfd = defaultdict(lambda: {""a"":0, ""b"", 0, ""c"": 0})
for d in data:
    for k in d.keys() & totals:
        dfd[d[""pid""]][k] += d[k]
"
Unable to retrieve element of desired XPATH using BeautifulSoup,"In [22]: soup = Soup(response.text,""lxml"")

In [23]: soup.select_one(""meta[itemprop=price]"")[""content""]
Out[23]: '$12,895,000'

In [24]: soup.select_one(""meta[name=twitter:description]"")[""content""]
Out[24]: 'Stunning brand new Contemporary Cape Cod Estate in Palisades Riviera by Huntington Estate Homes w/ 7 beds, 10 baths, + office in 10,500 sq ft on an 18,590 sq ft lot. Soaring ceilings, magnificent chandelier, &amp; floating staircase create a grand entrance w/ glass wine cellar, formal living &amp; dining rooms. Floor plan flows openly between gourmet kitchen, family room, &amp; patio with a set of disappearing Fleetwood Pocket doors. Fireplaces in living, family, &amp; master suite add warmth to the contemporary feel, &amp; detailed wood paneling &amp; coffered ceilings enhance quality of design throughout. Master suite opens completely to sweeping ocean views &amp; private patio. Lower level feats. Old Hollywood style theater w/130&quot; screen, surround sound, stadium seats, floor-to-ceiling suede panels, exercise pool, spa, gym, office, guest beds, open air patio, &amp; elevator access to take you from floor to floor. Perfect for entertaining - outdoor BBQ, seating, &amp; saltwater pool/spa complete this elegant estate.'
In [27]: soup.select_one(""meta[itemprop=latitude]"")[""content""]
Out[27]: '34.060605'
In [28]: soup.select_one(""meta[itemprop=longitude]"")[""content""]
Out[28]: '-118.501625'
In [29]: soup.select_one(""meta[property=og:zillow_fb:address]"")[""content""]
Out[29]: '1630 Amalfi Dr, Pacific Palisades, CA 90272'
"
Modifying built-in function,"import re


class AClass:

    def __dir__(self):
        return [x for x in super().__dir__() if not re.match(r'__\S+__$', x)]

    def method(self):
        pass
"
"Display Entire Dataset,Python","pd.set_option('display.height', some_value)
pd.set_option('display.max_rows', some_value)
"
"MongoDB MapReduce, Date and % operator","{u'_id': {u'ts': None}, u'value': 10.0}
"
Program that counts most and least common non-space characters,"max = w.count(w[0])
min = w.count(w[0])
"
Python multiplicative inverse in GF(2) finite field,"37 == int(""{0:b}"".format(37), 2)  # >>> True
"
Extract unique elements from a list returned by BeautifulSoup,"from bs4 import BeautifulSoup


def iter_uniq_link(all_countries):
    seen = set()
    for c in all_countries:
        data_id = c.get('data-id')
        if data_id not in seen:
            seen.add(data_id)
            yield c
"
Masking a list against a string in Python,"output = [num for char, num in zip(str1, ls1) if char != '-']
"
How to get parameters from root function,"@app.route(""/<param1>"", methods=[""GET""])
def func1(param1):
    g.info = ""Hello world""
    return func2()

def func2():
    if g.info == ""Hello world"":
        return ""Hello world""
    return ""mystring""
"
Find duplicates in column combo,"print df.drop_duplicates(subset=['x','y'])
   x  y  z
0  1  3  1
1  4  4  3
2  2  4  3
4  3  5  2
"
Kivy Screen manager reference in kv language,"<MainWidget>:
    screen_manger: screen_manager
    ScreenManger:
        id: screen_manger
        Screen:
            name: ""MainMenu""
            MainMenu:
                manager: screen_manager
        Screen:
            name: ""OtherPage""
"
Converting a numpy.ndarray value from bytes to float,"In [11]: pd.read_csv(path, header=None)
Out[11]:
                         0          1             2  3           4          5         6    7  8
0  05/27/2016 09:45:37.816  187666432  7.921471e+06  0   95.202655  82.717061  1.462666  158  5
1  05/27/2016 09:45:38.819  206884864  1.069219e+07  0  101.330180  93.535551  2.464958  158  5
"
Python - Extra Excel chart series with win32com,"series = chart.SeriesCollection().NewSeries()
"
Evaluate image in html table using Python,"[int(val.img is not None) for val in row.find_all('td')]
"
Using pandas to plot data,"d.plot()
"
Python argparse a list input,"1014:~/mypy$ python echoargv.py -m ['fizz','bazz']
['echoargv.py', '-m', '[fizz,bazz]']
1014:~/mypy$ python echoargv.py -m fizz,bazz
['echoargv.py', '-m', 'fizz,bazz']
1015:~/mypy$ python echoargv.py -m fizz, bazz
['echoargv.py', '-m', 'fizz,', 'bazz']
1016:~/mypy$ python echoargv.py -m ['fizz', 'bazz']
['echoargv.py', '-m', '[fizz,', 'bazz]']
1016:~/mypy$ python echoargv.py -m fizz bazz
['echoargv.py', '-m', 'fizz', 'bazz']
"
Unable to find the mistake in prime number code in python,"n=5;count=2;i=3;j=2;
while (count <= n):
    for j in range (2,i):
        if(i%j == 0):           
            break
    if(j==i-1):
        print i
        count = count +1
    i = i+1
"
Most efficient way to remove unique keys from python's Counter() multiset dictionary,"from itertools import takewhile

for unique in takewhile(lambda pair: p[1] == 1, reversed(y.most_common())):
"
How to find the index of maximum values among classes in an unsorted data file by R?,"data <- 
read.csv(sep=',',text=
""a1,a2,b1,b2,c
2.0,1.0,1.0,2.0,0.3
1.0,1.0,1.0,2.0,0.9
1.0,2.0,1.0,2.0,0.6
3.0,3.0,3.0,2.0,0.6
1.0,3.0,1.0,2.0,0.87
2.0,1.0,3.0,2.0,0.9
3.0,1.0,3.0,2.0,0.85
1.0,3.0,1.0,2.0,0.89
1.0,3.0,3.0,2.0,0.7
2.0,1.0,3.0,2.0,0.5
3.0,1.0,2.0,2.0,0.7
1.0,1.0,3.0,2.0,0.88
3.0,2.0,1.0,2.0,0.3
2.0,2.0,1.0,2.0,0.5
2.0,2.0,3.0,2.0,0.8
2.0,3.0,1.0,2.0,0.3
3.0,1.0,3.0,2.0,0.83
1.0,2.0,1.0,2.0,0.3
2.0,3.0,2.0,2.0,0.3
3.0,3.0,3.0,2.0,0.6
1.0,1.0,2.0,2.0,0.8
2.0,3.0,3.0,2.0,0.7
2.0,2.0,3.0,2.0,0.85
1.0,2.0,3.0,2.0,0.81
3.0,2.0,1.0,2.0,0.9
3.0,2.0,3.0,2.0,0.82
3.0,3.0,3.0,2.0,0.84"")
"
Display content of files in a particular directory using Flask,"def make_tree(path):
    tree = dict(name=os.path.basename(path), children=[])
    try: lst = os.listdir(path)
    except OSError:
        pass #ignore errors
    else:
        for name in lst:
            fn = os.path.join(path, name)
            if os.path.isdir(fn):
                tree['children'].append(make_tree(fn))
            else:
                with open(fn) as f:
                    contents = f.read()
                tree['children'].append(dict(name=name, contents=contents))
    return tree
"
places to look for code to convert a data file to X12 format?,"[['data1', 'data2', 'data3'], ['data1', 'data2', 'data3'], ['data1', 'data2', 'data3'], ['data1', 'data2', 'data3'], ['']]
"
end daemon processes with multiprocessing module,"if func == ""QUIT"":
    return
"
Python regex to replace double backslash with single backslash,">>> s = r'some \\ doubles'
>>> print s
some \\ doubles
>>> print s.replace('\\\\', '\\')
some \ doubles
"
ipython Pandas : How can I compare different rows of one column with Levenshtein distance metric?,"dfs = pd.DataFrame([df.name.tolist()] * df.shape[0], index=df.index, columns=df.index)
dfs = dfs.applymap(lambda x: list([x]))
print dfs

    id      1      2       3      4
id                             
1   [gfh]  [bob]  [boby]  [hgf]
2   [gfh]  [bob]  [boby]  [hgf]
3   [gfh]  [bob]  [boby]  [hgf]
4   [gfh]  [bob]  [boby]  [hgf]
"
Attach label information when averaging predictions across users,"unq, idx, inv_idx, cnt = np.unique(user_data, return_index=True,
                                   return_inverse=True, return_counts=True)

print(unq)
# ['User0' 'User1' 'User2' 'User3' 'User4']

print(label_user[idx])
# [0, 1, 1, 0, 0]
"
Extracting a number with dot and comma using regex,"\b\d{1,3}(?:\.\d{3})*,\d+\b
"
How to encode a long in Base64 in Python?,"def pack_bigint(i):
    bl = (i.bit_length() + 7) // 8
    fmt = '<{}B'.format(bl)
    # ...
"
Create lists python,"def makelists(list_count):
    list_of_lists = []
    for _ in range(list_count):
        list_of_lists.append(list())
    return list_of_lists
"
Subsampling/averaging over a numpy array,"def average(arr, n):
    end =  n * int(len(arr)/n)
    return numpy.mean(arr[:end].reshape(-1, n), 1)
"
How to convert tree-form tuples to matrix-form tuples?,">>> len(max(((1,),(2,3,),(4,5,6,),(7,8,9,10,)),key = lambda x: len(x)))
4
"
Long to wide data. Pandas,"#convert column payment_type to string
df['payment_type'] = df['payment_type'].astype(str)
df = pd.pivot_table(df, index='date', columns=['vendor', 'payment_type'], 
                                      aggfunc=[np.mean, np.max, np.median])
print df
              mean                    amax                 median              \
             price                   price                  price               
vendor          A1      B1        C1    A1      B1      C1     A1      B1       
payment_type     1   2   1   2     1     1   2   1   2   1      1   2   1   2   
date                                                                            
2015-03-10      50  60 NaN NaN  62.5    50  60 NaN NaN  65     50  60 NaN NaN   
2015-03-11      45  70 NaN NaN   NaN    45  70 NaN NaN NaN     45  70 NaN NaN   
2015-03-12     NaN NaN  40  45   NaN   NaN NaN  40  45 NaN    NaN NaN  40  45   



vendor          C1  
payment_type     1  
date                
2015-03-10    62.5  
2015-03-11     NaN  
2015-03-12     NaN 
#remove top level of multiindex
df.columns = df.columns.droplevel(1)
#reset multicolumns
df.columns = ['_Pay'.join(col).strip() for col in df.columns.values]
"
Python: Find out what method on derived class called base class method,"import traceback

class Controller(object):
    def output_method(self, s):
        (filename,line_number,function_name,text)=traceback.extract_stack()[-2]
        method_that_called_me = function_name
        self.output[method_that_called_me] = s
"
Change part of string in a file using regex in Python,"\b(\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2})\.\d+\b
"
Matching a simple string using Regex?,"import re

my_string = """"""*select 65* description""""""
match = re.match(r""^\*([a-z]+)\s+([0-9]+)\*"", my_string)
specifier = match.group(1)
integer = int(match.group(2))
"
How can I add the outcome of a function to a list in python?,"def get_primes():
    a = int(input(""Look up to: ""))

    # 'primes' is a more suitable name for a list of primes
    # we're only creating the list *once*, and we're not shadowing 'list'
    primes = list()

    for candidate in range(0, a):
        if prime(candidate) == True:
            print(candidate)
            print(""adding to list"")
            primes.append(candidate)

        else:
            print(num, ""is not a prime"")

    # use return to return a result
    return primes
"
Removing a list of characters in string,"#coding=utf8

import re

def remove_chars_iter(subj, chars):
    sc = set(chars)
    return ''.join([c for c in subj if c not in sc])

def remove_chars_re(subj, chars):
    return re.sub('[' + re.escape(''.join(chars)) + ']', '', subj)

def remove_chars_re_unicode(subj, chars):
    return re.sub(u'(?u)[' + re.escape(''.join(chars)) + ']', '', subj)

def remove_chars_translate_bytes(subj, chars):
    return subj.translate(None, ''.join(chars))

def remove_chars_translate_unicode(subj, chars):
    d = {ord(c):None for c in chars}
    return subj.translate(d)

import timeit, sys

def profile(f):
    assert f(subj, chars_to_remove) == test
    t = timeit.timeit(lambda: f(subj, chars_to_remove), number=1000)
    print ('{0:.3f} {1}'.format(t, f.__name__))

print (sys.version)
PYTHON2 = sys.version_info[0] == 2

print ('\n""plain"" string:\n')

chars_to_remove = ['.', '!', '?']
subj = 'A.B!C?' * 1000
test = 'ABC' * 1000

profile(remove_chars_iter)
profile(remove_chars_re)

if PYTHON2:
    profile(remove_chars_translate_bytes)
else:
    profile(remove_chars_translate_unicode)

print ('\nunicode string:\n')

if PYTHON2:
    chars_to_remove = [u'δ', u'Γ', u'ж']
    subj = u'AжBδCΓ'
else:
    chars_to_remove = ['δ', 'Γ', 'ж']
    subj = 'AжBδCΓ'

subj = subj * 1000
test = 'ABC' * 1000

profile(remove_chars_iter)

if PYTHON2:
    profile(remove_chars_re_unicode)
else:
    profile(remove_chars_re)

profile(remove_chars_translate_unicode)
"
How to find specific video html tag using beautiful soup?,"import urllib
from bs4 import BeautifulSoup as BS

url = '''https://archive.org/details/20070519_detroit2'''
#open and read page
page = urllib.urlopen(url)
html = page.read()
#create BeautifulSoup parse-able ""soup""
soup = BS(html)
#get the src attribute from the video tag
video = soup.find(""video"").get(""src"")
"
Accessing Johnny Cache Data,"from django.db import models

class TestModel(models.Model):
    prop_a = models.TextField()
    prop_b = models.TextField()

    def __unicode__(self):
        return ""{} {}"".format(self.prop_a, self.prop_b)
"
Sum two text files containing floats row by row in python,"~ $ cat test.txt 
1.0
2.0
3.0
4.5
5.0
6.0
"
Python Stringcompare,"    str1 = ""Hallo Pet Me""
    str2 = ""Hallo World Pet Me""
    split1 = str1.split()
    split2 = str2.split()
    print [word for word in split2 if word not in split1]
"
TemplateDoesNotExist on python app-engine django 1.2 while template rendering relative paths,"app/
   controllers/
      home_controller.py
      posts_controller.py
   models/
      ...
   views/
      home/
          index.html
          about.html
      posts/
          show.html
          new.html
      shared/
          base.html
          post.html
"
Write to_csv with Python Pandas: Choose which column index to insert new data,"df[['Sex', 'Survived', 'Age']].to_csv('D:\\Apps\\Coursera\\Kaggle-Titanic\\Swm\\result.csv', index=False)
"
Reading column delimited text data in python quickly,"pd.read_csv('your_file.txt', sep=' ')
"
Check boolean from another function,"x = 0
bool = False

def functionA(x):
    global bool
    if x is 0:
        bool = True

def functionB():
    print bool
    if bool is True:
        print ""Halleluhja""

functionA(x)
functionB()

print x, bool
"
Python NtQueryDirectoryFile (File information structure),".
..
DLLs
Doc
include
Lib
libs
LICENSE.txt
NEWS.txt
python.exe
pythonw.exe
README.txt
Scripts
tcl
Tools
"
Python numpy.nan and logical functions: wrong results,">>> np.logical_and(True, np.nan), np.logical_and(False, np.nan)
(True, False)
>>> np.logical_and(np.nan, True), np.logical_and(np.nan, False)
(True, False)
>>>
>>> np.logical_or(True, np.nan), np.logical_or(False, np.nan)
(True, True)
>>> np.logical_or(np.nan, True), np.logical_or(np.nan, False)
(True, True)
"
How to Join two separate text data files and align data over varying time intervals and avg,"bottom [3.3844673297E+000, 3.1585870007E+000, 3.2442662514E+000]
top [4.2442662514E+000, 4.4242662514E+000, 4.1064987772E+000]
bottom [3.2442662514E+000, 3.2442662514E+000, 3.1064987772E+000]
"
openpyxl Python Iterating Through Large Data List,"Run this code:
import pandas as pd
#read in the dataset:
df = pd.read_excel('file.xlsx', sheetname = 'file')

df_dup = df.groupby(axis=1, level=0).apply(lambda x: x.duplicated())

#save duplicated values from first column
df[df_dup].iloc[:,0].to_csv(""file_duplicates_col1.csv"")

#save unique values from first column
df[~df_dup].iloc[:,0].to_csv(""file_unique_col1.csv"")

#save duplicated values from all columns:
df[df_dup].to_csv(""file_duplicates.csv"")

#save unique values from all columns:
df[df_dup].to_csv(""file_unique.csv"")
"
Understanding recursive string reversal,"reverse(""llo"")
  --> return reverse(""lo"") + ""l""

reverse(""lo"")
  --> return reverse(""o"") + ""l""
"
How to sort an array of integers faster than quicksort?,"lib = cdll.LoadLibrary('spreadsort.so')
"
PyQT vs PyObjc / Cocoa-Python,"self.action.triggered.connect(self.handler)
"
Python numpy nan compare to true in arrays with strings,"In [72]: a = np.array([1, 'x', np.nan], dtype=object)

In [73]: b = np.array([1, 'x', np.nan], dtype=object)

In [74]: a == b
Out[74]: array([ True,  True,  True], dtype=bool)

In [75]: a[2] == b[2]
Out[75]: False

In [76]: type(a[2])
Out[76]: float

In [77]: type(b[2])
Out[77]: float
"
Python - find integer closest to 0 in list,"lst = [237, 72, -18, 237, 236, 237, 60, -158, -273, -78, 492, 243]
min((abs(x), x) for x in lst)[1]
"
Sorting associative arrays in Python,"
>>> people = [
    {'name' : 'Bob', 'number' : '123'},
    {'name' : 'Bill', 'number' : '234'},
    {'name' : 'Dave', 'number' : '567'},
]       
>>> sorted(people, key=lambda dct: dct['name'])
[{'name': 'Bill', 'number': '234'}, 
 {'name': 'Bob', 'number': '123'}, 
 {'name': 'Dave', 'number': '567'}]
"
Adding values to a matrix with a for loop in python,"def matrixH0(k):
    return [[math.sqrt(n+m+1)/2. if abs(m-n)==1 else 0 for n in range(k)]
            for m in range(k)]
"
Keep only certain lines in a text file using python,"# Store the links we need in a list
links_to_keep = []
with open(""Anilinks.txt"", ""r"") as f:

     for line in f.readlines():
         if 'solidfiles.com' in line:
             links_to_keep.append(line)

# Write all the links in our list to the file
with open(""Anilinks.txt"", ""w"") as f:

    for link in links_to_keep:
        f.write(link)
"
"Python, to pick specific elements from a list of tuples",">>> for item in (color for idx, color in list_of_tuples if idx in items_to_pick):
...     print(item)
...     
... 
(159, 177, 205)
(173, 194, 227)
(223, 213, 196)
(214, 227, 246)
"
Slice numpy array based on x number of other arrays,"res2 = main1[np.in1d(array1, my_list1) & np.in1d(array2, my_list2) &
             np.in1d(array3, my_list3)]
"
Creating the Powerset of a set of Vectors in Python?,"itertools.product(range(4), repeat=3)
"
Python datetime.datetime from time.structtime difference,"import time, datetime

# this is how your time object was constructed before
tm_isdst = 0
t = time.mktime((2015, 8, 1, 20, 28, 33, 5, 213, tm_isdst))
print(""Old conversion: {0}"".format(datetime.datetime.fromtimestamp(t)))

# this is what happens if you let mktime ""divine"" a time zone
tm_isdst = -1
t = time.mktime((2015, 8, 1, 20, 28, 33, 5, 213, tm_isdst))
print(""New conversion: {0}"".format(datetime.datetime.fromtimestamp(t)))
"
Python quickly hash mutable object,">>> d = dict()
>>> hb1 = HashableBytearray('abcd')
>>> hb2 = HashableBytearray('abcd')
>>> d[hb1] = 0
>>> d[hb2] = 1
>>> d
{bytearray(b'abcd'): 1}
"
Read into a bytearray at an offset?,"bytearray(b'\x00\x00\x00\x01\x02\x03\x04\x05\x00\x00')
"
How can I increase number in input statement in python?,"classes = []

number_classes = int(input(""How many classes did you take? ""))
print()

for i in range(1, number_classes + 1):
    p = input(""What is the name of class "" + i)
    q = input(""What grade did you get in that class? "")
    classes.append((p,q))
"
Install/use pip for specific version/location of python,"$python2.6 -m pip [pip-args]
"
How to reinitialise an embedded Python interpreter?,"exec( pyCode, global_namespace, lobaca_namespace );
"
Pandas - create boolean columns from categorical column,"df = pd.concat([df, df1], axis=1)
print df
    Place  is_Berlin  is_Mexico  is_Prague
0  Berlin          1          0          0
1  Prague          0          0          1
2  Mexico          0          1          0
3  Prague          0          0          1
4  Mexico          0          1          0

#if there is more columns, you can drop Place column
df = df.drop('Place', axis=1)
print df
   is_Berlin  is_Mexico  is_Prague
0          1          0          0
1          0          0          1
2          0          1          0
3          0          0          1
4          0          1          0
"
scatter plot in matplotlib,"import matplotlib
import pylab


results = [[1, 0, 1], [0, 1, 0], [1, 1, 0]]

x = []
y = []

for ind_1, sublist in enumerate(results):
    for ind_2, ele in enumerate(sublist):
        if ele == 1:
            x.append(ind_1)
            y.append(ind_2)       


matplotlib.pyplot.scatter(x,y)

matplotlib.pyplot.show()
"
Create strings with all possible combinations,"In [90]: from itertools import chain, izip_longest

In [91]: subs = product(""68"", repeat=word.count(""B""))

In [92]: [''.join(chain(*izip_longest(word.split('B'), sub, fillvalue=''))) for sub in subs]
Out[92]: 
['L0676065',
 'L0676085',
 'L0678065',
 'L0678085',
 'L0876065',
 'L0876085',
 'L0878065',
 'L0878085']
"
"Python Linux dmidecode, how to obtain HW info by Parsing?","   Type   Information
       ----------------------------------------
          0   BIOS
          1   System
          2   Base Board
          3   Chassis
          4   Processor
          5   Memory Controller
          6   Memory Module
          7   Cache
          8   Port Connector
          9   System Slots
         10   On Board Devices
         11   OEM Strings
         12   System Configuration Options
         13   BIOS Language
         14   Group Associations
         15   System Event Log
         16   Physical Memory Array
         17   Memory Device
         18   32-bit Memory Error
         19   Memory Array Mapped Address
         20   Memory Device Mapped Address
         21   Built-in Pointing Device
         22   Portable Battery
         23   System Reset
         24   Hardware Security
         25   System Power Controls
         26   Voltage Probe
         27   Cooling Device
         28   Temperature Probe
         29   Electrical Current Probe
         30   Out-of-band Remote Access
         31   Boot Integrity Services
         32   System Boot
         33   64-bit Memory Error
         34   Management Device
         35   Management Device Component
         36   Management Device Threshold Data
         37   Memory Channel
         38   IPMI Device
         39   Power Supply


       Keyword     Types
       ------------------------------
       bios        0, 13
       system      1, 12, 15, 23, 32
       baseboard   2, 10
       chassis     3
       processor   4
       memory      5, 6, 16, 17
       cache       7
       connector   8
       slot        9
"
How to make function calls obey lexical scope in Python?,"def create_bar_function(add=add):
    ...
"
Celery subtask bound to different application executed remotely,">>> from feeds.tasks import import_feed
>>> import_feed.apply_async(args=['http://cnn.com/rss'],
...                         queue='feed_tasks',
...                         routing_key='feed.import')
"
Building a histogram from MongoDB with Pymongo,"[{u'count': 2, u'_id': u'c'}, {u'count': 2, u'_id': u'd'}, {u'count': 2, u'_id': u'a'}]
"
Python Selenium 2 API and wait until DOM is ready / element is visible,"@wait.until {@driver.window_handles.size > 1}
"
Extract recursivly multiple line data between two String- Regex & Python & XML,"(<\?xml version=""1\.0"" encoding=""UTF-8""\?>.+?<\/opentag>)
"
Merge CSV Files in Python with Different file names,"import glob
import os
os.chdir(""/mydir"")
for files in glob.glob(""*.csv""):
    print files
"
Reshape list of unequal length lists into numpy array,"for rowind, row in enumerate(s):
    try:
        m[rowind, :len(row),:] = np.array(row)
    except ValueError:
        pass  # broadcasting error: row is empty

result = np.ma.masked_array(m.astype(np.int), mask=np.isnan(m))
result
masked_array(data =
 [[[-- --]
  [-- --]
  [-- --]
  [-- --]]

 [[2 0]
  [2 2]
  [-- --]
  [-- --]]

 [[2 2]
  [2 0]
  [2 1]
  [2 2]]],
             mask =
 [[[ True  True]
  [ True  True]
  [ True  True]
  [ True  True]]

 [[False False]
  [False False]
  [ True  True]
  [ True  True]]

 [[False False]
  [False False]
  [False False]
  [False False]]],
       fill_value = 999999)
"
find time shift between two similar waveforms,"A = fftpack.fft(a)
B = fftpack.fft(b)
Ar = -A.conjugate()
Br = -B.conjugate()
numpy.argmax(numpy.abs(fftpack.ifft(Ar*B))) -> 4
numpy.argmax(numpy.abs(fftpack.ifft(A*Br))) -> 17
"
How to take multiple rows and convert some of them into columns,"In [54]: counts = df.pivot_table(values='ResponseCount',
                                 rows=['ColID', 'QuestionID', 'RowID'],
                                 cols='SourceColumnID', aggfunc='sum')

In [55]: counts
Out[55]: 
SourceColumnID                    3029903181  3029903182  3029903183  \
ColID      QuestionID RowID                                            
3029903193 316923119  3029903189         773         788         778   
3029903194 316923119  3029903189         766         799         782   

SourceColumnID                    3029903184  
ColID      QuestionID RowID                   
3029903193 316923119  3029903189         803  
3029903194 316923119  3029903189         773  

[2 rows x 4 columns]
"
Using a nested element's text as a selector in BeautifulSoup,"mapping = {}
key = None
for item in soup.find_all('p'):
    if item.strong:
        key = item.strong.get_text(strip=True).rstrip(':')
        value = item.strong.next_sibling.strip()
    else:
        value = mapping[key] + ' ' + item.get_text(strip=True)
    mapping[key] = value
"
getting the number of unique values,"awk '{ a[FILENAME,$1,$2] } END { for (i in a) { split (i,x,SUBSEP); b[x[3]]++ } for (j in b) print ""total no:of"", j, b[j] }' file{1..200}
"
Finding indices of matches of one array in another array,"np.nonzero(B[:,None] == A)[1]
"
Get only numbers from string in python,"import re
just = 'Standard Price:20000'
price = re.findall(""\d+"", just)[0]
"
strange output when using flags in python,"subprocess.call(['bash','-c','rm','grep.tmp'])
"
Check if image is black,"import Image
im = Image.load(""image.png"")
if all(rgb == (0,0,0) for rgb in im.getdata()):
    print ""all black""
"
When function can only be called once,"In [18]: %%timeit                   

[val for arg in args
              if arg                 
              for val in [funct(arg)]
              if val is not None]
   ....: 
100000 loops, best of 3: 10.6 µs per loop

In [19]: timeit filter(None,map(funct,filter(None,args)))
100000 loops, best of 3: 6.42 µs per loop

In [20]: timeit [a for a in [funct(arg) for arg in args if arg] if a]

100000 loops, best of 3: 7.98 µs per loop
"
Checking for empty queryset in Python/MySQLdb,"if get_port.fetchone():
    do_something_here()
"
file.readlines() leaving blank lines,">> ' \r\n\t\v'.isspace()
True
"
Can anybody explain me the numpy.indices()?,"i, j = np.indices((2,3))
M = 2*i + 3*j
"
Set DJANGO_SETTINGS_MODULE as an Enviroment Variable in Windows permanently,"import utils.file_utils.read_file
"
lxml: Converting XML to HTML through XSLT and get HtmlElements,">>> print lxml.etree.tostring(root, xml_declaration=True)
<?xml version='1.0' encoding='ASCII'?>
<root><a class=""here"">link1</a><a class=""there"">link2</a></root>
"
python numerically solving an equation with no sign change between the upper and lower bound,"from scipy.optimize import fsolve
import numpy as np

def f(r):
    return 0.1 + 1 / (2 * r ** 2) - 2 / (3 * np.sqrt(r ** 3))

r = fsolve(f, 1)
f(r)
"
Write pure and functional code in Python using the concept higher-order functions like in JavaScript,"def adder(n):
    def add_func(x):
        return x + n
    return add_func

add3 = adder(3)
print map(add3, [1,2,3])  # [4, 5, 6]
"
Multiple merge of data frame without replacing the values,"   Name   pin  pin1  pin2  pin3  value mapping
ID                                            
1    A1  1001  4521  3223  6433     W1     pin
2    A5  1002  4556   NaN   NaN     O1     pin
3    X3  4531  4341  4563   NaN    NaN        
4    A4  4633  4633  4633  4633    NaN        
5    B3  5346  3452   NaN   NaN    NaN        
6    B4  1001   NaN   NaN   NaN     W1     pin
7    F5  6512   NaN   NaN   NaN    NaN        
"
Load many files into one array - Python,"def read_matrix(filespec):
    from scipy.io import loadmat
    md = loadmat(filespec)
    # process md
    return md
"
Query for items using filter for most recent entry in a related table,"class ItemStatusHistory(models.Model):
    date = models.DateTimeField(auto_now=True)
    contact = models.ForeignKey(Contact, related_name=""history"")
    item = models.ForeignKey(StorageItem, related_name=""history"")
    status = models.ForeignKey(Status, related_name=""history"")
    user = models.ForeignKey(User, related_name=""history"")
"
SQLAlchemy (sql) conditionnal query,"import sqlalchemy as sa
from sqlalchemy.ext.declarative import declarative_base

Base = declarative_base()

class Product(Base):
    __tablename__ = ""product""
    id = sa.Column(sa.Integer, primary_key=True)
    actual = sa.Column(sa.String)
    target = sa.Column(sa.String)
"
Convert unicode representation of number to ascii string,">>> import unicodedata
>>> unicodedata.digit(u'\u0663')
3
"
Remove a section of a colormap,"import numpy as np
import matplotlib.pyplot as plt
from matplotlib.colors import LinearSegmentedColormap

# Remove the middle 40% of the RdBu_r colormap
interval = np.hstack([np.linspace(0, 0.3), np.linspace(0.7, 1)])
colors = plt.cm.RdBu_r(interval)
cmap = LinearSegmentedColormap.from_list('name', colors)

# Plot a comparison of the two colormaps
fig, axes = plt.subplots(ncols=2)
data = np.random.random((10, 10))

im = axes[0].imshow(data, cmap=plt.cm.RdBu_r, vmin=0, vmax=1)
fig.colorbar(im, ax=axes[0], orientation='horizontal', ticks=[0, 0.5, 1])
axes[0].set(title='Original Colormap')

im = axes[1].imshow(data, cmap=cmap, vmin=0, vmax=1)
fig.colorbar(im, ax=axes[1], orientation='horizontal', ticks=[0, 0.5, 1])
axes[1].set(title='New Colormap')

plt.show()
"
python evaluate bool within a list comprehension,">>> sample = ['sample1.zip', 'sample2.zip', 'sample3.zip', 'sample4.zip',
...           'sample1.txt', 'sample2.pdf', 'sample3.csv', 'sample4.xlsx']
>>> [x for x in sample if not x.endswith('.zip')]
['sample1.txt', 'sample2.pdf', 'sample3.csv', 'sample4.xlsx']
"
Find and rename files using a Python script,"import glob

for file in glob.glob(""/Users/shirin/Desktop/Artez/untitled.*""):
    print(file)
"
Get the code from inspect element using Python,"import fhp.api.five_hundred_px as f
import fhp.helpers.authentication as authentication
from pprint import pprint
key = authentication.get_consumer_key()
secret = authentication.get_consumer_secret()

client = f.FiveHundredPx(key, secret)
results = client.get_photos(feature='popular')

i = 0
PHOTOS_NEEDED = 2
for photo in results:
    pprint(photo)
    i += 1
    if i == PHOTOS_NEEDED:
        break
"
"With Pelican, how to set or access variables between Python code and themes?","Click to <a href=""{{ OPENCONTENT }}/{{ output_file|sourcename }}"">Edit</a>
"
How to map dict into another dict Python,"{1: [0, 2, 3], 5: [1]}
"
Python Flip Cipher," 0 <->  3    utBI didn't think.
 1 <-> 14    htBI didn't tuink.
 2 <-> 13    htBI didn't tuink.
 3 <->  3    htBI didn't tuink.
 4 <->  4    htBI didn't tuink.
 5 <-> 17    htBIkdidn't tuin .
 6 <-> 11    htBIktidn'd tuin .
 7 <->  0   ihtBIkt dn'd tuin .
 8 <-> 13   ihtBIkt tn'd duin .
 9 <->  3   ihtnIkt tB'd duin .
10 <->  3   iht'Ikt tBnd duin .
11 <-> 14   iht'Ikt tBnu ddin .
12 <-> 13   iht'Ikt tBnud din .
13 <->  3   iht Ikt tBnud'din .
14 <->  4   iht dkt tBnud'Iin .
15 <-> 17   iht dkt tBnud'I ni.
16 <-> 11   iht dkt tBnnd'I ui.
17 <->  0   iht dkt tBnnd'I ui.
18 <-> 13   iht dkt tBnnd.I ui'

18 <-> 13   iht dkt tBnnd'I ui.
17 <->  0   iht dkt tBnnd'I ui.
16 <-> 11   iht dkt tBnud'I ni.
15 <-> 17   iht dkt tBnud'Iin .
14 <->  4   iht Ikt tBnud'din .
13 <->  3   iht'Ikt tBnud din .
12 <-> 13   iht'Ikt tBnu ddin .
11 <-> 14   iht'Ikt tBnd duin .
10 <->  3   ihtnIkt tB'd duin .
 9 <->  3   ihtBIkt tn'd duin .
 8 <-> 13   ihtBIkt dn'd tuin .
 7 <->  0    htBIktidn'd tuin .
 6 <-> 11    htBIkdidn't tuin .
 5 <-> 17    htBI didn't tuink.
 4 <->  4    htBI didn't tuink.
 3 <->  3    htBI didn't tuink.
 2 <-> 13    htBI didn't tuink.
 1 <-> 14    utBI didn't think.
 0 <->  3   But I didn't think.
"
"Read a file, and print a specific line of it in Python","import re
file = open('1.txt','r')
for line in file.readlines():
    sequence = re.findall(r""A\d\d"", line)
    if sequence:
        for i in sequence:
            print i
"
Can we query multiple tables across multiple oracle users and tabularize the rows in Django's Admin UI,"# in model
class Foo(models.Model):
    col1 = models.TextField(primary_key=True)
    col2 = models.TextField()
    col3 = models.TextField()

    class Meta:
        db_table = 'view_for_legacy_tables'
"
How do I take out the focus or minimize a window with Python?,"import win32con
win32gui.ShowWindow(firefox[0], win32con.SW_MINIMIZE)
"
Python loop through string in nested for loops,"s = '''that's my     string, ""   keep these spaces     ""    but reduce these '''


normal, quoted, eating = 0,1,2
state = eating
result = ''
for ch in s:
  if (state, ch) == (eating, ' '):
    continue
  elif (state,ch) == (eating, '""'):
    result += ch
    state = quoted
  elif state == eating:
    result += ch
    state = normal
  elif (state, ch) == (quoted, '""'):
    result += ch
    state = normal
  elif state == quoted:
    result += ch
  elif (state,ch) == (normal, '""'):
    result += ch
    state = quoted
  elif (state,ch) == (normal, ' '):
    result += ch
    state = eating
  else: # state == normal
    result += ch

print result
"
What is the fastest way to copy a 2D array in Python?,">>> pybench ""np.copyto(cp_np, ref_np)""
100000 loops, best of 3: 4.52 usec per loop
"
How to check if an object is a list of strings?,">>> def is_list_of_strings(lst):
        if lst and isinstance(lst, list):
            return all(isinstance(elem, basestring) for elem in lst)
        else:
            return False
"
Django stylesheet will not load,"{% load staticfiles %}

<script type=""text/javascript"" src=""{% static 'raphael-min.js' %}""></script>
"
Call same python script in for loop from another python script,"cmd=""python script1.py %s""%i
"
Having problems with python's random.shuffle,"v = vec[:]
"
repeating a section of a regular expression?,"map(lambda x: x.strip(), s.split("";""))
"
Python method doesn't run in class,"...
return row
"
Python Random Function without using random module,"$ python3 random-from-time.py | dieharder -a -g 200
"
Adding certain numbers together in a string/list then turning then into letters,"keyphrase = [2,25,5,2,25]
message = [8,5,12,12,15]
"
Best way to get last entries from Pandas data frame,"df.iloc[df.groupby('id')['date'].idxmax()]
"
Python: replacing a repeating string once in text,"""baz"".join(s.rsplit(""foo"", 1))
"
Checking for unique output in Python,"while len(solved) < 2:
    try1('123456789')
"
Rescale a numpy array,"In [16]: g
Out[16]: 
array([[0, 1, 2],
       [3, 4, 5],
       [6, 7, 8]])

In [17]: np.kron(g, np.ones((3,3), dtype=int))
Out[17]: 
array([[0, 0, 0, 1, 1, 1, 2, 2, 2],
       [0, 0, 0, 1, 1, 1, 2, 2, 2],
       [0, 0, 0, 1, 1, 1, 2, 2, 2],
       [3, 3, 3, 4, 4, 4, 5, 5, 5],
       [3, 3, 3, 4, 4, 4, 5, 5, 5],
       [3, 3, 3, 4, 4, 4, 5, 5, 5],
       [6, 6, 6, 7, 7, 7, 8, 8, 8],
       [6, 6, 6, 7, 7, 7, 8, 8, 8],
       [6, 6, 6, 7, 7, 7, 8, 8, 8]])
"
Transform QuadgramCollationFinder into PentagramCollationFinder,"import collections

def make_ngram_ipatterns(n):
    """"""Make all needed patterns used by *gramCollocationFinder up to n words""""""

    i_patterns = []

    for i in xrange(1, n+1):
        if i <= 2:
            i_patterns.append('i' * i)

        else:
            for j in xrange(2**(i-2)):
                 bin_str = '{0:0{1}b}'.format(j, i-2)
                 ix_pattern = bin_str.replace('0', 'x').replace('1', 'i')
                 i_patterns.append('i{}i'.format(ix_pattern))

    return i_patterns

def make_ngram_npatterns(n):
    """"""Make all needed n-patterings used by *gramCollocationFinder up to n words""""""
    all_ipatterns = make_ngram_ipatterns(n)

    npatterns = []

    for ipattern in all_ipatterns:
         i_order = sum(c == 'i' for c in ipattern)
         i_length = len(ipattern)
         for j in xrange(n - i_length+1):
             npattern = 'n_{}{}{}'.format('x'* j,
                                           ipattern ,
                                           'x'* (n - i_length - j))

             npatterns.append((i_order, ipattern, npattern))

    return sorted(npatterns)


def main():

    n = 5

    all_ipatterns = make_ngram_ipatterns(n)

    print '\n'.join(make_ngram_ipatterns(n))

    for order, ipattern, npattern in make_ngram_npatterns(n):
         wparams = ', '.join('w{}'.format(i+1)
                                for i, c in enumerate(npattern[2:])
                                if c == 'i'
                            )
         print('order: {1:2}   ipattern: {2:{0}s}   npattern: {3}'
               ' ->  {3} = self.{2}({4})'.format(
                   n, order, ipattern, npattern, wparams))


if __name__ == '__main__':
    main()
"
is it possible to use import after sys.exit(1)?,"$ cat config.py 
print ""Everything is ok for now""
"
Python Mulitprocessing,"p = multiprocessing.Process(target=test_def())
"
Searching for Phrase Keywords in MySQL,">>> col={i.lower() for i in col}
"
"In python, how can I can I code this sense: ""when true for all members of the list, do this."" [Solved]","def evenlist(lst,y):
    return all(int(x) % y == 0 for x in lst)
"
Simulating Lisp's :keywords in Python,"default = 1
do_something = 2
do_other_thing = 3

>>> x = default
>>> x
1 # is 1 default? I can't remember...
"
How to retrieve elements that have the same foreign key from a list?,"country_ids = City.objects.values_list('city_country_id', flat=True).filter(id__in=list_cities)
"
Issue in generating the xml file from python minidom,"from xml.etree import cElementTree as etree

root = etree.Element('root')
for i in range(1,3):
    item = etree.SubElement(root, 'item')
    item.attrib['class']='memory'
    for j in range(1,3):
        p = etree.SubElement(item, 'p')
        p.text = 'DIMM Size %s'%j

print etree.tostring(root)
"
python underscores: learn python the hard way exercise 40,"city_found = find_city(cities, state)
"
Is there ready to use multilingual string field for MongoEngine?,"{
    ""_cls"" : ""MyDoc"",
    ""_id"" : ObjectId(""5053ad4e3116b063001f6980""),
    ""_types"" : [
        ""MyDoc""
    ],
    ""name"" : [
        {
            ""lang"" : ""ru_RU.UTF-8"",
            ""value"" : ""Эрмитаж""
        },
        {
            ""lang"" : ""en_US.ISO8859-1"",
            ""value"" : ""The Hermitage""
        }
    ]
}
"
Can rectangle be used as a parent class (tkinter)?,"class Rectangle(object):
    def __init__(self, canvas, coords, fill, outline=None):
        self.canvas = canvas
        self.outline = outline if outline is not None else fill
        self.fill = fill
        self.canvas_id = self.canvas.create_rectangle(
            coords, outline=self.outline, fill=self.fill)
"
How to call a function with delay in tkinter?,"import Tkinter as tk

class Example(tk.Frame):
    def __init__(self, parent):
        tk.Frame.__init__(self, parent)

        self.canvas = tk.Canvas(self, width=400, height=400)
        self.canvas.pack(fill=""both"", expand=True)

        self.canvas.bind(""<1>"", self.on_click)

    def on_click(self, event):
        self.draw_piece(event.x, event.y)
        self.after(2000, self.draw_piece, event.x+40, event.y+40, ""green"")

    def draw_piece(self, x, y, color=""white""):
        self.canvas.create_oval(x-10, y-10, x+10, y+10, outline=""black"", fill=color)

if __name__ == ""__main__"":
    root = tk.Tk()
    Example(root).pack(fill=""both"", expand=True)
    root.mainloop()
"
highlight single contour line,"CS.labelCValueList    CS.labelIndiceList    CS.labelTextsList
CS.labelCValues       CS.labelLevelList     CS.labelXYs
CS.labelFmt           CS.labelManual        CS.labels
CS.labelFontProps     CS.labelMappable      CS.layers
CS.labelFontSizeList  CS.labelTexts
"
Python : Extract HTML content,"soup.select('div ul.main li p.class_label + p')[0].text
"
Python: Loop acting on several files and writing new ones,"import pandas as pd

#files = ['university1.csv','university2.csv','university3.csv']
for i in range(1,4):
    print i
    print 'university'+ str(i) + '.csv'

    #Importing the csv file into df
    df = pd.read_csv('university'+ str(i) + '.csv', sep="";"", skiprows=1)

    #Changing datetime
    df['YYYY-MO-DD HH-MI-SS_SSS'] = pd.to_datetime(df['YYYY-MO-DD HH-MI-SS_SSS'], 
                                                   format='%Y-%m-%d %H:%M:%S:%f')

    #Set index from column
    df = df.set_index('YYYY-MO-DD HH-MI-SS_SSS')

    #Add Magnetic Magnitude Column
    df['magnetic_mag'] = np.sqrt(df['MAGNETIC FIELD X (μT)']**2 + df['MAGNETIC FIELD Y (μT)']**2 + df['MAGNETIC FIELD Z (μT)']**2)

    #Copy interesting values
    df2 = df[[ 'ATMOSPHERIC PRESSURE (hPa)',
              'TEMPERATURE (C)', 'magnetic_mag']].copy()

    #Hourly Average and Standard Deviation for interesting values 
    df3 = df2.resample('H').agg(['mean','std'])
    df3.columns = [' '.join(col) for col in df3.columns]   

    #Daily Average and Standard Deviation for interesting values 
    df4 = df2.resample('D').agg(['mean','std'])
    df4.columns = [' '.join(col) for col in df4.columns] 

    #Write to new csv
    df3.to_csv('Hours'+ str(i) + '.csv')  
    df4.to_csv('Day'+ str(i) + 's.csv')    

    #New df3 with stacked hour averages
    df5 = df3.reset_index()
    hour = pd.to_timedelta(df5['YYYY-MO-DD HH-MI-SS_SSS'].dt.hour, unit='H')
    df6 = df5.groupby(hour).mean()
    df6.to_csv('Hours - stacked'+ str(i) + '.csv')
"
Separate a set of sublists from within a list by a given element of a sublist,"In [31]: main_list = [['a','1','x'], ['b','2', 'm'], ['a', '23', 'm'], ['c', '34', 'x'], ['b', '11'], ['b', '32', 'y']]

In [32]: g = itertools.groupby(main_list, key=lambda x: (x[0], len(x)))
"
"output of numpy.where(condition) is not an array, but a tuple of arrays: why?","a[where(a>0)]
a[a>0]
"
Django DB design to glob words quickly,"contains, position = 'A', 3
where = [""strpos(word, '%s') = %s"" % (contains, position)]
Word.objects.filter(length = 4, word__contains = contains).extra(where = where)
"
Recursively return a tuple of numbers 0 to n in python,"def rec_range(n):
    """"""Takes a natural number n and returns a tuple of numbers starting with 0 and ending before n.

    Natural Number -> tuple""""""
    if n == 0:
        return 
    elif n == 1:
        return (0,)
    else:
        return rec_range(n-1) + (n-1,)
"
Tallying the outcome of a coin flip,"import matplotlib.pyplot as plt

# tally = Counter({'H': 52, 'T': 48})

plt.bar(range(len(tally)), tally.values(), width=0.5, align='center')
plt.xticks(range(len(tally)), ['H', 'T'])
plt.show()
"
How to remove/omit smaller contour lines using matplotlib,"import numpy as np
import matplotlib.pyplot as plt

# insert actual data here...
Z = np.loadtxt('mslp.txt',delimiter=',')
X,Y = np.meshgrid(np.linspace(0,300000,Z.shape[1]),np.linspace(0,200000,Z.shape[0]))
p1,p2 = 1006,1018

# this is almost the same as the original, although it will produce
# [p1, p1+2, ...] instead of `[Z.min()+n, Z.min()+n+2, ...]`
levels = np.arange(np.maximum(Z.min(),p1),np.minimum(Z.max(),p2),2)


#control
plt.figure()
CS = plt.contour(X, Y, Z, colors='b', linewidths=2, levels=levels)


#modified
plt.figure()
CS = plt.contour(X, Y, Z, colors='b', linewidths=2, levels=levels)

for level in CS.collections:
    for kp,path in reversed(list(enumerate(level.get_paths()))):
        # go in reversed order due to deletions!

        # include test for ""smallness"" of your choice here:
        # I'm using a simple estimation for the diameter based on the
        #    x and y diameter...
        verts = path.vertices # (N,2)-shape array of contour line coordinates
        diameter = np.max(verts.max(axis=0) - verts.min(axis=0))

        if diameter<15000: # threshold to be refined for your actual dimensions!
            del(level.get_paths()[kp])  # no remove() for Path objects:(

# this might be necessary on interactive sessions: redraw figure
plt.gcf().canvas.draw()
plt.show()
"
String to list of list,"line=file.readline() # stores the str line from the file
ine = '[' + line + ']'
line = line.replace('][', '],[')
line = ast.literal_eval(line)
"
Python urllib2 or requests post method,"In [13]: import requests

In [14]: from bs4 import BeautifulSoup

In [15]: url = ""https://patentscope.wipo.int/search/en/search.jsf""

In [16]: data = {""simpleSearchSearchForm"": ""simpleSearchSearchForm"",
   ....:         ""simpleSearchSearchForm:j_idt341"": ""EN_ALLTXT"",
   ....:         ""simpleSearchSearchForm:fpSearch"": ""automata"",
   ....:         ""simpleSearchSearchForm:commandSimpleFPSearch"": ""Search"",
   ....:         ""simpleSearchSearchForm:j_idt406"": ""workaround""}

In [17]: head = {
   ....:     ""User-Agent"": ""Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.75 Safari/537.36""}

In [18]: with requests.Session() as s:
   ....:         init = s.get(url)
   ....:         soup = BeautifulSoup(init.text, ""lxml"")
   ....:         val = soup.select_one(""#j_id1:javax.faces.ViewState:0"")[""value""]
   ....:         data[""javax.faces.ViewState""] = val
   ....:         r = s.post(url, data=data, headers=head)
   ....:         print(""\n"".join([s.text.strip() for s in BeautifulSoup(r.text,""lxml"").select(""span.trans-section"")]))
   ....:     

Fuzzy genetic learning automata classifier
Fuzzy genetic learning automata classifier
FINITE AUTOMATA MANAGER
CELLULAR AUTOMATA MUSIC GENERATOR
CELLULAR AUTOMATA MUSIC GENERATOR
ANALOG LOGIC AUTOMATA
Incremental automata verification
Cellular automata music generator
Analog logic automata
Symbolic finite automata
"
Python: How to prepend the string 'ub' to every pronounced vowel in a string?,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
import re

sent = ""Hi, how are you?""
subent = "" "".join(["""".join(map(spubeak, re.split(""(\W+)"", nonblank)))
                   for nonblank in sent.split()])
print('""{}"" → ""{}""'.format(sent, subent))
"
Mapping specific letters onto a list of words,"word_list = ['drek', 'drew', 'dyes']
cols = []
for i in range(len(word_list[0])):
    cols.append([])

for word in word_list:
    for i, ch in enumerate(word):
        cols[i].append(ch)

pattern = [item[0] if len(set(item)) == 1 else '-' for item in cols]
print ''.join(pattern)
d-e-
"
Arranging number of strings using Python's lambda function,"def key_function(x):
    return len(x)

a = ['green egg','snail and lettuce','bacon','dorse naga','rutabaga ripple','cheese']
a.sort(key=key_function)
print a
"
Read the first line of batch file from the same batch file?,"@echo off
set /p var=<test.py
call %var:~2% test.py
"
Correct usage of \D in python?,">>> import re
>>> reg = re.compile(r""(?<!\d)12345(?!\d)"")
>>> reg.search('12345')
<_sre.SRE_Match object at 0x102981ac0>
>>> reg.search('-12345-')
<_sre.SRE_Match object at 0x102a51238>
>>> reg.search('0123456')
>>> reg.search('012345-')
>>> reg.search('-123456')
"
tkinter button to open new window and run script,"from tkinter import *
from subprocess import call

pyprog = 'tem2.py'
def callpy(): call(['python', '-i', pyprog] )

root = Tk()
Button(root, text='Run', command=callpy).pack()
root.mainloop()
"
'wxPython' ID icons not showing,"OS          Icon format Size 

Windows     16x16, 24x24, 32x32, 48x48, 256x256
Mac OS X    16x16, 32x32, 64x64, 128x128, 256x256, 512x512, 1024x1024
Linux       16x16, 24x24, 48x48, and 96x96
iOS 6       29x29, 50x50, 57x57, 58x58, 72x72, 100x100, 114x114, 144x144, 1024x1024
iOS 7       29x29, 40x40, 58x58, 60x60, 76x76, 80x80, 120x120, 152x152, 1024x1024
Android     36x36, 48x48, 72x72, 96x96, 512x512
Windows Phone   62x62, 99x99, 173x173, 200x200
"
How to restore a builtin when parameter has same name?,"import builtins
range = builtins.range
"
PyQt allign checkbox and put it in every row,"from PyQt4 import QtGui, QtCore
from PyQt4.QtCore import Qt

class Window(QtGui.QWidget):
    def __init__(self, rows, columns):
        QtGui.QWidget.__init__(self)
        self.table = QtGui.QTableWidget(rows, columns, self)
        for row in range(rows):
            qwidget = QtGui.QWidget()
            checkbox = QtGui.QCheckBox()
            checkbox.setCheckState(QtCore.Qt.Unchecked)
            qhboxlayout = QtGui.QHBoxLayout(qwidget)
            qhboxlayout.addWidget(checkbox)
            qhboxlayout.setAlignment(Qt.AlignCenter)
            qhboxlayout.setContentsMargins(0, 0, 0, 0)
            self.table.setCellWidget(row, 0, qwidget)
            self.table.setItem(row, 1, QtGui.QTableWidgetItem(str(row)))
        layout = QtGui.QVBoxLayout(self)
        self.button = QtGui.QPushButton()
        self.button.setObjectName(""loadButton"")
        layout.addWidget(self.table)
        layout.addWidget(self.button)
        self.button.clicked.connect(self.ButtonClicked)

    def ButtonClicked(self):
        checked_list = []
        for i in range(self.table.rowCount()):
            if self.table.cellWidget(i, 0).findChild(type(QtGui.QCheckBox())).isChecked():
                checked_list.append(self.table.item(i, 1).text())
        print checked_list


if __name__ == '__main__':

    import sys
    app = QtGui.QApplication(sys.argv)
    window = Window(3, 2)
    window.resize(350, 300)
    window.show()
    sys.exit(app.exec_())
"
"pandas df.loc[z,x]=y how to improve speed?","ax = sns.barplot(data=r, x='method', y='timing')
ax.tick_params(labelsize=16)
[ax.annotate(str(round(p.get_height(),2)), (p.get_x() + 0.2, p.get_height() + 5)) for p in ax.patches]
ax.set_xlabel('indexing method', size=20)
ax.set_ylabel('timing (microseconds)', size=20)
"
First month of quarter given month in Python,"def firstMonthInQuarter(month):
    return month - (month - 1) % 3
"
Python: List of lists to dictionary,"itemDict = {item[0]: item[1:] for item in items}
"
How to create a date range until some date inclusive with python dateutils?,"def date_list(start, end):
    start = datetime.date(start.year, start.month, 1)
    end = datetime.date(end.year, end.month, 1)
    dates = [dt for dt in rrule(MONTHLY, dtstart=start, until=end)]
    return dates
"
How to save input from python to XML,"import xml.etree.cElementTree as et
some_number = int(input('input a number: '))
el = et.Element(""number"").text = some_number
tree = et.ElementTree(el)
tree.write(""number.xml"")
"
Can Numpy's frompyfunc() return an image?,"In [608]: timeit np.array([A.astype(float) for A in setcolor(z)]).transpose([1,2,0])
10000 loops, best of 3: 47.1 µs per loop
"
Automatic transformation from getter/setter to properties,"def make_properties(skip=None):
    if skip is None:
        skip=[]
    def f(c):
        from collections import defaultdict
        props=defaultdict(dict)
        for k,v in vars(c).items():
            if k.startswith(""Get""):
                props[k[3:]]['getter']=v
            if k.startswith(""Set""):
                props[k[3:]]['setter']=v
        for k,v in props.items():
            if k in skip:
                continue
            setattr(c,k,property(v.get('getter'),v.get('setter')))
        return c
    return f

@make_properties(skip=['Y'])
class C(object):
    def GetX(self):
        print ""GetX""
        return self._x

    def SetX(self, value):
        print ""SetX""
        self._x = value

    def GetY(self):
        print ""GetY""
        return self._y

    def SetY(self, value):
        print ""SetY""
        self._y = value

c=C()
c.X=5
c.X
c.Y=5
c.Y
"
Complex regex in Python,">>> ''.join(re.findall(r'^..|\d', s))
'Gi0000'
>>> ''.join(re.findall(r'^..|\d', 'Ethernet0/0.222'))
'Et00222'
"
How to asyncronously load posts from DB to django template on google app engine?,"class Page(webapp2.RequestHandler):
    def get(self,page):
        numberOfPages = int(page)
        records_query = db.GqlQuery(""SELECT * FROM Record order by date desc"")
        records = records_query.fetch(numberOfPages * 10)
        records = records[((numberOfPages- 1) * 10):]
        if len(records) > 0:
            template_values = {
             'records': records,
            }
            path = os.path.join(os.path.dirname(__file__), 'posts.html')
            self.response.out.write(template.render(path, template_values))
"
Apply similar function to multilevel pandas dataframe,">>> df.update(df.xs(""Num"", level=1, axis=1, drop_level=False).where(
              df.xs(""Let"", level=1, axis=1, drop_level=False).values != ""B"", 3))
>>> df
   S1      S2      S3    
  Num Let Num Let Num Let
0   1   A   3   B   3   B
1   3   B   3   B   2   A
2   1   A   1   A   1   A
3   3   B   2   A   3   B
"
What does return do? Nothing is ever returned,"def addseven(n):
    return n+7

def timeseight(n):
    return n*8

print(addseven(timeseight(9))

# what the intepreter is doing (kind of):
# print(addseven(72))    # 72 is what is returned when timeseight is called on 9
# print(79)
# 79
"
Sorting child elements with lxml based on attribute value,"import xml.etree.ElementTree as ET

tree = ET.fromstring(xml_str)

def getkey(elem):
    # Used for sorting elements by @LIN.
    # returns a tuple of ints from the exploded @LIN value
    # '1.0' -> (1,0)
    # '1.0.1' -> (1,0,1)
    return float(elem.get('LIN'))

root = etree.fromstring(xml_str)
lines = root.find(""PurchaseOrder/LineItems"")
lines[:] = sorted(lines, key=getkey)
"
"Problem with 2D interpolation in SciPy, non-rectangular grid","ax = subplot(1,1,1, projection=""polar"", aspect=1.)
ax.pcolormesh(theta, r, Z)
"
Django/Apache/Mod_WSGI - HTTP 404 Error with Static Files,"WSGIDaemonProcess Dashboard_Web python-path=E:/Bitnami/djangostack-1.6.7-1/apps/django/django_projects/Dashboard_Web/
WSGIScriptAlias /Dashboard_Web E:/Bitnami/djangostack-1.6.7-1/apps/django/django_projects/Dashboard_Web/Dashboard_Web/wsgi.py process-group=Dashboard_web

Alias /static/ E:/Bitnami/djangostack-1.6.7-1/apache2/static/

<Directory E:/Bitnami/djangostack-1.6.7-1/apps/django/django_projects/Dashboard_Web/>

Order allow,deny

Allow from all

</Directory>
"
Dynamic objects in Python like in AS3,"class Dynamic:
    def __getitem__(self, name):
        return getattr(self, name)

    def __setitem__(self, name, value):
        setattr(self, name, value)

    def __delitem__(self, name):
        delattr(self, name)

    def __iter__(self):
        return self.__dict__.__iter__()
"
All combinations with multiple loops,"Enter the number of nested loops you want: 3
('loop01item01', 'loop02item01', 'loop03item01')
('loop01item01', 'loop02item01', 'loop03item02')
('loop01item01', 'loop02item01', 'loop03item03')
('loop01item01', 'loop02item01', 'loop03item04')
('loop01item01', 'loop02item01', 'loop03item05')
...
('loop01item01', 'loop02item02', 'loop03item01')
('loop01item01', 'loop02item02', 'loop03item02')
...
('loop01item02', 'loop02item01', 'loop03item01')
('loop01item02', 'loop02item01', 'loop03item02')
('loop01item02', 'loop02item01', 'loop03item03')
...
('loop01item02', 'loop02item02', 'loop03item01')
('loop01item02', 'loop02item02', 'loop03item02')
"
How can I convert each Pandas Data Frame row into an object including the column values as the attributes?,"from collections import namedtuple

Person = namedtuple('Person', frame.dtypes.index.tolist())
person = Person(*frame.iloc[0,:])
print person.NAME // ...
"
Find all tables in html using BeautifulSoup,"<table>table1<table>inner11<table>inner12</table></table></table>
<table>table2<table>inner2</table></table>
<table>table3<table>inner3</table></table>
<table>table4<table>inner4</table></table>
"
Django - access foreign key data in an annotated query,"from django.contrib.auth.models import User
from django.db import models

class Relationship(models.Model):
    from_user = models.ForeignKey(User, related_name='from_users')
    to_user = models.ForeignKey(User, related_name='to_users')
"
Numpy: get the column and row index of the minimum value of a 2D array,"In [21]: np.argwhere(x == np.min(x))
Out[21]: array([[2, 1]])
"
Append/pop specific element of a string to the list when iterating over it,"def find_letter(item):
    lst = []
    item=list(item) #convert your string to list
    for index,letter in enumerate(item):
        if letter=='a':
            lst.append(letter) # add 'a' to your empty list
            item.pop(index) # remove 'a' from the original string
        item="""".join(item) # convert back your list to a string
    return lst,item
"
Split list into smaller lists,"A = [1,2,3,4,5,6]
B = A[:len(A)/2]
C = A[len(A)/2:]
"
How can I step to use the python debugger to break at every function call?,"import os
import sys

def main(discs):
    a, b, c = list(range(discs, 0, -1)), [], []
    line = '-' * len(repr(a))
    print(a, b, c, sep='\n')
    for source, destination in towers_of_hanoi(discs, a, b, c):
        destination.append(source.pop())
        print(line, a, b, c, sep='\n')

def towers_of_hanoi(count, source, via, destination):
    if count > 0:
        count -= 1
        yield from towers_of_hanoi(count, source, destination, via)
        yield source, destination
        yield from towers_of_hanoi(count, via, source, destination)

def trace(start, *names):
    def tracefunc(frame, event, arg):
        if event == 'call':
            code = frame.f_code
            name = code.co_name
            if name in names:
                level = -start
                args = ', '.join(repr(frame.f_locals[name]) for name in
                                 code.co_varnames[:code.co_argcount])
                while frame:
                    frame = frame.f_back
                    level += 1
                print('{}{}.{}({})'.format(
                    ' ' * (level * 4),
                    os.path.splitext(os.path.basename(code.co_filename))[0],
                    name, args))
                return tracefunc
    sys.settrace(tracefunc)

if __name__ == '__main__':
    trace(3, 'main', 'towers_of_hanoi')
    main(3)
"
Automatic parsing of data in Python,"from pyread import read_auto
read_auto(PATHFILE)
"
Creating a list of dictionaries with default values,"strings = [ 'abc', 'def', 'xyz' ]
defaults = { 'extra_key1':0, 'extra_key2':'no' }
result = [ { 'type': type }.update( defaults ) for type in strings ]
"
Most efficient way to populate dictionary keys with dictionary,"friends[""John""][places[""NY""]] += 1
"
Numpy: fast calculations considering items' neighbors and their position inside the array,"def neighbor_min(a):
    rows, cols = a.shape
    ret = np.empty_like(a)

    # Fill in the center
    win_a = as_strided(a, shape=(m-2, n, 3),
                       strides=a.strides+a.strides[:1])
    win_a = win_a.min(axis=2)
    win_a = as_strided(win_a, shape=(m-2, n-2, 3),
                       strides=win_a.strides+win_a.strides[1:])
    ret[1:-1, 1:-1] = win_a.min(axis=2)

    # Fill the top, bottom, left and right borders
    win_a = as_strided(a[:2, :], shape=(2, cols-2, 3),
                       strides=a.strides+a.strides[1:])
    ret[0, 1:-1] = win_a.min(axis=2).min(axis=0)
    win_a = as_strided(a[-2:, :], shape=(2, cols-2, 3),
                       strides=a.strides+a.strides[1:])
    ret[-1, 1:-1] = win_a.min(axis=2).min(axis=0)
    win_a = as_strided(a[:, :2], shape=(rows-2, 2, 3),
                       strides=a.strides+a.strides[:1])
    ret[1:-1, 0] = win_a.min(axis=2).min(axis=1)
    win_a = as_strided(a[:, -2:], shape=(rows-2, 2, 3),
                       strides=a.strides+a.strides[:1])
    ret[1:-1, -1] = win_a.min(axis=2).min(axis=1)

    # Fill the corners
    ret[0, 0] = a[:2, :2].min()
    ret[0, -1] = a[:2, -2:].min()
    ret[-1, -1] = a[-2:, -2:].min()
    ret[-1, 0] = a[-2:, :2].min()

    return ret
"
Python json get specific story and image,"if len(stories) >= 2:
    print stories[1]['title']
"
Kivy - Change a video source using button,"def change_Vid(self, next_vid):
        self.ids.video.vid = next_vid
        return self.ids.video.vid
"
Cannot find python xlrd version,">>> import pkg_resources
>>> pkg_resources.get_distribution(""xlrd"").version
'0.9.3'
"
Create a summary Pandas DataFrame using concat/append via a for loop,"pd.concat(get_sumdf(area_tab) for area_tab in areas_tabs)
"
Set Input Variable at the Start of a Python Script,"./SQLQuery.py --row-to-query some_row_name
"
Find Unique Dates in Numpy Datetime Array,"In [121]: arr1 = np.array([dt.datetime(2013, 1, 1), dt.datetime(2013, 1, 1), dt.datetime(2013, 1, 2)]) 

In [122]: arr2 = np.array([1, 2, 3]) 

In [123]: df = pd.DataFrame({'date': arr1, 'value': arr2})

In [124]: df
Out[124]: 
                 date  value
0 2013-01-01 00:00:00      1   
1 2013-01-01 00:00:00      2   
2 2013-01-02 00:00:00      3   

In [125]: df.drop_duplicates('date')
Out[125]: 
                 date  value
0 2013-01-01 00:00:00      1   
2 2013-01-02 00:00:00      3 
"
Modify csv files with Python,"csv_file.close()
"
Calling Parent method directly in Python,"from __future__ import print_function #so we can use python 3 print function

class GParent(object):
    def gparent_testmethod(self):
        print(""Grandparent test method "")


class Parent(GParent):
    def parent_testmethod(self): # 
        print(""Parent test method"")


class Child(Parent):
    def child_testmethod(self):
        print(""This is the child test method"")

c = Child()
c.gparent_testmethod()
c.parent_testmethod()
c.child_testmethod()
"
Django + Google Federated Login,"class Nonce(models.Model):
    """""" Required for OpenID functionality """"""
    server_url = models.CharField(max_length=255)
    timestamp = models.IntegerField()
    salt = models.CharField(max_length=40)

    def __unicode__(self):
        return u""Nonce: %s for %s"" % (self.salt, self.server_url)


class Association(models.Model):
    """""" Required for OpenID functionality """"""
    server_url = models.TextField(max_length=2047)
    handle = models.CharField(max_length=255)
    secret = models.TextField(max_length=255) # Stored base64 encoded
    issued = models.IntegerField()
    lifetime = models.IntegerField()
    assoc_type = models.TextField(max_length=64)

    def __unicode__(self):
        return u""Association: %s, %s"" % (self.server_url, self.handle)
"
Messagebox not working,"from tkinter import *
from tkinter import messagebox
calculator = Tk()
calculator.title(""Calculator"")
calculator.geometry(""317x145"")

menubar = Menu(calculator)

class Calculator(Frame):
    def __init__(self):
        Frame.__init__(self)
        display = Frame(calculator, bd=0, width=1000, height=1000, relief=SUNKEN)
        buttons = Frame(calculator, bd=0, width=7, height=1, relief=GROOVE)
        display.grid(column=0, row=0, padx=0, pady=0)
        buttons.grid(column=0, row=1, padx=1)
        numbers = StringVar()
        self.results = Entry(display, textvariable=numbers, width=31, fg=""DarkOrchid4"", bg=""lavender blush"", font=""Verdana"")
        self.results.pack()
        self.results.grid(column=0, row=0)

        def showup(x):
            return lambda: self.results.insert(END, x)

        numbers=[""7"", ""4"", ""1"", ""8"", ""5"", ""2"", ""9"", ""6"", ""3""]
        for i in range(9):
            n=numbers[i]
            Button(buttons, bg=""snow"", text=n, width=7, height=1, command=showup(n), relief=RAISED).grid(row=i%3, column=i//3)

        Clear = Button(buttons, bg=""snow"", text=""C"", width=7, height=1, command=self.clear, relief=RAISED)
        Clear.grid(padx=2, pady=2, column=3, row=0)
        Equals = Button(buttons, bg=""snow"", text=""="", width=7, height=1, command=self.equals, relief=RAISED)
        Equals.grid(padx=2, pady=2, column=4, row=3)
        All_clear = Button(buttons, bg=""snow"", text=""AC"", width=7, height=1, command=self.all_clear, relief=RAISED)
        All_clear.grid(padx=2, pady=2, column=4, row=0)
        Bracket_one = Button(buttons, bg=""snow"", text=""("", width=7, height=1, command=self.bracket_one, relief=RAISED)
        Bracket_one.grid(padx=2, pady=2, column=2, row=3)
        Bracket_two = Button(buttons, bg=""snow"", text="")"", width=7, height=1, command=self.bracket_two, relief=RAISED)
        Bracket_two.grid(padx=2, pady=2, column=3, row=3)
        Zero = Button(buttons, bg=""snow"", text=""0"", width=7, height=1, command=self.zero, relief=RAISED)
        Zero.grid(padx=2, pady=2, column=0, row=3)
        Decimal_point = Button(buttons, bg=""snow"", text=""."", width=7, height=1, command=self.decimal_point, relief=RAISED)
        Decimal_point.grid(padx=2, pady=2, column=1, row=3)
        Multiplication = Button(buttons, bg=""red"", text=""x"", width=7, height=1, command=self.multiplication, relief=RAISED)
        Multiplication.grid(padx=2, pady=2, column=3, row=1)
        Division = Button(buttons, bg=""powder blue"", text=""/"", width=7, height=1, command=self.division, relief=RAISED)
        Division.grid(padx=2, pady=2, column=4, row=1)
        Addition = Button(buttons, bg=""yellow"", text=""+"", width=7, height=1, command=self.addition, relief=RAISED)
        Addition.grid(padx=2, pady=2, column=3, row=2)
        Subtraction = Button(buttons, bg=""green"", text=""-"", width=7, height=1, command=self.subtraction, relief=RAISED)
        Subtraction.grid(padx=2, pady=2, column=4, row=2)
        self.menubar = Menu(self)
        def about():
            messagebox.showinfo(title = ""About"", message = ""Author"")
            return
        self.helpMenu = Menu(self.menubar)
        self.menubar.add_cascade(label=""Help"",menu=self.helpMenu)
        self.helpMenu.add_command(label = ""About"", command=about)
        calculator.config(menu=self.menubar)

    def equals(self):
        try:
            result = eval(self.results.get())
        except:
            result = ""Invalid input""
        self.all_clear()
        self.results.insert(0, result)
    def zero(self):
        self.results.insert(END, ""0"")
    def bracket_one(self):
        self.results.insert(END, ""("")
    def bracket_two(self):
        self.results.insert(END, "")"")
    def all_clear(self):
        self.results.delete(0, END)
    def clear(self):
        self.results.delete(-1)
    def multiplication(self):
        self.results.insert(END, ""*"")
    def division(self):
        self.results.insert(END, ""/"")
    def addition(self):
        self.results.insert(END, ""+"")
    def subtraction(self):
        self.results.insert(END, ""-"")
    def decimal_point(self):
        self.results.insert(END, ""."")    


if __name__ == '__main__':
    Calculator().mainloop()
    calculator.config(menu=menubar)
    calculator.mainloop()
"
Searching and Matching a part of a string in a CSV file using Python,"import csv
with open('GeoIPCountryWhois.csv', mode='r') as f:
    reader = csv.reader(f)
    for num, row in enumerate(reader):
        if '66.35' in row[0]:
            print num, row
"
Import a module in Python,"from package import ClassName
x = ClassName()
"
Efficient way to store hash in a file,"d = shelve.open('filename')

d = hash['name']
"
Python mock multiple return values,"response not in ('y', 'n', 'yes', 'no')
"
Union and Intersect in Django,"# Blogs who have either hockey or django tags.
from django.db.models import Q
Blog.objects.filter(
    Q(tags__name__iexact='hockey') | Q(tags__name__iexact='django')
)
"
How to use sys.argv in python to check length of arguments so it can run as script?,"$ python 1.py

Menu
C Clear All
L Load Encrypted File
Q Quit
----------------
Enter Choice>
Enter Selection> l
In Clear All event.

Menu
C Clear All
L Load Encrypted File
Q Quit
----------------
Enter Choice>
Enter Selection> q
$ 
"
Regular expression not finding both matches,"<unique>UNIQUE Passive - Maim:</unique>

['UNIQUE Passive - Maim:', 'UNIQUE Passive - Butcher:']

<unique>UNIQUE Passive - Maim:</unique>
<unique>UNIQUE Passive - Butcher:</unique>
"
Python regexp to match full or partial word,"import re
p = re.compile(ur'\b(yest(?:e(?:r(?:d(?:ay?)?)?)?)?|tod(?:ay?)?|tom(?:o(?:r(?:r(?:ow?)?)?)?)?)\b', re.IGNORECASE)
test_str = u""yest\nyeste\nyester\nyesterd\nyesterda\nyesterday\ntod\ntoda\ntoday\ntom\ntomo\ntomor\ntomorr\ntomorro\ntomorrow\n\nyesteray\ntomorow\ntommorrow\ntody\nyesteday""
print(p.findall(test_str))
# => [u'yest', u'yeste', u'yester', u'yesterd', u'yesterda', u'yesterday', u'tod', u'toda', u'today', u'tom', u'tomo', u'tomor', u'tomorr', u'tomorro', u'tomorrow']
"
How to access child of child from parent in sqlalchemy?,"class Category(Base):
    __tablename__ = 'category'

    @property
    def gifts(self):
        q = Gift.query.join(SubCategory).filter(SubCategory.category == self)
        return q.all()
"
Most pythonic to call classes based on some value?,"def Meta_Animal(name,*args,**kwargs):
    # I use class naming on this because it always produces a class
    if name.lower() in ['baily','daisy']:
        return Cat(name,*args, **kwargs)
    elif name.lower() in ['rocky']:
        return Dog(name,*args, **kwargs)
    else:
        raise NotImplementedError(""That name is not an animal"")
"
Implementing MVC in Python? (using Flask and MongoKit),"from flask import Flask, render_template, abort
from flask.ext.mongokit import MongoKit, Document

from .home.views import mod as home_blueprint
from .users.views import mod as user_blueprint
from .forums.views import mod as forum_blueprint

def create_app():
    app = Flask(__name__)
    app.config.from_object('config')

    # Register blueprints
    app.register_blueprint(home_blueprint)
    app.register_blueprint(user_blueprint, url_prefix=""/users"")
    app.register_blueprint(forum_blueprint, url_prefix=""/forums"")

    db = MongoKit(app)

    @app.errorhandler(404)
    def not_found(error):
        return render_template('404.html')

    @app.errorhandler(500)
    def internal_error(exception):
        return ""Some internal error has taken place.  Alert somebody!""

    return app,db

# Make sure you are calling create_app func below:
(app,db) = create_app()
"
Load a list of lists from a file based on a grouping variable?,"10, pgm1
10, pgm2
10, pgm3

ZZ, pgm4
ZZ, pgm5

-5, pgm6
-5, pgm7
-5, pgm8
-5, /a/path/with spaces/pgm9
"
Python: multi level inheritance,"class Foo( object ):
        def __init__(self):
                print(""foo init"")
                self.foo_func()
        def foo_func(self):
                print(""making bar"")
                self.x = Bar()
        def foo_bar_func(self):
                self.x.bar_func()

class Fighters( Foo ):
        def __init__(self):
                print(""fighters init"")
                Foo.__init__(self)
        def func1(self):
                Foo.some_attribute
        def func2(self):
                Foo.someother_func()

class Bar(object):
        def __init__(self):
                print(""bar init"")
        def bar_func(self):
                #some stuff here
                print(""bar bar_func"")
"
Django: Accessing cookie value set in views.py in html template?,"{% if your_desired_value %}
     {# do magic #}
{% endif %}
"
Convert int to raw data in python,">>> (0x41424344).to_bytes(4, 'big')
b'ABCD'
"
Python-Need to turn this into a loop so it look like my picture?,"sum=0.0
for i in range(1,6):
    x,y=eval(input(""Please enter length and width of room:""))
    sf=(x*y)
    sum=sum+sf
print(""The total square footage is"",sum)
"
blank file while copying a file in python,"def copy_file(option):
    infile_name= input(""Please enter the name of the file to copy: "")
    infile = open(infile_name, 'r')
    outfile_name = input(""Please enter the name of the new copy:  "")
    outfile = open(outfile_name, 'w')
    slist = infile.readlines()
    if option == 'statistics':
        for line in slist:
            outfile.write(line)
        infile.close()
        outfile.close()
        result = []
        blank_count = slist.count('\n')
        for item in slist:
            result.append(len(item))
        print('\n{0:<5d} lines in the list\n{1:>5d} empty lines\n{2:>7.1f} average character per line\n{3:>7.1f} average character per non-empty line'.format(
            len(slist), blank_count, sum(result)/len(slist), (sum(result)-blank_count)/(len(slist)-blank_count)))


copy_file('statistics')
"
Copying recursively files in Python,"from shutil import copytree, ignore_patterns
ignore_func = ignore_patterns('.DS_Store', '*.txt')  # ignore .DS_Store and *.txt files
copytree('/path/to/dir/', '/other/dir', ignore=ignore_func)
"
How to do bit manipulation of 64 bit data and output to a C function in a dll,"class BitFields(object):
    """""" A bit field class

        fieldwidth is a tuple or list containing the
        bit width of each field, from least significant
        to most significant.
    """"""
    def __init__(self, totalwidth, fieldwidths, value=0):
        if sum(fieldwidths) != totalwidth:
            raise ValueError, ""Field width error""

        self.fieldwidths = fieldwidths
        self.num_fields = len(fieldwidths)

        #Calculate field offsets
        self.offsets = []
        pos = 0
        for w in fieldwidths:
            self.offsets.append(pos)
            pos += w

        #Set up bitfield attribute names
        self.field_names = ['b' + str(i) for i in range(self.num_fields)]

        #Initialize
        self.setvalue(value)

    #Set all fields to zero
    def clear(self):
        for f in self.field_names:
            setattr(self, f, 0)

    #A generator expression of all the field values
    def _all_fields(self):
        return (getattr(self, f) for f in self.field_names)

    def __str__(self):
        return ', '.join(['%s: 0x%x' % (f, v) 
            for f, v in zip(self.field_names, self._all_fields())])

    #Get the register value as an int
    @property
    def value(self):
       return sum(v<<p for v, p in zip(self._all_fields(), self.offsets))

    #Set field values 
    def regset(self, **kwargs):
        for f, v in kwargs.items():
            setattr(self, f, v)

    #Set the register from an int 
    def setvalue(self, value):
        for f, w in zip(self.field_names, self.fieldwidths):
            #print f, w
            mask = (1<<w) - 1
            v = value & mask
            value >>= w
            setattr(self, f, v)


#Test
fields = (16, 8, 12, 12, 6, 4, 6)
reg = BitFields(64, fields)

#Set some fields by attribute
reg.b0 = 10
reg.b1 = 1
reg.b2 = 3

#Print the register using its __str__ method
print reg

#Print a single field
print reg.b1

#Print the current value of the register in decimal and as a hex string
v = reg.value
print v, hex(v)

#Reset all fields to zero
reg.clear()
print reg

#Set some fields by keyword
reg.regset(b0=7, b1=3, b2=1)
print reg

#Set some fields using a dict
field_dict = {'b0':5, 'b3':0xa, 'b4':0xf}
reg.regset(**field_dict)
print reg

#Set the register from an int or long
n = 0x111133337777ffff
reg = BitFields(64, fields, n)
print reg

v = reg.value
print v, hex(v), n == v

n = 0x123456789abcdef0
reg.setvalue(n)
print reg

v = reg.value
print v, hex(v), n == v

import random

print 'Testing .setvalue()...'
for _ in xrange(50000):
    n = random.randint(0, (1<<64) - 1)
    reg.setvalue(n)
    v = reg.value
    assert v == n, (n, v)
print 'OK'
"
Can't display an embedded image in an email in outlook 2013 sent using using python smtplib/email,"Content-Type: multipart/mixed; boundary=""===============0661849094==""
MIME-Version: 1.0
Subject: image test message
From: 
To: 

--===============0661849094==
Content-Type: text/plain; charset=""us-ascii""
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit

This is sample text from me
--===============0661849094==
Content-Type: text/html; charset=""us-ascii""
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit


<html>
    <head>
        <title> this is a test title </title>
    </head>
    <body>
        <p> Test me <br>
        Another line <br>
        This is the image you were looking for <img src=""cid:test_image""><br>
        This will teach you not to click on links in strange <a href=""http://purple.com"">emails</a>
        </p>
    </body>
</html>

--===============0661849094==
Content-Type: image/jpeg
MIME-Version: 1.0
Content-Transfer-Encoding: base64
Content-Id: <test_image>

YmxhYmxh
--===============0661849094==--
"
Avoid double typing class names in python,"# if gathered in __init__
import mypackage
this_image = mypackage.png(...)
that_image = mypackage.jpeg(...)
"
get city and temperature values into variables to use in reducer file,"import sys

for line in sys.stdin:
    try:
        city, temperature = line.rsplit(None, 1)
        print '%s\t%s' % (city ,temperature)
    except ValueError:
        continue
"
Code reusability in unit tests?,"def test_vector1(self):
    self._test_vector(a=42, b=5, c=""blah)
"
Retrieving specific directories using os.walk(),"from glob import glob
import os.path
import time

def find_sessions_to_delete(cutoff):
    # produce a list of (timestamp, path) tuples for each session directory
    session_dirs = [(os.path.getctime(p), p) for p in glob('/root/job*/session*')]
    session_dirs.sort(reverse=True)  # sort from newest to oldest
    # remove first two elements, they are kept regardless
    session_dirs = session_dirs[2:]
    # return a list of paths whose ctime lies before the cutoff time
    return [p for t, p in session_dirs if t <= cutoff]

cutoff = time.time() - (7 * 86400)  # 7 days ago
sessions_to_delete = find_sessions_to_delete(cutoff)
"
Python - Log the changes needed for one list of dictionaries to be updated to another,"if item2:
    if item1[""age""] != item2[0][""age""]:
        age_diff.append(item1[""name""])
else:
    add.append(item1[""name""])
"
returning multiple values in python,"key, val = height_by_gender_and_agegroup(person)
gender, age = key
"
How to create a class from function,"cw = CsvWriter(dataList)
for ou in many_outfiles:
  cw.doWrite(ou)
"
Why is this recursion stopping,"seen.append(str)
print ""--------------""
crawl(str, seen)
"
Common elements between two lists of lists (intersection of nested lists),"t1 = [[3, 41], [5, 82], [10, 31], [11, 34], [14, 54]]
t2 = [[161, 160], [169, 260], [187, 540], [192, 10], [205, 23], [3,41]]

nt1 = map(tuple, t1)
nt2 = map(tuple, t2)

st1 = set(nt1)
st2 = set(nt2)

print st1.intersection(st2)
"
how to implement this algorithm in python?,">>> print(""\n"".join("" "".join(map(str, t)) for t in algorithm(""1 0^ 1* 1"")))
1 0 1 1
1 0 2 1
1 0 3 1
1 0 4 1
1 1 1 1
1 1 2 1
1 1 3 1
1 1 4 1
"
Combining multiple CSV file into a single one,"import csv
from collections import defaultdict

result = defaultdict(dict)
fieldnames = {""ID""}

for csvfile in (""file1.csv"", ""file2.csv"", ""file3.csv""):
    with open(csvfile, newline="""") as infile:
        reader = csv.DictReader(infile)
        for row in reader:
            id = row.pop(""ID"")
            for key in row:
                fieldnames.add(key) # wasteful, but I don't care enough
                result[id][key] = row[key]
"
How to annotate seaborn pairplots?,"p = sns.pairplot(data=g, hue=""Label"", palette=""Set2"", 
             diag_kind=""kde"", size=4, vars=labels)
#bottom labels
p.fig.text(0.33, -0.01, ""Bin: %s""%(n), ha ='left', fontsize = 15)
p.fig.text(0.33, -0.04, ""Num Points: %d""%(len(g)), ha ='left', fontsize = 15)
"
Extending the behavior of an inherited function in Python,"class Base(object):

    def load(self):
        print('do logic A')
        print('do logic B')


class Child(Base):

    def load(self):
        super().load()
        print('do logic C')


c = Child()
c.load()   
"
How to set UTC offset for datetime?,"
>>> dateutil.parser.parse('2013/09/11 00:17 +0900')
datetime.datetime(2013, 9, 11, 0, 17, tzinfo=tzoffset(None, 32400))
"
Encode Python list in order to use re module,"creación, longstring, lación, Regula, estado, misión
"
Represent a hash string to binary in Python,"''.join(format(ord(n),'b') for n in hashcode)
'11001001100001101111101111100110110010110100110100110010011001011100110111000110000111011111000011001011101011100101110000111011111010111100011000101100100111000110011110101110010110011011000111100100111000'
"
Creating an Infographic In Python,"for i in xrange(0,5):
    for j in xrange(0,5):
        text(i, j,
             ""{0:5.2f}"".format(a[i][j]),
             horizontalalignment=""center"",
             verticalalignment=""center"")
"
Writing python chunking loops with reference to another txt,"chunks = []
for chunk in start_stop:
    chunks.append(format2[chunk])
"
pattern to match 1-or-2-arg function call for lib2to3,"found 2 a  ""12345""
found 2 a  msg=""12345""
found 1 a
"
Easier way to enable verbose logging,"> cat verbose.py 
#!/usr/bin/env python

import argparse
import logging

parser = argparse.ArgumentParser(
    description='A test script for http://stackoverflow.com/q/14097061/78845'
)
parser.add_argument(""-v"", ""--verbose"", help=""increase output verbosity"",
                    action=""store_true"")

args = parser.parse_args()
if args.verbose:
    logging.basicConfig(level=logging.DEBUG)

logging.debug('Only shown in debug mode')
"
How to run Selenium Webdriver with pythonw?,"binary = WindowsFirefoxBinary()
browser = webdriver.Firefox(firefox_binary=binary)
"
Python2 PyQt4 Connect a bool Variable to a QCheckBox item,"import sys
from PyQt4.QtGui import *
from PyQt4.QtCore import *

class SmartBool(QObject):

    valueChanged = pyqtSignal(bool)         # Signal to be emitted when value changes.

    def __init__(self, value=False):
        super(SmartBool, self).__init__()   # Call QObject contructor.
        self.__value = value                # False initialized by default.

    @property
    def value(self):
        return self.__value

    @value.setter
    def value(self, value):
        if self.__value != value:
            self.valueChanged.emit(value)   # If value change emit signal.
            self.__value = value


class SelectionWindow(QMainWindow):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.ILCheck = SmartBool()          # Your steroides bool variable.
        ILCheckbox = QCheckBox(self)
        self.connect(self.ILCheck, SIGNAL(""valueChanged(bool)""), ILCheckbox, SLOT(""setChecked(bool)""))
        ILCheckbox.setCheckState(Qt.Unchecked)
        ILCheckbox.stateChanged.connect(self.ILCheckbox_changed)
        MainLayout = QGridLayout()
        MainLayout.addWidget(ILCheckbox, 0, 0, 1, 1)
        self.setLayout(MainLayout)

    def ILCheckbox_changed(self, state):
        self.ILCheck = (state == Qt.Checked)
        print(self.ILCheck)


if __name__ == '__main__':
  app = QApplication(sys.argv)
  window = SelectionWindow()
  window.show()
  window.ILCheck.value = True
  sys.exit(app.exec_())
"
"How to merge a list of dicts, summing values for repeated keys",">>> keys = [k for d in dict_x for k in d]
>>> {k: sum(d.get(k, 0) for d in dict_x) for k in keys}
{(1, 2): 100, (1, 3): 310, (3, 4): 160, (4, 5): 10, (5, 6): 15}
"
"Regex to return all characters until ""/"" searching backwards",">>> re.search(r'(?<=//)([^/]+)(/.*)?(?= \"" target)',
...           'http://example.com/path/to/whatever "" target').groups()
('example.com', '/path/to/whatever')
"
parse using dateutil,"import csv
import sys
import datetime
import pprint


all_data_points = {}
all_dates = []
expected = ''
format = ""%Y%m%d %H:%M""

with open('datafile', 'rt') as f:
    reader = csv.reader(f)
    for row in reader:
        if row and 'Datetime' not in row:
            day_str = row[0]
            rain_str = row[1]
            if not expected:
                all_data_points[day_str] = rain_str
                all_dates.append(day_str)
                d = datetime.datetime.strptime(day_str, format)
                expected = d + datetime.timedelta(days=1)
            else:
                d = datetime.datetime.strptime(day_str, format)
                gap_in_days = d - expected 
                start_day = expected
                if gap_in_days.days > 1:
                    for i in xrange(gap_in_days.days):
                        next_day = start_day + datetime.timedelta(days=1+i)
                        day_str = next_day.strftime(format)
                        all_data_points[day_str] = 'M'
                        all_dates.append(day_str)
                all_data_points[day_str] = rain_str
                expected = d

    pprint.pprint(all_data_points)
"
Is this a bad way to sort a list based on another list's sorted permutation?,"sortedData = sorted(rowData, key = lambda x:(x[1]+x[2]))
"
Searching for text in Beautifulsoup,">>> import re
>>> search_text = 'blah Total: result'
>>> result = re.findall(r'Total: (.*)', search_text)
>>> result
['result']
"
3x1 Matrix Multiplication with lists[UPDATED],"key=[[16, 4, 11], [8, 6, 18], [15, 19, 15]]
message=[[0], [12], [8], [6], [15], [2], [15], [13], [3], [21], [2], [20], [15], [18], [8]]
"
how to sort alphanumerically in Unix with sort? More complex than seems,"@42EBKAAXX090828:6:10:1077:1883/2
@42EBKAAXX090828:6:100:1699:328/2
@42EBKAAXX090828:6:102:785:808/2
"
"Given a text file, how do I make it into a dictionary in Python?","L = []
with open('in.txt','r') as f:
    for line in f:
        l = line.strip().split(',')
        L.append(l)
M = {}
for key in L[0]:
    M[key] = []
for i in range(1,len(L)):
    for j in range(len(L[i])):
        M[ L[0][j] ].append(L[i][j])
print M
"
get the exit code for python program,"echo %ERRORLEVEL%
"
Differences between BaseHttpServer and wsgiref.simple_server,"from BaseHTTPServer import HTTPServer, BaseHTTPRequestHandler

class MyHandler(BaseHTTPRequestHandler):

    def do_GET(self):
        self.send_response(200)
        self.send_header('Content-Type', 'text/plain')
        self.end_headers()
        self.wfile.write('Hello world!\n')

HTTPServer(('', 8000), MyHandler).serve_forever()
"
"Crop nan rows and columns of a matrix, but keep it square","nans_in_grid = np.isnan(grid)
nan_rows = np.all(nans_in_grid, axis=0)
nan_cols = np.all(nans_in_grid, axis=1)

indicies_to_remove = zip(np.nonzero(nan_rows)[0], np.nonzero(nan_cols)[0])
y_indice_to_remove, x_indice_to_remove = zip(*indicies_to_remove)

tmp = grid[[x for x in range(grid.shape[0]) if x not in x_indice_to_remove], :]
grid = tmp[:, [y for y in range(grid.shape[1]) if y not in y_indice_to_remove]]
"
"In jinja2, how to include the same template twice but pass in different variables","# content and macro name
content1 = (""Hello World"", 'content_template') 
content2 = (""Foo bar"", 'content_template')

base_template.render(include_these=[content1, content2]).encode(""utf-8""))
"
How do I print outputs from calls to subprocess.Popen(...) in a loop?,"#!/bin/sh

echo foo
echo bar
echo baz
"
Replace a blank space followed by text with a blank space using string replace,">>> import re
>>> re.sub('[0-9]', ' ', '12345 hdjhdjf dfdfd ""dfd"" 12333.')
'      hdjhdjf dfdfd ""dfd""      .'
>>> 
"
python - saving numpy array to a file (smallest size possible),"In [17]: import struct

In [19]: c = struct.Struct('=IId')

In [20]: with open('numbers.bin', 'w+') as outf:
   ....:     for r, k in nonzero:
   ....:         outf.write(c.pack(r, k, a[r,k]))
"
How to install gst-python (gstreamer python bind) on Mac OSX the easy way?,"$ sudo port install py26-gst-python
"
Python random unique values from two non overlapping ranges,"randlist = [r + (end - start + 1) * (r >= start) for r in
            random.sample(range(total - end + start), 100)]
"
Scraping a website that uses AJAX Post to populate the data,"All Securities  | All Equities Only | All Indices & ETF Only
16:15 | 244,754 | 258,519 | 503,273 | 95 | 192,025 | 85,778 | 277,803 | 224 | 52,726 | 172,741 | 225,467 | 31
16:10 | 244,473 | 260,881 | 505,354 | 94 | 192,025 | 85,778 | 277,803 | 224 | 52,445 | 175,103 | 227,548 | 30
15:50 | 232,697 | 227,149 | 459,846 | 102 | 182,351 | 81,672 | 264,023 | 223 | 50,343 | 145,477 | 195,820 | 35 
...
"
python Binary string to binary data,">>> 0x04 * 256 + 0xb5
1205
"
Wrapping an std::vector using boost::python vector_indexing_suite,"s = Spam()
spams = []
spams.append(s)
spams.append(s)
"
Arrows in matplotlib using mplot3d,"arrow_prop_dict = dict(mutation_scale=20, arrowstyle='-|>', color='k', shrinkA=0, shrinkB=0)
"
Delete column from pandas DataFrame,"df = df.drop('column_name', 1)
"
Representing rings of algebraic integers,">>> QQ.old_poly_ring(x).ideal(x**2+1)
<x**2 + 1>
>>> ZZ.old_poly_ring(x).ideal(x**2+1)
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
  File ""/usr/local/lib/python2.7/dist-packages/sympy/polys/domains/ring.py"",               line 91, in ideal
   return ModuleImplementedIdeal(self, self.free_module(1).submodule(
   File ""/usr/local/lib/python2.7/dist-            packages/sympy/polys/domains/old_polynomialring.py"", line 192, in free_module
    return FreeModulePolyRing(self, rank)
    File ""/usr/local/lib/python2.7/dist-packages/sympy/polys/agca/modules.py"", line 455, in __init__
     + 'got %s' % ring.dom)
NotImplementedError: Ground domain must be a field, got ZZ
"
Python - Compare two lists and find matching values and their positions in the list,"class Character:
    [....]
    def takeDamage (self, dmg):
        self.curHp -= min (0, dmg - self.def_)

    def gainXP (self, xp):
        self.xp += xp
        #check for level up

    def takeItem (self, item):
        self.inventory.append (item)

    def useItem (self, item):
        item.activate ()
        self.inventory.remove (item)
"
Python Flatten Dataframe With Multiple Columns all n-length,"In [21]: pd.concat([df[[""Misc"", ""Year""] + [c for c in df.columns if c[-1] == str(i)]]
                     .rename(columns=lambda x: x[:-1] if x[-1] == str(i) else x)
                    for i in range(1, 3)])
Out[21]:
  Misc  Year   a  b    c
0    A  1991  10  h  4.1
1    R  1992  20  i  4.2
2    B  1993  30  j  4.3
0    A  1991  40  k  4.4
1    R  1992  50  l  4.5
2    B  1993  60  m  4.6
"
"Convert string to variables (like format(), but in reverse) in Python",">>> import re
>>> from operator import itemgetter
>>> mystr='Version 1.15.6\n'
>>> m = re.match('Version (?P<_0>.+)\.(?P<_1>.+)\.(?P<_2>.+)', mystr)
>>> map(itemgetter(1), sorted(m.groupdict().items()))
['1', '15', '6']
"
Best way to remove an item from a Python dictionary?,">>> some_dict = {1: ""Hello"", 2: ""Goodbye"", 3: ""You say yes"", 4: ""I say no""}
>>> value_to_remove = ""You say yes""
>>> some_dict = {key: value for key, value in some_dict.items() if value is not value_to_remove}
>>> some_dict
{1: 'Hello', 2: 'Goodbye', 3: 'You say yes', 4: 'I say no'}
>>> some_dict = {key: value for key, value in some_dict.items() if value != value_to_remove}
>>> some_dict
{1: 'Hello', 2: 'Goodbye', 4: 'I say no'}
"
Python regex multiline replacement,"pattern = re.compile(r""\{cs:id=(?P<id>[^|]*)\|rep=(?P<rep>[^}]*)\}"")
"
How to check if a column exists in Pandas,"if 'A' in df.columns:
"
python add string to the start of each element in array,"a = [""Hi"", ""Sam"", ""How"", 1, {'x': 123}, None]
a = ['Hello{}'.format(b) for b in a]
# ['HelloHi', 'HelloSam', 'HelloHow', 'Hello1', ""Hello{'x': 123}"", 'HelloNone']
"
Equivalent of a python generator in C++ for buffered reads,"#include <fstream>
#include <vector>
#include <algorithm>
#include <iterator>

using namespace std;

int main(int argc, char** argv)
{
    ifstream input(""my-file.txt"");
    istreambuf_iterator<char> input_begin(input);
    istreambuf_iterator<char> input_end;

    // Fill a char vector with input file's contents:
    vector<char> char_input(input_begin, input_end);
    input.close();

    // Convert it to an array of unsigned long with a cast:
    unsigned long* converted = reinterpret_cast<unsigned long*>(&char_input[0]);
    size_t num_long_elements = char_input.size() * sizeof(char) / sizeof(unsigned long);

    // Put that information into a vector:
    vector<unsigned long> long_input(converted, converted + num_long_elements);

    return 0;
}
"
"Mapping tuple (R, R) into ((R,R),R)?","random_matrix = generate_random_matrix(...) # the way you want
result = []
for row in random_matrix:
  result_row = []
  for value in row:
    result_row.append((value, randomDate(...)))
  result.append(result_row)
print result # or whatever
"
"Using Flask, Jinja2, HTML to update page on buttonpress","from flask import Flask, render_template_string, request, jsonify
import wikipedia

app = Flask(__name__)

index_html='''
<html><body>
<script src=""//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"">
</script>
<script type=text/javascript>
  function submit() {
    $.getJSON({{ request.script_root|tojson|safe }} + '/topics',
      { key: $('#key').val() },
      function(data) {
        var ul = $('#result');
        ul.empty();
        $(data.topics).each(function(index, item) {
          ul.append($('<li>',{text:item}));});});}
</script>
Search Term: <input id=""key"" name=""key""/>
<input id=""submit"" type=""button"" value=""Go"" onclick=""submit();"" />
<hr /><ul id=""result""></ul>
</body></html>'''

@app.route('/')
def index():
    return render_template_string(index_html)

@app.route('/topics')
def topics():
    key = request.args.get('key')
    topics = wikipedia.search(key) or ['No topic found']
    return jsonify(topics=topics)

app.run(debug=True)
"
Force datetime with hour and minutes to null pandas,"In [88]:
index = pd.date_range('2015-01-01', freq = 'H', periods=10).date
df = pd.DataFrame(index = range(len(index)), data=index)
df

Out[88]:
            0
0  2015-01-01
1  2015-01-01
2  2015-01-01
3  2015-01-01
4  2015-01-01
5  2015-01-01
6  2015-01-01
7  2015-01-01
8  2015-01-01
9  2015-01-01
"
Replace rarely occurring values in a pandas dataframe,"g.filter(lambda x: len(x) >= 10)
"
What does extended slice syntax actually do for negative steps?,"In [24]: strs='foobar'

In [25]: le=len(strs)

In [26]: strs[-1:0:-1]      #the first -1 is equivalent to len(strs)-1

Out[26]: 'raboo'

In [27]: strs[le-1:0:-1]   
Out[27]: 'raboo'
"
How do Python methods handle arbitrary parameters?,"def my_range(start=0, stop=None, step=1):
    if stop == None:
        start, stop = 0, start
    while start < stop:
        yield start
        start += step
"
python pandas groupby() result,"In [13]: df1['D'] = g.size()  # unfortunately this doesn't play nice with as_index=False
# Same would work with g['C'].sum()

In [14]: df1.reset_index()
Out[14]:
    A  B  C  D
0   1  5  1  2
1   1  5  1  2
2   1  6  1  1
3   1  7  1  1
4   2  5  1  1
5   2  6  1  2
6   2  6  1  2
7   3  7  1  2
8   3  7  1  2
9   4  6  1  1
10  4  7  1  2
11  4  7  1  2
"
Regex to get rid of the last term with conditions,"cat test.txt | ./morpha -c
apple
carrot
process
process
tennis
"
How to add to a json file in python,"#!python2
import json

# here you read your new user and his password
user = raw_input(""User: "")
display = raw_input(""Display name: "")
pwd = raw_input(""Pass: "")

with open('text.json') as data_file:
    data = json.load(data_file)
    data['users'][user] = {'display':display,'pass':pwd}

with open('text.json','w') as data_file:
    json.dump(data, data_file, indent=4)
"
Why this local variable can keep its value in the function,"def f(L = []): pass
"
Search Index for user articles,"pip install flask_whooshalchemy
"
prevent BufferedReader from closing the file for a list of files,"fd = os.open('test.txt', os.O_RDONLY)
file1 = FileIO(fd, 'r', closefd=False)
file2 = FileIO(fd, 'r', closefd=False)

file1.read(100)
assert file1.tell() == 100
file2.read(100)
assert file1.tell() == 200
"
Script/utility to rewrite all svn:externals in repository trunk,"client.propget( ""svn:externals"", base_checkout_path, recurse=True)
"
Python: applying function to each column of an array,">>> timeit('[ np.sum( C[ :, i ] )  for i in range( 0, 30) ]', 
    setup='import numpy as np; C = np.random.normal(0, 1, (500, 30))', number=1000)
0.418906474798
>>> print timeit('[ np.sum(row) for row in C.T ]', 
    setup='import numpy as np; C = np.random.normal(0, 1, (500, 30))', number=1000)
0.345153254432
>>> print timeit('np.apply_along_axis(np.sum, 0, C)', 
    setup='import numpy as np; C = np.random.normal(0, 1, (500, 30))', number=1000)
0.732931300891
"
Solving overdetermined system in numpy when the value of one variable is already known,"|1 0 0 0|     |n1|     |B1| - 1 t1
|1 0 0 1|     |n2|     |B2| - 0 t1
|0 1 0 0|  X  |n3|  =  |B3| - 1 t1
|0 1 0 1|     |t2|     |B4| - 0 t1
|0 0 1 0|              |B5| - 1 t1
|0 0 1 1|              |B6| - 0 t1 
"
How to determine if a timezone specific date in the past is daylight saving or not in python?,"#!/usr/bin/env python
from datetime import datetime
import pytz # $ pip install pytz

naive = datetime(2015, 2, 1)
pacific = pytz.timezone('America/Los_Angeles')
aware = pacific.localize(naive, is_dst=None) 

print(is_summer_time(aware))
"
Weight Middle Range for use of scipy.optimize.linprog (Simplex algorithm),"Optimization terminated successfully.    (Exit mode 0)
            Current function value: 50.0
            Iterations: 1
            Function evaluations: 5
            Gradient evaluations: 1
[ 10.  40.]
"
Storing Python output in a string,"from io import StringIO
# from StringIO import StringIO -- python 2.x
import sys
my_out = StringIO()
sys.stdout = my_out
print(""hello"") # now stored in my_out
"
How to store python classes into a database with Django?,"from django.db import models
import choices

class SomeModel(models.Model):
    somefield = models.IntegerField('field', choices=choices.as_list())
"
Count by combination,"In [247]: mask = df3['City_x'] < df3['City_y']
In [248]: df3 = df3.loc[mask]; df3
Out[249]: 
    Vehicle_ID City_x City_y
1            1      A      B
2            1      A      C
5            1      B      C
10           2      A      C
15           3      B      C
"
PyMongo group by multiple keys,"result = collection.aggregate([
    # Matchn the documents possible
    { ""$match"": { ""date"": { ""$gte"": startdate } } },

    # Group the documents and ""count"" via $sum on the values
    { ""$group"": {
        ""_id"": {
            ""scan_status"": ""$scan_status"",
            ""date"": ""$date""
        },
        ""count"": { ""$sum"": 1 }
    }}
])
"
Using LXML to print out individual strings from file,"Copper Bracelet - 3mm - Polished ['3723603267']
Copper Bracelet - 5mm - Brushed ['3726247811']
Copper Bracelet - 7mm - Polished ['3726253635']
Highsnobiety x EARLY - Leather Pouch ['14541472963', '14541473027', '14541473091']
A Bathing Ape® Highsnobiety 10th Anniversary Tee ['5279811715', '5765857347', '5765857411', '5765857475']
Highsnobiety Magazine Issue 11 ['7731814659', '7730944131', '7731801347', '7731821763', '7731652675', '7731695683', '7731831363', '7731791747']
A5 ['8133817731']
A6 ['8135296323']
A7 ['8135469443']
A8 ['8135518595']
A9 ['8135556035']
"
Retrieve Graph Lowest Height Node with Filter,"def traverseTree(tree):
  if not isinstance(tree, nltk.Tree): return []
  h = []
  for subtree in tree:
    if type(subtree) == nltk.tree.Tree:
      t = traverseTree(subtree)
      #RIGHT HERE!! need to extend by t or the other found nodes are thrown out
      h.extend(t)

      if subtree.label() == 'NP' and len(t) == 0:
          h.append(subtree)

  return h
"
Checking for duplicate tags using Beautifulsoup,"assert len(self.soup.find_all('html')) == 1
"
Getting values OF a set in Python,">>> match = np.logical_and(C1 == C2, D1 == D2)
>>> match
array([ True,  True, False,  True,  True], dtype=bool)
>>> A[match]
array([1, 2, 4, 5])
>>> B[match]
array([2, 3, 5, 6])
"
Provide feedback from Python script to PHP,"<pre id=""console""></pre>
<script language=""javascript"" type=""text/javascript"" src=""path/to/jquery.js""></script>
<script language=""javascript"" type=""text/javascript"" src=""path/to/daemon.js""></script>
<script language=""javascript"" type=""text/javascript"" src=""path/to/demo.js""></script>
"
Build slice objetcs from subscript notation,">>> slice(1, 2)
slice(1, 2, None)
>>> slice(1, 2, 3)
slice(1, 2, 3)
>>>
"
Python Regex challenge indentation,"[[None, 11669],
 [11669, 19807],
 [11669, 19808],
 [11669, 18923],
 [11669, 29411],
 [11669, 19806],
 [19806, 29412],
 [11669, 11665],
 [11665, 27877],
 [11665, 50713],
 [11665, 27879],
 [11665, 27878],
 [11669, 11394]]
"
Output of Python interpreter?,">>> a = A(3); b = A(2)
>>> a + b
<class 't.A'> with x=5
"
Python delimited line split problems,"import pyparsing as pyp

pyp.delimitedList(pyp.quotedString | pyp.SkipTo(',' | pyp.LineEnd()), ',') \
    .parseWithTabs().parseString(s)
"
Check if multple variables greater than zero in python,"values = [200, -140, 400, -260]
values = [max(x, 0) for x in values]
"
Remove special characters from csv file using python,"$ cat special.csv
th$s,2.3/,will-be
fixed.,even.though,maybe
some,""shoul""""dn't"",be
"
Performance of choice vs randint,"def choice(self, seq):
    return seq[int(self.random() * len(seq))]
"
"Search and replace HTML Text, not tags","import lxml.etree as et
html=\
""""""
<!DOCTYPE html>
<html>
  <head>
    <title>Hello HTML</title>
  </head>
  <body>
    <p>Hello 1</p>
    <p>Hello 2</p>
    <p>Hello 3</p>
    <p>Hello 4</p>
  </body>
</html>
""""""
doc = et.fromstring(html)
for i in doc.xpath('.//p[contains(.,""Hello"") and not(contains(.,""4""))]'):
    i.text='replaced'
print et.tostring(doc,pretty_print=True)
"
How to check whether a value is in a list,"for sublist in list:
    if movie in sublist and code in sublist:
         return True
return False
"
Probability count/frequency of related words?,">>> from nltk.stem import SnowballStemmer as SS
>>> stemmer = SS('english')
>>> stemmer.stem('dance')
u'danc'
>>> stemmer.stem('danced')
u'danc'
>>> stemmer.stem('dancing')
u'danc'
>>> stemmer.stem('dancer')
u'dancer'
>>> stemmer.stem('accordance')
u'accord'
"
Pattern matching in dictionary using python,"for k,v in sorted(opt_dict.items(),
                  key = lambda item: int(item[0][len(""option""):])
                            if item[0].startswith(""option"")
                            else int(item[0][len(""nonoption""):])
                    ):
    print k,v
"
Remove empty lines,"if re.match(r'^\s*$', line):
    # line is empty (has only the following: \t\n\r and whitespace)
"
Why is string's startswith slower than in?,"static PyObject * unicode_startswith(PyObject *self, PyObject *args)
{
    // argument parsing
    PyObject *subobj;
    PyObject *substring;
    Py_ssize_t start = 0;
    Py_ssize_t end = PY_SSIZE_T_MAX;
    int result;
    if (!stringlib_parse_args_finds(""startswith"", args, &subobj, &start, &end))
        return NULL;

    // tuple handling
    if (PyTuple_Check(subobj)) {}

    // unicode conversion
    substring = PyUnicode_FromObject(subobj);
    if (substring == NULL) {}

    // actual implementation
    result = tailmatch(self, substring, start, end, -1);
    Py_DECREF(substring);
    if (result == -1)
        return NULL;
    return PyBool_FromLong(result);
}
"
"How to sort through keys in a dictionary, adding the values and returning a list of keys if combined values equal a certain number",">>> mydict = {'a':1, 'b':12, 'c':33, 'd':40, 'e':15, 'f':6, 'g':27}
>>> for match in matches(mydict,55):
...     print(match)
...
(('d', 40), ('e', 15))
(('c', 33), ('e', 15), ('f', 6), ('a', 1))
(('b', 12), ('e', 15), ('g', 27), ('a', 1))
"
Return Struct from a C++ function to Python in SWIG,"%module x

%begin %{
#pragma warning(disable:4127 4701 4706 4996)
#include <vector>
#include <algorithm>
#include <sstream>
%}

%include <std_vector.i>
%include <std_string.i>
%template(vector_double) std::vector<double>;
%template(vector_vector_double) std::vector<std::vector<double> >;

// Input typemap converts from Python object to C++ object.
// Note error checking not shown for brevity.
// $input is the Python object, $1 is the C++ result.
//
%typemap(in) std::vector<std::vector<double> >* (std::vector<std::vector<double> > tmp) %{
    for(Py_ssize_t i = 0; i < PySequence_Size($input); ++i)
    {
        auto t = PySequence_GetItem($input,i);
        std::vector<double> vd;
        for(Py_ssize_t j = 0; j < PySequence_Size(t); ++j) {
            auto d = PySequence_GetItem(t,j);
            vd.push_back(PyFloat_AsDouble(d));
            Py_DECREF(d);
        }
        Py_DECREF(t);
        tmp.push_back(vd);
    }
    $1 = &tmp;
%}

// Output typemap converts from C++object to Python object.
// Note error checking not shown for brevity.
// $1 is the C++ object, $result is the Python result.
//
%typemap(out) std::vector<std::vector<double> >* %{
    $result = PyList_New($1->size()); // Create outer Python list of correct size
    for(size_t i = 0; i < $1->size(); ++i)
    {
        auto t = PyList_New((*$1)[i].size()); // Create inner Python list of correct size for this element.
        for(size_t j = 0; j < (*$1)[i].size(); ++j) {
            PyList_SET_ITEM(t,j,PyFloat_FromDouble((*$1)[i][j]));
        }
        PyList_SET_ITEM($result,i,t);
    }
%}

%inline %{
    struct velocity
    {
        std::vector<std::vector<double> > u;
        std::vector<std::vector<double> > v;
        std::vector<std::vector<double> > w;
    };

    // A test function with an in/out velocity parameter.
    void myfunc(velocity& vel)
    {
        for(auto& v : vel.u)
            std::transform(begin(v),end(v),begin(v),[](double d){return d*1.1;});
        for(auto& v : vel.v)
            std::transform(begin(v),end(v),begin(v),[](double d){return d*2.2;});
        for(auto& v : vel.w)
            std::transform(begin(v),end(v),begin(v),[](double d){return d*3.3;});
    }
%}
"
Spline with constraints at border,"import numpy as np
from scipy.interpolate import UnivariateSpline, splev, splrep
from scipy.optimize import minimize

def guess(x, y, k, s, w=None):
    """"""Do an ordinary spline fit to provide knots""""""
    return splrep(x, y, w, k=k, s=s)

def err(c, x, y, t, k, w=None):
    """"""The error function to minimize""""""
    diff = y - splev(x, (t, c, k))
    if w is None:
        diff = np.einsum('...i,...i', diff, diff)
    else:
        diff = np.dot(diff*diff, w)
    return np.abs(diff)

def spline_neumann(x, y, k=3, s=0, w=None):
    t, c0, k = guess(x, y, k, s, w=w)
    x0 = x[0] # point at which zero slope is required
    con = {'type': 'eq',
           'fun': lambda c: splev(x0, (t, c, k), der=1),
           #'jac': lambda c: splev(x0, (t, c, k), der=2) # doesn't help, dunno why
           }
    opt = minimize(err, c0, (x, y, t, k, w), constraints=con)
    copt = opt.x
    return UnivariateSpline._from_tck((t, copt, k))
"
Hide lines on tree view - openerp 7,"<record id=""action_id"" model=""ir.actions.act_window"">
    <field name=""name"">Action Name</field>
    <field name=""res_model"">model</field>
    <field name=""view_type"">form</field>
    <field name=""domain"">[('field','operator','value')]</field>
    <field name=""view_mode"">tree,form</field>
</record>
"
python: Help to implement an algorithm to find the minimum-area-rectangle for given points in order to compute the major and minor axis length,"# add after pi = ... line:
minRect = (1e33, 0, 0, 0, 0, 0, 0) # area, dx, dy, i, iL, iP, iR

# add after area = ... line:
    if area < minRect[0]:
        minRect = (area, xR-xL, yP-yC, i, iL, iP, iR)

# add after print ... line:
print 'Min rectangle:', minRect
# or instead of that print, add:
print 'Min rectangle: ',
for x in ['{:3d} '.format(x) if isinstance(x, int) else '{:7.3f} '.format(x) for x in minRect]:
    print x,
print
"
"Python: numpy.memmap zeros, reusage, documentation?"," def __new__(subtype, filename, dtype=uint8, mode='r+', offset=0,
            shape=None, order='C'):
    ...
    if mode == 'w+' or (mode == 'r+' and flen < bytes):
        fid.seek(bytes - 1, 0)
        fid.write(np.compat.asbytes('\0'))
        fid.flush()
"
"Is it more performant to do an OR on multiple fields, or combine those field values into a single fieldname","your_index.search(query)  # This will match the value of city in any field
"
Memory usage: creating one big set vs merging many small sets,"In [1]: %memit n = pow(10, 7); result = set(xrange(n));
peak memory: 522.22 MiB, increment: 498.93 MiB
In [2]: %memit 42
peak memory: 513.83 MiB, increment: 0.12 MiB
In [3]: import sys
In [4]: sys.getsizeof(result)
Out[4]: 268435688
"
"Python: In an xml, How to delete nodes within a parent node",">>> import xml.etree.cElementTree as ET  # use cElementTree for faster processing
"
Removing 'Counter' from Dictionary python,"for w, c in tp[1].iteritems():
    print w, c
"
How can I get text from within a nested <dl><dt>?,"[
    {'name': u'Boston Celtics', 'url': 'http://espn.go.com/nba/team/_/name/bos/boston-celtics'},
    {'name': u'Brooklyn Nets', 'url': 'http://espn.go.com/nba/team/_/name/bkn/brooklyn-nets'},
    ...
    {'name': u'Utah Jazz', 'url': 'http://espn.go.com/nba/team/_/name/utah/utah-jazz'}
]
"
Saving full QUEEN neighbor array to CSV in Pysal (Census Block Groups),"id n
id0, id1, ... 

where:
  id is the id of the polygon,
  n is the number of neighbors
  id0 is the id of the first neighbor
  ... and so on
"
Cleaning Up HTML Parse in Python,"for tr in soup.find_all('tr', align='center'):
    stack = []
    for td in tr.findAll('td'):
        stack.append(td.text.replace('\n', '').replace('\t', '').strip())

    acct.write("", "".join(stack) + '\n')
"
python: list.insert: Insert an item at a given position,"l_max=[1,2,3]
a=l_max[:] # create copy
b=a[:]
c=b[:]
s=c[:]
s.insert(0, 0) # insert only into s
"
How to get the text input given by a user for an HTML page through python?,"from flask import Flask, render_template

app = Flask(__name__)

app.route('/',methods=['GET','POST'])
def print_form():
    if request.method == 'POST':
        return render_template('form.html',result=request.form['fooput'])
    if request.method == 'GET':
        return render_template('form.html')

if __name__ == '__main__':
    app.run()
"
How to replace all values in a Pandas Dataframe not in a list?,">>> df
         S   T
0        D   D
1       ND   A
2        D  ND
3  garbage   A
>>> df[~df.isin(allowed_vals)] = ""None""
>>> df
      S     T
0     D     D
1    ND  None
2     D    ND
3  None  None
"
Convert a string containing hex (along with other characters) to binary in Python,"for line in file:
    left,right = line.split('(',1)
    hexvalues = right.split(')')[0]
    hex1,hex2 = hexvalues.split(',')
"
How to delete a character off a string with variables and functions in Python?,"print('; '.join(map(str, range(50, 150))))
"
Averaging values in a nested loop in python,"[0.0]
0.0
[0.005]
0.005
[0.01]
0.01
[0.015]
0.015
[0.02]
0.02
[0.025]
0.025
[0.03]
0.03
[0.035]
0.035
[0.04]
0.04
[0.045]
0.045
[0.045, 0.05, 0.055]
0.04999999999999999
[0.05, 0.055, 0.06]
0.055
[0.055, 0.06, 0.065]
0.06
[0.06, 0.065, 0.07]
0.065
[0.065, 0.07, 0.075]
0.07
[0.07, 0.075, 0.08]
0.07500000000000001
[0.075, 0.08, 0.085]
0.08
[0.08, 0.085, 0.09]
0.085
[0.085, 0.09, 0.095]
0.09000000000000001
[0.09, 0.095, 0.1]
0.09500000000000001
[0.09, 0.095, 0.1]
0.09500000000000001
"
Python - Find top largest numbers in array,"[(32, 15, 'massages'), (12, 45, 'hair-salon')]
"
Return rows only if all items of category are True,">>> df.groupby(""Category"")[""Boolean""].all()
Category
A    False
B    False
C     True
D     True
Name: Boolean, dtype: bool
"
Python - Finding word frequencies of list of words in text file,"wanted = ""fish chips steak""
cnt = Counter()
words = re.findall('\w+', open('1976.03.txt').read().lower())
for word in words:
    if word in wanted:
        cnt[word] += 1
print cnt
"
common import statement for similar classes,"common_imports.py
 from sqlalchemy import Model,String,...
"
Python: Find a word in a matrix of characters,">>> find_word(""xylon"")
[(4, 1), (3, 2), (3, 3), (4, 2), (3, 1)]
>>> find_word(""bad"")
None
"
Getting Python under control on Mac OS X - setting up environment and libraries,"$ cd /opt/local/Library/Frameworks/Python.framework/Versions/2.6
$ ls -l bin
total 952
-rwxr-xr-x  2 root  wheel    160 Jul 15 01:56 2to3*
-rwxr-xr-x  2 root  wheel   1541 Jun  8 19:59 apirst2html.py*
-rwxr-xr-x  2 root  wheel    363 Oct  5  2009 bdist_mpkg*
[...]
-rwxr-xr-x  2 root  wheel    211 Jun  2 12:45 django-admin.py*
-rwxr-xr-x  2 root  wheel    410 Jul 15 17:30 easy_install*
-rwxr-xr-x  2 root  wheel    418 Jul 15 17:30 easy_install-2.6*
[...]
-rwxr-xr-x  2 root  wheel    368 Jun 24 02:00 pip*
-rwxr-xr-x  1 root  wheel    342 Sep 18  2009 pkginfo*
[...]
lrwxr-xr-x  1 root  wheel      9 Jul 15 01:58 python@ -> python2.6
lrwxr-xr-x  1 root  wheel     16 Jul 15 01:58 python-config@ -> python2.6-config
-rwxr-xr-x  2 root  wheel  24932 Jul 15 01:57 python2.6*
-rwxr-xr-x  2 root  wheel   1473 Jul 15 01:57 python2.6-config*
[...]
"
replace string if regex matched and replace with something else it matches some other regex,"def dic_gen(exc):
    param_errors = {re.sub(r'(sss_)|(ttt_)', 
        lambda mo: 'aaa_' if mo.group(0) == 'sss_' else 'bbb_', err.name):
        err.address for err in exc.errors}
    param_errors[""status""] = ""ERROR""
    return param_errors
"
Django: How do I update a model after a view has been rendered?,"def my_view(request, params):
    ... do something ...
    response = render_to_response('my_template.html', {'foo': bar'})
    ... do something after rendering ...
    return response
"
Parse parts of sentence while preserving context in Python with regex,"import pprint
import string

from pyparsing import Word, nums, Literal, opAssoc, operatorPrecedence


course_name = Word(string.ascii_uppercase + nums + ""/"") | Literal(""instructor permission"")
comma_separator = Literal(',')
comma_separator.setParseAction(lambda t:""&&"")

and_separator = Literal(', and') | Literal(', AND') | Literal('and')  | Literal('AND')
and_separator.setParseAction(lambda t:""&&"")

or_separator = Literal('or') | Literal(""OR"")
or_separator.setParseAction(lambda t:""||"")

course_line = operatorPrecedence(course_name,
                            [
                                (and_separator, 2, opAssoc.LEFT,),
                                (or_separator, 2, opAssoc.LEFT),
                                (comma_separator, 2, opAssoc.LEFT,),
                            ])

data = """"""AAAA111, BBB111, CCC101, and DDD104
AAAA111, BBB111, CCC101 or DDD104
AAAA111, AAAA112 or AAAA113, BBB333
AAA111 or BBB111, AND CCC111
AAA111 or BBB111 or CCC111 or DDD111
AAA111 or 112 or 222 or 333
AAA111 or instructor permission
AAA111/221
""""""

for line in data.splitlines():
    results = course_line.parseString(line)
    print(line)
    pprint.pprint(results.asList()[0])
    print()
"
Python file keyword argument?,"  $ python script.py --arg1 3 --arg2 4
"
Parsing html elements using BeautifulSoup,"import htql
page=""""""
   <tr>
      <td class=""prodSpecAtribute"">word</td>
      <td colspan=""5"">
          <a href=""http://www.cmegroup.com/clearing/trading-practices/CMEblock-trade.html"" target=""_blank"">another_word</a>
      </td>
   </tr>
   """"""

query = """"""
   <tr>{ 
      c1 = <td (class='prodSpecAtribute')>1 &tx;
      c2 = <td>2 &tx &trim;
   }
   """""" 

a=htql.query(page, query)
print(dict(a))
"
From date-time to usable value Python,"2013-09-03 17:34:04 1378229644
2013-09-03 17:34:05 1378229645
2013-09-03 17:35:04 1378229704
1970-01-01 00:00:00 0
"
"Django, automatic HTML ""sanitizing"" when putting HTML to template, how to stop it?","{{ myvariable|safe }}
"
Python beginner: how to reduce execution time of this small program?,"def original(data):
    data = json.loads(data)
    lis = [row['text'] for row in data['City']['values'] if row['text'].startswith(""A"")]
    lis = sorted(lis)
    return lis[:5]
"
Error when trying to display a timer into button text,"from Tkinter import *
import os
import time

class Application(Frame):

    def __init__(self, master=None):
        Frame.__init__(self, master)    # initializes window
        self.Button1 =  Button(self, text=""Blue Buff"", command=self.my_time)
        self.Button1.pack()
        self.pack()

    def my_time(self):  # creates a timer starting at 5 min , counts down to 0 then repeats
        min = 4
        sec = 59

        while sec <=60:
            os.system('cls')
            print min, ""Minutes"", sec, ""Seconds""
            self.Button1.configure(text=""{}:{}"".format(min,sec))
            self.Button1.update()
            time.sleep(1)
            sec -= 1
            if sec == 0:
                 min -= 1
                 sec = 59
            elif min == 0:
                 min = 1

root = Tk()
app = Application(master=root)
app.mainloop()#
"
Rotate photo via python,"pill.show()
"
staying logged in w/ python requests,"    login_request = requests.post(ROUTE_AUTHENTICATE,
                                  data=LOGIN_CREDS,
                                  headers={""Content-Type"": ""application/json""})
    self.assertEqual(login_request.status_code, 200)
    self.cookies = login_request.cookies
"
best way to do list comprehension matching when there are multiple matches,"for project in projects:
    project.extend([orig_project[1] for orig_project in Projects_with_owner if
                    orig_project[1] is not None and
                    orig_project[0] == project[0]])
"
Django Query Result Is NoneType?,"foo = FooModel.objects.get(...)
foo.time = timedelta(seconds=foo.time)
"
Get part of XML document in Python,"roottree = tree.find('root') 
"
Is divmod() faster than using the % and // operators?,">>> import dis
>>> dis.dis(compile('divmod(n, d)', '', 'exec'))
  1           0 LOAD_NAME                0 (divmod)
              3 LOAD_NAME                1 (n)
              6 LOAD_NAME                2 (d)
              9 CALL_FUNCTION            2
             12 POP_TOP             
             13 LOAD_CONST               0 (None)
             16 RETURN_VALUE        
>>> dis.dis(compile('(n // d, n % d)', '', 'exec'))
  1           0 LOAD_NAME                0 (n)
              3 LOAD_NAME                1 (d)
              6 BINARY_FLOOR_DIVIDE 
              7 LOAD_NAME                0 (n)
             10 LOAD_NAME                1 (d)
             13 BINARY_MODULO       
             14 BUILD_TUPLE              2
             17 POP_TOP             
             18 LOAD_CONST               0 (None)
             21 RETURN_VALUE        
"
Matching IP addresses to a list of subnets and then returning the firewall,">>> ipfirewall
[['10.10.10.1', 'Firewall-Denver'], ['10.10.10.174', 'Firewall-Denver'], ['10.10.20.126', 'Firewall-NewYork']]
"
Using IronRuby or IronPython to modify a list of C# objects,"var items = new List<Foo>() {
    new Foo() { Bar = ""connecticut"", Size = ""Small"" },
    new Foo() { Bar = ""new york"", Size = ""Large"" },
    new Foo() { Bar = ""new jersey"", Size = ""Medium"" }
};
"
numerical sort a column containing numbers and strings (pandas/python),">>> pandas.DataFrame([convert(c) for c in l] for l in df.values)\
      .sort([0, 1]).values

array([[1.0, 865545.0, 20.0, 20.0],
      [1.0, 865584.0, 297.0, 0.0],
      [1.0, 865665.0, 296.0, 0.0],
      [1.0, 865700.0, 297.0, 0.0],
      [2.0, 865628.0, 292.0, 5.0],
      [10.0, 865662.0, 297.0, 0.0],
      [10.0, 866429.0, 297.0, 0.0],
      [11.0, 865694.0, 293.0, 1.0],
      [11.0, 866438.0, 297.0, 0.0],
      [22.0, 865625.0, 297.0, 0.0],
      ['Z', 762320.0, 296.0, 1.0],
      ['Z', 861349.0, 297.0, 0.0]], dtype=object)
"
SSH a linux box using subprocess module,">>> import paramiko
>>> ssh=paramiko.SSHClient()
>>> ssh.load_system_host_keys()
>>> ssh.connect(hostname='localhost', username='haiprasan86', password='secret')
>>> print ssh
<paramiko.SSHClient object at 0xdf2590>
"
Compare two lists in python and print the output,"items = {item[4] for item in main_list}
for child in xml_data:
    value = child.get('value')
    if value in items:
        print(value)
"
How do I permanently remove a celery task from rabbitMQ?,">>> from proj.celery import app
>>> app.control.purge()
1753
"
Python: Sampling from a discrete distribution defined in an n-dimensional array,"return np.column_stack(np.unravel_index(index, dims=a.shape))
"
Define boudned ufunc for log,"import numpy as np

def log_bounded(x, verylow=-10**10):
    if np.isscalar(x):               # handle scalars as well
        if x > 0:
            y = np.log(x)
        else:
            y = verylow
    else:
        y = np.empty_like(x)
        y[x > 0] = np.log(x[x > 0])  # compute log only where needed
        y[x <= 0] = verylow
    return y

print log_bounded(-3), log_bounded(np.arange(-2, 3)), log_bounded(3)
"
Sorting based on two variables in python,">>> from collections import namedtuple

>>> Child = namedtuple('Child', 'fitness noise')

>>> children = [Child(fitness=60, noise=5),
...             Child(fitness=50, noise=8),
...             Child(fitness=40, noise=6)]
"
processing a set of unique tuples,"('10', '0000007', ['IBL', 'PBM'])
('12', '0000051', ['LRA', 'PBL'])
('7', '0000014', ['IBL', 'LRA', 'PBL'])
('9', '0000022', ['IBL', 'LRA', 'PBL'])
"
Modelling a swiss tournament in Django,"class Round(models.Model):        
    number = models.IntegerField()
    round_type = models.CharField(max_length=1, default=""n"", choices=CHOICES)
    tournament = models.ForeignKey(Tournament)
    players = models.ManyToManyField(Player, related_name=""rounds"")
    winner = models.ForeignKey(Player, null=True, related_name=""round_winner"")
"
How to Create our own language package in django,"from django.conf import global_settings

gettext = lambda s: s
LANGUAGES = (
   ('en', gettext('English')),
)

NEW_LANG_INFO = {
    'en': {
       'bidi': False, # right-to-left
       'code': 'en',
       'name': 'English',
       'name_local': u'English', #unicode codepoints here if necessary
    },
}

import django.conf.locale
LANG_INFO = dict(django.conf.locale.LANG_INFO.items() + NEW_LANG_INFO.items())
django.conf.locale.LANG_INFO = LANG_INFO
"
"Python: Recursive pass by value, 4 queens","In [79]: board = {(i,j): 0 for i in range(n) for j in range(n)}

In [80]: timeit board2 = board.copy()
100000 loops, best of 3: 3.46 us per loop
"
python changing string to date,"In [13]: pd.to_datetime(dates,)
Out[13]:
<class 'pandas.tseries.index.DatetimeIndex'>
[2014-08-27 19:53:06, 2014-08-27 19:53:15.002000]
Length: 2, Freq: None, Timezone: None
"
How can I print [] without string in Python in YAML file,">>> import yaml
>>> yaml.safe_dump({'items': ['test', 'test2']}, default_flow_style=False)
'items:\n- test\n- test2\n'
>>> yaml.safe_dump({'items': ['test', 'test2']})
'items: [test, test2]\n'
"
"Django-cities exits with ""killed""","cd /var

dd if=/dev/zero of=/var/swap.img bs=1024k count=1000
"
Creating and executing a tcsh script from within Python,"import os
import os.path

grabmeName = 'blah-grabme-12.csh'

with os.fdopen(os.open(grabmeName, os.O_WRONLY | os.O_CREAT, 0700), 'w') as f:
    f.write(""#!/bin/csh -f\n"")
    f.write(""echo 'hello'\n"")
os.system(os.path.abspath(grabmeName))
"
Python: Elegantly print all *remaining* elements from list in one line,"cols[1] = ""No_Match""
print '\t'.join(cols)
"
numpy matrix rank incorrect result,"In [222]: np.linalg.matrix_rank(B)
Out[222]: 1
"
Insert data in column with logged user to check to who has updated/created in python,"DELIMITER ;;
CREATE TRIGGER `trbinsertmappings` BEFORE INSERT ON `mappings` 
FOR EACH ROW BEGIN
  SET NEW.created_at=GETUSERNAME();
END
;;
DELIMITER ;
"
How to exclude a particular html tag(without any id) from several tags while using scrapy?,"In [18]: for sel in response.xpath('//div[contains(@class, ""region"")]/*[self::h2 or self::strong]'):
        name = sel.xpath('text()').extract()[0]
        timings = sel.xpath('./following-sibling::div[starts-with(., ""Timings"")]/text()')[0].re(r'(\d+:\d+)\s*\-\s*(\d+:\d+)')[:2]
        print name, timings
Mumbai [u'08:00', u'00:30']
Fort [u'08:00', u'00:30']
Colaba [u'07:00', u'01:00']
Goregaon [u'10:00', u'23:30']
...
Hi-Tech City [u'09:00', u'22:30']
Madhapur [u'11:00', u'23:00']
Banjara Hills [u'10:00', u'22:30']
"
Storing wiki revisions on Google App Engine/Django - Modifying This Existing Code,"page = models.Page.load(title)

if request.GET.get('rev'):
  query = db.Query(models.Revision)
  query.filter('name =', title).order('created')
  rev = request.GET.get('rev')
  rev_page = query.fetch(1, int(rev))
  page.content = rev_page.content
"
"python for loop, how to find next value(object)?"," for current, last in zip(entries[1:], entries):
     diff = current - last
"
"python dice roll simulator, issues with quit and roll again","closeProgram = raw_input()
"
Python: Do something for any method of a class?,"I am:
eating
I am:
sleeping
I am:
on the throne
"
How to decode a python string,"data = pipestr.split(""|"")
code = re.sub(
    r""([0-9a-f]+)"",  # find all hexadecimals
    lambda match: data[int(match.group(1), 16)],  # replace them by indexing the data
    base64.b64decode(b64str)  # insert into the structure
)
"
Python Pandas: Get index of rows which column matches certain value,"In [58]: df.loc[idx]
Out[58]: 
   BoolCol
10    True
40    True
50    True

[3 rows x 1 columns]
"
numba guvectorize target='parallel' slower than target='cpu',"@vectorize('(float64, float64)', target='parallel')
def add_ufunc(a, b):
    return a + b
"
Python StringIO is not correctly capturing data from stderr,"import logging, sys
from StringIO import StringIO

def get_stderr():
    saved_stderr = sys.stderr
    stderr_string_io = StringIO()

    for handler in logging.root.handlers:
        if handler.stream is sys.stderr:
            handler.stream = stderr_string_io

    sys.stderr = stderr_string_io

    try:
        logging.error(""Foobar!!!"")

    finally:
        # set the stdout and stderr back to their original values
        for handler in logging.root.handlers:
            if handler.stream is sys.stderr:
                handler.stream = saved_stderr

        sys.stderr = saved_stderr

    err_output = stderr_string_io.getvalue()
    return err_output

for x in [1, 2]:
    err_output = get_stderr()
    print  ""Run %d: %s"" % (x, err_output)
"
how to convert a list into html column in python,"<table>
    <tr>
        {% for col_name in col_names %}
        <th>{{ col_name }}</th>
        {% endfor %}
    </tr>
    {% for row in data %}
        <tr>
            {% for cell in row %}
                <td>{{ cell }}</td>
            {% endfor %}
        </tr>
    {% endfor %}
</table>
"
Finding Deltas - Difference between elements in a Python list,"from itertools import groupby, count
from operator import itemgetter

def _sub(item):
    a, b = item
    return a - b

def consecutive(iterable, step):
    for _, g in groupby(zip(count(step=step), iterable), _sub):
        yield map(itemgetter(1), g)

a = [1, 2, 3, 5, 55, 56]

print(list(consecutive(a, 2)))
"
Fetch the required details from SOAP xml response,"# encoding: utf-8
import xmltodict


def listify(obj):
    if isinstance(obj, list):
        return obj
    return [obj]

def get_details(soap):
    # Parse the SOAP
    soap = xmltodict.parse(soap, process_namespaces=True)

    # Deal with namespaces
    env = 'http://schemas.xmlsoap.org/soap/envelope/:'
    doorway = 'http://www.derbysoft.com/doorway:'

    # Everything we care about is in ""Availability""
    availability = listify(
        soap[env+'Envelope']
            [env+'Body']
            [doorway+'MultiAvailabilityResponse']
            [doorway+'Availabilities']
            [doorway+'Availability'])

    # Intermediate data structure to hold room names
    names = {
        roomtype['@RoomTypeCode']: roomtype['@RoomTypeName']
        for _availability in availability
        for roomtype in listify(_availability
            [doorway+'RoomTypes']
            [doorway+'RoomType'])
    }

    # Result!
    return {
        'roomlist': sorted([
            {
                'RoomTypeCode': roomrate['@RoomTypeCode'],
                'RatePlanCode': roomrate['@RatePlanCode'],
                'RoomTypeName': names[roomrate['@RoomTypeCode']],
                'AmountBeforeTax': rate['@AmountBeforeTax'],
            }
            for _availability in availability
            for roomrate in listify(_availability
                [doorway+'RoomRates']
                [doorway+'RoomRate'])
            for rate in listify(roomrate
                [doorway+'Rates']
                [doorway+'Rate'])],
            key=lambda x:float(x['AmountBeforeTax']))
    }


if __name__ == ""__main__"":
    soap = '''
    <SOAP-ENV:Envelope xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/"">
    <SOAP-ENV:Header/>
    <SOAP-ENV:Body>
        <ns2:MultiAvailabilityResponse xmlns:ns2=""http://www.derbysoft.com/doorway"" Status=""Successful"" Token=""187be58c62c2f2515b5d78ee"">
            <ns2:Availabilities>
                <ns2:Availability CurrencyCode=""USD"" HotelCode=""HY-CHIRC"">
                    <ns2:GuestCount AdultCount=""1"" ChildCount=""0""/>
                    <ns2:RoomTypes>
                        <ns2:RoomType RoomTypeCode=""JRSQ"" RoomTypeName=""JR SUITE 2 QUEEN BEDS"">
                            <ns2:RoomTypeDescription>Rest in sublime comfort on one of two queen signature Hyatt Grand BedsÂ®, fitted with fine linens, down blanket and plump pillows.</ns2:RoomTypeDescription>
                        </ns2:RoomType>
                        <ns2:RoomType RoomTypeCode=""CLBD"" RoomTypeName=""REG CLUB 2 DOUBLE BEDS"">
                            <ns2:RoomTypeDescription>one King or two double-sized Hyatt Grand Beds, fitted with luxurious linens, a down blanket and plush pillows</ns2:RoomTypeDescription>
                        </ns2:RoomType>
                        <ns2:RoomType RoomTypeCode=""VW2Q"" RoomTypeName=""PREMIUM VW 2 QEN"">
                            <ns2:RoomTypeDescription>Relax and unwind in our sophisticated downtown Chicago guestrooms with city, river and lake views</ns2:RoomTypeDescription>
                        </ns2:RoomType>

                    </ns2:RoomTypes>

                    <ns2:RoomRates>
                        <ns2:RoomRate RatePlanCode=""49584IPRTF"" RoomTypeCode=""JRSQ"">
                            <ns2:Rates>
                                <ns2:Rate AmountAfterTax=""523.348"" AmountBeforeTax=""449.650"" EffectiveDate=""2016-04-28"" ExpireDate=""2016-04-29""/>
                            </ns2:Rates>
                            <ns2:Fees>
                                <ns2:Fee ChargeType=""Tax"" Percent=""16.390"" Type=""Exclusive""/>
                            </ns2:Fees>
                        </ns2:RoomRate>
                        <ns2:RoomRate RatePlanCode=""49584IPRTF"" RoomTypeCode=""CLBD"">
                            <ns2:Rates>
                                <ns2:Rate AmountAfterTax=""350.218"" AmountBeforeTax=""300.900"" EffectiveDate=""2016-04-28"" ExpireDate=""2016-04-29""/>
                            </ns2:Rates>
                            <ns2:Fees>
                                <ns2:Fee ChargeType=""Tax"" Percent=""16.390"" Type=""Exclusive""/>
                            </ns2:Fees>
                        </ns2:RoomRate>
                        <ns2:RoomRate RatePlanCode=""49584IPRTF"" RoomTypeCode=""VW2Q"">
                            <ns2:Rates>
                                <ns2:Rate AmountAfterTax=""305.699"" AmountBeforeTax=""262.650"" EffectiveDate=""2016-04-28"" ExpireDate=""2016-04-29""/>
                            </ns2:Rates>
                            <ns2:Fees>
                                <ns2:Fee ChargeType=""Tax"" Percent=""16.390"" Type=""Exclusive""/>
                            </ns2:Fees>
                        </ns2:RoomRate>

                    </ns2:RoomRates>
                </ns2:Availability>
            </ns2:Availabilities>
        </ns2:MultiAvailabilityResponse>
    </SOAP-ENV:Body>
    </SOAP-ENV:Envelope>'''

    from pprint import pprint
    pprint(get_details(soap))
"
how to read a file that can be saved as either ansi or unicode in python?,">>> all_bytes = """".join(map(chr, range(256)))
>>> u1 = all_bytes.decode('cp1252', 'replace')
>>> u2 = all_bytes.decode('mbcs', 'replace')
>>> u1 == u2
False
>>> [(i, u1[i], u2[i]) for i in xrange(256) if u1[i] != u2[i]]
[(129, u'\ufffd', u'\x81'), (141, u'\ufffd', u'\x8d'), (143, u'\ufffd', u'\x8f')
, (144, u'\ufffd', u'\x90'), (157, u'\ufffd', u'\x9d')]
>>>
"
Custom properties not saved correctly for Expando models in repeated StructuredProperty,"HUser(email='test@example.com'.
      accounts=(Account(type='fb',
                        account_id='1',
                        state='1',
                        access_token='1'),
                Account(type='tw',
                        account_id='2',
                        state='2',
                        access_token='2',
                        access_token_secret='2')))
"
NumPy: 2D array from a list of arrays and scalars,"In [211]: something([np.atleast_2d(x), 0, x])
Out[211]: 
array([array([[ 1.,  1.,  1.,  1.,  1.]]), array([ 0.]),
       array([ 1.,  1.,  1.,  1.,  1.])], dtype=object)
"
Why is python returning a numbers from a string?,">>> string[0:min(5,len(string))]
'Strin'
"
Common Favorite Band Python,"def main(listOfLists):
    i = 1
    answer = listOfLists[0]
    while i<len(listOfLists):
        answer = commonBand(answer, listOfLists[i])
        if not answer:
            break
        i += 1
    return answer
"
Verify file names by standard,"for filename in list of filenames:
    if filename is not valid:
        print ""<filename> is not valid!""
"
Python webdriver from Selenium,"python <script_name.py>
"
string comparison on 2 lists,">>> [elem for elem in b if any(map(lambda test: re.search(r'\b' + re.escape(elem) + r'\b', test), a))]
['is']
"
Arranging a list by given order in python for dump into json,"EDIT
order_key = [2,0,3,4,1]

exec('def reorder(x):\n    return (%s)'
     % ' , '.join( 'x[%d]' % i for i in (order_key)))

cn = (111,444 ,000,222,333)
cv = ['a1', 'a4', 'a0', 'a2', 'a3']
cx = ('one','four','zero','two','three')

print map(reorder,(cn,cv,cx))
"
How to parse text file in Python and convert to JSON,"""string in quotes""
string
string
string
number
|-
""other string in quotes""
string2
string2
string2
number2
"
Is there a simpler way to allocate value to a variable given a if condition - Python?,"values = [0.03,0.4,0.055,0.7]
x = 0.2

values = [max(v, x) for v in values]
"
pandas: reduce data frame to only specific chain of occurences,"In [63]:
df1['event'] !=0

Out[63]:
hash1    False
hash1     True
hash2     True
hash3     True
hash3     True
hash3    False
Name: event, dtype: bool

In [64]:
df1[df1['event'] !=0]

Out[64]:
       event  val1
hash1      1     2
hash2      1     3
hash3      2     4
hash3      1     5

In [65]:
df1[df1['event'] !=0].groupby(level=0)['event'].nunique()

Out[65]:
hash1    1
hash2    1
hash3    2
Name: event, dtype: int64

In [66]:
gp[gp> 1]

Out[66]:
hash3    2
Name: event, dtype: int64
"
How to flatten tuple created using zip transformation in PySpark,"lambda t: (t[0][0], t[0][1], t[0][2], ..., t[1]))
"
date comparison in python - how to know which semester date,">>> import datetime
>>> current = datetime.date.today()
>>> current
datetime.date(2013, 9, 3)
>>> summer = current.replace(month=4, day=16), current.replace(month=10, day=14)
>>> summer[0] <= current <= summer[1]:
True
"
Disable logging per method/function?,"log = logging.getLogger(__name__)

func1_log = logging.getLogger( ""{0}.{1}"".format( __name__, ""my_func1"" )
"
Why is my 2D interpolant generating a matrix with swapped axes in SciPy?,"ax3.plot_surface(ti, xi, u_int, cmap=cm.coolwarm)
"
how to use gevent local module,"#!env python

import gevent
from gevent import local

data = local.local()
data.numbers = 12
#Declare data as a global variable.

def foo():
    print(""IN FOO"")
    data.numbers = 42
    #Change the value of data.numbers.

    print(data.__dict__)
    #Check the values in data in the function foo.

def bar():
    print(""IN BAR"")

    print(data.__dict__)
    #Check the values in data in the function bar.


def main():
    print(""In Main"")
    print(data.__dict__)
    #Check the values in data at beginning.

    foo_gl = gevent.Greenlet(foo)
    bar_gl = gevent.Greenlet(bar)
    foo_gl.start()
    bar_gl.start()
    gevent.joinall([foo_gl, bar_gl])

    print(""Afeter all, In Main"")
    print(data.__dict__)
    #Check the values in data at the end.

if __name__ == ""__main__"":
    main()
"
How to use Pandas to create Dictionary from column entries in DataFrame or np.array,"In [11]: DF.to_dict()
Out[11]:
{'a': {0: 'AAA', 1: 'ABA', 2: 'AAC', 3: 'AAB', 4: 'AAA'},
 'b': {0: '86880690', 1: '86880690', 2: '86880690' 3: '86880690', 4: '86880690'},
 'c': {0: '86914111', 1: '86914111', 2: '86914111', 3: '86914111', 4: '86914111'},
 'd': {0: '22RV1', 1: 'A549', 2: 'BFTC-905', 3: 'BT-20', 4: 'C32'},
 'e': {0: '2', 1: '2', 2: '3', 3: '2', 4: '2'},
 'g': {0: '2', 1: '2', 2: '3', 3: '2', 4: '2'},
 'h': {0: 'H', 1: 'L', 2: 'H', 3: 'H', 4: 'H'},
 'i': {0: '-', 1: '-', 2: '-', 3: '-', 4: '-'}}

In [12]: DF.to_dict(orient=""index"")
Out[12]:
{0: {'a': 'AAA', 'b': '86880690', 'c': '86914111', 'd': '22RV1', 'e': '2', 'g': '2', 'h': 'H', 'i': '-'},
 1: {'a': 'ABA', 'b': '86880690', 'c': '86914111', 'd': 'A549', 'e': '2', 'g': '2', 'h': 'L', 'i': '-'},
 2: {'a': 'AAC', 'b': '86880690', 'c': '86914111', 'd': 'BFTC-905', 'e': '3', 'g': '3', 'h': 'H', 'i': '-'},
 3: {'a': 'AAB', 'b': '86880690', 'c': '86914111', 'd': 'BT-20', 'e': '2', 'g': '2', 'h': 'H', 'i': '-'},
 4: {'a': 'AAA', 'b': '86880690', 'c': '86914111', 'd': 'C32', 'e': '2', 'g': '2', 'h': 'H', 'i': '-'}}
"
Crawling multiple sites with Python Scrapy with limited depth per site,"def __init__(self, urls_file, N=10, *a, **kw):
    data = open(urls_file, 'r').readlines()[:N]
    self.allowed_domains = [urlparse(i).hostname.strip() for i in data]
    self.start_urls = ['http://' + domain for domain in self.allowed_domains]
    super(DownloadSpider, self).__init__(*a, **kw)
"
converting a string to a tree structure in python,"ret[line.strip()] = parse_message_to_tree_helper(buf, index)
"
Python 3.4 - How to create a template property for many classes,"class PositiveValuedProperty():
    def __init__(self, name):
        self.name = ""_"" + name

    def __get__(self, obj, cls=None):
        return getattr(obj, self.name)

    def __set__(self, obj, new_value):
        if new_value < 1:
            new_value = 1
        setattr(obj, self.name, new_value)
"
Why can `__subclasshook__` be monkeypatched onto the metaclass but `__instancecheck__` cannot?,">>> type(Foo)
<class 'abc.ABCMeta'>
"
Integer to string length in python?,"def f(n):
    return '#' * n
"
easy_install--failure to import,"python setup.py install 
"
gotchas where Numpy differs from straight python?,">>> a + a
array([ 0,  2,  4,  6,  8, 10, 12, 14, 16, 18])
>>> a + l
array([ 0,  2,  4,  6,  8, 10, 12, 14, 16, 18])
"
split a string in python,"filter(None, a.split('\n'))
"
Execute parsed xml data as command in python,"....
else:
    exec(ui_application.tag)
"
Django : how could I overload Q in django.db.models.query QuerySet to use for a special purpose in my Manager,"args, kwargs = self.__translate(*args, **kwargs)
"
py.test: get KeyboardInterrupt to call teardown,"============================= test session starts ==============================
platform linux2 -- Python 2.7.3 -- pytest-2.2.5.dev4
plugins: xdist, bugzilla, pep8, cache
collected 1 items

tmp/test_keyboardinterrupt.py res-setup
res-teardown


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! KeyboardInterrupt !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
/home/hpk/p/pytest/tmp/test_keyboardinterrupt.py:10: KeyboardInterrupt
"
.fillna column if two cells are empty in Pandas,"df_all.update(df_all['infraspecific_name'][(df_all['infraspecific_name'].isnull()) & (df_all['isolate'].isnull())].fillna('NA'))
"
make 1 dimensional array of strings with elements seperated by commas from 2 d array in numpy,">>> series = df.a + "", "" + df.b
>>> series

0    AR1006, 02
1    AR1007, 01
2    AR1008, 03
dtype: object
"
"Django: Named URLs / Same Template, Different Named URL","urlpatterns = patterns('tlkmusic.apps.tlkmusic_base.views',
    # (r'^$', index),
    url(r'^(?P<object_type>\w+)/$', music_object_list, name='music_object_list'),
    url(r'^(?P<object_type>\w+)/(?P<starts_with>\w)/$', music_object_list, name='music_object_list_x'),
    url(r'^(?P<object_type>\w+)/(?P<object_id>\d+)/$', music_object_detail, name='music_object_detail'),

)
"
Sum of calculation in a variable,"def calc(x=0, y=0, z=0):
    expression = raw_input('Enter an expression: ')

    return eval(expression, None, locals())
"
Add a number to the front of a number row python,">>> l = [1,2,3]
>>> l = [4] + l
>>> l
[4, 1, 2, 3]
"
How do I print a key without value from a dictionary that has multiple keys,"print(dictionary.items())
"
Python - how to store lines of numerical values?,"for n, attributes in line:
    ...
    attributes['foo'] = 'bar'
"
Cursor shape in QML,"#ifndef CURSORSHAPEAREA_H
#define CURSORSHAPEAREA_H

#include <QDeclarativeItem>

class QsltCursorShapeArea : public QDeclarativeItem
{
  Q_OBJECT

  Q_PROPERTY(Qt::CursorShape cursorShape READ cursorShape WRITE setCursorShape NOTIFY cursorShapeChanged)

public:

  explicit QsltCursorShapeArea(QDeclarativeItem *parent = 0);

  Qt::CursorShape cursorShape() const;
  Q_INVOKABLE void setCursorShape(Qt::CursorShape cursorShape);

private:
  int m_currentShape;

signals:
  void cursorShapeChanged();
};

#endif // CURSORSHAPEAREA_H
"
Better way to test several functions for the same thing in python,"def genDocText(func):
    func.__doc__ = r'''
    >>> conn = httplib.HTTPConnection(...)
    >>> %(func_name)s(None, conn)
    Traceback (most recent call last):
    NoneAsInputError: `mystring` should be a string and not `None`!

    >>> %(func_name)s("""", conn)
    Traceback (most recent call last):
    EmptyStringError: `mystring` should not be an empty string!
    ''' % {'func_name': func.__name__}
    return func

@genDocText
def function_1(mystring, conn):
    pass

@genDocText
def function_2(mystring, conn):
    pass

@genDocText
def function_n(mystring, conn):
    pass

if __name__ == '__main__':
    print function_1.__doc__
    print function_2.__doc__
    print function_n.__doc__
"
"How to apply a modifier in Python, creating a new mesh?","bpy.context.scene.objects.active = my_object
"
"pandas dataframe view vs copy, how do I tell?","df.loc[...] = value
"
"How to remove commas, brackets in python using regular expression?","with open(r'd:\output1.doc', 'r') as inputfile:
    inputstring = inputfile.read()

data = ast.literal_eval(inputstring)
for key, sublist in data.items():
    print '{}:'.format(key)
    for subdict in sublist:
        for key, value in subdict.items():
            print('{}:{}'.format(key, value))
"
How to easily display top level of data structure in python,">>> pprint.pprint(tup, depth=6)
('spam', ('eggs', ('lumberjack', ('knights', ('ni', ('dead', (...)))))))
"
Python Functions AFTER code,"def main():
    blah blah blah
    functionCall(arg)
    blah blah blah

def functionCall(arg):
    blah blah blah

if __name__ == '__main__':
    main()
"
How do I loop through two lists of lists and avoid duplicate combinations for values at specific positions?,"c = [[2007, 206, 205, 8], [2007, 206, 208, 9], [2007, 207, 210, 10]]
"
How would you create a nested list with recursion in Python?,"def make_list(levels, num_elems):
    if levels > 0:
       return range(num_elems) + [make_list(levels-1, num_elems)]
    else:
       return range(num_elems)
"
"django: Add user popup. Missing fields (first_name, last_name)","{% block form_top %}
  {% if not is_popup %}
    <p>{% trans ""First, enter a username and password. Then, you'll be able to edit more user options."" %}</p>
  {% else %}
    <p>{% trans ""Enter a username and password."" %}</p>
  {% endif %}
{% endblock %}
"
"Is there a way to simplify ""if x == 1 and y == 2:""","if x == 1 and y == 2 and z == 3:
"
Rounding integers,">>> roundit(L,36)
30
>>> roundit(L,77)
70
>>> roundit(L,150)
150
"
Weighted random sample in python,"weight_sample_indexes = lambda weights, k: random.sample([val 
        for val, cnt in enumerate(weights) for i in range(cnt)], k)
"
Access a file in a python script that is stored in HDFS distributed cache,"pig -param OUTPUT=/user/cody.stevens/pigout -f dist.pig
"
How to not load the comments while parsing XML in lxml,"from lxml import etree, objectify

parser = etree.XMLParser(remove_comments=True)
tree = objectify.parse(xmlPath, parser=parser)
"
PIL and numpy,">>> pix = numpy.array(pic)
"
How to query datastore when using ReferenceProperty?,"new_venue = Venue(venue='Jeferson memorial', user=the_user) # careful with the quoting
db.put(new_venue)
"
"I'd like to search a file, find matching terms from another list and then mark rows including those terms","$ cat data
GeneA   GeneB   0.8475
GeneA   GeneC   0.9865
GeneB   GeneA   0.9865
GeneD   GeneB   0.5174
$ cat data1 
GeneD
GeneC
$ python3 p.py 
$ cat output 
GeneA   GeneB   0.8475
GeneA   GeneC   0.9865  *
GeneB   GeneA   0.9865
GeneD   GeneB   0.5174  *
$
"
Python lengh of json is incorrect,"[{u'dateTimeRanges': {},
  u'id': u'AAPL:US',
  u'lastPrice': 107.33,
  u'lastUpdateDate': u'2015-12-21',
  u'nyTradeEndTime': u'16:30:00.000',
  u'nyTradeStartTime': u'09:30:00.000',
  u'price': [{u'date': u'2014-12-22', u'value': 112.94},
             {u'date': u'2014-12-23', u'value': 112.54},
             {u'date': u'2014-12-24', u'value': 112.01},
             {u'date': u'2014-12-26', u'value': 113.99},
             {u'date': u'2014-12-29', u'value': 113.91},
             {u'date': u'2014-12-30', u'value': 112.52},
             {u'date': u'2014-12-31', u'value': 110.38},
             {u'date': u'2015-01-02', u'value': 109.33},
             {u'date': u'2015-01-05', u'value': 106.25},
             {u'date': u'2015-01-06', u'value': 106.26},
             {u'date': u'2015-01-07', u'value': 107.75},
             {u'date': u'2015-01-08', u'value': 111.89},
             {u'date': u'2015-01-09', u'value': 112.01},
             {u'date': u'2015-01-12', u'value': 109.25},
             {u'date': u'2015-01-13', u'value': 110.22},
             {u'date': u'2015-01-14', u'value': 109.8},
             {u'date': u'2015-01-15', u'value': 106.82},
             ...
             {u'date': u'2015-12-21', u'value': 107.33}],
  u'priceMinDecimals': 2,
  u'timeZoneOffset': -5}]
"
"Pandas DataFrame: replace all values in a column, based on condition","df.loc[<mask>(here mask is generating the labels to index) , <optional column(s)> ]
"
Retrieve the object from dict to that it can easily be dumped via json.dumps(),">>> json.dumps(p, default=default)
'{""cars"": [{""make"": ""VW"", ""model"": ""Jetta""}, {""make"": ""BMW"", ""model"": ""X5""}], ""name"": ""John Smith""}'
"
How can I unload a DLL using ctypes in Python?,"mydll = ctypes.CDLL('./mylib.so')
handle = mydll._handle
del mydll
while isLoaded('./mylib.so'):
    dlclose(handle)
"
Can python detect which OS is it running under?,"from time import strftime
import os

if os.name == 'nt': # Windows
    basePath = 'C:\\working\\'
else:
    basePath = '/working/'

Fn = '%sSetup%s.csv' % ( basePath, strftime( '%y%m%d' ) )
"
Python & Pandas: Unable to drop columns,"In [108]:
df.drop(['USAF', 'NCDC'], 1,inplace=True)
df.info()

<class 'pandas.core.frame.DataFrame'>
Int64Index: 8 entries, 0 to 7
Data columns (total 11 columns):
Date           8 non-null int64
HrMn           8 non-null int64
I              8 non-null int64
Type           8 non-null object
QCP            0 non-null float64
Dir            8 non-null int64
Q              8 non-null int64
I.1            8 non-null object
Spd            8 non-null float64
Q.1            8 non-null int64
Unnamed: 12    0 non-null float64
dtypes: float64(3), int64(6), object(2)
memory usage: 768.0+ bytes
"
Show the final y-axis value of each line with matplotlib,"second_axes = pyplot.twinx() # create the second axes, sharing x-axis
second_axis.set_yticks([0.2,0.4]) # list of your y values
pyplot.show() # update the figure
"
Prevent Label to be re-aligned after askdirectory() is closed,"|   0    | 1 |    2    |    3   |    4   |
| Welcome                       |  ---   |
| Select | - |   ---   | Entry  | Button |
|   ---  | - |  Label  |   ---  |   ---  |
"
Get user browser info in Python Bottle,"import httpagentparser
"
Getter and Setter for member variable in Python,"@property
def responseoperationcode(self):
    return self.innerobject.operationcode

@responseoperationcode.setter    
def responseoperationcode(self, value):    
    self.innerobject.operationcode = value
"
"Pandas Plots: Separate color for weekends, pretty printing times on x axis","def find_weekend_indices(datetime_array):
    indices=[]
    for i in range(len(datetime_array)):
        if datetime_array[i].weekday()>=5:
            indices.append(i)
    return indices

def highlight_weekend(weekend_indices,ax):
    i=0
    while i<len(weekend_indices):
         ax.axvspan(weekend_indices[i], weekend_indices[i]+2, facecolor='green', edgecolor='none', alpha=.2)
         i+=2
"
Developing a web-app on Windows and Linux,"pyramid==1.0.1
...
"
regex to match words of length specified within string,">>> re.sub(r'\+[0-9]+[ACGTNacgtn]+', removechars, s)
'.$......*.*.*GG'
"
Partially Evaluating Python Classmethod Based on Where It's Accessed From,"def auto_api(api_classes, glob_dict):
    for key, value in glob_dict.items():
        if isinstance(value, type) and hasattr(value, ""auto_api""):
            for api_class in api_classes:
                setattr(value, api_class.__name__, APIProperty(api_class))


class X(object):
    auto_api = True

class Y(object):
    @classmethod
    def method(cls, x, *args):
        print cls, x, args

auto_api((Y,), globals())

#Example

x = X()
x.Y.method(1,2,3)
"
"How can I listen for 'usb device inserted' events in Linux, in Python?","    def _filter(self, udi):
        device_obj = self.bus.get_object (""org.freedesktop.Hal"", udi)
        device = dbus.Interface(device_obj, ""org.freedesktop.Hal.Device"")

        if device.QueryCapability(""volume""):
            return self.do_something(device)
"
remove non-numeric rows in one column with pandas,"import pandas as pd
from io import StringIO

data = """"""
id,name
1,A
2,B
3,C
tt,D
4,E
5,F
de,G
""""""

df = pd.read_csv(StringIO(data))

In [55]: df
Out[55]: 
   id name
0   1    A
1   2    B
2   3    C
3  tt    D
4   4    E
5   5    F
6  de    G

In [56]: df[df.id.apply(lambda x: x.isnumeric())]
Out[56]: 
  id name
0  1    A
1  2    B
2  3    C
4  4    E
5  5    F
"
Mapping a list to a Huffman Tree whilst preserving relative order,"[abcde,,
    ([ab,0,
        ([a,00,(None),(None)]),
        ([b,01,(None),(None)])]),
    ([cde,1,
        ([c,10,(None),(None)]),
        ([de,11,
            ([d,110,(None),(None)]),
            ([e,111,(None),(None)])])])]
"
How to quickly get a list of keys from dict,">>> from collections import Counter
>>> d = {('a','b','c'): 'val1', ('a','d'): 'val2'}
>>> counts = Counter(item for key in d for item in key)
>>> counts
Counter({'a': 2, 'c': 1, 'b': 1, 'd': 1})
>>> [item for item, count in counts.most_common() if count > 1]
['a']
"
Examples of using Doctests in Django in an Agile / BDD way,"from ??? import RequestFactory
from doctest import testmod, DocTestFailure
from django.test import TestCase

from myapp import views

class MyAppTest(TestCase):

    fixtures = ['test_data.json']

    def test_doctests(self):                
        try:
            testmod(views, extraglobs={
                'REQUEST': RequestFactory()
            }, raise_on_error=True)
        except DocTestFailure, e:
            self.fail(e)
"
how to broadcast certain processing in numpy arrays,"a = array([[1, 2, 3],
       [3, 4, 5]])
np.apply_along_axis(arr = a, func1d=vp, axis=1)
> array([ 6, 60])
"
pandas percentage change with missing data,">>> pv = pd.crosstab(df[""Child""], [df[""Year""], df[""Behaviour""]], dropna=False)
>>> pv
      1987      2020     
       Bad Good  Bad Good
Child                    
Boy      1    1    2    0
Girl     1    1    2    0

>>> pv[2020]/pv[1987] - 1
       Bad  Good
Child           
Boy      1    -1
Girl     1    -1
"
Python - can I detect unicode string language code?,"#!/usr/bin/env python
import json
import urllib, urllib2

def detect_language(text,
    userip=None,
    referrer=""http://stackoverflow.com/q/4545977/4279"",
    api_key=None):        

    query = {'q': text.encode('utf-8') if isinstance(text, unicode) else text}
    if userip: query.update(userip=userip)
    if api_key: query.update(key=api_key)

    url = 'https://ajax.googleapis.com/ajax/services/language/detect?v=1.0&%s'%(
        urllib.urlencode(query))

    request = urllib2.Request(url, None, headers=dict(Referer=referrer))
    d = json.load(urllib2.urlopen(request))

    if d['responseStatus'] != 200 or u'error' in d['responseData']:
        raise IOError(d)

    return d['responseData']['language']

print detect_language(""Python - can I detect unicode string language code?"")
"
for each gives different result?,"ar = ""0.212,1.231,0.112:1.001,3.212,0.002:0.002,0.0001,1.1""
import re
ar = ""(""+ar                      #Add the ( with your data 
ar = re.sub(r"","",""+"",ar)         #Substitute with + instead of ,
ar = re.sub(r""(?=\:|$)"","")"",ar)  #look ahead for add `)` after colon
ar = re.sub(r""(?<=)\:"",""*("",ar)  #Replace the color with *

#NOw you data look likes(0.212+1.231+0.112)*(1.001+3.212+0.002)*(0.002+0.0001+1.1)
#Finally evaluvate the string as a expression
print eval(ar)
"
Number of times each weekday occurs between two dates,">>> count_weekday(date_from, date_to)
Counter({
    'Sun': 2, 
    'Tue': 2, 
    'Mon': 2, 
    'Wed': 1, 
    'Fri': 1, 
    'Thu': 1, 
    'Sat': 1
})
"
execute a program on a remote machine python,"/home/usr> (cd /usr/local/bin;pwd)
/usr/local/bin
/home/usr>
"
Building a generator from a recursive algorithm,"def _walk (self, starting_node) :
    while starting_node is not self._nil :
        for x in self._walk(starting_node.left):
            yield x
        yield starting_node
        starting_node = starting_node.right
"
How to carry out this aggregation in python,"{
    'KR': ['Server1'],
    'DE': ['Server1', 'Server2'],
    'IE': ['Server1', 'Server3', 'Server2', 'Server1', 'Server3']
}
"
How do I clip a floating-point number to just below a limit?,">>> import sys
>>> 1-sys.float_info.epsilon
0.9999999999999998
>>> numpy.nextafter(1, 0) - (1-sys.float_info.epsilon)
1.1102230246251565e-16
>>> numpy.nextafter(1, 0) > (1-sys.float_info.epsilon)
True
"
PYTHONPATH vs. sys.path (RELOADED),"from package import lib
lib.foo()
"
Python Threading: Running 2 different functions simultaneously,"import threading
from time import sleep


def main():
    t = Test()
    t.go()
    try:
        join_threads(t.threads)
    except KeyboardInterrupt:
        print ""\nKeyboardInterrupt catched.""
        print ""Terminate main thread.""
        print ""If only daemonic threads are left, terminate whole program.""


class Test(object):
    def __init__(self):
        self.running = True
        self.threads = []

    def foo(self):
        while(self.running):
            print '\nHello\n'
            sleep(2)

    def get_user_input(self):
        while True:
            x = raw_input(""Enter 'e' for exit: "")
            if x.lower() == 'e':
               self.running = False
               break

    def go(self):
        t1 = threading.Thread(target=self.foo)
        t2 = threading.Thread(target=self.get_user_input)
        # Make threads daemonic, i.e. terminate them when main thread
        # terminates. From: http://stackoverflow.com/a/3788243/145400
        t1.daemon = True
        t2.daemon = True
        t1.start()
        t2.start()
        self.threads.append(t1)
        self.threads.append(t2)


def join_threads(threads):
    """"""
    Join threads in interruptable fashion.
    From http://stackoverflow.com/a/9790882/145400
    """"""
    for t in threads:
        while t.isAlive():
            t.join(5)


if __name__ == ""__main__"":
    main()
"
Mapping over values in a python dictionary,"my_dictionary = dict(map(lambda (k,v): (k, f(v)), my_dictionary.iteritems()))
"
How to convert list of nested dictionaries into string and vice versa,"values = [val1, val2, val3]
values_str = json.dumps(values)

# Then read it back
values = json.loads(values_str)
"
Get list related objects,"user2s = User.objects.filter(id__in=user2_ids)
"
"how to write a function, it will do the same thing with replace()","Hello StackOverflow !
"
Install python packages to correct anaconda environment,"source activate ~/anaconda/envs/dataset
"
"NLTK Sentence Tokenizer, custom sentence starters","['•', 'I am a sentence •', 'I am another sentence']
"
Can a python script execute a function inside a bash script?,"hi
"
Check if one value exists in any rows of any columns in pandas?,"df.apply(lambda x: 'mike' in x.values, axis=1).any()
"
Python: Passing function with arguments to a function,"curve_fit(user_func, x, y, [initial_guess_param1, param2, ...])
"
Python (to C#) Method Conversion,"y.Select(item => x(item))
"
Python 2.7 Multiprocessing,"q = multiprocessing.Process(target=listen_process)
"
Comparing single dataframe value to previous 10 in same column,"df = pd.DataFrame({'price': [50, 51, 52, 50.5, 51, 50, 50.5, 53, 52, 49, 51]})

window = 5  # Given that sample data only contains 11 values.
df['price_count'] = pd.rolling_apply(df.price, window, 
                                     lambda group: sum(group[:-1] > group[-1]))
>>> df
    price  price_count
0    50.0          NaN
1    51.0          NaN
2    52.0          NaN
3    50.5          NaN
4    51.0            1
5    50.0            4
6    50.5            2
7    53.0            0
8    52.0            1
9    49.0            4
10   51.0            2
"
Python enums with complex types,"from enum import Enum

class Point(object):
    def __init__(self, x, y):
        self.x = x
        self.y = y
    def __repr__(self):
        return 'Point(%r, %r)' % (self.x, self.y)

class Corner(Point, Enum):
    BottomLeft = 0, 0
    TopLeft = 0, 100
    TopRight = 100, 100
    BottmRight = 100, 0

>>> Corner.TopLeft
<Corner.TopLeft: (0, 0)>
>>> isinstance(Corner.TopLeft, Point)
True
>>> Corner.TopLeft.value
(0, 100)
>>> Corner.TopLeft.x
0
>>> Corner.TopLeft.y
100
"
Creating a file with python using sudo makes its owner root,"import os

def fix_ownership(path):
    """"""Change the owner of the file to SUDO_UID""""""

    uid = os.environ.get('SUDO_UID')
    gid = os.environ.get('SUDO_GID')
    if uid is not None:
        os.chown(path, int(uid), int(gid))

def get_file(path, mode=""a+""):
    """"""Create a file if it does not exists, fix ownership and return it open""""""

    # first, create the file and close it immediatly
    open(path, 'a').close()

    # then fix the ownership
    fix_ownership(path)

    # open the file and return it
    return open(path, mode)
"
SQLAlchemy ordering by count on a many to many relationship,"likes = db.Table('likes',
    db.Column('user_id', db.Integer, db.ForeignKey('user.id')),
    db.Column('post_id', db.Integer, db.ForeignKey('post.id'))
)

class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(20))

    def __repr__(self):
        return ""<User('%s')>"" % self.username

class Post(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    title = db.Column(db.String(255))

    likes = db.relationship('User', secondary = likes,
        backref = db.backref('posts', lazy='dynamic'))

    def __repr__(self):
        return ""<Post('%s')>"" % self.title
"
How to perform a Switch statement with Apache Spark Dataframes (Python),"exprs = [c.alias(a) for (a, c) in [
  ('etl_requests_usage', lit('DEV')), 
  ('etl_datetime_local', current_date())]]

df.select(""*"", *exprs)
"
regex for ordering/numbering,"print re.sub(""\((I+|i+|[a-z0-9])\)"",""\n\g<0>"",buff)
"
Can a Django Queryset be created to do this complex query?,"from django.db.models import Count, Max
MyModel.objects.values('a').annotate(count=Count(""a""),latest_date=Max('created_ts'))
"
ORM data modeling in Python Django,"from django.db import models
class Hashtag(models.Model):
    name = models.CharField(max_length=80)

    def __str__(self):              # __unicode__ on Python 2
        return self.name

class Post(models.Model):
    name = models.CharField(max_length=80)
    hashtags = models.ManyToManyField(Hashtag)

    def __str__(self):              # __unicode__ on Python 2
        return self.name
"
Python vectorization library?,"Vector(units).hitpoint = 50

# This also still works...
for unit in Vector(units):
    unit.hitpoint = 50

# This also still works...
Vector(unit)[2].hitpoint = 50
"
How to increase the performance for estimating `Pi`in Python,">>> def estimate_pi_loop(x, y):
...     total = 0
...     for i in xrange(len(x)):
...         if x[i] ** 2 + y[i] ** 2 < 1:
...             total += 1
...     return total * 4.0 / len(x)
... 
>>> def estimate_pi_numpy(x, y):
...     return ((x ** 2 + y ** 2) < 1).sum()
... 
>>> %timeit estimate_pi_loop(x, y)
1 loops, best of 3: 3.33 s per loop
>>> %timeit estimate_pi_numpy(x, y)
100 loops, best of 3: 10.4 ms per loop
"
"psycopg2 mapping Python : ""list of dicts"" to Postgres : ""array of composite type"" for an INSERT statement","regress=# insert into posts 
regress-# VALUES('animals are good',ARRAY[
regress-#             ('monkeys rock', 'false'),
regress-#             ('donkeys rock', 'true')
regress-#  ]);
ERROR:  column ""q"" is of type quotes[] but expression is of type record[]
LINE 1: insert into posts VALUES('animals are good',ARRAY[('monkeys ...
                                                    ^
HINT:  You will need to rewrite or cast the expression.
"
Python rounding of random floats to nearest points on a 2D uniform mesh grid,"In [944]: a=np.random.multivariate_normal([0,0], [[l/2,0],[0,l/2]],10)
"
Crop out partial image using NumPy (or SciPy),"from matplotlib import pyplot as plt

fig, ax = plt.subplots(2, 2)

ax[0,0].imshow(img, cmap=plt.cm.gray)
ax[0,0].set_title('original')
ax[0,1].imshow(mask, cmap=plt.cm.gray)
ax[0,1].set_title('mask')
ax[1,0].imshow(masked, cmap=plt.cm.gray)
ax[1,0].set_title('masked original')
ax[1,1].imshow(trimmed, cmap=plt.cm.gray)
ax[1,1].set_title('trimmed original')

plt.show()
"
Perl regular expression \U,"re.search(""abc"".upper() + ""def"", var)
"
Disabling nose coverage report to STDOUT when HTML report is enabled?,"pip install nose-cov
"
Django : get the last item of manytomanyfield,"def .. :
    u = request.user
    conversation_id_list = Conversation.objects.filter(Q(creatorr=u)|Q(destinataire=u)).values_list('id', flat=True)
    message_list = list(()
    for id in conversation_id_list:
        last_message = MessagePerso.objects.filter(conversation_id=id).last()
        message_list.append(last_message)
        print(last_message.text)
"
Issue with my 'very simple' Python Calculator,"def load_screen():
    user_1 = int(input(""Please enter your first number.\n""))
    user_2 = int(input(""Now please enter your second number.\n""))
    command_home( user_1, user_2) # Okay command_home I took 2 inputs! 
                                  # Here they are work your magic!



def command_home(in1, in2): # Hey I need 2 varaibles to work, Ill call them in1 and in2.
                            # so based on the way command_home( user_1, user_2) is called
                            # in1 = user_1, in2 = user_2 
    command = input(""Now what would you like to do with these two numbers?\n"").lower()
    if command == ""add"":
        calc_add(in1, in2) #Okay, now i need to add my two inputs,
                           # but calc_add is another function it wont be able to see MY
                           # in1, in2 ...  i better pass them over as parameters.
    elif command == ""subtract"":
        calc_subtract()
    elif command == ""multiply"":
        calc_multiply()
    elif command == ""divide"":
        calc_divide()



def calc_add(user_input_1,user_input_2 ): # Okay now i know where to look for user_input_1 
                                          # and user_input_2, they will be passed to me
                                          # when someone calls me! Now i can find my varables
                                          # and i wont throw an error!
    add_result = (user_input_1 + user_input_2)
    print(add_result)
"
Loop through list until value is found then breaking?,"from itertools import takewhile, islice,chain

def groups(l, keys, i, n):
    tk = takewhile(lambda x: x != i, l)
    return (dict(zip(keys, chain(islice(tk, n - 1),(i,)))) for i in tk)
"
Is the expression math.sqrt() necessary?,"from math import *
"
Refactoring Index/Search View,"def pagination(request, objects, pages):
    paginator = Paginator(objects, pages)

    try:
        page = int(request.GET.get('page', '1'))
    except ValueError:
        page = 1

    try:
        results = paginator.page(page)
    except (EmptyPage, InvalidPage):
        results = paginator.page(paginator.num_pages)

    return results
"
regex replace from a list,"\begin{tabular}{|p{0.7in}|p{0.8in}|p{2.2in}|p{.9in}|p{2.6in}|p{1.6in}|}
6${}^{th}$ Math  \newline M\newline  & chapter1& 
6${}^{th}$ Math  \newline W \newline  & chapter2 & 
6${}^{th}$ Math  \newline  F \newline  & chapter3 &  
4${}^{th}$ Math  \newline M\newline  &  & chapter1.1  &
4${}^{th}$ Math \newline W\newline  &  & chapter1.2-3  & 
\end{tabular}
"
IPython and __doc__,"Help on package numpy:

NAME
    numpy

FILE
    /usr/lib64/python2.6/site-packages/numpy/__init__.py

DESCRIPTION
    NumPy
    =====

    Provides
      1. An array object of arbitrary homogeneous items
      2. Fast mathematical operations over arrays
      ...
"
Easy way to apply transformation from `pandas.get_dummies` to new data?,"import pandas as pd
df = pd.DataFrame({'cat':['a','b','c','d'],'val':[1,2,5,10]})
df1 = pd.get_dummies(pd.DataFrame({'cat':['a'],'val':[1]}))
dummies_frame = pd.get_dummies(df)
df1.reindex(columns = dummies_frame.columns, fill_value=0)
"
What does '*** Oldest frame' mean in ipdb?,"print(u)
"
Find closed shapes in image,"pixels = [[0, 1, 0, 0, 1, 1],
          [1, 0, 1, 1, 0, 1], 
          [1, 0, 1, 1, 0, 1],
          [1, 0 ,1 ,1 ,0, 1],
          [1, 0, 1 ,0 ,1, 1],
          [1, 0, 0, 1, 1, 1],
          [1, 1, 1, 1, 1, 1]]
pixelgroups = find_groups(pixels)
print_groups(7, 6, pixelgroups)
print(""closed: "" + str(pixelgroups.closed))
"
searching & comparing valuse in csv files with python,"Listed Company's English Name,Listed Company's Chinese Name,Stock Code,Listing Status,Director's English Name,Director's Chinese Name,Capacity,Position,Appointment Date (yyyy-mm-dd),Resignation Date (yyyy-mm-dd)  
C.P. Lotus Corporation,________,00122,Current,CHEARAVANONT Dhanin,___,Executive Director,,2009-12-31,
C.P. Lotus Corporation,________,00121,Current,CHEARAVANON Narong,___,Executive Director,,2001-02-01,  
C.P. Lotus Corporation,________,00121,Current,CHEARAVANONT Soopakij,___,Executive Director,CEO,2000-04-14,  
C.P. Lotus Corporation,________,00123,Current,DEANINO James,___,Pilot,,2009-06-25,
C.P. Lotus Corporation,________,00129,Current,GINGE Ivy,___,Dental Technician,,2010-07-27,
C.P. Lotus Corporation,________,00127,Current,ERATOR Jane,___,Engineer,,2005-12-04,
C.P. Lotus Corporation,________,00119,Current,FIELD Mary,___,Pastrycook,,2009-06-25,
"
How to decorate a GTK window like eg. the gnome-panel?,"#!/usr/bin/env python

import gtk

pixmap_rc = """"""
pixmap_path ""/home/foo/images""
style ""bar"" {
    bg_pixmap[NORMAL] = ""logo.svg""
} widget ""*foo"" style ""bar""
""""""

color_rc= """"""
style ""bar"" {
    bg[NORMAL] = ""Hot Pink""
} widget ""*foo"" style ""bar""
""""""

def main ():
    window = gtk.Window()
    window.set_decorated(False)
    window.connect(""destroy"", gtk.main_quit)

    window.set_name(""foo"")
    gtk.rc_parse_string(color_rc)

    window.show_all()
    gtk.main()

if __name__ == ""__main__"":
    main ()
"
Generating Heatmaps in Python,"probs = np.random.rand(200, 200)
heatmap(probs)
plt.show()
"
Limiting re.findall() to record values before a certain number. Python,"fdna == atgggatggtagatggatgggATGGGGTGA
find_ORF_seq(fdna)
['ATGGGATGGTAG', 'ATGGTAG', 'ATGGATGGGATGGGGTGA', 'ATGGGATGGGGTGA']
getSequences(fdna)
['ATGGGATGGTAG', 'ATGGATGGGATGGGGTGA']
"
"Anaconda - I have set up an environment, how do I use it?","pip install pybrain
"
Python pandas function applied to all pairwise combinations of rows,"np.random.seed(10)
dat = pd.DataFrame(np.random.randn(100, 100))

%%timeit
dat.corr().applymap(Pearson)

10 loops, best of 3: 118 ms per loop

%%timeit
stats = dict()

for l in combinations(dat.index.tolist(),2):
    stats[l] = pearsonr(dat.loc[l[0],:], dat.loc[l[1],:])

1 loops, best of 3: 1.56 s per loop
"
Placing 2D Array from PostgreSQL Database into 2d List Python using Django Interface,"import ast
q = DBReports.objects.all().filter(name__contains = name1)  
q = (q.values_list(columnName))
users_list = ast.literal_eval(q[0][0])
"
Defining and summing object in Python,"John 1863.91 535.09 3115.09
Greg 1237.2 348.43 2028.43
5143.52
"
Good algorithm for computing volume or surface area in python,"Ideal volume 14.1371669412
Coarse approximation 14.7969924812 Error 4.66731094565 %
VTK approximation 14.1954890878 Error 0.412544796894 %
"
How do I print a grid from a list of lists with numbered rows and columns,"def _print_board(game_state):
    print("" "".join(""{0:2d}"".format(i) if i else ""  "" # or 0:02d to pad with zero
                   for i in range(len(game_state[0]) + 1)))
    for i, row in enumerate(game_state, 1):
        print(""{0:2d}"".format(i), end="" "")
        print("""".join("" {0} "".format(col if col != NONE else ""."") for col in row))
"
extract text from xml documents in python,">>> import re
>>> exp = re.compile(r'<.*?>')
>>> with open('file.xml') as f:
...     lines = ''.join(line for line in f.readlines())
...     text_only = exp.sub('',lines).strip()
...
>>> if 'Harry Potter' in text_only:
...    print 'It exists'
... else:
...    print 'It does not'
...
It exists
"
wxPython: How do you specify the width of a specific column using one of the wx.sizer classes?,"objects[i].SetSize((width,height))
"
ipython to run a file before open in each session,"c.StoreMagics.autorestore = True
"
merging two pandas dataframes on nearest time stamp,"In [11]: df1 = df1.set_index(""time"")

In [12]: df2 = df2.set_index(""w_time"", drop=False)

In [13]: df1
Out[13]:
                       status
time
2015-02-02 08:00:00   on time
2015-02-02 09:00:00  canceled
2015-02-02 10:30:00   on time
2015-02-02 12:45:00   on time

In [14]: df2
Out[14]:
                     temp              w_time
w_time
2015-02-02 08:00:00    45 2015-02-02 08:00:00
2015-02-02 08:50:00    46 2015-02-02 08:50:00
2015-02-02 09:40:00    47 2015-02-02 09:40:00
2015-02-02 10:15:00    47 2015-02-02 10:15:00
2015-02-02 10:35:00    48 2015-02-02 10:35:00
2015-02-02 12:00:00    48 2015-02-02 12:00:00
2015-02-02 13:00:00    49 2015-02-02 13:00:00
"
"Script to convert ASCII chars to ""<Uxxx>"" unicode notation","Proof of Concept
$ echo ""abc"" | uni
<U0061><U0062><U0063>
"
Loading empty dictionary when YAML file is empty (Python 3.4),"config = yaml.load(config_file) or {}
"
Width of an arbitrary polygon,"center = sum(convexhullpoints) / len(convexhullpoints)
size = 2 * sum(abs(p - center) for p in convexhullpoints) / len(convexhullpoints)
"
"What is the Pythonic way of handling classes, modules, and packages with the same name?","import genelist
genelist.GeneList()
"
Alternative to multiple try/except statements to check if a field exists,"if 'gender' in json_dict:
    gender=json_dict['gender']

    if gender=='male':
        gender= unicode('M')
    elif gender=='female':
        gender=unicode('F')
else: pass# gender is not defined, NameError possible
"
SSH Server status in Python,"try:
    pf = file('/var/run/my_program.pid', 'r')
    pid = int(pf.read().strip())
    pf.close()
except IOError:
    pid = None

if pid:
   # Process is running.
"
Focus on current Screen Selenium,"<div id=""first_dialog""><input class="""" name=""title1"" type=""text""></div>
"
Summarizing dataframe into a dictionary,"In [46]: df.groupby('date')['level'].first().apply(np.ceil).astype(int).to_dict()
Out[46]: {'2015-10-27': 3, '2015-10-28': 0, '2015-10-29': 4}
"
BoxSizer issue: Not expanding to fit contents of StaticText,"mySizer = wx.BoxSizer(wx.VERTICAL)
"
python matplotlib multiple bars,"ax = plt.subplot(111)
w = 0.3
ax.bar(x-w, y,width=w,color='b',align='center')
ax.bar(x, z,width=w,color='g',align='center')
ax.bar(x+w, k,width=w,color='r',align='center')
ax.xaxis_date()
ax.autoscale(tight=True)

plt.show()
"
Silence the stdout of a function in Python without trashing sys.stdout and restoring each function call,"import contextlib
import sys
import cStringIO

@contextlib.contextmanager
def nostdout():
    save_stdout = sys.stdout
    sys.stdout = cStringIO.StringIO()
    yield
    sys.stdout = save_stdout
"
backward many to many Django query,"class tagList(generics.ListAPIView,APIView):
    model = tags
    serializer_class = getAllTagsDetailSerializer

    def get_queryset(self):
        key = self.request.QUERY_PARAMS.get('appKey', None)
        getTagName = self.request.QUERY_PARAMS.get('tagName', None)
        keyData = app.objects.filter(appKey=key).exists()    
        try:
            if keyData == True:
                return tags.objects.filter(tag=getTagName)
            else:
                raise exceptions.PermissionDenied
        except app.DoesNotExist:
            pass
"
using images from the web in python,"convert -quality 100 *.png maps.mov
"
How to query multiple Django models describing denormalized tables,"create or replace view jobinfo_by_person as
    select person.id as person_id, jobinfo.*
    from person inner join jobinfo on jobinfo.name = person.name;
create or replace view hobbies_by_person as
    select person.id as person_id, hobbies.*
    from person inner join hobbies on hobbies.name = person.name;
"
Django: Odd mark_safe behaviour?,"from django.utils.encoding import force_unicode
from django.utils.safestring import mark_safe

class Foo(object):
    def __unicode__(self):
        return mark_safe(""foo"")

foo = Foo()
print ""foo ="", type(foo)

ufoo = unicode(foo)
print ""ufoo ="", type(ufoo)

forced_foo = force_unicode(foo)
print ""forced_foo ="", type(forced_foo)


bar = mark_safe(""bar"")
print ""bar ="", type(bar)

forced_bar = force_unicode(bar)
print ""forced_bar ="", type(forced_bar)
"
different foreground colors for each line in wxPython wxTextCtrl,"rtc = wx.richtext.RichTextCtrl(self, style=wx.VSCROLL|wx.HSCROLL|wx.NO_BORDER)
rtc.BeginTextColour((255, 0, 0))
rtc.WriteText(""this color is red"")
rtc.EndTextColour()
rtc.Newline()
"
Python - sum variables from a text file,"with open(""numberGood.txt"") as f:
    print(sum(float(line) for line in f))
"
Retrieving nodes from index with transaction in neo4jrestclient,">>> from bulbs.neoj4server import Graph
>>> g = Graph()
>>> g.scripts.update('/path/to/gremlin.groovy')
>>> script = g.scripts.get('batch_load')
>>> params = dict(nodelist=your_node_list, label=""follows"")
>>> g.gremlin.execute(script, params)
"
change string during pyparsing,"def changeText(s,l,t):
    return ""boo"" + t[0]

expr = Literal(""A"").setParseAction(changeText) + ""B""
print expr.parseString(""A B"").asList()
"
Python function replacing itself in the module namespace,"def foo():
    x = 2
def bar():
    global x
    x = 3

x = 1
print(x) # --> 1
foo()
print(x) # --> 1
bar()
print(x) # --> 3
"
How do I to translate this json format into correct format that can be used pandas read_json(),"{u'IP': u'aaaa1', u'Domain': u'bbbb1', u'Time': u'cccc1', ..... },
"
Very basic string formatting not working (Python),"print(""""""Here are three other numbers.\
First number is {0:d}, second number is {1:d},
third number is {2:d}"""""" .format(7,8,9))
"
GQL - Select all parents where specific child is not in children,"class User(db.Model):
  username = db.StringProperty()

class Group(db.Model):
  users = db.ListProperty(db.Key)
"
Return values from a Python Entrez dictionary of dictionaries,"x <- getNodeSet(doc, ""//Gene-commentary_heading[.='Interactions']/../Gene-commentary_comment/Gene-commentary"" )

length(x)
[1] 64
x[1]
x[50]
"
How to assign a value to a variable when writing the value takes multiple lines (python),">>> x = (
... 'a very long string - part 1' +
... 'a very long string - part 2' +
... 'a very long string - part 3' )
>>> x
'a very long string - part 1a very long string - part 2a very long string - part 3'
>>> 
"
choosing between a class or function in edge programming case,"mymodule
|____
  |___  __init__.py
  |___  submodule.py
"
Is print the only way to display something in .py file,"In [1]: import numpy as np

In [2]: a = np.array([ 0,  1,  3, 10,  1,  0,  0,  3,  6])

In [3]: repr(a)
Out[3]: 'array([ 0,  1,  3, 10,  1,  0,  0,  3,  6])'
"
How can I select n items and skip m from ndarray in python?,"A.reshape(-1,10,A.shape[1])[:,:4].reshape(-1,A.shape[1])
"
Python: How can I use lxml objectify's iterchildren to get details of siblings which are in a different namespace,"from lxml import objectify    

obj2 =  lxml.objectify.parse('get_subscribers_result.xml')
root = obj2.getroot()

tag = '{http://example.com/123/ss/base/v1_0}subscriberDetail'

for subscriberDetail in (root.xpath('//ns2:subscriberDetail', namespaces={'ns2': 'http://example.com/123/ss/base/v1_0'})):
               print subscriberDetail.key
               print subscriberDetail.value               
               print ""*********************************""
"
Control TCP server in Python,"def testTCPClient(self):    
    j = lambda x: """".join(x)

    server = Connection("""", 5555)            
    server.start()
    client.run()
    sleep(3)
    data = j(server.new_data())
    self.assertTrue(""login"" in data)
    sleep(2)
    server.send(""login approve"")
    sleep(2)
    data = j(server.new_data())
    self.assertTrue(""after_login"" in data)
    server.send(""logout"")
    sleep(2)
    data = j(server.new_data())
    self.assertTrue(""received_logout"" in data)
    server.close()
    self.assertTrue(""disconnected"" in client.logs)
"
Delete a Variable that has been Pickled,"Python 2.7.10 (default, May 25 2015, 13:16:30) 
[GCC 4.2.1 Compatible Apple LLVM 5.1 (clang-503.0.40)] on darwin
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> import klepto
>>> d = klepto.archives.dir_archive('saveme', serialized=True, cached=False)
>>> d.keys()
['pickletools', 'dill', 'pik', 'd', '__builtins__', 'klepto', '__package__', '__name__', 'foo', 'pickle', '__doc__']
>>> for i,j in d.items():
...   globals()[i] = j       
... 
>>> foo(3)(4)
7
>>> 
"
Using XRC to create custom Dialog boxes,"self.EndModal(wx.ID_OK)
"
Sorting/Combining a list of lists,"def print_sorted(d, depth=0):
    if isinstance(d, dict):
        for k in sorted(d):
            print ""  "" * depth, k
            print_sorted(d[k], depth+1)
    else:
        print ""  "" * depth, d
print_sorted(result)
"
"re.split('[+ -]',f) or better stepping to partial derivatives",">>> s=""2x + 3y""
>>> s1=""2x + 3y""
>>> s2=""2x - 3y""
>>> re.split(r'[+-]',s1)
['2x ', ' 3y']
>>> re.split(r'[+-]',s2)
['2x ', ' 3y']
"
how to quickly check if an object is in a list in python,"main_object_set = set(main_object_list)

for o in main_object_list:
    obj_list = o.get_this_object_list()
    objs_in_main_list = main_object_set.intersection(obj_list)
    for i in objs_in_main_list:
        //do something with i
"
Creating a dictionary from csv,"highest_grade: 10.0
students with highest grade:
   Marie Curie
   Evelyn Stewart
"
Transpose list to rows of data,"data = ""196465702|91017022|['95592022', '96094942', '100920382']|91048702""
from ast import literal_eval
first, second, third, last = data.split(""|"")
third = literal_eval(third)
for item in third:
    print ""{}|{}|{}|{}"".format(first, second, item, last)
"
Renaming pandas data frame columns using a for loop,"df_names=('Home', 'Work', 'Park')
for df_name in df_names:
    df = globals()[df_name]
    df.columns = [col_name+'_{}'.format(df_name) for col_name in df.columns]
"
Constants in python?,"from MyModWithConstants import x
# and also we can do
import MyModWithConstants as MMWC

def somOtherFunc():
  dosomethingNew(x, MMWC.y)  
  ## x and MMWC.y both refer to things in the other file
"
Extract values with condition with xpath and python,"(/tr/td[contains(@class, 'cell_sa')][contains(@class, 'score')][contains(@class, 'bold')][count(./span[@class = 'aet']) > 0]/span[@class = 'aet'] | /tr/td[contains(@class, 'cell_sa')][contains(@class, 'score')][contains(@class, 'bold')][0 = count(./span[@class = 'aet'])])/text()
"
"Python - ""cannot perform reduce with flexible type"" when trying to use numpy.mean",">>> import pandas as pd
>>> df = pd.read_csv(""brainandbody.csv"", skipinitialspace=True)
>>> df
   Brain Weight  Body Weight
0         3.385         44.5
1         0.480         15.5
2         1.350          8.1
3       465.000        423.0
4        36.330        119.5
5        27.660        115.0
6        14.830         98.2
7         1.040          5.5
>>> df.mean()
Brain Weight     68.759375
Body Weight     103.662500
dtype: float64
"
Get folder name of the file in Python,"
os.path.dirname(path)
"
Faster operation reading file,"import timeit
import re

FILE_NAME = r'input.txt'

def re_approach():
    return len(set(re.findall(r'(?=(.{5}))', input[:-1])))

def iter_approach():
    return len(set([input[i:i+5] for i in xrange(len(input[:-6]))]))

with open(FILE_NAME, 'r') as fh:
    input = fh.read()

# verify that the output of both approaches is identicle
assert set(re.findall(r'(?=(.{5}))', input[:-1])) == set([input[i:i+5] for i in xrange(len(input[:-6]))])
print timeit.repeat(stmt = re_approach, number = 500)
print timeit.repeat(stmt = iter_approach, number = 500)
"
Python argparse: type conversion of a list of default arguments,"parser.add_argument('-s', '--sources'
    , dest = 'files'
    , default = [FileList('dir1'), FileList('dir2')] # exact file list
    , nargs = '*'
    , metavar = 'SOURCE'
    , action = ConcatAction
    , type = FileList
)
"
How to parse arguments in python 2.6 with prefix option as -f file.xml,"from optparse import OptionParser
parser = OptionParser()
parser.add_option(""-f"", ""--filename"", dest=""filename"",help=""file!"")
options, args = parser.parse_args()
print options.filename
"
Countdown function with two parameters,">>> for i in range(10, 0, -2): print i
... 
10
8
6
4
2
"
looking for an inverted heap in python,"def nsmallest(series, n, invert=lambda x: -1 * x):
    count = 0
    heap = []
    for e in series:
        if count < n:
            count += 1
            hp.heappush(heap, (invert(e), e))
        else:
            # keeps heap size fixed
            hp.heappushpop(heap, (invert(e), e))  
    # note: heap[0][1] is largest, remove inverted priorities
    return [h[1] for h in heap]
"
Find median of values based on multiple identifiers and add to row,"df.sort_values(['date', 'SKU', 'rank'])

    SKU       date  rank  median
460   A 2016-01-01     4    66.0
80    A 2016-01-01    29    66.0
400   A 2016-01-01    38    66.0
220   A 2016-01-01    64    66.0
480   A 2016-01-01    68    66.0
160   A 2016-01-01    69    66.0
200   A 2016-01-01    70    66.0
360   A 2016-01-01    86    66.0
280   B 2016-01-01    14    22.0
300   B 2016-01-01    30    22.0
380   C 2016-01-01    35    63.0
240   C 2016-01-01    46    63.0
440   C 2016-01-01    63    63.0
20    C 2016-01-01    69    63.0
340   C 2016-01-01    91    63.0
100   D 2016-01-01    32    59.0
40    D 2016-01-01    38    59.0
120   D 2016-01-01    59    59.0
320   D 2016-01-01    77    59.0
260   D 2016-01-01    94    59.0
0     E 2016-01-01    31    60.0
420   E 2016-01-01    35    60.0
140   E 2016-01-01    60    60.0
60    E 2016-01-01    64    60.0
180   E 2016-01-01    99    60.0
441   A 2016-01-02    35    52.0
281   A 2016-01-02    52    52.0
481   A 2016-01-02    71    52.0
341   B 2016-01-02    73    88.0
81    B 2016-01-02    81    88.0
..   ..        ...   ...     ...
418   D 2016-01-19    98    71.5
38    E 2016-01-19    50    54.0
458   E 2016-01-19    51    54.0
478   E 2016-01-19    57    54.0
18    E 2016-01-19    71    54.0
439   A 2016-01-20     9    45.0
499   A 2016-01-20    45    45.0
99    A 2016-01-20    63    45.0
279   B 2016-01-20    12    55.5
339   B 2016-01-20    29    55.5
459   B 2016-01-20    44    55.5
379   B 2016-01-20    53    55.5
319   B 2016-01-20    58    55.5
39    B 2016-01-20    84    55.5
299   B 2016-01-20    94    55.5
119   B 2016-01-20    98    55.5
199   C 2016-01-20    15    43.0
159   C 2016-01-20    43    43.0
479   C 2016-01-20    90    43.0
259   D 2016-01-20    12    33.0
419   D 2016-01-20    13    33.0
59    D 2016-01-20    15    33.0
139   D 2016-01-20    31    33.0
79    D 2016-01-20    33    33.0
19    D 2016-01-20    42    33.0
239   D 2016-01-20    46    33.0
399   D 2016-01-20    54    33.0
219   D 2016-01-20    63    33.0
179   E 2016-01-20    27    53.5
359   E 2016-01-20    80    53.5
"
Replace a substring of file name,"files = [] # list of tuple with old filename and new filename
for file in os.listdir(path):
    if file.endswith("".txt""):
        if file.find(""_ready"") > 0:
            counter = counter + 1
            newFileName = file.replace(""_ready"", ""_busy""))
            file = newFileName
            files.append((file, newFileName))
"
How to add words from a text file to a dictionary depending on the name?,"In [1]: run /tmp/spam.py

In [2]: c.keys()
Out[2]: [None, 'Abraham', 'Gregory', 'Sampson']

In [3]: c['Gregory'].most_common(10)
Out[3]: 
[('the', 7),
 ('thou', 6),
 ('to', 6),
 ('of', 4),
 ('and', 4),
 ('art', 3),
 ('is', 3),
 ('it', 3),
 ('no', 3),
 ('i', 3)]
"
Set constant translucency for background,"# value is a float .01 to .99
def set_alpha(image, value):
    array = pygame.surfarray.pixels_alpha(image)
    for x in xrange(array.shape[0]):
        for y in xrange(array.shape[1]):
            array[x][y] = int(array[x][y] * value)
"
Sklearn Multiclass Dataset Loading,"    import numpy as np
    from sklearn.preprocessing import MultiLabelBinarizer

    X = np.loadtxt('samples.csv', delimiter="","")
    y_aux = np.loadtxt('targets.csv', delimiter="","")
    y = MultiLabelBinarizer().fit_transform(y_aux)
"
Relative Strength Index in python pandas,"dUp= delta[delta > 0]
dDown= delta[delta < 0]
"
Formatting list data by table,"Group, select and replace max:
def replace_letter(group):
    letters = group.isin(['T', 'Q'])              # select letters
    group[letters] = int(group[~letters].max()) + 1  # replace by next max
    return group


>>> df['col'] = df.groupby('datatable').transform(replace_letter)
>>> df

     datatable   col
0    DatatableA  1
1    DatatableA  2
2    DatatableA  3
3    DatatableA  4
4    DatatableA  5
5    DatatableB  1
6    DatatableB  6
7    DatatableB  7
8    DatatableB  3
9    DatatableB  4
10   DatatableB  5
11   DatatableB  2
12   DatatableC  3
13   DatatableC  4
14   DatatableC  2
15   DatatableC  1
16   DatatableC  6
17   DatatableC  5
18   DatatableC  6
"
Split string based on regexp without consuming characters,"(?:      # The start of a non-capturing group
^|\W     # The start of the string or a non-word character (symbol)
)        # The end of the non-capturing group
\w*      # Zero or more word characters (characters that are not symbols)
"
Searching for tuples in python based on the first part,">>> entries_set = {Entry('foo', 'bar'), Entry('foo', 'baz')}
>>> entries_set
set([<Entry('foo', 'baz')>])
>>> Entry('foo', 'spam') in entries_set
True
"
Inherit/Extend Django Module or cram into same Module?,"class BaseTask(models.Model):
    # your fields goes here

    class Meta:
        abstract = True
"
Multi-threaded asyncio in Python,"import asyncio
from threading import Thread

loop = asyncio.new_event_loop()

def f(loop):
    asyncio.set_event_loop(loop)
    loop.run_forever()

t = Thread(target=f, args=(loop,))
t.start()    

@asyncio.coroutine
def g():
    yield from asyncio.sleep(1)
    print('Hello, world!')

loop.call_soon_threadsafe(asyncio.async, g())
"
Part of speech tagging and entity recognition - python,"defaultdict(<type 'int'>, {'JJ': 2, 'NN': 1, 'POS': 1, '.': 1, 'RB': 1, 'VBZ': 1, 'DT': 2, 'NNP': 1})
"
What do all the distributions available in scipy.stats look like?,"
plotMax = len(plotData)

for i, data in enumerate(plotData):
    w = abs(abs(data['hist'].index[0]) - abs(data['hist'].index[1]))

    # Display
    plt.figure(figsize=(10, 6))
    ax = data['pdf'].plot(kind='line', label='Model PDF', legend=True, lw=2)
    ax.bar(data['hist'].index, data['hist'].values, label='Random Sample', width=w, align='center', alpha=0.5)
    ax.set_title(data['title'])

    # Grab figure
    fig = matplotlib.pyplot.gcf()
    # Output 'file'
    fig.savefig('~/Desktop/dist/'+data['title']+'.png', format='png', bbox_inches='tight')
    matplotlib.pyplot.close()
"
How to remove punctuation from a string and remember the position of it from the string,"sentence = 'I? am. cal?led ,bob. Wh,at. is your .name?.'
... # above code
print(sentence) # => ""I? am. call?ed bob,. What .i,s your .name?.""
"
Scope of class variable with list comprehension,">>> [i for i in range(10)]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
>>> i
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
NameError: name 'i' is not defined
>>> i = 0
>>> [i for i in range(10)]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
>>> i
0
"
compare paranthesis in python,">>> def checkparen(inp):
...     return inp.count('(') == inp.count(')') and inp.count('[') == inp.count(']') and inp.count('{') == inp.count('}')
... 
"
"How do I access the properties of a many-to-many ""through"" table from a django template?","def group_details(request, group_id):
    group = get_object_or_404(Group, pk=group_id)
    return render_to_response('group_details.html',
                              {'group': group})
"
Python: change numpy array with NaNs to array with numbers and '--',">>> import numpy as np
>>> a = np.array([ 8.08970226,  np.NAN,  np.NAN,  8.30043545,  np.NAN,  np.NAN,   np.NAN,  np.NAN])
>>> np.ma.fix_invalid(a)
masked_array(data = [8.08970226 -- -- 8.30043545 -- -- -- --],
             mask = [False  True  True False  True  True  True  True],
       fill_value = 1e+20)

>>> print _
[8.08970226 -- -- 8.30043545 -- -- -- --]
"
Replicating Javascript bitwise operation in Python,"-1469587627
"
Python argparse - creating subcommands with no labels,"subparsers = parser.add_subparsers(dest='subparser')
"
Difference between setting an attribute and calling an in-place mutating method?,"class my_ndarray(np.ndarray):
    def __setattr__(self, name, value):
        print '__setattr__ called with name={}, value={}'.format(name, value)
        super(my_ndarray, self).__setattr__(name, value)

a_ = my_ndarray(a.shape)
a_[:] = a
"
Video created with ffmpeg won't play in video player,"          '-b:v', '64k',
"
How to find if consensus on answer,">>> from collections import Counter
>>> Counter(x).most_common(1)[0]
(('http://imdb.com/title/tt0926129/', None, None), 2)
>>> Counter(y).most_common(1)[0]
((1,), 2)
>>> Counter(z).most_common(1)[0]
((2,), 1)
"
Pb in while with equal,">>> a = range(10)
>>> b = a
>>> id(b)
140597647738424
>>> id(a)
140597647738424
>>> a.remove(1)
>>> b
[0, 2, 3, 4, 5, 6, 7, 8, 9]
>>> a
[0, 2, 3, 4, 5, 6, 7, 8, 9]
"
How to check if the individual items in a tuple are not in list,"while len(myList) <= 4:
    p = choice(T)
    if not any(i in myList for i in p):
        myList.extend(p)

>>> myList
[1, 2, 5, 6, 3, 4]
"
Best way to get 'hrefs' from CSS selector in BeautifulSoup?,"['/NY0239708001.html']
['/NY0239709001.html', '/NY0239709002.html', '/NY0239709003.html', '/NY0239709004.html']
['/NY0239706001.html', '/NY0239706002.html', '/NY0239706003.html', '/NY0239706004.html']
['/NY0239707001.html', '/NY0239707002.html', '/NY0239707003.html', '/NY0239707004.html', '/NY0239707005.html']
['/NY0239705001.html', '/NY0239705002.html', '/NY0239705003.html', '/NY0239705004.html']
"
Extract a row in html file without the html tags,"import re
from BeautifulSoup import BeautifulSoup

html= '''
<table id=""cos"" width=""500"" cellpadding=""3"" cellspacing=""0"" border=""1"">
  <tr>
    <th>Company Name</th>
    <th>CIK Number</th>
    <th>SIC Code</th>
  </tr>
  <tr valign=""top"">
    <td>A CONSULTING TEAM INC</td>
    <td align=""right"">1040792</td>
    <td align=""right"">7380</td>
  </tr>
  <tr valign=""top"">
    <td>A J&amp;J PHARMA CORP</td>
    <td align=""right"">1140452</td>
    <td align=""right"">9995</td>
  </tr>
</table>
'''

soup = BeautifulSoup(html)
table = soup.find(""table"", {""id"":""cos""})
td = table.find('td', text='A J&amp;J PHARMA CORP')
# ^ This return text node, not td.
print(td.parent.parent.findAll('td')[1].string)
"
How can I pythonically print and write the same string (two operations on one object),"class Tee(object):
    """"""A file-like that writes to all the file-likes it has.""""""

    def __init__(self, *files):
        """"""Make a Tee that writes to all the files in `files.`""""""
        self._files = files

    def write(self, data):
        """"""Write `data` to all the files.""""""
        for f in self._files:
            f.write(data)
"
Match lists and write result to new list,"dict1 = {item[0]: item for item in list1}
dict2 = {item[0]: item for item in list2}
print [dict2.get(item, dict1.get(item)) for item in dict1.viewkeys() | dict2]
"
Pandas Dataframe Iterating,"np.random.seed(0)
genes.iloc[:2] *= (1 + np.random.random([2, 4]) / 100)
genes.iloc[2:] *= (1 + np.random.random([3, 4]))
"
How to plot Multiple Hysteresis loops on polar grid in Python/Matlab?,"close all;clear all;        % get rid off variables and figures
N=12;                       % number of hysteresis loops
HystX=zeros(N,100);         % X-values for loops
HystY=HystX;                % Y-values for loops
TempH=2*pi()*[0:0.01:1];    % Base for loops' content
TempV=2*pi()*[0:1/N:1-1/N]; % Phase lead to differ the loops; position of the loop in axes
%% Calclate the loops' cooordinates
for ii=1:N
  for jj=1:101
    HystX(ii,jj)=0.1*cos(TempH(jj));
    HystY(ii,jj)=0.1*sin(TempH(jj)+TempV(ii));
  end
end

%% Plot the content oi polar axes
polar(0,2)
hold on
polar(TempH,abs(sin(TempH)))
% set(gca,'visible','on')

%% Plot the hysteresis loops.
for ii=1:12
  line('xdata',HystX(ii,:)+(1.5*cos(TempV(ii))),...
       'ydata',HystY(ii,:)+(1.5*sin(TempV(ii))))
end
"
"Summing each 3x3 window of a M*N matrix, into a M/3*N/3 matrix with numpy",">>> arr = np.arange(108).reshape(9, 12)
>>> rows, cols = arr.shape
>>> arr.reshape(rows//3, 3, cols//3, 3).sum(axis=(1, 3))
array([[117, 144, 171, 198],
       [441, 468, 495, 522],
       [765, 792, 819, 846]])
"
"In Pyramid, using traversal, how do create dynamic urls?","    config.add_view('myapp.views.color',
                context='myapp:resources.ColorCategory', name='',
                renderer='myapp:templates/color.mak')

    config.add_view('myapp.views.size',
                context='myapp:resources.SizeCategory', name='',
                renderer='myapp:templates/size.mak')
"
How do I read a file to a list in python?,"map(lambda x:map(int,x),zip(*zip(*csv.reader(open(""my_file.txt""),delimiter="" ""))[1:]))
"
Django counter in loop to index list,"x = [1, 2, 3]
y = [4, 5, 6]
zipped = zip(x, y)
"
wxPython: Problems with GridBagSizer,"  for i in range(11):
      grid.AddGrowableCol(i)
"
How to get input in Python 2.7?,"print(""test"")
"
how to make a efficient filter in python,"with open(""firstfile"") as f:
    matched_rows = [ln for ln in f if ln.split(',')[0] in valid_ids]
"
C# parse and change strings in yaml,"receipt:             ###Oz-Ware Purchase Invoice###
date:                ###2007-08-06###
customer:
    given:           ###Dorothy###
items:
-   part_no:         ###A4786###
    descrip:         ###Water Bucket (Filled)###
-   part_no:         ###E1628###
    descrip:         ###High Heeled ""Ruby"" Slippers###
    size:            ###8###
bill-to:             ###&id001###
    street: |
        ###123 Tornado Alley
        Suite 16###
    city:            ###East Centerville###
    state:           ###KS###
ship-to:             ###*id001###
specialDelivery: >
    ###Follow the Yellow Brick Road to the Emerald City.###
"
How to paginate a filtered queryset in listview,"from django import forms
"
Reproduce the unix cat command in python,"import shutil
with open('command.fort.13', 'wb') as outFile:
    with open('command.info', 'rb') as com, open('fort.13', 'rb') as fort13:
        shutil.copyfileobj(com, outFile)
        shutil.copyfileobj(fort13, outFile)
"
Initializing multiple python dictionaries to the same keynames and values,"template_dict = {'HF': 0, 'NHF': 0, 'TF': 0, 'HM': 0, 'NHM': 0, 'TM': 0}

TRI_1,TRI_2={},{}
TRI_1.update(template_dict)
TRI_2.update(template_dict)
print TRI_1,TRI_2
{'TF': 0, 'NHF': 0, 'HM': 0, 'NHM': 0, 'HF': 0, 'TM': 0} {'TF': 0, 'NHF': 0, 'HM': 0, 'NHM': 0, 'HF': 0, 'TM': 0}
"
Using asyncore to create interactive sessions with client/server model,"import sys

from twisted.internet.task import react
from twisted.internet.endpoints import clientFromString
from twisted.internet.defer import Deferred, inlineCallbacks
from twisted.internet.protocol import Factory
from twisted.internet.stdio import StandardIO

from twisted.protocols.basic import LineReceiver
from twisted.internet.fdesc import setBlocking

class HubClient(LineReceiver):
    def __init__(self, name, output):
        self.name = name
        self.output = output

    def lineReceived(self, line):
        self.output.transport.write(line + b""\n"")

    def connectionMade(self):
        self.sendLine(""identify {}"".format(self.name).encode(""utf-8""))

    def say(self, words):
        self.sendLine(""say {}"".format(words).encode(""utf-8""))

class TerminalInput(LineReceiver, object):
    delimiter = ""\n""
    hubClient = None
    def lineReceived(self, line):
        if self.hubClient is None:
            self.output.transport.write(""Connecting, please wait...\n"")
        else:
            self.hubClient.sendLine(line)

@inlineCallbacks
def main(reactor, name, connect=""tcp:localhost:4321""):
    endpoint = clientFromString(reactor, connect)
    terminalInput = TerminalInput()
    StandardIO(terminalInput)
    setBlocking(0)
    hubClient = yield endpoint.connect(
        Factory.forProtocol(lambda: HubClient(name, terminalInput))
    )
    terminalInput.transport.write(""Connecting...\n"")
    terminalInput.hubClient = hubClient
    terminalInput.transport.write(""Connected.\n"")
    yield Deferred()

react(main, sys.argv[1:])
"
Xml parsing with Python using recursion. Problem with return value,"# Recursive case: node has one or more child
if len( children ) >= 1 :
    # Loop through all the children
    for child in children:
        # call to recursion function
        getCoords( child, searchNode )
"
What is most efficient way of setting row to zeros for a sparse scipy matrix?,">>> print 'elapsed %.5f seconds' % evaluate(334863)
elapsed 0.53054 seconds
"
How to count frequency of multiple combination of value in Python,"listOfItems = [['A','A','A'],['A','B','C'],['A','A','A'],['A','B','B'],['A','B','C']]
setOfItems = []
newListOfItems = []
for item in listOfItems:
    if item in setOfItems:
        continue
    setOfItems.append(item)
    temp = list(item)
    occurence = listOfItems.count(item)
    temp.append(occurence)
    newListOfItems.append(temp)

print newListOfItems
"
Begineer's sorting with tuples,"with open('Exchange.txt') as f:
    lines = [x.strip().split("","") for x in f.readlines()]
    #reverse = True for descending sorted order
    lines.sort(key=lambda x: float(x[-1]), reverse=True)
    print(lines)
"
Create a Dendogram from Genome," CLUSTAL 2.1 Multiple Sequence Alignments


Sequence format is Pearson
Sequence 1: Species_A     50 bp
Sequence 2: Species_B     50 bp
Sequence 3: Species_C     50 bp
Sequence 4: Species_D     50 bp
Sequence 5: Species_E     50 bp
Start of Pairwise alignments
Aligning...

Sequences (1:2) Aligned. Score:  90
Sequences (1:3) Aligned. Score:  94
Sequences (1:4) Aligned. Score:  88
Sequences (1:5) Aligned. Score:  84
Sequences (2:3) Aligned. Score:  90
Sequences (2:4) Aligned. Score:  84
Sequences (2:5) Aligned. Score:  78
Sequences (3:4) Aligned. Score:  94
Sequences (3:5) Aligned. Score:  82
Sequences (4:5) Aligned. Score:  82
Guide tree file created:   [C:\Users\BioGeek\Documents\temp\my_sequences.dnd]

There are 4 groups
Start of Multiple Alignment

Aligning...
Group 1: Sequences:   2      Score:912
Group 2: Sequences:   2      Score:921
Group 3: Sequences:   4      Score:865
Group 4: Sequences:   5      Score:855
Alignment Score 2975

CLUSTAL-Alignment file created  [C:\Users\BioGeek\Documents\temp\my_sequences.aln]
"
Python Nose: Log tests results to a file with Multiprocess Plugin,"$nosetests --processes 4 &> output.txt
"
multiple list to tuple,"(4, 5, (7, (3,), 4), 8)
"
unable to iterate tuple in python 2.7,"lists = [tuple(s.split(',')) for s in mastertup]

print(lists)
# Output
[('0101AA', 'MTS', 'DL'), ('03F0', 'MTS', 'DL'), ('YG', 'MTS', 'GJ'), ('YK', 'MTS', 'KO'), ('YL', 'MTS', 'KL'), ('98765', 'MTS', 'RJ'), ('9234', 'MTS', 'TN'), ('919136', 'MTS', 'WB'), ('YW', 'MTS', 'UPW'), ('YX', 'MTS', 'KT')]
"
Joining same-key dictionaries into a dataframe in pandas,"In [40]: df
Out[40]: 
   d1  d2
a   1   3
b   2   5
"
passing unicode strings from django to javascript,"var your_data = {{ json_data_string }};
"
Select and sort integers/strings from a text file in Python,"# function which returns avg mark given the name  
avg_mark = lambda name:sum(s[name])/len(s[name])
for i in sorted(s.keys(),key=avg_mark,reverse=True):
    print i,avg_mark(i)
"
Where's Pyglet mainloop?,"pyglet.clock.schedule_interval(update, 1/120.0)
"
Calculating the gap between pairs of twin primes in python,"[3, 0, 4, 4, 10, 10, 16, 10, 28, 4, 28, 139]
"
Get the list index range of a list depending on the values,"[(0, 2), (2, 7), (7, 10), (10, 16), (16, 19), (19, 23)]
"
Can I check if a value was supplied by the default or by the user?,"args.path = next(val for val in 
                 [args.path, cfg.path, DEFAULT_PATH]
                 if val is not None)
"
Python get all files from a directory Error,"python yourscript.py ""/usr/local/pub/tmh/Reuters/*.sgm""
"
Finding and Replacing all Values inside of entries within a List,"[tuple(d.get(x,x) for x in outer_tup) for outer_tup in li]
"
Turn dataframe into frequency list with two column variables in Python,"In [24]: pd.concat([g[""comp""].value_counts().unstack(1), g[""precedingWord""].value_counts().unstack(1)])
Out[24]:
          a  few  lal  lel  lil  some  the
node
banana  NaN  NaN    1    2  NaN   NaN  NaN
coconut NaN  NaN    1    1    1   NaN  NaN
banana    2  NaN  NaN  NaN  NaN   NaN    1
coconut NaN    1  NaN  NaN  NaN     1    1

In [25]: pd.concat([g[""comp""].value_counts().unstack(1), g[""precedingWord""].value_counts().unstack(1)]).fillna(0)
Out[25]:
         a  few  lal  lel  lil  some  the
node
banana   0    0    1    2    0     0    0
coconut  0    0    1    1    1     0    0
banana   2    0    0    0    0     0    1
coconut  0    1    0    0    0     1    1
"
Count lines in a file,"v1
v1
v1
v2
v2
v3
v1
"
Numerical Differenciation as Matrix-Vector Product,"array([[ 1., -2.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
       [ 1., -2.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
       [ 1., -2.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
       [ 1., -2.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
       [ 1., -2.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
       [ 1., -2.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
       [ 1., -2.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
       [ 1., -2.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
       [ 1., -2.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]])
"
Python code that needs some overview,">>> [str(random.randint(1,60)) for _ in range(6)]
['55', '54', '15', '46', '42', '37']
"
How to eliminate duplicate list entries in Python while preserving case-sensitivity?,"In [43]: wordset = collections.OrderedDict()

In [44]: wordset = collections.OrderedDict.fromkeys(words)

In [46]: [item for item in wordset if item.istitle() or item.title() not in wordset]
Out[46]: ['Hello', 'world', 'Poland']
"
Access class variables with same function,"class State:
    def __init__ (self):
        self.rate = 0
        self.wage = 0

    def apply (self, exposure):
        setattr(self, exposure, getattr(self, exposure) - 1)
        return getattr(self, exposure)
"
Replace a list item with the value of the item stored in dictionary in python,"map(b.get, a)
"
Float to Real48,"long raw = (negative ? 1 : 0);
raw = (raw << 39) | (mantissa >> 13);
raw = (raw << 8) | ((exponent + 129) & 0xFF);
"
"How to skip entering a ""return"" in the program in Python","echo ""/n"" > python ../../run.py
"
Convert list into array dtype=int64 in Python,">>> pprint(b)
[array([0], dtype=int64),
 array([1], dtype=int64),
 array([2], dtype=int64),
 array([3], dtype=int64),
 array([4], dtype=int64),
 array([5], dtype=int64),
 array([6, 9], dtype=int64),
 array([7], dtype=int64),
 array([8], dtype=int64),
 array([6, 9], dtype=int64)]
"
python advance for loop,"data = '''""this"",""is"",""a"",""test""'''
"
Merge all .txt files into one text file and alphabetise that text file,"lines = set(chain.from_iterable(open(f, 'rU') for f in glob('./files/*.??')))

with open('listTogether.txt', 'w') as out:
    out.writelines(sorted(lines))
"
"What is the difference between Ruby and Python versions of""self""?","c=C.new

c.instance_method
#=> instance_method
C.class_method
#=> class_method
"
Pycharm and sys.argv arguments,"['/home/jim/Desktop/pythonForlder/test.py', 'file1.txt', 'file2.txt']
"
Python random numbers loop,"from random import randint
a = []
for _ in range(100):
    b = 0
    c = set()
    while len(c) < 5:
        c.add(randint(1, 5))
        b += 1
    a.append(b)
d = round(sum(a)/len(a))
print(""{}\nAverage loops: {}"".format(c, d))
"
How to randomize all the items in a matrix in python,"for columns in rows:
"
Scraping with BeautifulSoup and multiple paragraphs,"paras = ["""".join(x.findAll(text=True)) for x in span.findAllNext(""p"")]
"
DSA key forwarding using Paramiko?,"[SEND   ] >> hostname
[RECEIVE] << [root@firstserver ~]# hostname ; echo CLIENT_EXPECT_CMD_OK
[RECEIVE] << firstserver.mydomain.fr
[SEND   ] >> ssh root@secondserver hostname
[RECEIVE] << [root@firstserver ~]# ssh root@secondserver hostname ; echo CLIENT_EXPECT_CMD_OK
[RECEIVE] << secondserver.mydomain.fr
"
how to search values in a file and replace,"list_to_search =['TRC_BTM', 'TRC_HCI', 'TRC_L2CAP']
myDict = {'TRC_BTM': '6', 'TRC_HCI': '6', 'TRC_L2CAP': '6'}

filename ='file.conf'

with open(filename, 'rb+') as f:

    while True:         
        line = f.readline()
        if not line: break          
        for key in list_to_search:
            if key in line:
                f.seek(-len(line),1)
                f.write(key + '=' + myDict[key] + '\n')
                f.flush()
"
Getting Valgrind to detect memory leaks from C++ program called by Python Script:,"subprocess.call(""valgrind --track-origins=yes --leak-check=full -v ./a.out"")
"
Understanding performance difference,"
    def __iter__(self):
        'od.__iter__()  iter(od)'
        # Traverse the linked list in order.
        root = self.__root
        curr = root[1]                                  # start at the first node
        while curr is not root:
            yield curr[2]                               # yield the curr[KEY]
            curr = curr[1]                              # move to next node

    def iteritems(self):
        'od.iteritems -> an iterator over the (key, value) pairs in od'
        for k in self:
            yield (k, self[k])
"
Django REST serializer and extra attributes from custom model fields,"from rest_framework.metadata import SimpleMetadata
from rest_framework.serializers import ModelField
from pbweb.models import RsTestField


class MyMetadata(SimpleMetadata):
    def get_field_info(self, field):
        field_info = super(MyMetadata, self).get_field_info(field)
        # I will add the info field only for RsTestField-ModelField
        if isinstance(field, ModelField) and isinstance(field.model_field, RsTestField):
            # access your info attribute HERE
            field_info['info'] = field.model_field.info
        return field_info
"
Resample time-series of position evenly in time,"from scipy.interpolate import interp1d
f_lon = interp1d(t, lon)
f_lat = interp1d(t, lat)
"
Scipy: Do sparse matrices support advanced indexing?,">>> a = scipy.sparse.rand(100,100,format='coo')
>>> a[2:5, 6:8]
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
TypeError: 'coo_matrix' object has no attribute '__getitem__'
"
"I want to write the 'Class_Scores' to a csv file in rows(Name on one side score on the other), how do I do that?","In [3]: str(Class_Scores)
Out[3]: ""[['James', 1], ['Frank', 2], ['Mark', 3]]""
"
"In Pika or RabbitMQ, How do I check if any consumers are currently consuming?","if len(self._channel.consumer_tags) == 0:
        LOGGER.info(""Nobody is listening.  I'll come back in a couple of minutes."")
        ...
"
split a 256 bit hash into 32 bit prefix in python,"hash_obj.digest()[:4]
"
Python code structure & convention - Creating a elements for a list with a loop,"integers = [n for n in range(3, limit+1) if n % 2]
integers.insert(0, 2)
"
How to get the indexes of column and row in a 2-dimensional matrix(list) that have the most given elements in using numpy in python,"In [74]: (a == elem).sum(axis=1).argmax()
Out[74]: 1
"
Python replace spaces in string iteratively,"from itertools import product

def dashed_combos(inputstring):
    words = inputstring.split()
    for combo in product(' -', repeat=len(words) - 1):
        yield ''.join(w for pair in zip(words, combo + ('',)) for w in pair)
"
Merge dictionaries with key combinations,"{(9, 0): 3, (7, 0): 1003, (9, 1): 4, (7, 1): 1004, (1, 0): 102, (1, 1): 104}
"
Scraperwiki Python Loop Issue,"{'url': '/webassets/kpna/catalog/pdf/en/1012741_4.pdf', 'title': 'Rough In/Spec Sheet'}
{'url': '/webassets/kpna/catalog/pdf/en/1012741_2.pdf', 'title': 'Installation and Care Guide with Service Parts'}
{'url': '/webassets/kpna/catalog/pdf/en/1204921_2.pdf', 'title': 'Installation and Care Guide without Service Parts'}
{'url': '/webassets/kpna/catalog/pdf/en/1011610_2.pdf', 'title': 'Installation Guide without Service Parts'}
"
List slicing and finding second highest value python,"bash-3.2$ python3 test.py
Enter a number >= 0. Enter -1 to end input: 2
Enter a number >= 0. Enter -1 to end input: 7
Enter a number >= 0. Enter -1 to end input: 4
Enter a number >= 0. Enter -1 to end input: 9
Enter a number >= 0. Enter -1 to end input: 3
Enter a number >= 0. Enter -1 to end input: 1
Enter a number >= 0. Enter -1 to end input: 6
Enter a number >= 0. Enter -1 to end input: 4
Enter a number >= 0. Enter -1 to end input: 2
Enter a number >= 0. Enter -1 to end input: 8
Enter a number >= 0. Enter -1 to end input: 4 
Enter a number >= 0. Enter -1 to end input: 2
Enter a number >= 0. Enter -1 to end input: 4
Enter a number >= 0. Enter -1 to end input: 3
Enter a number >= 0. Enter -1 to end input: 7
Enter a number >= 0. Enter -1 to end input: -1
Enter a starting location: 2
Enter a lenghth: 12
Second highest value in  [4, 9, 3, 1, 6, 4, 2, 8, 4, 2, 4, 3] is  8
bash-3.2$
"
Pros and cons of using return (yield from some_function()),"@asyncio.coroutine
def init(loop):
    return loop.create_server(web.Application().make_handler(), '0.0.0.0', 8080)
"
Smooth a curve in python with no error at the boundaries?,"import numpy as np
import matplotlib.pyplot as plt
from scipy.ndimage import gaussian_filter1d

x, y = np.loadtxt('spectrum.dat').T

# Smooth with a guassian filter
smooth = gaussian_filter1d(y, 10)

fig, ax = plt.subplots()
ax.loglog(x, y, color='black')
ax.loglog(x, smooth, color='red')
plt.show()
"
Creating inmutable types in Python using __new__(),">>> class MyObject(object):
...     __slots__ = []
... 
>>> x = MyObject()
>>> x.__dict__
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
AttributeError: 'MyObject' object has no attribute '__dict__'
"
write recursive Parser with pyparsing,"package_name = identifier | (package_name ""."" identifier )
"
Calculating the sum of aggregate query set,"total_list = plan.investment_set.filter(
    maturity_date__gte= '%s-1-1' % current_year
).aggregate(Sum('maturity_amount'))
"
"python: combination of lists in dict, with various size of list","{'params5': 7, 'params1': 1, 'params3': 3}
{'params5': 8, 'params1': 1, 'params3': 3}
{'params5': 7, 'params1': 1, 'params3': 4}
{'params5': 8, 'params1': 1, 'params3': 4}
{'params5': 7, 'params1': 1, 'params3': 5}
{'params5': 8, 'params1': 1, 'params3': 5}
{'params5': 7, 'params1': 1, 'params3': 6}
{'params5': 8, 'params1': 1, 'params3': 6}
{'params5': 7, 'params1': 2, 'params3': 3}
{'params5': 8, 'params1': 2, 'params3': 3}
{'params5': 7, 'params1': 2, 'params3': 4}
{'params5': 8, 'params1': 2, 'params3': 4}
{'params5': 7, 'params1': 2, 'params3': 5}
{'params5': 8, 'params1': 2, 'params3': 5}
{'params5': 7, 'params1': 2, 'params3': 6}
{'params5': 8, 'params1': 2, 'params3': 6}
"
Accessing specific value in a list of values,">>> from collections import namedtuple
>>> def parts(s):
        Item = namedtuple('Item', ('name', 'price', 'quantity', 'bought'))
        return Item(*[x.strip('|') for x in s.split()])


>>> parts(d['153'])
Item(name='T-shirt', price='200', quantity='0', bought='0')
>>> parts(d['153']).price
'200'
"
How do you iterate tuple values in a dictionary for django context,"titles = ('Hello', 'Umbrella')
artists = ('Adele', 'Rihanna')
songs = {'titles_artists': zip(titles, artist)}
"
What is the common practice for white labeling a Django site?,"TEMPLATE_CONTEXT_PROCESSORS = (
    ""django.contrib.auth.context_processors.auth"",
    ...
    ""context_processors.whitelabel_processor"",
"
Why does the parsing of csv file not break things into their 'logical' order?,"import StringIO
import csv
import requests

r = requests.get('http://www.twilio.com/resources/rates/international-sms-rates.csv')
reader = csv.DictReader(StringIO.StringIO(r.text))
row = next(reader) # get the next row
print(row)
"
Multiple instances of mock object,"import mock

class A:
    def __init__(self, name):
        self.name = name

    def get_name(self):
        print(""hi "" + self.name)
        return self.name


class B:
    def __init__(self):
        self.a_map = {}

    def get_all_a_values(self, names):
        for name in names:
            a = A(name)
            self.a_map[a] = a.get_name()


def side_effect(name):
    mm = mock.MagicMock()
    mm.get_name.return_value = name
    return mm

with mock.patch('__main__.A') as mockA:
    b = B()
    mockA.side_effect = side_effect
    names = ['person0', 'person1', 'person2', 'person3', 'person4']
    b.get_all_a_values(names)
    print(b.a_map)
    assert len(b.a_map) == 5
"
How to use index to assign address and formula to arrays?,"xs = np.arange(3)  # -> array([0, 1, 2])
f(xs)              # -> array([5, 7, 9])
"
Python: How does inheritance of __slots__ in subclasses actually work?,">>> class NoSlots(object): pass
... 
>>> n = NoSlots()
>>> class WithSlots(object): __slots__ = 'a', 'b', 'c'
... 
>>> w = WithSlots()
>>> n.a = n.b = n.c = 23
>>> w.a = w.b = w.c = 23
>>> sys.getsizeof(n)
32
>>> sys.getsizeof(w)
36
"
Pythonic Way to compare two unordered lists by attributes,"list1 = [(i.CRC, basename(i.filename)) for i in old.infolist()]
list2 = [(i.CRC, basename(i.filename)) for i in new.infolist()]
"
Python : Run a script within a loop?,"import whatever

def main(arg1):
    # routine to be run

if __name__=='__main__':
    sys.exit(main(sys.argv[1]))
"
Getting the return value of functions passed in as variables,">>> func1 = lambda P, Q: (not P) or (not Q)
>>> func2 = lambda P, Q: not(P and Q)
>>> logical_equiv(func1, func2, True, False)
True
"
Read first bytes of open file in Python,"os.pread(f.fileno(), 2, 0)
"
Split a single column into two,"John    someData1
        someData2
        SomeData3

Mike    someData1
        someData2

Ford    someData1
        someData2
        SomeData3
        someData4
        someData5
        SomeData6
"
Check if a number is in a range of a list,"names = ['Andrea','21','Sophie',16]
people = zip(names[::2], names[1::2])
# people is now: [('Andrea', '21'), ('Sophie', 16)]
"
Editing values in a pandas dataframe using data from another part of the dataframe,"x.loc[index1, 3] = x.loc[index2, 2]
"
how to implement this code using loops in bash or python,"#!/bin/bash

copy_the_files() { sleep 5; kill -s USR1 $$; }
progress() { while :; do sleep 1; printf .; done; }
copy_the_files &
progress &
trap 'kill $!; echo' USR1
wait
"
Circle Clicking game simple python,"def main():
    win= GraphWin(""lab12"",500,500)
    score=0
    c,x,y = draw_circle(win)
    while score < 10:
        mouseClick2=win.getMouse()
        if mouseClick2.y >= y-50 and mouseClick2.y <= y +50 and mouseClick2.x >= x-50 and mouseClick2.x <= x+50:
            score=score + random.randint(0,5)
        c,x,y = draw_circle(win, c)

    print ""you won""
    print ""your final score is, {0}"".format(score)
"
Algorithm to extract network info from ifconfig (ubuntu),">>> re.findall(r'^(\S+).*?inet addr:(\S+).*?Mask:(\S+)', ifconfig, re.S | re.M)
[('eth0', '192.168.98.157', '255.255.255.0'), ('lo', '127.0.0.1', '255.0.0.0')]
"
How to transform data with sliding window over time series data in Pyspark,"def sliding(rdd, n):
    assert n > 0
    def gen_window(xi, n):
        i, x = xi
        return [(i - offset, x) for offset in xrange(n)]

    return (
        rdd.
        zipWithIndex(). # Add index
        flatMap(lambda xi: gen_window(xi, n)). # Generate pairs with offset
        groupBy(lambda ix: ix[0]). # Group to create windows
        # Sort values to ensure order inside window and drop indices
        mapValues(lambda vals: [x for (i, x) in sorted(vals)]).
        sortByKey(). # Sort to makes sure we keep original order
        values(). # Get values
        filter(lambda x: len(x) == n)) # Drop beginning and end
"
Use a variable string to name another variable (Python),"{'name': 'dev870', 'prop_1': 'drain', ..}
"
Django self-referential foreign key,"parentId = models.ForeignKey(""self"")
"
PYTHON: Searching two files for common lines and collecting their contents into set,"1,2,4,6
2,3,6,5
3,8,9,2
4,9,6,9
3,5,2,3
6,2,7,3
"
"Python, unit-testing and mocking imports","class ImportWrapper(object):
    def __init__(self, real_import):
        self.real_import = real_import

    def wrapper(self, wantedModules):
        def inner(moduleName, *args, **kwargs):
            if moduleName in wantedModules:
                print ""IMPORTING MODULE"", moduleName
                self.real_import(*args, **kwargs)
            else:
                print ""NOT IMPORTING MODULE"", moduleName
        return inner

    def mock_import(self, moduleName, wantedModules):
        __builtins__.__import__ = self.wrapper(wantedModules)
        try:
            __import__(moduleName, globals(), locals(), [], -1)
        finally:
            __builtins__.__import__ = self.real_import
"
Where to put Python files to be redirected to by urls.py in Django?,"views.py
from django.shortcuts import render_to_response

def index(request):
   """"""
   Main page.
   """"""
   return render_to_response('index.html') # display index.html
"
Scapy - How to Dissect an Ethernet Trailer field,"PART 1 DISSECT section

class MyEthTrailer(Packet):
    def pre_dissect(self,s):
        verify_if_payload_is_mine_and_assign_fields()
"
Remove *args and **kwargs from method signatures using rope,"def f(*args, **kwargs):
    a = args[0]
    b = args[1]
    c = kwargs.get('c', 3)
    d = kwargs.get('d', 4)
    print a, b, c, d
"
Python changing modifying via imported function,"tuple = 'one', two'
function(tuple, 'add this')
"
How to save entry field values to disk in Tkinter?,"def getent1():
    return ent1var.get()
"
In Python how do I create variable length combinations or permutations?,"res = []
for l in range(2, len(arr)):
    for x in itertools.combinations(arr, l):
        res.append(x)
return res
"
How to pass non-const std::vector<double> by reference to Python with boost::python?,"foo.attr(""bar"")(boost::ref(x));
foo.attr(""bar"")(boost::python::ptr(&x));
"
Set the name of dictionary in Python,"dict1= {0:'One', 1:'Two', 2:'Three'}
print {value:{} for key,value in dict1.items()}
"
Using info from GET request in jQuery to display transformed result through Flask,"@app.route(""/"")
def index():
    resp = myFunc(request.args.get('selectedOption'))
    return resp
"
How to construct combinatorics expressions in Python Sympy Latex?,"from sympy import binomial, latex
sympy.init_printing(use_latex='mathjax')
n, r = sympy.symbols(""4, 2"", real=True, positive=True)
binomial(n, r)
"
Retrieve locals() in order of variable declaration - python,">>> foo(1, 2, *(11, 12, 13), **{'h': 14, 'i': 15, 'j': 16})
a 1
b 2
c 11
d 12
args (13,)
kwargs {'i': 15, 'h': 14, 'j': 16}
e 5
f 6
g 7
var var
"
Saving Image in a temporary file in django,"from PIL import Image
import tempfile

def image_watermark(request,image_id):
    photo = Photo.objects.get(pk=image_id)
    watermark = Image.open('{0}/{1}'.format(settings.MEDIA_ROOT,'wmark.png'))
    img = Image.open(photo.photo.file)
    img.paste(watermark,(img.size[0]-watermark.size[0],img.size[1]- watermark.size[1]),watermark)

    tmpfile = tempfile.TemporaryFile()
    img.save(tmpfile, img.format, quality=80)

    tmpfile.seek(0)
    wrapper = FileWrapper(tmpfile)
    response = StreamingHttpResponse(wrapper, 'image/jpeg')
    response['Content-Disposition'] = 'attachment; filename=photo.jpg'
    return response
"
python if user input contains string,"if a.isalpha():
   #do something
elif a.isdigit():
   #do something
"
set new list variable equal to list generated in a function that has listbox values passed to it,"UsrFCList = []  # You've added this name to the module-level namespace.

def usr_fc(*events):
   selctd_indices = lbox.curselection()
   lst_select = list(selctd_indices)
   for i in lst_select:
     UsrFCList.append(lbox.get(i))  # The interpreter looks for UsrFCList in the local function namespace, and since you're not assigning to that name, it look at the next biggest namespace, which is the module namespace.
   lbox.quit()

# You should now have access to any data you put in UsrFCList, outside the usr_fc function.
"
Infinite loop in while,"while current_index <=top_number:
    url=""http://www.imdb.com/search/title?at=0&sort=user_rating&start=""+str(current_index)+""&title_type=feature&year=2005,2014""
    print url
    if top_number==55:
      lis=read_m_from_url(url,top_number-current_index+1)
    else:
     lis=read_m_from_url(url,50)
"
How to write this elegantly in Python?,"def angles(angle, steps):
    return [ i * angle * 2 / (steps - 1) - angle for i in xrange(steps)]
"
Face Recognition - How to return the correct image?,"idx = dst.argmin()
filename = paths[idx]
"
Does importing a module (but not using it) decrease performance in Python?,"import mymodule

mymodule.set_trace()
"
Getting 2nd Next Value in For Loop Python,"def convert(stuff):
    it = iter(stuff)
    return zip(it, it, it)

for date, type, amount in convert(data):
    print date, type, amount
"
How to create form which will show fields from two models?,"class Product(models.Model):
    ...
    def __unicode__(self):
        return u""{}({})"".format(self.name, self.cost)
"
python optimize function without looping,"def f(objects):
    yield from ((""string_x"" if isinstance(x[1], list) else ""string_y"", x[1]) 
                for x in objects)
"
Cross-Origin Resource Sharing Multiple Sites,"@app.route('/my_service')
@crossdomain(origin='*')
def my_service():
    return jsonify(foo='cross domain ftw')
"
Reference messed up by pickling in Python,">>> x = y = [1, 2]
>>> with open('text.txt', 'w') as f:
    pickle.dump([x, y], f)


>>> with open('text.txt') as f:
    x, y = pickle.load(f)


>>> x == y
True
>>> x is y
True
"
Python argparse.RawTextHelpFormatter with line wrap,"usage: PROG [-h] [--foo FOO] [bar [bar ...]]

positional arguments:
  bar         BAR! FOO! Lorem Ipsum is simply dummy
              text of the printing and typesetting
              industry.

optional arguments:
  -h, --help  show this help message and exit
  --foo FOO   FOO! Lorem Ipsum is simply dummy text of
              the printing and typesetting industry.
              Lorem Ipsum has been the industry's
              standard dummy text ever since the
"
"python, detecting elements have been removed/added/changed positions in a list","Org = ['a', 'b' ,'c', 'd', 'e', 'f', 'g', 'h', 'i']
mod = ['i', 'b', 'c', 'z', 'd', 'f', 'g', 'h', 'a']
differences = set(difflib.ndiff(Org, mod))

moved = set([item[2:] for item in differences if item[0]=='+' and '-' + item[1:] in differences])
removed = set([item[2:] for item in differences if item[0]=='-']) - moved
added = set([item[2:] for item in differences if item[0]=='+']) - moved

print 'moved items:', moved
print 'removed items:', removed
print 'added items:', added
#output:
moved items: set(['a', 'i'])
removed items: set(['e'])
added items: set(['z'])
"
Passing kwargs into a python string for rendering rather then using %s/%d...etc,"""""""%(name)s went to the store."""""" % {""name"": ""John""}
"
Concatenate list items,"def test(phrase):
    anas = [anagrammes2(word) for word in phrase.split(' ')]
    return [' '.join(x) for x in product(*anas)]

test('Mange ton orange')
"
itertools or hand-written generator - what is preferable?,"$ python -mtimeit -s'import gen; a, b = gen.make_test_case()' 'list(gen.generator1(a, b))'
10 loops, best of 3: 169 msec per loop

$ python -mtimeit -s'import gen; a, b = gen.make_test_case()' 'list(gen.generator2(a, b))'
10 loops, best of 3: 489 msec per loop

$ python -mtimeit -s'import gen; a, b = gen.make_test_case()' 'list(gen.generator3(a, b))'
10 loops, best of 3: 385 msec per loop
"
"Counting backward from an integer using Python range built-in function, related to parse trees","for c in range(10,-1,-1):
    print c
"
Preserving original doctype and declaration of an lxml.etree parsed xml,"--------------------
parse ElementTree:
<?xml version='1.0' encoding='iso-8859-1'?>
<!DOCTYPE root SYSTEM ""test"" [
<!ENTITY tasty ""eggs"">
]>
<root>
   <a>eggs</a>
 </root>

--------------------
fromstring ElementTree:
<?xml version='1.0' encoding='iso-8859-1'?>
<!DOCTYPE root SYSTEM ""test"" [
<!ENTITY tasty ""eggs"">
]>
<root>
   <a>eggs</a>
 </root>

--------------------
fromstring Element:
<?xml version='1.0' encoding='ASCII'?>
<root>
   <a>eggs</a>
 </root>
"
Twisted wait for event in loop,"@inlineCallbacks
def queue_consumer(self):
    while True:
        yield self.process_data(yield self.sequenced_queue.get())
"
Trouble with Changing Characters in a String Then Returning the String,"for i, j in dict.iteritems():
    newNumber = phoneNum.replace(i, j)
    print ""Number: "",newNumber
"
A question on python sorting efficiency,"import collections
d=collections.defaultdict(list)
for link in mysite.getallLinks():
    d[link[0]].append(link)             # Dict of first letter -> list of links

# Print all links starting with firstletter
for link in d[firstletter]:
    print link
"
Plot multiple y-axis AND colorbar in matplotlib,"#!/usr/bin/python

import matplotlib.pyplot as plt
from matplotlib import cm

fig = plt.figure()
ax1 = fig.add_subplot(111)
mappable = ax1.scatter(xgrid,
                       ygrid,
                       c=be,                   # set colorbar to blaze efficiency
                       cmap=cm.hot,
                       vmin=0.0,
                       vmax=1.0)

cbar = fig.colorbar(mappable, pad=0.15)
cbar.set_label('Blaze Efficiency')

ax2 = ax1.twinx()
ax2.set_ylabel('Wavelength')

plt.show()
"
Removing an event from a cron-like-scheduler in python,"class CronTab(object):
    def __init__(self, *events):
        self.events = events
        for event in self.events:
             event.kwargs['cron'] = self
# rest of the calss remains unmodified
"
Summing column values in panda and attaching or merging total to dataframe?,"print df
                              INCOME
SOURCE OF BUSINESS                  
BYD - Other                    500.0
BYD - Retail                  1584.0
BYD - Transport              42498.0
BYD Beverage - A La Carte    39401.5
BYD Food - A La Carte        68365.0
BYD Food - Catering Banquet  53796.0
BYD Rooms                     5148.0
GS - Retail                    386.0
GS Food - A La Carte            48.0
Orchard Retail                 130.0
SCH - Food - A La Carte         96.0
SCH - Retail                   375.4
SCH - Transport                888.0
SCH Beverage - A La Carte      119.0
Spa                           3052.0
XLM Beverage - A La Carte       38.0
"
removing duplicates in python and selenium,"z = [[i] for i in set(ss)] #make a list for each element in set
for i in range(len(z)): #use for-loop to print them out
    u = ''.join(z[i])
    u = u[:-9] #delete last 9 characters ([CHANGE] thing)
    print(u)
"
Groupby Pandas levels,"print df

    game team  role  hw  aw  year  wins  expanding_mean
0      1    A  home   0   1  2000     0             NaN
1      1    B  away   0   1  2000     1             NaN
2      2    B  home   1   0  2000     1        1.000000
3      2    A  away   1   0  2000     0        0.000000
4      3    B  home   0   0  2000     0        1.000000
5      3    A  away   0   0  2000     0        0.000000
6      4    A  home   1   0  2000     1        0.000000
7      4    B  away   1   0  2000     0        0.666667
8      5    B  home   0   1  2001     0             NaN
9      5    A  away   0   1  2001     1             NaN
10     6    A  home   1   0  2001     1        1.000000
11     6    B  away   1   0  2001     0        0.000000
12     7    A  home NaN NaN  2001   NaN        1.000000
13     7    B  away NaN NaN  2001   NaN        0.000000
"
Converting time efficiently in Python,"from datetime import timedelta
for t in all_times_in_us:
    print timedelta(seconds=t/1000000.0)
"
Sorting a list using a regex in Python,"emails = 'john45@email.com bob@email.com joe2@email.com'.split()

import re
print sorted(emails, key=lambda L: (map(int, re.findall('(\d+)@', L)), L))
# ['bob@email.com', 'joe2@email.com', 'john45@email.com']
"
Print the line number of a text file for each word from a list in python 3 without importing anything,">>> dict={}
>>> with open('sawyer.txt') as f:
...     for i, l in enumerate(f):
...             for word in l.strip().split("" ""):
...                     if word in dict.keys():dict[word].append(i)
...                     else:dict[word]=[i]
...
>>> dict
"
Create new console for the same process,"new_console.py
from multiprocessing.connection import Client
import sys

address = '\\\\.\pipe\\new_console'
conn = Client(address)
while True:
    print(conn.recv())
"
Python flask writing to a csv file and reading it,">>> import pyexcel as pe
>>> sheet = pe.load(""comments.csv"", name_columns_by_row=0)
>>> sheet
Sheet Name: csv
+----------+----------+-----------+
| username | comment  |   date    |
+==========+==========+===========+
| someone  | good one | 01/Dec/14 |
+----------+----------+-----------+
"
"Reshaping pandas dataframe, converting values of an existing column into new lower level columns with index ignored","In [78]: pd.DataFrame(x['6890011'].values.reshape(-1, 3))
Out[78]: 
          0         1         2
0  3.226545  3.226698  3.221418
1  3.231642  3.226331  3.221449
2  3.231123  3.226454  3.226240
3  3.226484  3.226240  3.221571
4  3.226118  3.226331  3.221021
"
Collapse sub-trees in a tree with average distance to tips < x," 0.556705
   0.305646
     C 0.251059
     B 0.251059
   A 0.556705
"
Is it possible to pass the evaluated result of one template tag as a parameter to another tag?,"@register.simple_tag(take_context=True)
def some_simple_tag(context, arg1, arg2):
    # do some work
    return 'string result for template to display'
"
Add in words after line split and loop it?,"import itertools

data = []

extra = itertools.cycle(['fL', 'fD', 'dep', 'AOV'])
for line in fileLines:
    for word in line.split():
        text = next(extra)
        print word, text
        data.append([word, text])
"
Python: find closest key in a dictionary from the given input key,"data[num] if num in data else data[min(data.keys(), key=lambda k: abs(k-num))]
"
finding string length and storing in dict,">>> inp=raw_input()
>>> {inp+' '+i:len(inp+i) for i in a}
{'jean see': 7, 'jean be': 6, 'jean tree': 8}
"
How to find the shape of an object in an image using python,"More:  What happens if you use grayscale:
img = cv2.imread('flower.jpg', cv2.CV_LOAD_IMAGE_GRAYSCALE)
gray1 = cv2.Canny(img, 70, 50)
cv2.imwrite('gray1.png', gray1)
"
Choosing a box of data points from a plot,"import numpy as np
import matplotlib.pyplot as plt
from matplotlib.widgets import RectangleSelector

def main():
    x, y = np.random.random((2, 100))
    fig, ax = plt.subplots()
    ax.scatter(x, y, color='black')
    highlighter = Highlighter(ax, x, y)
    plt.show()

    selected_regions = highlighter.mask
    # Print the points _not_ selected
    print x[~selected_regions], y[~selected_regions]

class Highlighter(object):
    def __init__(self, ax, x, y):
        self.ax = ax
        self.canvas = ax.figure.canvas
        self.x, self.y = x, y
        self.mask = np.zeros(x.shape, dtype=bool)

        self._highlight = ax.scatter([], [], s=200, color='yellow', zorder=10)

        self.selector = RectangleSelector(ax, self, useblit=True)

    def __call__(self, event1, event2):
        self.mask |= self.inside(event1, event2)
        xy = np.column_stack([self.x[self.mask], self.y[self.mask]])
        self._highlight.set_offsets(xy)
        self.canvas.draw()

    def inside(self, event1, event2):
        """"""Returns a boolean mask of the points inside the rectangle defined by
        event1 and event2.""""""
        # Note: Could use points_inside_poly, as well
        x0, x1 = sorted([event1.xdata, event2.xdata])
        y0, y1 = sorted([event1.ydata, event2.ydata])
        mask = ((self.x > x0) & (self.x < x1) &
                (self.y > y0) & (self.y < y1))
        return mask

main()
"
"Python equivalent of mysql_real_escape_string, for getting strings safely into MySQL?","MySQLdb.escape_string(SQL)
"
How to preprocess time series data in Python for forecasting,"[[0 1 2 3 4 5]
 [1 2 3 4 5 6]
 [2 3 4 5 6 7]
 [3 4 5 6 7 8]]
"
Supporting Multiple Python Versions In Your Code?,"try:
    import json
except ImportError:
    import myutils.myjson as json
"
How to connect spark with cassandra using spark-cassandra-connector?,"sc.stop
import com.datastax.spark.connector._, org.apache.spark.SparkContext, org.apache.spark.SparkContext._, org.apache.spark.SparkConf
import  org.apache.spark.sql.cassandra._
val conf = new SparkConf(true).set(""spark.cassandra.connection.host"", ""localhost"")
val sc = new SparkContext(conf)
val csc = new CassandraSQLContext(sc)
"
Am I using scipy.linalg.solve_discrete_lyapunov correctly,"
In [64]: M = A - np.dot(B,K)

In [65]: np.dot(M, np.dot(P,M.T)) - P
Out[65]: 
array([[ -1.00014927e+00,  -9.93418066e-05],
       [ -9.93418066e-05,  -1.00006419e+00]])

In [66]: np.allclose(np.dot(M, np.dot(P,M.T)) - P, -I, atol=0.001)
Out[66]: True
"
Callbacks from autobahn WebSocketClientProtocol to another object,"import asyncio
from pydispatch import dispatcher
from autobahn.asyncio.websocket import WebSocketClientProtocol, WebSocketClientFactory

from ..transport import Transport

class Websocket(Transport):

    name = 'websocket'

    def __init__(self, socket):
        self.socket = socket

    def open(self):
        url = self.prepareUrl()

        factory = WebSocketClientFactory(url, debug = False)
        factory.protocol = Protocol

        websocket = self.socket.loop.create_connection(factory, host=self.socket.io.options.host, port=self.socket.options.port)

        dispatcher.connect(self.onOpen, signal='open', sender=dispatcher.Anonymous)

        self.socket.io.loop.run_until_complete(websocket)

    def onOpen(self):
        print('print me please!')


class Protocol(WebSocketClientProtocol):

    @asyncio.coroutine
    def onOpen(self):
        dispatcher.send(signal='open')
"
Python template include a page if condition,"{% if user_info.name and user_info.last_name %}
{% with ""included_form.html"" as BASE_TEMPLATE %}
   {% include ""edit_profile.html"" %}
{% endwith %}
{% endif %}
"
How to hide excerpt from single post view in Hyde?,"{{ res.meta.excerpt|markdown|typogrify }}
"
Python - convert strings into json and combine,"dict1 = json.loads(s1)
dict2 = json.loads(s2)
result = combine(dict1, dict2)
"
How can I get the current week using Python?,"h[1] >>> import datetime
h[1] >>> Jan1st = datetime.date(2010,1,1)
h[1] >>> Year,WeekNum,DOW = Jan1st.isocalendar() # DOW = day of week
h[1] >>> print Year,WeekNum,DOW
2009 53 5
"
How to get an input from user in Pygame and save it as a variable?,"
def text1(word,x,y):
    font = pygame.font.SysFont(None, 25)
    text = font.render(""{}"".format(word), True, RED)
    return screen.blit(text,(x,y))
"
Changing image hue with Python PIL,"rgb_to_hsv=np.vectorize(colorsys.rgb_to_hsv)
hsv_to_rgb=np.vectorize(colorsys.hsv_to_rgb)
"
Python Mock patch.multiple argument names,"@patch.multiple('module.ClassName', foo=DEFAULT, bar=DEFAULT)
def test(**mocks):
    mock_foo, mock_bar = mocks[""foo""], mocks[""bar""]
    mock_foo.return_value = 'foo'
    mock_bar.return_value = 'bar'
"
if all in list == something,"all( type(i) is int for i in lst )
"
Exiting block of code when variable changes in python,"functions = [somefunction1, somefunction2, somefunction3]

for func in functions:
    var, msg = func()
    if not var:
        break
"
"SQLAlchemy relationships, when to use which relationship?","role = ... # some role
role.users
"
Checking a partial match in input to a list of valid arguments with varying prefixes,"noise = ['go', 'check', 'walk']
commands = [word for word in move_input if word not in noise]
# process commands
"
Speed up mathematical calculations in Python,"In [77]: p,c =2.123,1.324
In [78]: timeit x=(p-1)*c**(p-1)/(v_dt+c)**p
10000 loops, best of 3: 95.9 µs per loop
"
Python | How to create dynamic and expandable dictionaries,"userdata = { ""data"":[]}

def fil_userdata():
  for i in xrange(0,5):
    user = {}
    user[""name""]=...
    user[""age""]=...
    user[""country""]=...
    add_user(user)

def add_user(user):
  userdata[""data""].append(user)
"
Use Boost-Python to calculate derivative of function defined in python,"def f(x):
  return sin(x)*cos(x)
"
"Can pandas groupby aggregate into a list, rather than sum, mean, etc?","    A  level_1   0
0   1        0  10
1   1        1  12
2   1        2  11
3   1        0  22
4   1        1  20
5   1        2   8
6   2        3  10
7   2        4  11
8   2        3  10
9   2        4  13
10  3        5  14
11  3        5  10
"
python : searching through nested list by key and storing it into nested list,"list1 = [('A',0.75),('D',0.49),('Y',0.36)]
mainlist = [('A',10),('B',20),('C',30),('D',40),('E',50),('Y',250),('Z',260)]

keys = {k[0] for k in list1} # create a set with keys from list1
newlist = [k for k in mainlist if k[0] in keys] # get items from mainlist with good keys 
print(newlist)
"
Rest Web Service with App Engine and Webapp,"application = webapp.WSGIApplication([(r'/rest/users/(.*)', UsersHandler),
                                      (r'/rest/users', UsersHandler)]                                      
                                     debug=True)
"
python regular expression to grab username froma webpage code,"Username here
"
PyVisa and Printing New Data,"while True:
    print inst.ask('channel')
    time.sleep(1)
"
finding bigrams in unicode text with nltk,"
l = [((u'\xe7\xf6sd', u'bfkd'), 1), ((u'naber', u'\xe7\xf6sd'), 1), ((u'\xe7al\u0131\u015fmak', u'naber'), 1)]
for i, j in l:
  print(""{0} {1} {2}"".format(i[0], i[1], j))
"
Automatically setting class member variables in Python,"def __init__(self, a = None, b = None, c = None):
    self.a = a
"
if statement syntax - different than taught,"x = not (letter.lower() in word)
y = not (letter.lower() in guessed_letters)
a = x or y
"
Computing the Difference between two graphs 'edge wise' in networkx,"set([frozenset(x) for x in S.edges()])
"
Making a simple card game in python 2.7,"filename.write(""\n"")
"
Python - Parse text file and create lists based on some criteria,"import re, mmap, os

def conv(s):
    try:
        return float(s)
    except ValueError:
        return s    

data_dict={}
with open(fn, 'r') as fin:
    size = os.stat(fn).st_size
    data = mmap.mmap(fin.fileno(), size, access=mmap.ACCESS_READ)
    for m in re.finditer(r'^(\w+)$([\d\s,.]+)', data, re.M):
        data_dict[m.group(1)]=[[conv(e) for e in line.split(',')] 
                        for line in m.group(2).splitlines() if line.strip()]

print data_dict
"
Set the wrap width for python docs in a terminal,"#!/usr/bin/python

import pydoc
import re

t = re.sub('\n([^\n])', ' \g<1>', pydoc.__doc__)
pydoc.__doc__ = t
help(pydoc)
"
"Function name convention for ""convert foo to bar""","var bars = _.map(foos, Foo.toBar);
"
Merging two dicts in python with no duplication permitted,">>> d1 = {'x': 'a', 'y': 'b', 'z': 'c'}
>>> d2 = {'z': 'c', 'w': 'r'}
>>> d3 = {'z': 'd', 'w': 'r'}
>>> merge_dicts(d1, d2)
{'y': 'b', 'x': 'a', 'z': 'c', 'w': 'r'}
>>> merge_dicts(d1, d3)
{}
>>> merge_dicts(d2, d3)
{}
"
How to iterate a Unicode string in Python?,"s = 'ABCD' + u''.join(map(unichr, range(0x2713, 0x271d)))
"
how to parse time stamps in Python from PyPI packages (eg. 12-Oct-2010 06:40),">>> from dateutil.parser import parse
>>> parse(datestr)
datetime.datetime(2010, 10, 12, 6, 40)
"
"reading and parsing a TSV file, then manipulating it for saving as CSV (*efficiently*)","from itertools import repeat
import csv

with open('sample.txt','rb') as tsvin, open('new.csv', 'wb') as csvout:
    tsvin = csv.reader(tsvin, delimiter='\t')
    csvout = csv.writer(csvout)

    for row in tsvin:
        count = int(row[4])
        if count > 0:
            csvout.writerows(repeat(row[2:4], count))
"
How to generate ODIN-1 in Python,">>> mac = '1A2B3C4D5E6F'
>>> hex_chunks = lambda s: [s[i: i+2] for i in range(0, len(s), 2)]
>>> [m.decode('hex') for m in hex_chunks(mac)]
['\x1a', '+', '<', 'M', '^', 'o']
"
Why are my lists not being created properly in Python 2.7?,"rList = []
gList = []
bList = []
"
why I'm getting a square instead of a circle in pygame?,"SCREEN_SIZE =  800, 600
SCREEN_COLOR  = pygame.Color(""white"")
"
Nicest way to pad zeroes to string,">>> n = 4
>>> print '%03d' % n
>>> 004
>>> print format(4, '03') # python >= 2.6
>>> 004
>>> print '{0:03d}'.format(4)  # python >= 2.6
>>> 004
>>> print('{0:03d}'.format(4))  # python 3
>>> 004
"
regular expression pattern about word boundary in python,">>> import re
>>> re.sub(r""\bor"", ""*"", ""organization"")
'*ganization'
>>>
"
Merge/join lists of dictionaries based on a common value in Python,"def foo(x):
    return x['user__id']
"
How do I handle recursive repr()'s in Python?,"def __init__(self, *list):
    self._list= list
def __repr__(self):
    return 'mything('+repr(self._list)[1:-1]+')')
"
Python convert list of objects to list of one object parameters,"l2 = [element.name for element in l]
"
Numpy equivalent of itertools.product,"0.421036
0.06742
"
How to remove dates from a list in Python,"Description
^(?:(?:[0-9]{2}[:\/,]){2}[0-9]{2,4}|am|pm)$
"
Execute Python script from Php,"<?php
exec('sudo -u www-data python /usr/lib/cgi-bin/script.py')
"
Does Python's 'in' operator for lists have an early-out for successful searches,"Comparing 3 to 1
Comparing 3 to 2
found
"
Reducing difference between two graphs by optimizing more than one variable in MATLAB/Python?,"x = lsqcurvefit(fun,x0,xdata,ydata);
"
Python: How can I use ggplot with a simple 2 column array?,"powd = DataFrame(data2)
"
Iterate over two nested 2D lists where list2 has list1's row numbers,"print 'Processing partition %s' % label
for (col_num, column) in enumerate(zip(*rows)):
    print 'Column number: %d' % col_num
    for (row_num, element) in enumerate(column):
        print '[%d,%d]: %d' % (row_indices[row_num], col_num, element)
"
Loop through csv rows and check for a specific value,"maxuserid = 7255
for i in range(maxuserid):
    result_liked = [] # form a separate list for each csv file
    with open('source/to/file/user_id%i.csv' %(i+1),'r') as fin:
        for row in csv.reader(fin, delimiter='\t'):
            if int(row[2]) >= 1:
                result_liked.append(row)

    if len(result_liked) < 3: # if list too few elements just go to next file
        continue
    training_data = result_liked[:2]
    test_data = result_liked[2:]
    ...
"
How to make SCons not include the base dir in zip files?,"import os.path
import zipfile

def zipbetter(target, source, env):
    # Open the zip file with appending, so multiple calls will add more files
    zf = zipfile.ZipFile(str(target[0]), 'a', zipfile.ZIP_DEFLATED)
    for s in source:
        # Find the path of the base file
        basedir = os.path.dirname(str(s))
        if s.isdir():
            # If the source is a directory, walk through its files
            for dirpath, dirnames, filenames in os.walk(str(s)):
                for fname in filenames:
                    path = os.path.join(dirpath, fname)
                    if os.path.isfile(path):
                        # If this is a file, write it with its relative path
                        zf.write(path, os.path.relpath(path, basedir))
        else:
            # Otherwise, just write it to the file
            flatname = os.path.basename(str(s))
            zf.write(str(s), flatname)
    zf.close()

# Make a builder using the zipbetter function, that takes SCons files
zipbetter_bld = Builder(action = zipbetter,
                        target_factory = SCons.Node.FS.default_fs.Entry,
                        source_factory = SCons.Node.FS.default_fs.Entry)

# Add the builder to the environment
env.Append(BUILDERS = {'ZipBetter' : zipbetter_bld})
"
Quick and easy way to check if all items in a dictionary are empty strings?,"not any(dict.itervalues())
"
Fastest way to filter the A010784 sequence," magnitude(s) <= nocarry_magnitude(s, M) for large M
"
Excel Big Data Calculation (PCA...),"@echo off
C:
PATH R_PATH;%path%
cd DEMO_PATH
Rscript your_pca_script.R 
exit
"
"Is it possible to create a class that represents another type in Python, when directly referenced?",">>> obj = CustomVal(wrapped_obj)
>>> obj.SomeAttributeOfWrappedObj
"
selecting words that only have specific letters in them,"import re

def search(regex,letters):
    letters=set(letters)
    pattern=re.compile(regex)
    for word in content:
        word=word.strip()
        if(pattern.findall(word)):
            if set(word) >= letters:
                print(word)


#search(r'^(n|u|p|g|o|u|e|b|l){6}$')
#search(r'^t(i|a)[a-z]{3}')
content=[""hello"",""helps"",""halts"",""random""]
search(r'^h(e|a)[a-z]{3}','hltsa') #returns: hello,helps,halts
"
How to retrieve the array elements in a tuple in numpy,"x[1,2]
x[(1,2)]
idx = (1,2); x[idx]
"
"Numpy: how to roll 1 ""row"" in an array of arrays","import numpy as np

def independent_roll_inplace(arr, ind, amount):
    arr[ind] = np.roll(arr[ind], amount)

def independent_roll_copy(arr, ind, amount):
    arr = arr.copy()
    arr[ind] = np.roll(arr[ind], amount)
    return arr

grid = np.array([['A', 'D', 'G'],
                 ['B', 'E', 'H'],
                 ['C', 'F', 'I']])
"
Please explain reasoning behind code snippet from argparse module,"Namespace(l=[1, 2, 3, '4'])
[1, 2, 3, '4']
"
Relocate zeros to the end of the last dimension in multidimensional numpy array,"In [97]: mask
Out[97]: 
array([[[ True,  True, False],
        [ True,  True, False],
        [ True,  True, False],
        [ True, False, False]],

       [[ True,  True, False],
        [ True,  True, False],
        [ True,  True, False],
        [ True,  True, False]],

       [[ True,  True, False],
        [ True,  True, False],
        [ True, False, False],
        [ True,  True, False]],

       [[ True,  True, False],
        [ True,  True, False],
        [ True,  True, False],
        [ True,  True, False]],

       [[ True,  True, False],
        [ True,  True, False],
        [ True, False, False],
        [ True,  True, False]]], dtype=bool)
"
Fast membership in slices of lists,"def has_index_in_slice(indices, a, b):
   r = bisect.bisect_left(indices, a)

   return r < len(indices) and indices[r] < b

def check(byvalue, x, a, b):
    indices = byvalue.get(x, None)
    if not indices: return False

    return has_index_in_slice(indices, a, b)
"
Python PySide and Progress Bar Threading,"def setProgress(self, progress):
    self.progressBar.setValue(progress)
"
Running through a list of tuples,"[[x for y in lst for x in y].count(z) for z in sorted(set([t[0] for t in lst]))]
"
NumPy genfromtxt - skipping rows that start with specific number,"lines = (line for line in open('data', 'rb')  if line.split(None, 1)[0].lstrip('0') in '123456789')
"
Regex for capturing URL path in groups separated by a forward slash,"assert '/abra/1234fd/kadabra/2314'.strip('/').split('/') == ['abra', '1234fd', 'kadabra', '2314']
assert '/abra/1234fd/kadabra'.strip('/').split('/') == ['abra', '1234fd', 'kadabra']
assert '/abra/1234fd'.strip('/').split('/') == ['abra', '1234fd']
"
"python :same character, different behavior",">>> 'R\xc3\xbacola'.decode('utf-8')
"
Can I configure mercurial hooks like some extensions are configured in the hgrc file?,"address = ui.config('changegroup.mail_someone', 'to_address')
"
Sorting a complex structure of array of array,"[[[[6, 6, 6, 6, 6, 6, 6], 1, 3],
  [[3, 3, 3, 3, 3, 3, 3], 1, 54],
  [[1, 1, 1, 1, 1, 1, 1], 1, 56]],
 [[[5, 5, 5, 5, 5, 5, 5], 2, 6], 
  [[2, 2, 2, 2, 2, 2, 2], 2, 42]]]
"
How to assign scipy.sparse matrix to NumPy array via indexing?,"s.toarray(out=a)
"
Cause Python's argparse to execute action for default,"# sample custom action from docs
class FooAction(argparse.Action):
    def __call__(self, parser, namespace, values, option_string=None):
        print('Setting: %r %r %r' % (namespace, values, option_string))
        setattr(namespace, self.dest, 'action:'+values)
p = argparse.ArgumentParser()
a1 = p.add_argument('--foo', action=FooAction, default='default')
print 'action:',a1
print p.parse_args([])

ns = argparse.Namespace()
a1(p, ns, a1.default, 'no string') # call action
print p.parse_args([],ns)
print p.parse_args(['--foo','1'],ns)
"
Python selenium select option from angular js drop down,"selenium.common.exceptions.ElementNotVisibleException: Message: Element is not currently visible and so may not be interacted with
"
sklearn LabelBinarizer returns vector when there are 2 classes,"[[1 0]
 [0 1]
 [0 1]
 [1 0]]
['yes' 'no' 'no' 'yes']
[[0 0 1]
 [0 1 0]
 [0 1 0]
 [0 0 1]
 [1 0 0]]
['yes' 'no' 'no' 'yes' 'maybe']
"
How to get index of key/group in itertools.groupby?,">>> # lst represents what is returned by itertools.groupby
>>> lst = [(1, 2), (3, 4), (5, 6)]
>>> for i, (j, k) in enumerate(lst):
...     i, j, k
...
(0, 1, 2)
(1, 3, 4)
(2, 5, 6)
>>>
"
Hex code using Python,"Deviceid   =   ""0x{0:2x}"".format((input(""enter device id""))
"
Python stop sniffing upon specific condition,">>> print sniff.__doc__
Sniff packets
sniff([count=0,] [prn=None,] [store=1,] [offline=None,] [lfilter=None,] + L2ListenSocket args) -> list of packets

  count: number of packets to capture. 0 means infinity
  store: wether to store sniffed packets or discard them
    prn: function to apply to each packet. If something is returned,
         it is displayed. Ex:
         ex: prn = lambda x: x.summary()
lfilter: python function applied to each packet to determine
         if further action may be done
         ex: lfilter = lambda x: x.haslayer(Padding)
offline: pcap file to read packets from, instead of sniffing them
timeout: stop sniffing after a given time (default: None)
L2socket: use the provided L2socket
opened_socket: provide an object ready to use .recv() on
stop_filter: python function applied to each packet to determine
             if we have to stop the capture after this packet
             ex: stop_filter = lambda x: x.haslayer(TCP)
"
Spatial index/query (finding k nearest points),"> db.places.find({loc: { $near: {long: -90, lat: 50}, $maxDistance: 8}})
{""name"" : ""WI"", ""loc"" : { ""long"" : -89.6385, ""lat"" : 44.2563 } }
{""name"" : ""MN"", ""loc"" : { ""long"" : -93.9196, ""lat"" : 45.7326 } }
"
Grouping constants in python,">>> import sys
>>> sys.getsizeof({'number_of_legs': 4, 'favourite_food': ['Lasagna', 'Fish']})
140
>>> from collections import namedtuple
>>> Animal = namedtuple('Animal', 'number_of_legs favourite_food')
>>> sys.getsizeof(Animal(4, ['Lasagna', 'Fish']))
36
"
Using name of strings in different functions,"rand(movie())
"
How to find x to make sure sum(row[i])-sum(clo[i])=bi in python?,">>> def f1(p, b=array([5,-4,5,-6])):
    mp=matrix(array(p).round().reshape((4,4))) #or reshape((b.size, b.size))
    return sum(array(dot(mp-mp.T, array([1,1,1,1]))-b)**2) #or ones((b.size,))

>>> rlist=[]
>>> for i in range(-500, 500): #constrain to a desired range, and just get the one of the possible answers
    q=optimize.fmin(f1, range(i, i+16), disp=False).round()
    rlist.append((q, f1(q)))
    if f1(q)==0:
        break   
>>> rlist[-1]
(array([-501., -498., -495., -493., -497., -499., -494., -492., -496.,
        -491., -494., -487., -498., -490., -490., -489.]), 0.0)

>>> rlist[-1][0].reshape((4,4))
array([[-501., -498., -495., -493.],
       [-497., -499., -494., -492.],
       [-496., -491., -494., -487.],
       [-498., -490., -490., -489.]])
"
How to update the the class type and methods in an existing object,"import types
obj_a.Test = types.MethodType(ClassA.Test, obj_a)
obj_a.Test()
"
Python Efficiency / Optimization Project Euler #5 example,">>> dis.dis(find_solution)
  2           0 SETUP_LOOP              58 (to 61)
              3 LOAD_GLOBAL              0 (xrange)
              6 LOAD_FAST                0 (step)
              9 LOAD_CONST               1 (999999999)
             12 LOAD_FAST                0 (step)
             15 CALL_FUNCTION            3
             18 GET_ITER            
        >>   19 FOR_ITER                38 (to 60)
             22 STORE_DEREF              0 (num)

  3          25 LOAD_GLOBAL              1 (all)
             28 LOAD_CLOSURE             0 (num)
             31 BUILD_TUPLE              1
             34 LOAD_CONST               2 (<code object <genexpr> at 
                                            0x10027eeb0, file ""<stdin>"", 
                                            line 3>)
             37 MAKE_CLOSURE             0
             40 LOAD_GLOBAL              2 (check_list)
             43 GET_ITER            
             44 CALL_FUNCTION            1
             47 CALL_FUNCTION            1
             50 POP_JUMP_IF_FALSE       19

  4          53 LOAD_DEREF               0 (num)
             56 RETURN_VALUE        
             57 JUMP_ABSOLUTE           19
        >>   60 POP_BLOCK           

  5     >>   61 LOAD_CONST               0 (None)
             64 RETURN_VALUE        
"
How do i put things in a table in python,"def print_table(table):
    col_width = [max(len(str(x)) for x in col) for col in zip(*table)]
    for line in table:
        print(""| "" + "" | "".join(""{:{}}"".format(x, col_width[i])
                                for i, x in enumerate(line)) + "" |"")


table = [['/', 2,    3],
         ['a', '2a', '3a'],
         ['b', '2b', '3b']]

print_table(table)
"
How do I make a JSON file out of a list in Python?,">>> from pprint import pprint
>>> titles = ['Foo de Bar', 'Bring us a Shrubbery!', 'The airspeed of a laden swallow']
>>> ids = ['42', '81', '3.14']
>>> pprint({'video': [{'title': title, 'id': id} for title, id in zip(titles, ids)]})
{'video': [{'id': '42', 'title': 'Foo de Bar'},
           {'id': '81', 'title': 'Bring us a Shrubbery!'},
           {'id': '3.14', 'title': 'The airspeed of a laden swallow'}]}
"
How do I print methods of a class,"hippo.description()
"
How to create variables inside a for loop to assign dataframes?,"In [35]: df['month'] = df.month_num.map(lambda n: calendar.month_abbr[int(n)].lower())+'_avg_prod_count'

In [36]: df
Out[36]: 
  month_num prod_desc  prod_count               month
0        01         A          52  jan_avg_prod_count
1        01         B          43  jan_avg_prod_count
2        01         C          38  jan_avg_prod_count
3        02         A          21  feb_avg_prod_count
4        02         B          24  feb_avg_prod_count
5        02         C          18  feb_avg_prod_count

In [37]: pt = df.pivot_table(columns='month',index='prod_desc',values='prod_count', aggfunc=sum)

In [38]: pt
Out[38]: 
month      feb_avg_prod_count  jan_avg_prod_count
prod_desc                                        
A                          21                  52
B                          24                  43
C                          18                  38
"
Is there a wildcard format directive for strptime?,"import datetime

tz = ""+10:00""

def tz_to_timedelta(tz):
    min = datetime.datetime.strptime('', '')
    try:
        return -(datetime.datetime.strptime(tz,""-%H:%M"") - min)
    except ValueError:
        return datetime.datetime.strptime(tz,""+%H:%M"") - min

print tz_to_timedelta(tz)
"
Incorrectly converting between Eastern and GMT time,">>> eastern = pytz.timezone('US/Eastern')
>>> d = datetime.datetime(2014,03,21,7)
>>> dateeastern = eastern.localize(d)
>>> dateeastern
datetime.datetime(2014, 3, 21, 7, 0, tzinfo=<DstTzInfo 'US/Eastern' EDT-1 day, 20:00:00 DST>)
>>> dateutc = dateeastern.astimezone(pytz.utc)
>>> dateutc
datetime.datetime(2014, 3, 21, 11, 0, tzinfo=<UTC>)
"
Get a list of the lowest subdirectories in a tree,"    if files and not dirs:
"
Discriminate between callers inside and outside class hierarchy,"import inspect


def who_called():
    frame = inspect.stack()[2][0]
    if 'self' not in frame.f_locals:
        return None, None
    cls = frame.f_locals['self'].__class__
    method = frame.f_code.co_name
    return cls, method

class A(object):
    def __init__(self, value):
        self._value = value

    @property
    def value(self):
        return self._value

    @value.setter
    def value(self, value):
        self._value = value

    # Assuming this existed it would also work
    def change_value(self, value):
        self.value = value
"
Blender camera rotation with python - not planar?,"def parent_obj_to_camera(b_obj, b_camera):
    origin = (0,0,0) #can be replaced with b_obj.location
    b_empty = bpy.data.objects.new(""Empty"", None)
    b_empty.location = origin
    b_camera.parent = b_empty #setup parenting

    scn = bpy.context.scene
    scn.objects.link(b_empty)
    scn.objects.active = b_empty 
    b_empty.select = True
"
Python split a string at an underscore,"def split_at(s, c, n):
    words = s.split(c)
    return c.join(words[:n]), c.join(words[n:])
"
"Django editing and deleting, using Generic editing views or making functions in views.","from django.contrib.auth.decorators import login_required
from django.utils.decorators import method_decorator
from django.views.generic.edit import CreateView, UpdateView, DeleteView
from django.http import HttpResponse, HttpResponseRedirect
from django.core.urlresolvers import reverse

from .models import *
from .forms import *

class PostCreateView(CreateView):
   model = Post
   form_class = PostForm
   template_name = 'form.html'

   def form_valid(self, form):
      self.object = form.save(commit=False)
      # any manual settings go here
      self.object.save()
      return HttpResponseRedirect(self.object.get_absolute_url())

   @method_decorator(login_required)
   def dispatch(self, request, *args, **kwargs):
      return super(PostCreateView, self).dispatch(request, *args, **kwargs)


class PostUpdateView(UpdateView):
   model = Post
   form_class = PostForm
   template_name = 'form.html'

   def form_valid(self, form):
      self.object = form.save(commit=False)
      # Any manual settings go here
      self.object.save()
      return HttpResponseRedirect(self.object.get_absolute_url())

   @method_decorator(login_required)
   def dispatch(self, request, *args, **kwargs):
     return super(PostUpdateView, self).dispatch(request, *args, **kwargs)


class PostDeleteView(DeleteView):
   model = Post

   def get_success_url(self):
      return reverse('post-index')  # Or whatever you need

   @method_decorator(login_required)
   def dispatch(self, request, *args, **kwargs):
      return super(PostDeleteView, self).dispatch(request, *args, **kwargs)
"
Move required files where they need to go,"import sys
import zipfile

def unzip(path, root='/'):
    zh = zipfile.ZipFile(path, 'r')
    for name in zh.namelist():
        zh.extract(name, root)
    zh.close()

unzip(sys.argv[1])
"
Some Basic Python Questions,"# in Python, it's common to operate a line at a time on a file instead of
# reading the entire thing into memory

my_file = open(""test100.html"")
for line in my_file:
    print defang_named(line)
my_file.close()
"
Print user inputted number with commas and the numbers in between,"numberList = []
for num in range(number_1, number_2 + 1):
    numberList.append(str(num))
numbers = ','.join(numberList)
print(numbers)
"
Locate the Containing Package or Module **Before** Importing,"call unite#filters#matcher_default#use(['matcher_fuzzy'])
"
Is it possible to write a python program that will enable you to sort the content of a text file in python,"with sqlite3.connect(""GuitarLessons.db"") as db:
            cursor = db.cursor()
            sql = ""delete from tblStudents where StudentID = ?""
            cursor.execute(sql,(StudentID))
            db.commit()
"
Tkinter widgets not appearing,"def _init_(self, master):
"
How to convert pointer to c array to python array,"ArrayType = ctypes.c_double*DataLength.value
addr = ctypes.addressof(Data.contents)
a = np.frombuffer(ArrayType.from_address(addr))
"
Python console doesn't get updated (with PyCharm),"functions.my_function()
"
using an integer in a string to create a dictionary (or list) with that many numbers,">>> L = ""09807754 18 n 03 aristocrat 0 blue_blood 0 patrician"".split()
>>> L[0], L[4::2]
('09807754', ['aristocrat', 'blue_blood', 'patrician'])

>>> D = {}
>>> D.update({L[0]: L[4::2]})
>>> D
{'09807754': ['aristocrat', 'blue_blood', 'patrician']}
"
Python equivalent of ActionScript's apply()/call() methods?,"some_function(*args, **kwargs)
"
Combining items from several files into one matrix using Python,"from os import path, listdir
import sys
from collections import defaultdict

snps = defaultdict(lambda: defaultdict(str))
pth = sys.argv[1]  # get full path
myfiles = listdir(pth)  # get list of all files in that path/directory

with open(""Fer1_INDELs_clones_filtered.csv"",""w"") as out: # file to write all filtered data to
    out.write(""Fermentor\tTrajectory\tChromosome\tPosition\tMutation\tGene\tEffect\t1.20.1\t1.20.2\t1.20.3\t1.30.1\t1.30.2\t1.30.3\t1.40.1\t1.40.3\t1.50.1\t1.50.2\t1.50.3\t1.60.1\t1.60.2\t1.60.3\t1.90.1\t1.90.2\t1.90.3\t1.100.1\t1.100.2\t1.100.3\t1.130.1\t1.130.2\t1.130.3\t1.200.1\t1.200.2\t1.200.3\n"")
    for f1 in myfiles:
        with open(path.join(pth, f1)) as f:  # join -> pth/f1
            tpp = f1.split(""_"", 1)[0].split(""."")
            tp = ""."".join(tpp[0:3])  # same as tp=tpp[0]+'.'+tpp[1]+'.'+tpp[2]
            for line in f:
                ls = line.split()
                if line.find(""#"") == -1 and len(ls) > 6: 
                    print(line)
                    # use unpacking and slicing
                    chrom, pos, ref, alt, freq, typ, gene = ls[:7]
                    if len(alt) == 1:
                        # use str.fromat
                        snps[""{}_{}-{}_{}_{}_{}"".format(pos,ref,alt,chrom,gene,typ)][tp] = freq
                    elif len(alt) > 1:
                        # use enumerate
                        for ind,k in enumerate(alt.split("","")):
                            snps[""{}_{}_{}_{}_{}_{}"".format(pos,ref,k,chrom,gene,typ)][tp] = freq.split("","")[ind]
    traj = 1
    tp_list = ['1.20.1', '1.20.2', '1.20.3', '1.30.1', '1.30.2', '1.30.3', '1.40.1', '1.40.2', '1.40.3', '1.50.1', '1.50.2',
               '1.50.3', '1.60.1', '1.60.2', '1.60.3', '1.90.1', '1.90.2', '1.90.3', '1.100.1', '1.100.2', '1.100.3',
               '1.130.1', '1.130.2', '1.130.3', '1.200.1', '1.200.2', '1.200.3']
    for pos in sorted(snps):
        # split once and again use unpacking and slicing 
        pos1, mut, chrom, gene, typ = pos.split(""_"")[:5]
        tp_string = """"
        for tp in tp_list:
            #print(tp)
            if snps[pos][tp]: # empty value will be False no need to check len
                tp_string += ""\t{}"".format(snps[pos][tp])
            else:
                tp_string += ""\t0/0""

        out.write((""F1{}\t{}\t{}\t{}\t{}\t{}\t{}\n"".format(traj,chrom,pos1,mut,gene,typ,tp_string)))
        traj += 1 
"
Scripts in python package,"from ..mypackage import server
"
Bubble sort in Python not sorting properly,"bubble(unsortedList)
"
Inserting list into list containing multiple list,">>> original_list = [[[[[], [], []]], ['trynda'], [[[], [], []]]], ['cait'], [[[[], [], []]], ['veigar'], [[[], [], []]]]]
>>> original_list[0][0][0][1].append('x')
>>> original_list
[[[[[], ['x'], []]], ['trynda'], [[[], [], []]]], ['cait'], [[[[], [], []]], ['veigar'], [[[], [], []]]]]
          ^
"
columnize with ljust in python,"|      a |
| abcdef |
|    abc |

| a      |
| abcdef |
| abc    |
"
Running three commands in the same process with Python,">>> import subprocess
>>> cmdline = [""cmd"", ""/q"", ""/k"", ""echo off""]
>>> cmd = subprocess.Popen(cmdline, stdin=subprocess.PIPE, stdout=subprocess.PIPE)
>>> batch = b""""""\
... set TEST_VAR=Hello World
... set TEST_VAR
... echo %TEST_VAR%
... exit
... """"""
>>> cmd.stdin.write(batch)
59
>>> cmd.stdin.flush() # Must include this to ensure data is passed to child process
>>> result = cmd.stdout.read()
>>> print(result.decode())
TEST_VAR=Hello World
Hello World
"
"Pandas: Achieving speed of 'built-in' methods (e.g. mean,std) for groups manipulations","df.groupby(...).apply(lambda x: x.max()-x.min())
"
Iterate across arbitrary dimension in numpy,"import numpy as np
m=np.arange(24).reshape(2,3,4)
print(m.shape)
# (2, 3, 4)
"
Django - Custom admin action,"def show_gantt_chart_of_selected_projects(modeladmin, request, queryset):
    ct = ContentType.objects.get_for_model(queryset.model)  # why do you do this, you're not using it?
    return HttpResponseRedirect(""/xxx/?ct=%s&ids=%s"" % (ct.pk, "","".join(queryset.values_list('pk', flat=True))) 
"
Implementing __neg__ in a generic way for all subclasses in Python,"import copy
import inspect

class MetaFunction(type):
    def __new__(metacls, cls_name, cls_bases, cls_dict):
        result_class = type.__new__(metacls, cls_name, cls_bases, cls_dict)
        if '__call__' in cls_dict:
            original_call = cls_dict['__call__']
            args, varargs, kwargs, defaults = inspect.getargspec(original_call)
            args = args[1:]
            if defaults is None:
                defaults = [''] * len(args)
            else:
                defaults = [''] * (len(args) - len(defaults)) + list(defaults)
            signature = []
            for arg, default in zip(args, defaults):
                if default:
                    signature.append('%s=%s' % (arg, default))
                else:
                    signature.append(arg)
            if varargs is not None:
                signature.append(varargs)
            if kwargs is not None:
                signature.append(kwargs)
            signature = ', '.join(signature)
            passed_args = ', '.join(args)
            new_call = (
                    """"""def __call__(self, %(signature)s):
                           result = self._call(%(passed_args)s)
                           if self._%(cls_name)s__negate:
                               result = -result
                           return result""""""
                           % {
                               'cls_name':cls_name,
                               'signature':signature,
                               'passed_args':passed_args, 
                              })
            eval_dict = {}
            exec new_call in eval_dict
            new_call = eval_dict['__call__']
            new_call.__doc__ = original_call.__doc__
            new_call.__module__ = original_call.__module__
            new_call.__dict__ = original_call.__dict__
            setattr(result_class, '__call__', new_call)
            setattr(result_class, '_call', original_call)
            setattr(result_class, '_%s__negate' % cls_name, False)
            negate = """"""def __neg__(self):
                            ""returns an instance of the same class that returns the negation of __call__""
                            negated = copy.copy(self)
                            negated._%(cls_name)s__negate = not self._%(cls_name)s__negate
                            return negated"""""" % {'cls_name':cls_name}
            eval_dict = {'copy':copy}
            exec negate in eval_dict
            negate = eval_dict['__neg__']
            negate.__module__ = new_call.__module__
            setattr(result_class, '__neg__', eval_dict['__neg__'])
        return result_class

class Base(object):
    __metaclass__ = MetaFunction

class Power(Base):
    def __init__(self, power):
        ""power = the power to raise to""
        self.power = power
    def __call__(self, number):
        ""raises number to power""
        return number ** self.power
"
Python Brute Force algorithm,"['a', 'b', 'aa', 'ba', 'ab', 'bb', 'aaa', 'baa', 'aba', 'bba', 'aab', 'bab', 'abb', 'bbb', 'aaaa', 'baaa', 'abaa', 'bbaa', 'aaba', 'baba', 'abba', 'bbba', 'aaab', 'baab', 'abab', 'bbab', 'aabb', 'babb', 'abbb', 'bbbb', 'aaaaa', 'baaaa', 'abaaa', 'bbaaa', 'aabaa', 'babaa', 'abbaa', 'bbbaa', 'aaaba','baaba', 'ababa', 'bbaba', 'aabba', 'babba', 'abbba', 'bbbba', 'aaaab', 'baaab', 'abaab', 'bbaab', 'aabab', 'babab', 'abbab', 'bbbab', 'aaabb', 'baabb', 'ababb', 'bbabb', 'aabbb', 'babbb', 'abbbb', 'bbbbb']
"
"Get all objects of a given structure, and their global names","(""hello"", ""blah"", 7)
"
Getting a time index in python for pandas dataframe,"import datetime as dt
import pandas as pd
parse = lambda x: dt.datetime.strptime(x, '%Y%m%d %H%M%S %f')
df = pd.read_csv('test.csv', parse_dates=[['date', 'time', 'milliseconds']],
                 index_col=0, date_parser=parse)
"
Writing select functions for customized Pony,"def active_users():
    return select(u for u in User if not user.disabled)
"
Parsing JSON data Python,"display_names = [f['channel']['display_name'] for f in data['follows']]
"
Keep CSV commas inside fields with Python,"with open('file.csv') as csvfile:
    reader = csv.DictReader(csvfile, delimiter="","", fieldnames=[""id"",""movie""], restkey=""actors"")
    for row in reader:
        actors = row['actors']
"
Why does bit-wise shift left return different results in Python and Java?,"output
 using pack & unpack 
2600468480 -1694498816
2147483645 2147483645
2147483646 2147483646
2147483647 2147483647
2147483648 -2147483648
2147483649 -2147483647
2147483650 -2147483646

 using subtraction 
2600468480 -1694498816
2147483645 2147483645
2147483646 2147483646
2147483647 2147483647
2147483648 -2147483648
2147483649 -2147483647
2147483650 -2147483646

 using exclusive OR 
2600468480 -1694498816
2147483645 2147483645
2147483646 2147483646
2147483647 2147483647
2147483648 -2147483648
2147483649 -2147483647
2147483650 -2147483646
"
pandas read dataframes in a loop and get the mean,"import glob
myFiles = glob.glob('C://my_folder//*.csv')
"
How to get data in python from ROS in real-time?,"cd playground
"
Sorting from first lowest number,"[('CS1010S', 'A+'), 
 ('MA1101R', 'C'), 
 ('SSA1207', 'B+'), 
 ('CS2020', 'A')]
"
Python: lambda function behavior with and without keyword arguments?,"def a():
    # first, yield a function to access i
    yield lambda: i
    # now, set i to different values successively
    for i in range(100): yield

g = a() # create generator
f = next(g) # get the function
f() # -> error as i is not set yet
next(g)
f() # -> 0
next(g)
f() # -> 1
# and so on
f.func_closure # -> an object stemming from the local scope of a()
f.func_closure[0].cell_contents # -> the current value of this variable
"
Iterating over collection of long lists,">>> from collections import defaultdict
>>> total =[['a', 'b', 1.7], ['d', 'e', 6.2], ['a', 'b', 2.0], ['d', 'e', 10.0], ['a', 'b', 3.0], ['d', 'e',7.0]]
>>> dic = defaultdict(list)
>>> for item in total:
        key = tuple(item[:2])  #tuples can be used as dictionary keys
        val = item[2]
        dic[key].append(val)
...     
>>> dic
defaultdict(<type 'list'>,
{('a', 'b'): [1.7, 2.0, 3.0],
 ('d', 'e'): [6.2, 10.0, 7.0]})
"
Pandas - expanding inverse quantile function,"# Query the relative positions, divide to get quantiles
left_rank_row = np.searchsorted(sorted_array[:length], add_array, side=""left"")
right_rank_row = np.searchsorted(sorted_array[:length], add_array, side=""right"")
quantile_row = (left_rank_row + right_rank_row).astype(np.float) / (length * 2)
"
"How to achieve spaces between stacked bar chart, center aligned","def stackedBarPlot(self,
                   ax,                                 # axes to plot onto
                   data,                               # data to plot
                   cols,                               # colors for each level
                   xLabels = None,                     # bar specific labels
                   yTicks = 6.,                        # information used for making y ticks [""none"", <int> or [[tick_pos1, tick_pos2, ... ],[tick_label_1, tick_label2, ...]]
                   edgeCols=None,                      # colors for edges
                   showFirst=-1,                       # only plot the first <showFirst> bars
                   scale=False,                        # scale bars to same height
                   widths=None,                        # set widths for each bar
                   heights=None,                       # set heights for each bar
                   ylabel='',                          # label for x axis
                   xlabel='',                          # label for y axis
                   xaxlim=None,
                   axspacing=0,
                   ):
"
Is int in C# and Python the same thing?,"data = int( conn.recv(32) );
"
Issue sorting lots of files in python,"['20150921(1)_0001.sgy',
 '20150921(1)_0002.sgy',
 '20150921(1)_0003.sgy',
 '20150921(1)_0004.sgy',
 '20150921(1)_0010.sgy',
 '20150921(1)_0011.sgy',
 '20150921(1)_0012.sgy',
 '20150921(1)_0101.sgy',
 '20150921(1)_0102.sgy',
 '20150921(1)_0103.sgy',
 '20150921(1)_1001.sgy',
 '20150921(1)_1002.sgy',
 '20150921(1)_1003.sgy',
 '20150921(1)_10001.sgy',
 '20150921(1)_10002.sgy']
"
finder.apply_ngram_filter in nltk.collocations to classify some ngrams,"def aaply_filter(trigrams, condition):
    return [ng for ng in trigrams if not if condition]
"
Python OOP Inheritance: Method Resolution Order (MRO),"class A:
    def __init__(self):
        pass
    def abc(self):
        print(""A"")
class B(A):
    def __init__(self):
        pass
    def abc(self):
        print(""B"")
        super().abc()
class C(A):
    def __init__(self):
        pass
    def abc(self):
        print(""C"")
        super().abc()
class D(B,C):
    def __init__(self):
        print(""D"")
        super().abc()
obj=D()
Output:
D
B
C
A
"
Is 'if element in aList' possible with Django templates?,"aList = [""a"", ""b"", ""c""]
listAndFlags = [ (item,item in aList) for item in someQuerySet ]
"
Need help making a Python script starup on mac using Launch Agent and send output to a window,"<array>
    <string>osascript</string>
    <string>/path/to/that/script</string>
</array>
"
change a list of dictionaries to feature vector and target in scikit,"X = numpy.delete(X, 3, axis=1)
"
Python: shorter syntax for slices with gaps?,"from numpy import s_
s_[0, 3:5, 6::3]
Out[1]: (0, slice(3, 5, None), slice(6, None, 3))
"
crawling imdb database using python and lxml,"<td id=""overview-top"">
    <h1 class=""header""> <span class=""itemprop"" itemprop=""name"">Fast &amp; Furious 6</span>
        <span class=""nobr"">(<a href=""/year/2013/?ref_=tt_ov_inf"" >2013</a>)</span>
    </h1>
</td>
"
"Why does python's zlib.crc32 need a bitwise AND to be considered ""stable""?",">>> -2 & 0xffffffff
4294967294
"
How do I access dictionary keys that contain hyphens from within a Django template?,"{% dictKeyLookup your_dict_passed_into_context ""phone-number"" %}
"
Why is my line clipping in matplotlib?,"draw_chromosome(0, 120, y, ""#1C2F4D"")
"
Passing values between modules in Python,"from yourmodule import generate_image

def overlay():
    background = generate_image(*args) # Or what ever arguments you want.
"
python password rules validation,"$ python pass.py
6.333611011505127 # Shashank
9.625216960906982 # Kasra
11.450419902801514 # Andrey Sabitov
8.36161494255066 # Me
"
"A more complex version of ""How can I tell if a string repeats itself in Python?""",">>> new=[re.search(r'(.+)\1+',i).group(0) for i in s.split('**')]
>>> new
['AAA', 'ACGTACGT', 'TT', 'GTGTGT', 'CCCC', 'TATACGTATACG', 'TTT']
"
Running an executable with multiple parameters in python,">>> import shlex, subprocess
>>> command_line = raw_input()
/bin/vikings -input eggs.txt -output ""spam spam.txt"" -cmd ""echo '$MONEY'""
>>> args = shlex.split(command_line)
>>> print args
['/bin/vikings', '-input', 'eggs.txt', '-output', 'spam spam.txt', '-cmd', ""echo '$MONEY'""]
>>> p = subprocess.Popen(args) # Success!
"
Setting the fmt option in numpy.savetxt,"11.000 12.000 13.000 14.000
21.000 22.000 23.000 24.000
"
How can I put an image from DB table in Web2py?,"{{for table in tables:}}
    <img src=""{{=URL('default', 'download', args=table.image)}}"" /> <br />
{{pass}}
"
Ranking Elements of multiple Lists by their count in Python,">>> import itertools
>>> print freq_sorted(itertools.chain.from_iterable(data))
[1, 5, 4, 13, 3, 2, 6, 7, 8, 9, 10, 12, 14]
>>> print freq_sorted(itertools.chain.from_iterable(data), include_freq=True)
# (slightly reformatted)
[(1, 5),
 (5, 4),
 (4, 3), (13, 3),
 (3, 2),
 (2, 1), (6, 1), (7, 1), (8, 1), (9, 1), (10, 1), (12, 1), (14, 1)]
"
More than 3 mb of data for list of list for 1500 records,"import sys
import datetime

def show_mem(data, indent=""    "", depth=0):
    ""Recursively show the memory usage of a data structure""
    mysize = sys.getsizeof(data)
    if isinstance(data, (list,tuple,dict)):
        childsize = 0
        print(""{}{} bytes: ["".format(indent*depth, mysize))
        for d in data:
            childsize += show_mem(d, indent, depth+1)
        print(""{}]  (total: {} bytes)"".format(indent*depth, mysize+childsize))
        return mysize+childsize
    else:
        print(""{}{} bytes: {}"".format(indent*depth, mysize, repr(data)))
        return mysize

show_mem([1223456, 1245361536363, 'infooooooooo123', datetime.date(1975,7,21), ""http://www.somesite.org/the/path/page.htm""])
"
Multidimensional List/Dict/whatever?,"def print_recursive(members, indent=''):
    for member in members:
        print ""%s%s = %s""%(indent, member['name'], member['value'])
        print_recursive(member['members'], indent + '    ')

print_recursive(mydata)
"
Creating a matrix using lists Python,"def proj11_1_a():
    # Using eval in such place does not seem a good idea
    # unless you want to accept things like ""2*4-2""
    # You might also consider putting try: here to check for correctness

    n = int(input(""Enter the size of the square matrix: ""))
    matrix = []

    for _ in range(n): 
        row = []   

        for _ in range(n): 
            # same situation as with n
            value = float(input(""Enter a value to go into the matrix: ""))
            row.append(value)

        matrix.append(row)

    return matrix
"
Finding equality between different strings that should be equal,"class Team:

    TEAMS = [(""Arsenal"", ""ARS""), (""Manchester United"", ""MNU"", ""ManUtd""), ...]

    def __init__(self, name):
        if not any(name in names for names in self.TEAMS):
            raise ValueError(""Not a valid team name."")
        self.name = name

    def __eq__(self, other):
        for names in self.TEAMS:
            if self.name in names and other.name in names:
                return True
        return False
"
organizing numbers in numpy,"In [15]: np.arange(99.0, 100., 0.1)
Out[15]: array([ 99. ,  99.1,  99.2,  99.3,  99.4,  99.5,  99.6,  99.7,  99.8,  99.9])
"
Extract a mixin from a common function in Python,"class Foo(...):
    def foo(self):
        print self.__class__.__bases__
"
How to get text from modal and insert in email body?,"form = """"""
<div class=""modal fade"" id=""feedback"">
    <form action=""/feedback"" method=""POST"">
        <div class=""modal-header""><h3>Aiutaci a migliorare</h3></div>
        <div class=""modal-body"">
            <p>un piacere sapere cosa cambiereste di Metrico</p>
                <textarea class=""input-xxlarge"" name=""comment"" rows=""3""></textarea>
        </div>
        <div class=""modal-footer""><input class=""btn btn-inverse"" type=""submit""/></div>
    </form>
</div>
""""""

class FormTest(webapp2.RequestHandler):

    def get(self):
        self.response.out.write(form)

    def post(self):
        data = self.request.POST
        comment = data.get('comment')
        body = """"""
Feedback:
%s
"""""" % comment
        self.response.out.write(body)
"
`from ... import` vs `import .`,"from os import open as open_
# lets you use os.open without destroying the 
# built in open() which returns file handles.
"
combining vectors as column matrix in numpy,">>> %timeit np.c_[a, b, c]
10000 loops, best of 3: 46.7 us per loop

>>> %timeit np.dstack((a, b, c)).squeeze()
100000 loops, best of 3: 18.2 us per loop

>>> %timeit np.vstack((a,b,c)).T
100000 loops, best of 3: 17.8 us per loop

>>> %timeit np.concatenate((a, b, c)).reshape((-1, 3), order='F')
100000 loops, best of 3: 3.41 us per loop
"
Starting a large number of async processes with multiprocessing,"MAX = 100000

from time import sleep
def f(i):
    sleep(0.01)
    return i

def summer(summand):
    global SUM, FINISHED
    SUM += summand
    FINISHED += 1

if __name__ == ""__main__"":
    import multiprocessing as mp
    SUM = 0
    FINISHED = 0
    pool = mp.Pool(4)

    print ""queuing"", MAX, ""work descriptions""
    for i in xrange(MAX):
        pool.apply_async(f, args=(i,), callback=summer)
        if i % 1000 == 0:
            print ""{}/{}"".format(FINISHED, i),
    print

    print ""closing pool""
    pool.close()

    print ""waiting for processes to end""
    pool.join()

    print ""verifying result""
    print ""got"", SUM, ""expected"", sum(xrange(MAX))
"
Remove duplicates from rows of a csv file using Python," def trans(x):
        d=[y for y in x]
        i=0
        while i<len(d):
            j=i+1
            item=d[i]
            while j<len(d):
                if item in d[j]: 
                    d[j]=d[j].replace(item,'')
                j+=1
            i+=1
        return d
"
Pandas order datafarme column,"In [119]: df = pd.DataFrame(np.arange(24).reshape(6,4), columns=list('ABCD'))

In [120]: df
Out[120]: 
    A   B   C   D
0   0   1   2   3
1   4   5   6   7
2   8   9  10  11
3  12  13  14  15
4  16  17  18  19
5  20  21  22  23

In [121]: df[list('CDAB')]
Out[121]: 
    C   D   A   B
0   2   3   0   1
1   6   7   4   5
2  10  11   8   9
3  14  15  12  13
4  18  19  16  17
5  22  23  20  21
"
Dummy variables from levels of other data frame,"In [74]: part = pd.concat([pd.get_dummies(frame2[x]) for x in frame2], axis=1)

In [75]: part
Out[75]: 
   A  C  X  Y
0  1  0  1  0
1  0  1  0  1
"
Complex Django query,"Group.objects.filter(
    Q(person__position=""worker"") 
    & ~Q(person__position__gt=""worker"")
    & ~Q(person__position__lt=""worker"")
)
"
MySQLdb python insert row or increment count on column if exists,"ON DUPLICATE KEY UPDATE `duplicates` = `duplicates`+1
"
Matplotlib: set superscript font size,"# How much text shrinks when going to the next-smallest level.  GROW_FACTOR
# must be the inverse of SHRINK_FACTOR.
SHRINK_FACTOR   = 0.7
GROW_FACTOR     = 1.0 / SHRINK_FACTOR
# The number of different sizes of chars to use, beyond which they will not
# get any smaller
NUM_SIZE_LEVELS = 6
# Percentage of x-height of additional horiz. space after sub/superscripts
SCRIPT_SPACE    = 0.2
# Percentage of x-height that sub/superscripts drop below the baseline
SUBDROP         = 0.3
# Percentage of x-height that superscripts drop below the baseline
SUP1            = 0.5
# Percentage of x-height that subscripts drop below the baseline
SUB1            = 0.0
# Percentage of x-height that superscripts are offset relative to the subscript
DELTA           = 0.18
"
get adjacent matrix of point in python,"from itertools import product

def adjacent_grid(centre):
    steps = product([-1, 0, 1], repeat=len(centre))
    return (tuple(c+d for c,d in zip(centre, delta)) for delta in steps)
"
Intersections between two lists of thousands of networks,"import time
import netaddr

ipset1 = netaddr.IPSet(open('iplist1.txt','r').readlines())
ipset2 = netaddr.IPSet(open('iplist2.txt','r').readlines())

print ""Set 1:"", len(ipset1), ""IP addresses""
print ""Set 2:"", len(ipset2), ""IP addresses""

start = time.time()
ipset = ipset1 & ipset2
print ""Elapsed:"", time.time() - start
print ""Intersection:"",len(ipset),""IP addresses""
"
Spark RDD remove records with multiple keys,"non_duplicated = sc.broadcast(set(
    counts.filter(lambda x: x[1] == 1).keys().collect()
))

a.filter(lambda x: x[0] in non_duplicated.value)
"
Creating a loop for two dates,"def daterange(d1, d2):
    return (d1 + datetime.timedelta(days=i) for i in range((d2 - d1).days + 1))

for d in daterange(date1, date2):
    print d.strftime('%Y.%m.%d')
"
For loop python multiple checks,">>> strs1 = ""your future doesn't look good.""
>>> strs2 = ""Your FUTURE looks good.""
>>> 'FUTURE' or 'future' in strs1
'FUTURE'
>>> 'Foobar' or 'future' in strs1
'Foobar'
>>> 'Foobar' or 'cat' in strs1
'Foobar'
>>> '' or 'cat' in strs1    #  empty string is a falsey value,
False                       #  so now it checks the  next condition
"
Pandas prints to screen corrently but saves only some data to csv,"os.chdir(my_dir)
glb = glob.iglob('*.txt')

with open(""monthly.csv"", ""w"") as f:
    p= pd.read_csv(next(glb), names=['Name', 'Date', 'Open', 'High',
                                  'Low', 'Close', 'Volume', 'Null'])
    del p[""Null""]
    p.to_csv(f)
    for files in glb:
        p = pd.read_csv(files, names=['Name', 'Date', 'Open', 'High',
                                      'Low', 'Close', 'Volume', 'Null'])
        del p[""Null""]
        p.to_csv(f, sep=',', header=False)
"
Is there a `?.` operator in Python?,"L = getattr(L, 'string', None)
"
Getting Data from an SNMP port in Python,">>> print varBinds
[(ObjectName(1.3.6.1.2.1.1.1.0), OctetString('Example Command Responder'))]
>>> print varBinds[0]
(ObjectName(1.3.6.1.2.1.1.1.0), OctetString('Example Command Responder'))
>>> print varBinds[0][0]
1.3.6.1.2.1.1.1.0
>>> print varBinds[0][1]
Example Command Responder
"
beautifulsoup configure autoclosing tags,">>> print BeautifulSoup(txt, 'html.parser').prettify()
<html>
 <body>
  <ul>
   <li>
    1
    <li>
     2
    </li>
   </li>
  </ul>
 </body>
</html>
"
Pythonic way to have code-reuse in game Entity classes,"class Player(Collidable, Movable, Drawable, Controllable):
    def __init__(name, **kwargs):
        self.name = name
        super(Player, self).__init__(**kwargs)
"
"Learn Python the hard way, exercise 10.4","x == repr(eval(x))
"
How to tell whether an update statement is successful in pysqlite 2.6.3,">>> cursor.execute('UPDATE nonesuch SET baz=3 WHERE bar=2')
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
sqlite3.OperationalError: no such table: nonesuch
>>> cursor.execute('UPDATE foo SET nonesuchcolumn=3 WHERE bar=2')
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
sqlite3.OperationalError: no such column: nonesuchcolumn
"
creating and match token between two dictionaries,"test_string = 'A177T'
to_search = 'COADREAD ZNF271 Missense_Mutation MAAA-AA-3947 Q14591 A177T'
if test_string in to_search.split(' '):
    print ""found"", test_string
"
Match rows and columns of two DataFrames,"df1 = df1.reindex_like(df2)
"
Python: Text saving issue,"with open('output.txt', 'w') as f:
    f.write(some_string)
"
Weird string stripping,">>> vtype = ""vidis.fit""
>>> vtype.rstrip(""dis.fit"")
'v'
>>> vtype.rstrip(""ditfs."")
'v'
"
How to find out to which QTableWidget a QPushbutton belongs to?," button.parent().table
"
Calculating the time difference between two datetime values in Python,"b = datetime.now()
"
convert data table format in python,"import  csv
from collections import OrderedDict   
d  = OrderedDict()

with open(""in.txt"") as f:
    for k, _, v in csv.reader(f, delimiter="" ""):
        d.setdefault(k, []).append(v)
"
How to programmatically create new objects from rows of data in Python / Pandas,"EventObjects['<Name>'].time
"
Find Two Sets of Python Numpy Arrays on Common Column,"import numpy as np

a = np.array([[  20  ,6.88780375e-04],
     [  30 ,  4.296339997e-04],[  40 , -1.06232578e-03],
     [  50  ,-1.219884414e-03],[  60 , -1.27936723e-03],[  10  ,9.689474368e-04],])

b = np.array([[  30 ,  6.687897368e-04],[  40  , 2.887890375e-04],
     [  50 ,  3.293467897e-04],[  60 , -8.067893578e-03],
     [  70 , -7.213988414e-03],[  80 , -8.278967323e-03],])

a.sort(axis=0)
b.sort(axis=0)

def merge(a, b):
    c = []
    d = []
    ai = 0
    bi = 0
    while(ai < len(a) and bi < len(b)):
        av = a[ai]
        bv = b[bi]
        if av[0] == bv[0]:
            c.append(av)
            d.append(bv)
            ai += 1
            continue
        if av[0] < bv[0]:
            ai += 1
            continue
        else:
            bi += 1
            continue

    return np.array(c), np.array(d)


print merge(a,b)
"
How to calculate cohen's d in Python?,"-0.5567679522645598
"
Print XML tag attributes using element tree,"import xml.etree.cElementTree as etree
from pprint import pprint
tree = etree.parse('find_title.xml')
for value in tree.getiterator(tag='title'):
    print value.text
for value in tree.getiterator(tag='page'):
    pprint(value.attrib)
"
Fetching data with Python's asyncio in a sequential order,"@asyncio.coroutine
def fetch(url):
    response = yield from aiohttp.request('GET', url)
    response = yield from response.read_and_close()
    return response.decode('utf-8')

@asyncio.coroutine
def print_page(url):
    page = yield from fetch(url)
    print(page)

@syncio.coroutine
def print_pages_sequential(url, num_pages):
    for food in range(num_pages):
        menu_url = url + '/' + str(food)
        yield from print_page(menu_url)

l = [print_pages_sequential('http://a-restaurant.com/menu', 10)]

conc_url = 'http://another-restaurant.com/menu'
for food in range(10):
    menu_url = conc_url + '/' + str(food)
    l.append(print_page(menu_url))

loop.run_until_complete(asyncio.wait(l))
"
django-auth-ldap - Display user information from LDAP in custom view,"from django.db import models
from django.contrib.auth.models import User
from django.db.models.signals import post_save

class UserProfile(models.Model):
    # This field is required.
    user = models.OneToOneField(User)
    # Other fields here
    uid = models.CharField(max_length=254)
    cn = models.CharField(max_length=254)
    sn = models.CharField(max_length=254)
    givenName = models.CharField(max_length=254)
    userPassword = models.CharField(max_length=254)
    shadowLastChange = models.IntegerField(null=True)
    shadowMax = models.IntegerField(null=True)
    shadowWarning = models.IntegerField(null=True)
    loginShell = models.CharField(max_length=254)
    uidNumber = models.IntegerField(null=True)
    gidNumber = models.IntegerField(null=True)
    homeDirectory = models.CharField(max_length=254)
    gecos = models.CharField(max_length=254)
    mail = models.EmailField(max_length=254)
    l = models.CharField(max_length=254)
    telephoneNumber = models.CharField(max_length=254)

def create_user_profile(sender, instance, created, **kwargs):
    #if created:
    #    UserProfile.objects.create(user=instance)
    UserProfile.objects.get_or_create(user=instance)

post_save.connect(create_user_profile, sender=User)
"
How to decode cp1252 string?,"debug ('cp1252', 'utf8') Zемфира
Zемфира
debug ('cp1252', 'cp1251') Zемфира
Zемфира
debug ('cp1252', 'utf8', 'cp1252', 'cp1251') Zемфира
Zемфира
"
lists and dictinarys not working in an if/elif statement,">>> from collections import Counter

>>> class Inventory(object):
    def __init__(self, items = None):
        if items is None:
            self.reset()
        else:
            self.items = items

    def reset(self):
        self.items = []

    def report(self):
        if not self.items:
            print(""Your sac is empty."")
            return

        print(""You have {} items in your sac."".format(len(self.items)))
        counter = Counter(self.items).items()
        for count, item in counter:
            print(""{: >3} {}"".format(item, count))


>>> inv = Inventory(['knife', 'rock', 'rock', 'cloth'])

>>> inv.report()
You have 4 items in your sac.
  1 cloth
  1 knife
  2 rock

>>> inv.items.append('coin')

>>> inv.report()
You have 5 items in your sac.
  1 cloth
  1 coin
  1 knife
  2 rock

>>> inv.items.remove('rock')

>>> inv.report()
You have 4 items in your sac.
  1 cloth
  1 coin
  1 knife
  1 rock

>>> inv.reset()

>>> inv.report()
Your sac is empty.
"
How do I change the built-in button labels on a gtk.Assistant?,"def get_buttons_hbox(assistant):
    # temporarily add a widget to the action area and get its parent
    label = gtk.Label('')
    assistant.add_action_widget(label)
    hbox = label.get_parent()
    hbox.remove(label)
    return hbox
"
Python appending file remotely,"from fabric.api import (cd, env, run)
from time import time

env.host_string = ""127.0.0.1:2222""
env.user = ""jfroco""
env.password = ""*********""

remote_path = ""/home/jfroco/development/fabric1""
remote_file = ""test.txt""

variable = ""My time is %s"" % time()

with cd(remote_path):
    run(""echo '%s' >> %s"" % (variable, remote_file))
"
generate N random numbers from a skew normal distribution using numpy,"# literal adaption from:
# http://stackoverflow.com/questions/4643285/how-to-generate-random-numbers-that-follow-skew-normal-distribution-in-matlab
# original at:
# http://www.ozgrid.com/forum/showthread.php?t=108175
def rand_skew_norm(fAlpha, fLocation, fScale):
    sigma = fAlpha / np.sqrt(1.0 + fAlpha**2) 

    afRN = np.random.randn(2)
    u0 = afRN[0]
    v = afRN[1]
    u1 = sigma*u0 + np.sqrt(1.0 -sigma**2) * v 

    if u0 >= 0:
        return u1*fScale + fLocation 
    return (-u1)*fScale + fLocation 

def randn_skew(N, skew=0.0):
    return [rand_skew_norm(skew, 0, 1) for x in range(N)]

# lets check they at least visually match the PDF:
plt.subplots(figsize=(12,4))
for alpha_skew in SKEW_PARAMS:
    p = randn_skew(NUM_SAMPLES, alpha_skew)
    sns.distplot(p)
"
Searching python list for presence of combinations of only a set of strings,"In [1]: st = {""string3"", ""string1""}

In [2]: my_list = ['string1', 'string2', 'string3']

In [3]: st.issuperset(my_list)
Out[3]: False

In [4]: my_list = ['string1', 'string3']

In [5]: st.issuperset(my_list)
Out[5]: True

In [6]: my_list = ['string1']

In [7]: st.issuperset(my_list)
Out[7]: True

In [8]: my_list = ['string3']

In [9]: st.issuperset(my_list)
Out[9]: True
"
Why does it take longer to dump and load with pickle.HIGHEST_PROTOCOL?,">>> dumped = cPickle.dumps(MyObject(100), 0)
>>> timeit.timeit('cPickle.loads(dumped)', 'from __main__ import cPickle, dumped')
4.6161839962005615
>>> dumped = cPickle.dumps(MyObject(100), 1)
>>> timeit.timeit('cPickle.loads(dumped)', 'from __main__ import cPickle, dumped')
4.351701021194458
>>> dumped = cPickle.dumps(MyObject(100), 2)
>>> timeit.timeit('cPickle.loads(dumped)', 'from __main__ import cPickle, dumped')
2.3936450481414795
"
lerp movement and keyboard movement buttons - fast pressing cause a character stuck in place,"# added constants
LEFT_KEY = K_a
RIGHT_KEY = K_d
LURU, LDRU, LURD, LDRD = range(4)  # velocity states
LD, RD, LU, RU = range(4)  # velocity key events
VEL_EVENTS = {LD, RD, LU, RU}  # all possible velocity key events
MAX_VELOCITY = 200

class EventManagement(object):
''' Handles keyboard event's.
Toggles player variables according to the event's.
'''
    def __init__(self, player):
        self.player = player
        self.state = LURU

    def is_doneloop(self, flag):
        global is_doneloop
        is_doneloop = flag
        return is_doneloop

    def listen(self):
        ''' Toggles player variables according to keyboard/mouse input.
        '''
        for event in pygame.event.get():
            vel_event = None

            if event.type == QUIT:
                self.is_doneloop(True)
                break

            if event.type == KEYDOWN:
                if event.key == LEFT_KEY:
                    vel_event = LD
                elif event.key == RIGHT_KEY:
                    vel_event = RD

            if event.type == KEYUP:
                if event.key == K_ESCAPE:
                    self.is_doneloop(True)
                    break
                if event.key == LEFT_KEY:
                    vel_event = LU
                elif event.key == RIGHT_KEY:
                    vel_event = RU

            if vel_event in VEL_EVENTS:
                if self.state == LURU:
                    if vel_event == LD:
                        self.player.velocity_goal.x = -MAX_VELOCITY
                        self.state = LDRU
                    elif vel_event == RD:
                        self.player.velocity_goal.x = MAX_VELOCITY
                        self.state = LURD
                elif self.state == LDRU:
                    if vel_event == RD:
                        self.state = LDRD
                    elif vel_event == LU:
                        self.state = LURU
                        self.player.velocity_goal.x = 0
                elif self.state == LURD:
                    if vel_event == LD:
                        self.state = LDRD
                    elif vel_event == RU:
                        self.state = LURU
                        self.player.velocity_goal.x = 0
                elif self.state == LDRD:
                    if vel_event == LU:
                        self.state = LURD
                        self.player.velocity_goal.x = MAX_VELOCITY
                    elif vel_event == RU:
                        self.state = LDRU
                        self.player.velocity_goal.x = -MAX_VELOCITY

    #-------------------------------------------------------------------------
"
Python List Indexing or Appending?,"from timeit import timeit

some_array = [(i, 'a', True) for i in range(0,100000)]

def use_comprehension():
    return [(b, a, i) for i, a, b in some_array]

def use_enumerate():
    lst = []
    for j, k in enumerate(some_array):
        i, a, b = k
        lst.append((b, a, i))
    return lst

def use_for_in_with_append():
    lst = []
    for i in some_array:
        i, a, b = i
        lst.append((b, a, i))
    return lst

def use_for_in_with_indexes():
    lst = [None] * len(some_array)
    for j in range(len(some_array)):
        i, a, b = some_array[j]
        lst[j] = (b, a, i)
    return lst

print('comprehension:', timeit(use_comprehension, number=200))
print('enumerate:', timeit(use_enumerate, number=200))
print('for in append:', timeit(use_for_in_with_append, number=200))
print('for in indexes:', timeit(use_for_in_with_indexes, number=200))
"
Parsing json file with changeable structure in Python,"if 'itemDetails' in json_file['document']:
    item_details = {'0': json_file['document']['itemDetails']}
else:
    item_details = {k: v['itemDetails'] for k, v in json_file['document'] if k != 'other'}
"
Elaborate on the following line,"lst = []
for f in listdir(mypath):
    if isfile(join(mypath, f)):
        lst.append(f)
"
How to force pandas read_csv to use float32 for all float columns?,"df = pd.read_csv(filename, nrows=100)
>>> df
   int_col  float1 string_col  float2
0        1     1.2          a     2.2
1        2     1.3          b     3.3
2        3     1.4          c     4.4

>>> df.info()
<class 'pandas.core.frame.DataFrame'>
Int64Index: 3 entries, 0 to 2
Data columns (total 4 columns):
int_col       3 non-null int64
float1        3 non-null float64
string_col    3 non-null object
float2        3 non-null float64
dtypes: float64(2), int64(1), object(1)

df32 = pd.read_csv(filename, engine='c', dtype={c: np.float32 for c in float_cols})
>>> df32.info()
<class 'pandas.core.frame.DataFrame'>
Int64Index: 3 entries, 0 to 2
Data columns (total 4 columns):
int_col       3 non-null int64
float1        3 non-null float32
string_col    3 non-null object
float2        3 non-null float32
dtypes: float32(2), int64(1), object(1)
"
How to exchange the role of values and index in pandas DataFrame?,"print work.stack().reset_index(name='Name')
       Duty        Day     Name
0   Cooking     Monday     Adam
1   Cooking  Wednesday      Bob
2   Cooking     Friday  Charles
3  Cleaning     Monday      Bob
4  Cleaning  Wednesday  Charles
5  Cleaning     Friday     Adam
6   Grocery     Monday  Charles
7   Grocery  Wednesday     Adam
8   Grocery     Friday      Bob
"
Perl regex vs. Python regex non-capture seems to work differently,"import re

string = 'I have values ""1"" and ""1.5"" also ""12.555""'
m = re.findall(r'\""(\d+|\d+\.\d+)\""', string)
print "", "" . join(m)
"
DNA sequencing using python,"Sorting by descending length (list.sort())
startstring = 'ACCGXXCXXGTTACTGGGCXTTGT'
array = startstring.split('X')
array.sort(key=len, reverse=True)
print(array[0]) #print the longest since we sorted for descending lengths
print(len(array[0])) # Would give you the length of the longest substring
"
Filter on range of datetimes in django rest framework,"        if start_datetime:
            start_datetime = datetime.combine(start_datetime, time.min)
            if stop_datetime:
                stop_datetime = datetime.combine(stop_datetime, time.max)
                return slice(start_datetime, stop_datetime)
"
How do I run the same query across X number of days efficiently?,"SELECT * from tbl_failures
WHERE (cause = '{fail_type} failed') AND (date_field between date_sub(curdate(), interval 7 day) and curdate()))
Group by tbl_failures.Type
"
Python: sorting multilevel dictionary by part of key,"from datetime import datetime

D = {'28.10.11/D/text1/' : {'key':'value1'},
     '27.01.11/D/text2/' : {'key':'value2'},
     '07.11.12/D/text3/' : {'key':'value3'}}

for k in sorted(D,key=lambda k: datetime.strptime(k[:8],""%d.%m.%y"")):
    print(k,D[k])
"
How to use a functional in this case?,"def process_df(df, function, *args, **kwargs):
    function(df, *args, **kwargs)
"
Is there a way to update a dictionary without changing any contained mutable types?,"{'bb': {'bb1': 1, 'bb2': 2}}
{'bb': {'bb1': 11, 'bb2': 22}}
{'cc': {'cc2': 22, 'cc1': 11}}
"
Re-order a numpy array python,"x1 = x.reshape(2, 3, 8)
print(repr(x1))
# array([[[ 1,  2,  3,  4,  5,  6,  7,  8],
#         [ 9, 10, 11, 12, 13, 14, 15, 16],
#         [17, 18, 19, 20, 21, 22, 23, 24]],

#        [[25, 26, 27, 28, 29, 30, 31, 32],
#         [33, 34, 35, 36, 37, 38, 39, 40],
#         [41, 42, 43, 44, 45, 46, 47, 48]]])
print(x1.shape)
# (2, 3, 8)
"
(Usage of Class Variables) Pythonic - or nasty habit learnt from java?,">>> x.Counter
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
AttributeError: 'MyClass' object has no attribute 'Counter'
"
Pandas: How to get a new dataframe filled with unions of 2 or 3 or X other dataframes?,"import pandas as pd

df1 = pd.DataFrame({'A': range(5)}, index=list('abcde'))
df2 = pd.DataFrame({'A': range(5)}, index=list('AbCdE'))
print(df1)
#    A
# a  0
# b  1
# c  2
# d  3
# e  4

print(df2)
#    A
# A  0
# b  1
# C  2
# d  3
# E  4

print(df1.reindex(df1.index.intersection(df2.index)))
"
Reading chunks of csv file in Python using pandas,"In [123]: df['date'].where(mask, np.nan).fillna(method='ffill')
Out[123]: 
0    EUR
1    EUR
2    EUR
3    EUR
4    EUR
5    USD
6    USD
7    USD
8    USD
9    USD
Name: date, dtype: object
"
Possible to compress into a dictionary comprehension?,"import timeit
>>> timeit.timeit(""{('column_%d' % i): range(i,81, 9) for i in xrange(9)}"", number = 100000)
1.3790168762207031
>>> timeit.timeit(""index=range(0,81);{('column_%d' % i): index[i:81:9] for i in xrange(9)}"", number = 100000)
1.1949927806854248
"
"Create parser with subcommands in argparse, customize positional argument(s)","if args.cmd=='new':
with open(args.filename[0] + '.txt', 'w') as f:
     # do something with the newly created file
"
How to call a form.py in another application,"from Customer.models import GENDERCHOICES

ExampleModel(models.Model):
   type = models.CharField(max_length=1,choices=GENDERCHOICES)
"
Extracting part of string in parenthesis using python,">>> a = ""DRC(Carbamidomethyl)KPVNTFVHESLADVQAVC(Carbamidomethyl)SQKNVACK""
>>> while True:
...     begin, end  = a.find('('), a.find(')')
...     if begin != -1 and end != -1:
...         a = a[:begin] + a[end+1:] + "" "" + a[begin+1:end]
...     else:
...         break
...
>>> a
'DRCKPVNTFVHESLADVQAVCSQKNVACK Carbamidomethyl Carbamidomethyl'
"
extracting value from xml node,"['a', 'b', 'c', 'd']
{'b': '2', 'c': '3', 'a': '1'}
"
Item not included in for loop made in Scrapy,"info.xpath('.//div[@class=""header""]//text() | ./parent::div[@class=""rows""]/preceding-sibling::div[@class=""header""]//text()').extract()
"
how to copy only upper triangular values into array from numpy.triu()?,">>> list(A[np.triu_indices(3)])
[4, 0, 3, 4, -2, 7]
"
Getting Home Directory with pathlib,"from pathlib import WindowsPath
import os.path

class PathTest(WindowsPath):

    def __new__(cls, *args, **kwargs):
        return super(PathTest, cls).__new__(cls, *args, **kwargs)

    @classmethod
    def expanduser(cls):
        """""" Return a new path with expanded ~ and ~user constructs
        (as returned by os.path.expanduser)
        """"""
        return cls(os.path.expanduser('~'))

p = PathTest('C:/')
print(p) # 'C:/'

q = PathTest.expanduser()
print(q) # C:\Users\Username
"
Querying for NaN and other names in Pandas,">>> pi = np.pi; nan = np.nan
>>> df = pd.DataFrame({""value"": [3,4,9,10,11,np.nan,12]})
>>> df.query(""(value < 10) and (value > @pi)"")
   value
1      4
2      9
"
Sending Python function as Boost.Function argument,"#include <boost/python.hpp>
#include <boost/function.hpp>

struct http_manager
{
  void get_async(std::string url, boost::function<void(int)> on_response)
  {
    if (on_response)
    {
      on_response(42);
    }
  }
} http;

void http_manager_get_async_aux(
  http_manager& self, std::string url, boost::python::object on_response)
{
  return self.get_async(url, on_response);
}

BOOST_PYTHON_MODULE(example)
{
  namespace python = boost::python;
  python::class_<http_manager>(""HttpManager"", python::no_init)
    .def(""get_async"", &http_manager_get_async_aux);

  python::scope().attr(""http"") = boost::ref(http);
}
"
Format a timestring in python,">>> import datetime
>>> strptime = datetime.datetime.strptime
>>> s = ""2013-02-20 17:57:25+00:00""
>>> # Using s[:-6] to trim off the timezone
>>> strptime(s[:-6], ""%Y-%m-%d %H:%M:%S"").strftime(""%b %d, %Y %I:%M %p"")
'Feb 20, 2013 05:57 PM'
"
Python- How to generate random integers with multiple ranges?,"from random import randint, choice

for _ in range(5):
    r = choice([(1,5),(9,15),(21,27)])
    print(randint(*r))
"
Comparing each variable in a list to each variable in another list,"import itertools
itertools.product(a, b)
"
processing text from a non-flat file (to extract information as if it *were* a flat file),"for time, description, var1, var2, var3 in read_as_flat( someFile ):
    etc.
"
Constructing a 3D cube of points from a list,"import numpy as np
import timeit

def meth1(pts):
   pts = np.array(pts)  #Skip if pts is a numpy array already
   lp = len(pts)
   arr = np.zeros((lp,lp,lp,3))
   arr[:,:,:,0] = pts[:,None,None]  #None is the same as np.newaxis
   arr[:,:,:,1] = pts[None,:,None]
   arr[:,:,:,2] = pts[None,None,:]
   return arr

def meth2(pts):
   lp = len(pts)
   N = lp
   arr = np.zeros((lp,lp,lp,3))
   for i in xrange(0, N):
      for j in xrange(0, N):
         for k in xrange(0, N):
            arr[i,j,k,0] = pts[i]
            arr[i,j,k,1] = pts[j]
            arr[i,j,k,2] = pts[k]

   return arr

pts = range(10)
a1 = meth1(pts)
a2 = meth2(pts)

print np.all(a1 == a2)

NREPEAT = 10000
print timeit.timeit('meth1(pts)','from __main__ import meth1,pts',number=NREPEAT)
print timeit.timeit('meth2(pts)','from __main__ import meth2,pts',number=NREPEAT)
"
"Get NumPy Array Indices in Array B for Unique Values in Array A, for Values Present in Both Arrays, Aligned with Array A","import numpy as np
A = np.asarray(['4', '4', '2', '8', '8', '8', '8', '8', '16', '32', '16', '16', '32'])
B = np.asarray(['2', '4', '8', '16', '32'])
idx_of_a_in_b=np.argmax(A[np.newaxis,:]==B[:,np.newaxis],axis=0)
print(idx_of_a_in_b)
"
How to pickle a class instance's variables selectively?,"    def __setstate__(self, state):
        self.__init__(*state)
"
String Variations,"def apply_rules(rules, input, start=0):
    # First yield the outcome of no applied rules.
    yield input[start:]

    for match, replace in rules:
        # Find the first match for this rule.
        index = input.find(match, start)
        if index < 0:
            # No match -- skip to next one
            continue
        # Prepare the result of the replacement.
        prefix = input[start:index] + replace
        # Apply further rules to the rest of the string
        # by a recursive call.
        for suffix in apply_rules(rules, input, index + len(match)):
            yield prefix + suffix
"
Nested DictReaders not resetting,"with open('tblBuilding.csv', newline='') as building_file:
    building = csv.DictReader(building_file, delimiter=',', quotechar='""')
    buildings = {b['BuildingName']: b['BuildingID'] for b in building}
"
"Bash or Python, When print characters to terminal, how to CHANGE a character at a FIXED position?","import sys
sys.stdout.write('this is a very long line')
sys.stdout.write('\rshort line')
sys.stdout.write('\n')
"
Combining generators,"pickle.dump(list(itertools.chain.from_iterable(
              myListGenerator(i) for i in range(10))), pickleFile)
"
how to print lists within a tuple in straight line,"numbers = [[3, 4, 5, 6, 7], [4, 5, 7, 8, 9], [6, 7, 9, 5, 3], [3, 23, 56, 67, 4],
           [54, 67, 4, 3, 2], [4, 5, 6, 7, 7], [8, 8, 8, 8, 8]]

print("" "".join([""Row{:<2}"".format(i) for i in range(1, len(numbers[0])+1)]))
for w1 in numbers:
    print("""".join([""{:^6}"".format(i) for i in w1]))
"
Reading all string from a server socket which has not been closed,"byte[] frame = readPacket(in);
String[] lines = new String(frame, StandardCharsets.UTF8).split(""\n"");
// Do something with the lines
"
Write a dataframe with only integer values,"print output_df
   Division                      comment    id  matchId   name
0         1  StackOverflow is quite good  3870       43  name1
1         1  StackOverflow is quite good  4537       43  name2
2         1  StackOverflow is quite good  5690       43  name3

print output_df.dtypes
Division    float64
comment      object
id          float64
matchId     float64
name         object
dtype: object

def convert_to_int(x):
    try:
        return x.astype(int)
    except:
        return x

output_df = output_df.apply(convert_to_int)

print output_df
   Division                      comment    id  matchId   name
0         1  StackOverflow is quite good  3870       43  name1
1         1  StackOverflow is quite good  4537       43  name2
2         1  StackOverflow is quite good  5690       43  name3

print output_df.dtypes
Division     int32
comment     object
id           int32
matchId      int32
name        object
dtype: object
"
Using regex to replace object within brackets in a text file,"This is the line   
(And) another line
 initially shifted
the last
    Additional ending lines (this one without brackets):    
cases
tuvulugusti perenabdiiii
 shifted content
    fgjezhr][fgh
"
Python string clean up: How can I remove the excess of newlines of a string in python?,">>> a = ""This is my sample text.\r\n\r\n\r\n\r\n\r\n Here start another sample text""
>>> import re
>>> re.sub(r'(\r\n){2,}','\r\n', a)
'This is my sample text.\r\n Here start another sample text'
"
Parsing GET request data with from SimpleHTTPServer,"    def do_GET(self):
        bits = urlparse.urlpase(self.path)
        self.db.execute(""""""INSERT INTO GetLog (command, vers, scheme, netloc, 
                                               path, params, query, fragment,
                                               username, password, hostname, port)
                           VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"""""",
                        (self.command, self.request_version, bits.scheme, bits.netloc,
                         bits.path, bits.params, bits.query, bits.fragment,
                         bits.username, bits.password, bits.hostname, bits.port))
        return super(DBLoggingHandler, self).do_GET()
"
Not sure how to parse this,"soup.select('div.meaning > span.hinshi')[0].next_sibling
"
Converting a List of Tuples into a Dict in Python,"l = [
('a', 1),
('a', 2),
('a', 3),
('b', 1),
('b', 2),
('c', 1),
]

d = {}
for x, y in l:
    d.setdefault(x, []).append(y)
print d
"
Python - split list in to sublists based on another list,">>> l1 = [0, 0.002, 0.3, 0.5, 0.6, 0.9, 1.3, 1.9] 
>>> l2 = [0.5, 1.0, 1.5, 2.0]
>>> list(partition(l1, l2))
[[0, 0.002, 0.3], [0.5, 0.6, 0.9], [1.3], [1.9]]
"
How to read just lists in a text file in Python?,"import ast
with open(""test.txt"") as f:
    user_info = ''
    for i,line in enumerate(f):
        user_info += line
        if  i==5:
            break
    registros = [ast.literal_eval(x) for x in f if x.startswith('[')]
"
How to understand wxGridBagSizer?,"import wx

class MyFrame1 ( wx.Frame ):

    def __init__( self, parent ):
        wx.Frame.__init__ ( self, parent, id = wx.ID_ANY, title = wx.EmptyString, pos = wx.DefaultPosition, size = wx.Size( 561,401 ), style = wx.DEFAULT_FRAME_STYLE|wx.TAB_TRAVERSAL )

        self.SetSizeHintsSz( wx.DefaultSize, wx.DefaultSize )

        gbSizer1 = wx.GridBagSizer( 0, 0 )
        gbSizer1.SetFlexibleDirection( wx.BOTH )
        gbSizer1.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )

        gbSizer1.SetMinSize( wx.Size( 0,0 ) )
        self.m_panel25 = wx.Panel( self, wx.ID_ANY, wx.DefaultPosition, wx.Size( 40,10 ), wx.TAB_TRAVERSAL )
        self.m_panel25.SetBackgroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_WINDOWTEXT ) )

        gbSizer1.Add( self.m_panel25, wx.GBPosition( 0, 0 ), wx.GBSpan( 1, 3 ), wx.EXPAND |wx.ALL, 5 )

        self.m_panel41 = wx.Panel( self, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, wx.TAB_TRAVERSAL )
        gbSizer1.Add( self.m_panel41, wx.GBPosition( 5, 0 ), wx.GBSpan( 1, 1 ), wx.EXPAND |wx.ALL, 5 )

        self.m_panel26 = wx.Panel( self, wx.ID_ANY, wx.DefaultPosition, wx.Size( 10,10 ), wx.TAB_TRAVERSAL )
        self.m_panel26.SetBackgroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_INFOBK ) )

        gbSizer1.Add( self.m_panel26, wx.GBPosition( 0, 3 ), wx.GBSpan( 1, 1 ), wx.ALL, 5 )

        self.m_panel28 = wx.Panel( self, wx.ID_ANY, wx.DefaultPosition, wx.Size( 10,10 ), wx.TAB_TRAVERSAL )
        self.m_panel28.SetBackgroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_INFOBK ) )

        gbSizer1.Add( self.m_panel28, wx.GBPosition( 0, 4 ), wx.GBSpan( 1, 1 ), wx.ALL, 5 )

        self.m_panel27 = wx.Panel( self, wx.ID_ANY, wx.DefaultPosition, wx.Size( 10,10 ), wx.TAB_TRAVERSAL )
        self.m_panel27.SetBackgroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_INFOBK ) )

        gbSizer1.Add( self.m_panel27, wx.GBPosition( 0, 5 ), wx.GBSpan( 1, 1 ), wx.ALL, 5 )

        self.m_panel29 = wx.Panel( self, wx.ID_ANY, wx.DefaultPosition, wx.Size( 40,10 ), wx.TAB_TRAVERSAL )
        self.m_panel29.SetBackgroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_INFOBK ) )

        gbSizer1.Add( self.m_panel29, wx.GBPosition( 0, 6 ), wx.GBSpan( 1, 3 ), wx.EXPAND |wx.ALL, 5 )

        self.m_panel40 = wx.Panel( self, wx.ID_ANY, wx.DefaultPosition, wx.Size( 40,10 ), wx.TAB_TRAVERSAL )
        self.m_panel40.SetBackgroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_INFOTEXT ) )

        gbSizer1.Add( self.m_panel40, wx.GBPosition( 1, 3 ), wx.GBSpan( 5, 6 ), wx.EXPAND |wx.ALL, 5 )

        self.m_panel31 = wx.Panel( self, wx.ID_ANY, wx.DefaultPosition, wx.Size( 40,10 ), wx.TAB_TRAVERSAL )
        self.m_panel31.SetBackgroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_HIGHLIGHT ) )

        gbSizer1.Add( self.m_panel31, wx.GBPosition( 1, 0 ), wx.GBSpan( 1, 3 ), wx.ALL, 5 )

        self.m_panel32 = wx.Panel( self, wx.ID_ANY, wx.DefaultPosition, wx.Size( 40,10 ), wx.TAB_TRAVERSAL )
        self.m_panel32.SetBackgroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_HIGHLIGHT ) )

        gbSizer1.Add( self.m_panel32, wx.GBPosition( 2, 0 ), wx.GBSpan( 1, 3 ), wx.ALL, 5 )

        self.m_panel39 = wx.Panel( self, wx.ID_ANY, wx.DefaultPosition, wx.Size( 40,10 ), wx.TAB_TRAVERSAL )
        self.m_panel39.SetBackgroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_HIGHLIGHT ) )

        gbSizer1.Add( self.m_panel39, wx.GBPosition( 3, 0 ), wx.GBSpan( 1, 3 ), wx.ALL, 5 )

        self.m_panel40 = wx.Panel( self, wx.ID_ANY, wx.DefaultPosition, wx.Size( 40,10 ), wx.TAB_TRAVERSAL )
        self.m_panel40.SetBackgroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_HIGHLIGHT ) )

        gbSizer1.Add( self.m_panel40, wx.GBPosition( 4, 0 ), wx.GBSpan( 1, 3 ), wx.ALL, 5 )


        self.SetSizer( gbSizer1 )
        self.Layout()

        self.Centre( wx.BOTH )


def main():
    app = wx.App(False)
    MainFrame = MyFrame1(None)
    MainFrame.Show()
    app.MainLoop()

if __name__ == '__main__':
    main()
"
Finding first non-zero value along axis of a sorted two dimensional numpy array,">>> a
array([[0, 0, 0, 1, 1, 1, 1],
       [0, 0, 0, 1, 1, 1, 1],
       [0, 0, 0, 0, 1, 1, 1],
       [0, 0, 0, 0, 0, 0, 1],
       [0, 0, 0, 0, 0, 0, 1],
       [0, 0, 0, 0, 0, 0, 1],
       [0, 0, 0, 0, 0, 0, 0]])
>>> np.where(a>0)
(array([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 3, 4, 5]), array([3, 4, 5, 6, 3, 4, 5, 6, 4, 5, 6, 6, 6, 6]))
"
