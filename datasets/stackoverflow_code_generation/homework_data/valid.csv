intent,snippet
Python 3 static members,"    @staticmethod
    def get_username():
        if username is None:
        ...
"
Expose a vector as a memoryview using SWIG,"%module test

%{
#include ""test.hh"" 

namespace {
  template <typename T>
  struct info {
    static bool is_readonly() {
      return false;
    }
  };

  template <typename T>
  struct info<const T&> {
    static bool is_readonly() {
      return true;
    }
  };
}
%}

%typemap(out) std::vector<uint8_t>&, const std::vector<uint8_t>& {
  Py_buffer *buf=(Py_buffer*)malloc(sizeof *buf);
  const bool ro = info<$1_type>::is_readonly();
  if (PyBuffer_FillInfo(buf, NULL,  &((*$1)[0]), (*$1).size(), ro, PyBUF_ND)) {
    // error, handle
  }
  $result = PyMemoryView_FromBuffer(buf);
}

%include ""test.hh""
"
Handling nested elements with Python lxml,"from lxml import etree

tree = etree.parse('data.xml')

paragraphs = tree.xpath('/abstract/para/text()')
keywords = tree.xpath('/keywordSet/keyword/text()')

print paragraphs
print keywords
"
Create List of Single Item Repeated n Times in Python,"[e] * n
"
Accessing class method vairable in instance method,"Parent initialized
parent method
P
Parent initialized
P
"
Checking for gzip or plain text and reading the file without checking extensions - python,"try: 
    fin = gzip.open(phrasetablefile, 'rb')
except:
    fin = open(phrasetablefile, 'rb')

for line in fin:
    pass # do something
fin.close()
"
Parse simple array and save it on a file,"def split_list(L, n):
  """"""split successive n-sized groups from L as a list 
  """"""
  from math import ceil
  parts = int(ceil(len(L)/float(n))) # ceilng division 5/2 ==> 3
  return [int(''.join(str(_) for _ in L[i*n: i*n + n])) for i in range(parts)]
"
Python 3: Demystifying encode and decode methods,">>> codecs.BOM_UTF32_LE
b'\xff\xfe\x00\x00'
>>> codecs.BOM_UTF32_BE
b'\x00\x00\xfe\xff'
"
How to extend class method,"class Base(object):
    def method(self):
        return ""I'm a base object!""

class Derived(Base):
    def method(self):
        return ""I'm a derived object!""

obj = Derived()
print obj.method()
"
Map a row index back to the original indexed dataframe,"df_negAssets.index
"
Using Python to parse complex arguments to shell script,"#!/bin/bash

usage=""[-f FILENAME] [-t|--truncate] [ARGS...]""
opts='
""-f""
""-t"", ""--truncate"",action=""store_true""
'

echo ""$(./bashparse.py ""$usage"" ""$opts"" ""$@"")""
eval ""$(./bashparse.py ""$usage"" ""$opts"" ""$@"")""

echo
echo OUTPUT

echo $f
echo $@
echo $0 $2
"
Is there a way to choose a specific representation when serializing a `ForeignKey`?,"for post in ...:
    post['author'] = post['author__username']
    del post['author__username']
"
To sum column with condition,"with open('data.txt') as f:
    next(f)
    d=dict()
    for x in f:
        if x.split()[0] not in d:
            d[x.split()[0]]=float(x.split()[2])
        else:
            d[x.split()[0]]+=float(x.split()[2])
"
Scatter plot of 10k record extracted from database,"momoisos = [row[0] for row in rows]
hist, bin_edges = np.histogram(monoisos, bins = 50)
mid = (bin_edges[1:] + bin_edges[:-1])/2
plt.plot(mid, hist, 'o')
plt.show()
"
Python Pandas dataframe: Collect values of a column,"print df['item_list'].apply(pd.Series).stack().tolist()
['beer', 'apple', 'pear', 'rice', 'egg', 'banana', 'oil', 
 'pear', 'beer', 'noodle', 'tomato', 'milk', 'apple']
"
What are the limitations of callback functions associated with Tkinter traces?,"$ python foo.py 
[('PY_VAR0', '', 'w')]
[('PY_VAR0', '', 'w'), ('PY_VAR0', '', 'w')]
[('PY_VAR0', '', 'w'), ('PY_VAR0', '', 'w'), ('PY_VAR0', '', 'w')]
"
Get random element by given priority,"['work A', 'work A', 'work A', 'work B', 'work B', 'work C', 'laundry', 'nothing']
"
Applying a function to a pandas col,"In [612]: df
Out[612]:
  zonedist1
0      R7-3
1      R3-2
2      R1-1
3      R1-2
4        R2
5       R2A
6       R2X
"
what's the difference between two implentations of RNN in tensorflow,"    # input shape: (batch_size, n_steps, n_input)
    _X = tf.transpose(_X, [1, 0, 2])  # permute n_steps and batch_size
    # Reshape to prepare input to hidden activation
    _X = tf.reshape(_X, [-1, n_input]) # (n_steps*batch_size, n_input)
    # Linear activation
    _X = tf.matmul(_X, _weights['hidden']) + _biases['hidden']
    # Split data because rnn cell needs a list of inputs for the RNN inner loop
    _X = tf.split(0, n_steps, _X) # n_steps * (batch_size, n_hidden)
"
Hard coded variables in python function,">>> import dis
>>> def foo(s):
...     c_string = ""hello""
...     if s == c_string:
...         return True
...     return False
... 
>>> dis.dis(foo)
  2           0 LOAD_CONST               1 ('hello')
              3 STORE_FAST               1 (c_string)

  3           6 LOAD_FAST                0 (s)
              9 LOAD_FAST                1 (c_string)
             12 COMPARE_OP               2 (==)
             15 POP_JUMP_IF_FALSE       22

  4          18 LOAD_GLOBAL              0 (True)
             21 RETURN_VALUE        

  5     >>   22 LOAD_GLOBAL              1 (False)
             25 RETURN_VALUE        
>>> foo.__code__.co_consts
(None, 'hello')
"
pygtk for touchscreen devices,"gtk.rc_parse(filename)
"
convert binary string to numpy array,">>> np.fromstring(b'\x00\x00\x80?\x00\x00\x00@\x00\x00@@\x00\x00\x80@', dtype='<f4') # or dtype=np.dtype('<f4'), or np.float32 on a little-endian system (which most computers are these days)
array([ 1.,  2.,  3.,  4.], dtype=float32)
"
Python convert set to string and vice versa,">>> s = set([1,2,3])
>>> strs = repr(s)
>>> strs
'set([1, 2, 3])'
>>> eval(strs)
set([1, 2, 3])
"
Numpy.histogram joining bins,"import numpy as np

# generate data
data = np.floor(np.random.randn(10000)*20+620)
data = dat[(560<dat) & (dat<650)]

# do what you're doing
heights,edges = np.histogram(data, bins=100, range=(data.min(),data.max()))
edges = edges[:-1]+(edges[1]-edges[0]) # shift first x coordinate to edges[1]
                                     # and drop last point: 1 more edge than bins

fig, ax = plt.subplots()
ax.plot(edges,heights)
"
Why does this script print an extraneous 'none' in the output,"print player.stats()
"
Python Requests Not Returning Same Header as Browser Request/cURL,"res = requests.post(url, data=form_data, headers=headers)
"
Return rows and columns from a 2d array using values from a 1d array in Numpy,">>> b = [1,3,5]
>>> a[:,b][b]
array([[ 4,  0,  1],
       [ 1,  7, 10],
       [ 2,  0,  9]])
>>> a[b][:,b]  #I think the same thing, but depending on data layout, one may be faster than the other
array([[ 4,  0,  1],
       [ 1,  7, 10],
       [ 2,  0,  9]])
"
using python quote_plus with slashes,"quote:  /description/id/34/the%20cat%20sat%20on
quote_plus:  %2Fdescription%2Fid%2F34%2Fthe+cat+sat+on
quote_plus with safe set:  /description/id/34/the+cat+sat+on
"
"Python How to modify Y value in a list of X,Y points for lines","newlines = []
for subline in lines:
    tmp = []
    for x,y in subline:
        tmp.append((x, y+dy))
    tmp = tuple(tmp)
    newlines.append(tmp)        
"
How can I check the value of a DNS TXT record for a host?,"import dns.resolver

for txtrecord in dns.resolver.query('google.com', 'TXT').answer.response:
   print txtrecord.to_text()
"
Sorting a List of List in Python by frequency,"from collections import Counter

freq = Counter(item[-1] for item in a)
result = sorted(a, key=lambda i: freq[i[-1]], reverse=True)
"
Tkinter focus_set and focus_force not working as expected,"import tkinter as tk
from tkinter import *
from tkinter import ttk

class DIS(tk.Tk):

    def __init__(self, *args, **kwargs):
        tk.Tk.__init__(self, *args, **kwargs)
        tk.Tk.iconbitmap(self, default="""")
        tk.Tk.wm_title(self, ""program"")
        container = tk.Frame(self)
        container.pack(side=""top"", fill=""both"", expand = True)
        container.grid_rowconfigure(0, weight = 1)
        container.grid_columnconfigure(0, weight = 1)

        self.frames = {}

        for F in (startPage, contactQues):
            frame = F(container, self)
            self.frames[F] = frame
            frame.grid(row = 0, column = 0, sticky = ""nsew"")
            self.show_frame(startPage)

    def show_frame(self, cont):
        frame = self.frames[cont]
        frame.tkraise()
        frame.postupdate()

class startPage(tk.Frame):
    def __init__(self, parent, controller):
        tk.Frame.__init__(self, parent)
        button2 = ttk.Button(self, text = ""Here's a Button"",
                    command=lambda: controller.show_frame(contactQues))
        button2.pack()

    def postupdate(self):
        pass

class contactQues(tk.Frame):

    def __init__(self, parent, controller):
        tk.Frame.__init__(self, parent)  
        self.controller = controller

        self.entry = Entry(self)
        self.entry.pack()

    def postupdate(self):
        self.entry.focus()

app = DIS()
app.mainloop()
"
Identifying Extrema in Financial Data using Pandas,"ret_df = pd.DataFrame({'SP500': spx['Close'].pct_change(),
                       'Bonds': tnx['Close'].pct_change(),
                       'Bear market': spx_bear})

ret_df.groupby('Bear market').agg('mean')

    Bonds   SP500
Bear market     
0   0.000042    0.000430
1   -0.002679   -0.003261


ret_df[ret_df['Bear market'] == 1][['Bonds','SP500']].corr()
    Bonds   SP500
Bonds   1.000000    0.253068
SP500   0.253068    1.000000
"
Differentiating between image of a document and another image,"convert nontextual.jpg -gravity center -crop 70x70%     \
    -colorspace gray -negate -threshold 10%          \
    -define connected-components:verbose=true        \
    -define connected-components:area-threshold=0    \
    -connected-components 8 -auto-level output.png
"
How to open a text file with Python GUI?,"from tkinter.filename import askopenfile as ask
ofile = ask()  # you might want to pass a beginning directory
"
Pygtk StatusIcon not loading?,"gobject.timeout_add(3000, self.statusIcon.set_from_file, ""img/lin_idle.png"")
"
Methods of creating a structured array,"In [42]: a.view(dtype=dt1)
Out[42]: 
array([[(0, [8, 8])],
       [(1, [8, 0])],
       [(2, [6, 2])],
       [(3, [8, 8])],
       [(4, [3, 2])],
       [(5, [6, 1])],
       [(6, [5, 6])],
       [(7, [7, 7])],
       [(8, [6, 1])],
       [(9, [6, 6])]], 
      dtype=[('ID', '<i4'), ('Shape', '<i4', (2,))])
"
"GAE python - how to change the ""one"" that a ""many"" object points to?","suppSet0.supp_list: [<__main__.Supp object at 0x42a0f10>]
suppSet1.supp_list: []
suppset for sup: 0
suppSet0.supp_list: []
suppSet1.supp_list: [<__main__.Supp object at 0x429a3d0>]
suppset for sup: 1
"
Reshape list of lists based on position of the element,"zip([4, 0, 1], [0, 0, 1], [0, 1, 2], [1, 1, 0], [2, 0, 0])
"
Python. File open procedure,"f = open(file, ""r"")
"
Avoiding unnecessary key evaluations when sorting a list,"10 calls to f1 | 10 calls to g
"
python argparse set behaviour when no arguments provided,"if not lists:
    sys.exit('No jpegs found')
# put main program here, unnested
"
Selecting a subset of functions from a list of functions in python,"results = [f(mylist) for f in [mean, std, var, fxn4 ...]]
"
Python max() function doesnt give correct results when two strings are compared,"latest = max(builds, key=version)
"
Python: increasing array indexes,"row = [int(x) for x in row]
"
matplotlib - Legend in separate subplot,"import numpy as np
import pylab as pl

for i in xrange(1, 5):
    pl.subplot(220+i)
    pl.pie([i,2], labels=[""a"",""b""], autopct='%1.1f%%')

l = pl.legend(title=""sample"")
pl.show()
"
ctypes mouse_events,"import win32gui, win32api, win32con, ctypes

class Mouse:
    """"""It simulates the mouse""""""
    MOUSEEVENTF_MOVE = 0x0001 # mouse move 
    MOUSEEVENTF_LEFTDOWN = 0x0002 # left button down 
    MOUSEEVENTF_LEFTUP = 0x0004 # left button up 
    MOUSEEVENTF_RIGHTDOWN = 0x0008 # right button down 
    MOUSEEVENTF_RIGHTUP = 0x0010 # right button up 
    MOUSEEVENTF_MIDDLEDOWN = 0x0020 # middle button down 
    MOUSEEVENTF_MIDDLEUP = 0x0040 # middle button up 
    MOUSEEVENTF_WHEEL = 0x0800 # wheel button rolled 
    MOUSEEVENTF_ABSOLUTE = 0x8000 # absolute move 
    SM_CXSCREEN = 0
    SM_CYSCREEN = 1

    def _do_event(self, flags, x_pos, y_pos, data, extra_info):
        """"""generate a mouse event""""""
        x_calc = 65536L * x_pos / ctypes.windll.user32.GetSystemMetrics(self.SM_CXSCREEN) + 1
        y_calc = 65536L * y_pos / ctypes.windll.user32.GetSystemMetrics(self.SM_CYSCREEN) + 1
        return ctypes.windll.user32.mouse_event(flags, x_calc, y_calc, data, extra_info)

    def _get_button_value(self, button_name, button_up=False):
        """"""convert the name of the button into the corresponding value""""""
        buttons = 0
        if button_name.find(""right"") >= 0:
            buttons = self.MOUSEEVENTF_RIGHTDOWN
        if button_name.find(""left"") >= 0:
            buttons = buttons + self.MOUSEEVENTF_LEFTDOWN
        if button_name.find(""middle"") >= 0:
            buttons = buttons + self.MOUSEEVENTF_MIDDLEDOWN
        if button_up:
            buttons = buttons << 1
        return buttons

    def move_mouse(self, pos):
        """"""move the mouse to the specified coordinates""""""
        (x, y) = pos
        old_pos = self.get_position()
        x =  x if (x != -1) else old_pos[0]
        y =  y if (y != -1) else old_pos[1]    
        self._do_event(self.MOUSEEVENTF_MOVE + self.MOUSEEVENTF_ABSOLUTE, x, y, 0, 0)

    def press_button(self, pos=(-1, -1), button_name=""left"", button_up=False):
        """"""push a button of the mouse""""""
        self.move_mouse(pos)
        self._do_event(self.get_button_value(button_name, button_up), 0, 0, 0, 0)

    def click(self, pos=(-1, -1), button_name= ""left""):
        """"""Click at the specified placed""""""
        self.move_mouse(pos)
        self._do_event(self._get_button_value(button_name, False)+self._get_button_value(button_name, True), 0, 0, 0, 0)

    def double_click (self, pos=(-1, -1), button_name=""left""):
        """"""Double click at the specifed placed""""""
        for i in xrange(2): 
            self.click(pos, button_name)

    def get_position(self):
        """"""get mouse position""""""
        return win32api.GetCursorPos()
"
Delete newline / return carriage in file output,"wf.write('\n')
"
How can I create 1000 files that I can use to test a script?,"for x in range(1000):
    open(""file%03d.txt"" % x,""w"").write(""some text"")
"
Python comparing two strings,">>> count_substitutions('AAA', 'AAT')
1
"
Manually calling a decorator that takes arguments,"def validate_arguments(arg1, arg2):
    def decorator(func):
        def wrapped():
            print arg1, arg2
            return func()
        return wrapped
    return decorator

def f1():
  return True
f1 = validate_arguments(1, 2)(f1)
print f1()
#1 2
#True
"
Adding method to Python's NoneType,">>> class myNoneType(nt):
...      def find(self): return 1
... 
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
TypeError: Error when calling the metaclass bases
    type 'NoneType' is not an acceptable base type
"
What should I decorate with @asyncio.coroutine for async operations?,"@asyncio.coroutine
def main():
    asyncio.async(coro1())
    asyncio.async(coro2())
    yield from asyncio.sleep(5)


asyncio.get_event_loop().run_until_complete(main())
"
Optional dot in regex,"r""\bMr(?:\.|\b)""
"
python watchdog runs more than once,"    if getext(event.src_path) == '.done':
        run_something()
"
How to log in to a website with urllib?,"import http.cookiejar
import urllib

get_url = 'http://www.broadinstitute.org/cmap/index.jsp'
post_url = 'http://www.broadinstitute.org/cmap/j_security_check'

values = urllib.parse.urlencode({'j_username': <MYCOOLUSERNAME>,
          'j_password': <MYCOOLPASSSWORD>,
          'submit': 'sign in'})
payload = bytes(values, 'ascii')
cj = http.cookiejar.CookieJar()
opener = urllib.request.build_opener(
    urllib.request.HTTPRedirectHandler(),
    urllib.request.HTTPHandler(debuglevel=0),
    urllib.request.HTTPSHandler(debuglevel=0),
    urllib.request.HTTPCookieProcessor(cj))

opener.open(get_url) #First call to capture the JSESSIONID
resp = opener.open(post_url, payload)
resp_html = resp.read()
resp_headers = resp.info()
"
Combine elements of a list with all possible separators,"import itertools
a = ['X', 'Y', 2]
for c in itertools.product(' -', repeat=2):
    print ('%s%s%s%s%s' % (a[0],c[0],a[1],c[1],a[2])).replace(' ', '')
"
Saving columns under separate headers in a text file to separate lists,">>> content ={}
>>> for fname, data in foo():
    content[fname]=data


>>> content
{'File A': [('am001', 'am002', 'am003'), ('G13', 'U13', 'A15')], 'File B': [('am001', 'am002', 'am003'), ('C15', 'U2715', 'G32')]}
"
How to include special part in regex to find English names using python re.findall?,"['Bonds', 'Susann (&quot;Sun&quot;) Margreth Branco', 'Montreal', 'Quebec', 'August', 'They', 'Las Vegas', 'Nevada', 'Barry Bonds']
"
Getting Tag Names with BeautifulSoup,"x = """"""<x><a name=""foo""/><a name=""bar""/></x>""""""
s = bs4.BeautifulSoup(x)
for a in s.findChildren(""a""):
    print(a[""name""])
"
Is there a more efficient way to solve this?,"import numpy as np

def find_offsets(row, col, size):
    """"""Return all valid pairs of offsets as [(row_offset, col_offset)...].""""""
    offsets = ((-1, -1), (-1, 0), (-1, 1),
               (0, -1), (0, 1),
               (1, -1), (1, 0), (1, 1))

    return [(r_off, c_off) for r_off, c_off in offsets
            if row + r_off >= 0 and row + r_off < size
            if col + c_off >= 0 and col + c_off < size]

def find_odds(matrix, size):
    """"""Return all odd values in matrix as [(row_ind, col_ind, value)...].""""""
    return [(row, col, matrix[row][col])
            for row in xrange(size)
            for col in xrange(size)
            if matrix[row][col] % 2 != 0]

def gen_matrix(source, size):
    """"""Filter source 2x2 matrix for odds and add each to valid neighbors.""""""

    out = np.zeros((size, size), dtype=int)

    # filter for location and value of all odd numbers
    odds = find_odds(source, size)
    for row, col, value in odds:
        # add odd number to all valid neighbors (by finding valid offsets)
        offsets = find_offsets(row, col, size)
        for r_off, c_off in offsets:
            out[row + r_off][col + c_off] += value

    return out

def sum_neighbors():
    """"""Sum neighbors as described in problem.""""""
    N = 5
    A = [[3,2,8,1,1],
         [1,2,4,1,1],
         [7,3,4,1,8],
         [1,8,0,6,4],
         [5,6,5,3,8]]
    return gen_matrix(A, N)
"
Pythonbrew install ZSH on Ubuntu,"~/.pythonbrew/pythons/Python-2.5/bin/python
"
Determing the type of number stored as a string,"import numbers
from ast import literal_eval

def number_type(x):
    try:
        n = literal_eval(x)
        if isinstance(n, numbers.Number):
            print type(n).__name__
        else:
            print 'not a number' 
    except (ValueError, SyntaxError):
        print 'not a number'
"
Determine if string has 3 or more duplicate sequential characters in Python,"if any(three_or_more):
    # found at least one group of consecutive characters that
    # consists of 3 or more.
"
How to remove all whitespaces in string and get exactly one number?( Python),"st.split('–')[0].strip().replace(' ', '')
"
Using a string as a variable name,"def post(self):
    var_list = ['var1', 'var2']
    result_list = []
    for var in var_list:
        result_list.append(self.request.get(var))
    return result_list # etc.
"
check if all elements in a list are identical,"# http://stackoverflow.com/q/3844948/
def checkEqualIvo(lst):
    return not lst or lst.count(lst[0]) == len(lst)

# http://stackoverflow.com/q/3844931/
def checkEqual6502(lst):
    return not lst or [lst[0]]*len(lst) == lst
"
Need to export intermediate results from a SQL query script,"<http://stackoverflow.com/questions/7263781/pyodbc-return-multiple-cursors-from-stored-procedure-with-db2>
"
assign numeric values from a text to characters in a string using python 2,"A 123
B 456
C 789
"
Find lost cards (faster solution)," for z in range(s_lost):
 ....
"
Outputting appeded list of items into a file,"with open(""file.txt"", ""r"") as input, open(""output.txt"",""w"") as outfile:
for line in input:
    line = line.rstrip().split()
    grouped = (lst[i:i+3] for i in range(0,len(lst),3))
    for tup in grouped:            
        outfile.write(""\t"".join(tup)+""\n"")
"
Adding items to a dictionary in python (nested),"dictionary[0]['events'][0] = {
                         'eventType' : 'Goal',
                         'name' : 'Muchache Johansson',
                         }
"
Why does time incorrectly report such a fast time?,"import time

print(""program entered"")

def ispow2(n):
    return not n & n - 1

start = time.perf_counter()
ispow2(2**100000000)
end = time.perf_counter()

print(end - start)
"
Python regex to match 'category/' or 'categories/'?,">>> import re
>>> str = """"""
... category/
... categories/
... categories
... category""""""
>>> m = re.findall(r'^categor(?:y|ies)/$', str, re.MULTILINE)
>>> m
['category/', 'categories/']
"
Modification of a Dictionary in PYTHON,"result = {}
for key, value in my_dict.iteritems():
    result.setdefault(key[:key.rindex(""_"")], []).append(value)
print result
"
Name of a list changing as I go through a loop,"data = {}
for i in range(100):
    item = 'file' + str(i)
    data[item] = {}
    kind_like_file_of_nums = [float(x) for x in range(10)]
    data[item]['temps'] = kind_like_file_of_nums[0::2]
    data[item]['pres'] = kind_like_file_of_nums[1::2]

print(data)
"
Python: max depth in binary tree,"        return max(left_depth, right_depth) + 1
"
Django - cant pass parameter in HttpResponseRedirect,"from django.core.urlresolvers import reverse

def makeurl(request):
    . . .
    return HttpResponseRedirect(reverse('create', args=(),
        kwargs={'shortened_url': shortened_url}))
"
How to preview a part of a large pandas DataFrame?,">>> df = pd.DataFrame({i: range(1000) for i in range(100)})
>>> df.ix[:5, :10]
   0   1   2   3   4   5   6   7   8   9   10
0   0   0   0   0   0   0   0   0   0   0   0
1   1   1   1   1   1   1   1   1   1   1   1
2   2   2   2   2   2   2   2   2   2   2   2
3   3   3   3   3   3   3   3   3   3   3   3
4   4   4   4   4   4   4   4   4   4   4   4
5   5   5   5   5   5   5   5   5   5   5   5
"
Odoo. Hide some options in field selection,"<field name=""example_selection"" widget=""your_selection""/>
"
How to input a range of dates and turn it into a list?,"from datetime import datetime
def date():
    dates = []
    user_input =''
    while user_input != 'end':
        user_input = raw_input(""Please put folder with format yy.mm.dd or 'end': "")
        try:
            dte = datetime.strptime(user_input,""%y.%m.%d"")
            dates.append(dte)
        except ValueError:
            print ""Use yy.mm.dd format or write 'end'""
    print 'Dates:'
    return dates
"
Loading datastore entities from Python project in Go leads to nested structs slices of slices error,"import (    
    ""errors""    
    ""time""    

    ""appengine""    
    ""appengine/datastore""        

    pb ""appengine_internal/datastore""    
    proto ""code.google.com/p/goprotobuf/proto""    
)    

func loadLocalStructuredProperty(dst interface{}, raw_proto []byte) error {    
    var val pb.EntityProto    
    err := proto.Unmarshal(raw_proto, &val)    
    if err != nil {    
        return err    
    }    
    return loadEntity(dst, &val)    
}

//Copied from appengine/datastore since its not exported

// loadEntity loads an EntityProto into PropertyLoadSaver or struct pointer.
func loadEntity(dst interface{}, src *pb.EntityProto) (err error) {
c := make(chan datastore.Property, 32)
 errc := make(chan error, 1)
 defer func() {
    if err == nil {
            err = <-errc
        }
    }()
    go protoToProperties(c, errc, src)
    if e, ok := dst.(datastore.PropertyLoadSaver); ok {
        return e.Load(c)
    }
    return datastore.LoadStruct(dst, c)
}

func protoToProperties(dst chan<- datastore.Property, errc chan<- error, src *pb.EntityProto) {
    defer close(dst)
    props, rawProps := src.Property, src.RawProperty
    for {
        var (
            x       *pb.Property
            noIndex bool
        )
        if len(props) > 0 {
            x, props = props[0], props[1:]
        } else if len(rawProps) > 0 {
            x, rawProps = rawProps[0], rawProps[1:]
            noIndex = true
        } else {
            break
        }

        var value interface{}
        if x.Meaning != nil && *x.Meaning == pb.Property_INDEX_VALUE {
            value = indexValue{x.Value}
        } else {
            var err error
            value, err = propValue(x.Value, x.GetMeaning())
            if err != nil {
                errc <- err
                return
            }
        }
        dst <- datastore.Property{
            Name:     x.GetName(),
            Value:    value,
            NoIndex:  noIndex,
            Multiple: x.GetMultiple(),
        }
    }
    errc <- nil
}

func fromUnixMicro(t int64) time.Time {
    return time.Unix(t/1e6, (t%1e6)*1e3)
}

// propValue returns a Go value that combines the raw PropertyValue with a
// meaning. For example, an Int64Value with GD_WHEN becomes a time.Time.
func propValue(v *pb.PropertyValue, m pb.Property_Meaning) (interface{}, error) {
    switch {
    case v.Int64Value != nil:
        if m == pb.Property_GD_WHEN {
            return fromUnixMicro(*v.Int64Value), nil
        } else {
            return *v.Int64Value, nil
        }
    case v.BooleanValue != nil:
        return *v.BooleanValue, nil
    case v.StringValue != nil:
        if m == pb.Property_BLOB {
            return []byte(*v.StringValue), nil
        } else if m == pb.Property_BLOBKEY {
            return appengine.BlobKey(*v.StringValue), nil
        } else {
            return *v.StringValue, nil
        }
    case v.DoubleValue != nil:
        return *v.DoubleValue, nil
    case v.Referencevalue != nil:
        return nil, errors.New(""Not Implemented!"")
    }
    return nil, nil
}

// indexValue is a Property value that is created when entities are loaded from
// an index, such as from a projection query.
//
// Such Property values do not contain all of the metadata required to be
// faithfully represented as a Go value, and are instead represented as an
// opaque indexValue. Load the properties into a concrete struct type (e.g. by
// passing a struct pointer to Iterator.Next) to reconstruct actual Go values
// of type int, string, time.Time, etc.
type indexValue struct {
    value *pb.PropertyValue
}
"
How to do case insensitive sort of a dictionary and store them in OrderedDict,">>> from collections import OrderedDict
>>> named_sets  = {'DMXAA':set(['1441326_at', '1460062_at']), 'cdiGMP':set(['1441326_at', '1460062_at']),'cGAMP': set(['1441326_at', '1460062_at'])  }
>>> OrderedDict(sorted(named_sets.items(), key=lambda i: i[0].lower()))
OrderedDict([('cdiGMP', set(['1441326_at', '1460062_at'])), ('cGAMP', set(['1441326_at', '1460062_at'])), ('DMXAA', set(['1441326_at', '1460062_at']))])
>>> _.keys()
['cdiGMP', 'cGAMP', 'DMXAA']
"
For range iteration,">>> names = [""John Cleese"", ""Graham Chapman"", ""Terry Gilliam"", ""Eric Idle"", ""Terry Jones"", ""Michael Palin""]
>>> for index, name in enumerate(names):
    if index >= 3:
        break
    print(name)


John Cleese
Graham Chapman
Terry Gilliam
"
Matpotlib Xtick Overlap,"import numpy as np
from matplotlib import pyplot as plt

x = np.arange(-10, 361, 10, dtype = int)
y = np.sin(np.deg2rad(2*x))

fig, ax = plt.subplots(1, 1)
ax.plot(x, y)

ax.set_xticks(x, minor=True)        # set minor ticks for each x value
ax.grid(which='both', axis='both')  # show grid lines

plt.show()
"
How to spawn Python2.5 process through Apache and return immediately under Windows,"def application(environ, start_response):
    if platform.system() == 'Windows':
        close_fds=False
    else: 
        close_fds=True

    p = Popen('python ""C:\testing\long.py""', stdin=PIPE, stdout=PIPE, stderr=PIPE, close_fds=close_fds, shell=True)

    status = '200 OK'
    output = ""invoked (%d)"" % (p.pid)    
    response_headers = [('Content-type', 'text/plain'), ('Content-Length', str(len(output)))]
    start_response(status, response_headers)

    return [output]
"
Why aren't the lists populating in this code?,"with open(filename, ""r"") as fin:
    for line_counter, line in enumerate(fin):
        line_items = line.split()
        line_list.append(line_items)
    # after the loop line_counter has counted the lines
"
Extract value from tag python,"from BeautifulSoup import BeautifulSoup as bs

your_string = """"""<test name1="""" name2="""" name3=""0.0.0.0"" name4=""Linux""></test>""""""

soup = bs(your_string)
res = soup.findAll('test')
for i in res:
    print i.get('name4')
"
Python - Error Checking,"def get_hit():
    while True:
        try:
            players_chosen_hit = input('Please tell me where the hit is: 1-9  (q to quit) ')
            if players_chosen_hit == ""q"":
                print(""Goodbye"")
                return   
            players_chosen_hit = int(players_chosen_hit)
            if players_chosen_hit in possibleusershipplaces:
                return players_chosen_hit
        except ValueError:
            print(""Invalid entry"")
"
How to switch pid between python script and subprocess?,"import io
import sys

sys.stdout = io.StringIO()   # or BytesIO

exec the_command

output = sys.stdout.getvalue()
sys.stdout = sys.__stdout__
"
Hashing or dictionaries for Venn diagram of dictionaries?,">>> Dict_D = {k: v for k, v in A.items() if B.get(k) == v}
"
Labels on matplotlib within a loop,"# do this outside of the first loop
lines = ax2.get_lines()
for line, subsm in zip(lines, subsl):
    line.set_label(subsm)

ax2.legend()
"
How to save a 3 channel numpy array as image,">>> arr = np.random.uniform(size=(3,256,257))*255
"
make python wait for stored procedure to finish executing,"update RunningStatus set status = 1;
"
python attribute lookup without any descriptor magic?,">>> class C(object):
...     @property
...     def prop(self):
...         return 'abc'
... 
>>> C.prop
<property object at 0xb7eb0b6c>
>>> C.prop.fget
<function prop at 0xb7ea36f4>
"
Reversing logic of a product-country mapping,">>> newdic = {}
>>> for k,v in items.items():
...     for i in v:
...         if i not in newdic:
...               newdic[i] = set()
...         newdic[i].add(k)
... 
>>> newdic 
{200: set(['US']), 948: set(['US']), 123: set(['AZ', 'US', 'AG']), 132: set(['AG'])}
"
How Do I Select From Two Different Tables in Django?,"qs = posts | comments
"
SQLAlchemy freezing application,"db.current_session.store(mymodel)
"
Phonemes and graphemes,"valid_row_count = 0
invalid_row_count = 0
phoneme_count = 0
grapheme_count = 0
with open(csv_file, newlines="""") as in_file:
    reader = csv.reader(in_file):
    for phoneme_string, grapheme_string in reader:
        phonemes = phoneme_string.split()
        graphemes = phoneme_string.split()
        if ((len(phonemes) == len(graphemes) and
             all(phoneme in valid_phoneme_set for phoneme in phonemes)
             # add another clause here to check the graphemes against some set, if you want
           ))    # doubled parentheses used to avoid ambiguous indentation
            valid_row_count += 1
            phoneme_count += len(phonemes)
            grapheme_count += len(graphemes)
        else:
            invalid_row_count += 1

phoneme_average = float(phoneme_count) / valid_row_count # float call only needed on Python 2
grapheme_average = float(grapheme_count) / valid_row_count
"
Any way to speed up Python and Pygame?,"screen.set_alpha(None)
"
Reading and writing text files,"Platform  1228.3    
Transfer  690.3     
Total     1918.6  
"
Python/Numpy compress methode issue,"[32768     0     0     0 32768     0     0     0 32768     0     0     0
 32768     0     0     0 32768     0     0     0 32768     0     0     0
 32768     0     0     0     0     0     0     0]
"
Creating a 3x3 grid from a text file Python 3,"import random
words = [x.rstrip() for x in random.sample(open('in.txt').readlines(), 9)]

grid = [words[i:i + 3] for i in range(0, len(words), 3)]

[['BLUE', 'ANGRY', 'RED'], ['HAPPY', 'FOO', 'ORANGE'], ['JOYFUL', 'YELLOW', 'SAD']]
"
Inverse lookup in pandas,">>> s[s % 3 == 0].index.tolist()
[('A', 'a'), ('B', 'c'), ('C', 'b')]
"
Operation on value of a particular key in a dictionary stored as a list in Python,"key2values = (dct, k, v for lst in my_dicts.itervalues() 
                    for dct in lst
                        for k, v in dct.iteritems()
                            if 'key2' in k)
"
Plotting a wrapped path in Basemap,"import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.basemap import Basemap

latlon_ar = np.array(latlon)

threshold = 90
idx_wrap = np.nonzero(np.abs(np.diff(latlon_ar[:,1])) > threshold)[0]+1

lon_1 = lon[:idx_wrap]
lat_1 = lat[:idx_wrap]

lon_2 = lon[idx_wrap:]
lat_2 = lat[idx_wrap:]

f = plt.figure(figsize(10,7.5))
m = Basemap(projection=""mill"", lon_0=0)

m.drawcoastlines()
m.drawparallels(np.arange(-90,91,30),labels=[1,0,0,0])
m.drawmeridians(np.arange(-180,181,60), labels=[0,0,0,1])

x1, y1 = m(lon_1, lat_1)
x2, y2 = m(lon_2, lat_2)

m.plot(x1, y1, color=""red"", latlon=False)
m.plot(x2, y2, color=""blue"", latlon=False)
"
Converting (part of) a numpy recarray into a 2d array?,"new_data = data[['a','b','c']].astype(np.float).reshape((data.size, 3))
"
"Recursive ""all paths"" through a list of lists - Python",">>> l = [None, int, 0, 'abc', [1, 2, 3], ('a', 'b')]
>>> for i in itertools.product(*[i if isinstance(i, (list, tuple)) else [i] for i in l]): print list(i)
[None, <type 'int'>, 0, 'abc', 1, 'a']
[None, <type 'int'>, 0, 'abc', 1, 'b']
[None, <type 'int'>, 0, 'abc', 2, 'a']
[None, <type 'int'>, 0, 'abc', 2, 'b']
[None, <type 'int'>, 0, 'abc', 3, 'a']
[None, <type 'int'>, 0, 'abc', 3, 'b']
"
Scrapy only scrapes the first start url in a list of 15 start urls,"# -*- coding: utf-8 -*-
import scrapy
from scrapy.http import Request
from mike.items import MikeItem


class SonrisSpider(scrapy.Spider):
    name = ""sspider""
    allowed_domains = [""sonlite.dnr.state.la.us""]
    start_urls = [
                ""http://sonlite.dnr.state.la.us/sundown/cart_prod/cart_con_wellinfo2?p_WSN=207899"",
                ""http://sonlite.dnr.state.la.us/sundown/cart_prod/cart_con_wellinfo2?p_WSN=971683"",
                ""http://sonlite.dnr.state.la.us/sundown/cart_prod/cart_con_wellinfo2?p_WSN=214206"",
                ""http://sonlite.dnr.state.la.us/sundown/cart_prod/cart_con_wellinfo2?p_WSN=159420"",
                ""http://sonlite.dnr.state.la.us/sundown/cart_prod/cart_con_wellinfo2?p_WSN=243671"",
                ""http://sonlite.dnr.state.la.us/sundown/cart_prod/cart_con_wellinfo2?p_WSN=248942"",
                ""http://sonlite.dnr.state.la.us/sundown/cart_prod/cart_con_wellinfo2?p_WSN=156613"",
                ""http://sonlite.dnr.state.la.us/sundown/cart_prod/cart_con_wellinfo2?p_WSN=972498"",
                ""http://sonlite.dnr.state.la.us/sundown/cart_prod/cart_con_wellinfo2?p_WSN=215443"",
                ""http://sonlite.dnr.state.la.us/sundown/cart_prod/cart_con_wellinfo2?p_WSN=248463"",
                ""http://sonlite.dnr.state.la.us/sundown/cart_prod/cart_con_wellinfo2?p_WSN=195136"",
                ""http://sonlite.dnr.state.la.us/sundown/cart_prod/cart_con_wellinfo2?p_WSN=179181"",
                ""http://sonlite.dnr.state.la.us/sundown/cart_prod/cart_con_wellinfo2?p_WSN=199930"",
                ""http://sonlite.dnr.state.la.us/sundown/cart_prod/cart_con_wellinfo2?p_WSN=203419"",
                ""http://sonlite.dnr.state.la.us/sundown/cart_prod/cart_con_wellinfo2?p_WSN=220454"",
            ]

    def start_requests(self):
        for url in self.start_urls:
            yield Request(url=url, callback=self.parse_data, dont_filter=True)

    def parse_data(self, response):
        item = MikeItem()
        serial = response.xpath(
            '/html/body/table[1]/tr[2]/td[1]/text()').extract()
        serial = serial[0] if serial else 'n/a'
        item['serial'] = serial
        yield item
"
Python 3.3: Birthday Probablity,"num_samples = 10000
for count in range(100):
    dup = 0
    for test_number in range(num_samples):
        the_list = make_birthday_list(count)
        if duplicates(the_list):
            dup += 1
    print(count, dup/num_samples)   # / returns a float in Python3
"
Django 1.6: Redirect to last page after login not working,"url(r'^login/$', 'django.contrib.auth.views.login')
"
How to improve the performance of the combination of gevent and tornado?,"total_time = max(all_individual_times) + n*some_overhead
"
"Python equivalent to curls --form: Create multipart form-data post request with data in ""form"" parameter",">>> import requests
>>> data = {""myparam"": ""1234""}
>>> headers = {'User-Agent': 'Mozilla 5.0','referer':'https://myreferer'}
"
Subtracting Months/Years,"import datetime

then = datetime.datetime(year=2015, month=1, day=1)
now = datetime.datetime.now()

difference = now - then
"
Update values in XML file ,"<Principal ID=""122"" > 
<Status Fees=""1""/> 
</Principal> 
<Principal ID=""123"" > 
<Status Fees=""2""/> 
</Principal> 
<Principal ID=""124"" > 
<Status Fees=""3""/> 
</Principal> 
<Principal ID=""125"" > 
<Status Fees=""4""/> 
</Principal>
"
How to iterate over GraphML file with lxml,"graph = tree.find(graphml.get(""graph""))
nodes = graph.findall(graphml.get(""node""))
edges = graph.findall(graphml.get(""edge""))

for node in nodes + edges:
    attribs = {}
    for data in node.findall(graphml.get('data')):
        attribs[data.get('key')] = data.text
    print 'Node', node, 'have', attribs
"
Python Django return no new page and no reload,"$('form#go').submit(function(e){
  e.preventDefault();
  $.post('view-url', $(this).serialize());
});
"
"how does Cpython implement its type Objects, i.e. type's type is always type?",">>> isinstance(type, object)
True
>>> isinstance(object, type)
True
>>> isinstance(type, type)
True
"
How to shutdown windows 8 with python 2.7 using a timer,"import os
time = 10
os.system(""shutdown /t %s "" % time)
# `str` is not required, so removed.
"
Comparing date object in a Couplet between two dates,"only_in_range = sets.restrict(data_clan, record_in_range)
print(only_in_range)
"
Pandas: Merge or join dataframes based on column data?,"import pandas as pd

df = pd.DataFrame({'Name1':['a','a','a','b','b','b'],
                   'Name2':[1,2,4,2,4,8],
                   'present':[1,1,3,1,5,1]})
df.set_index(['Name1','Name2'], inplace=True)

df2 = pd.DataFrame({'Data1':[80,61,45,30],
                    'Data2':[6,8,7,3]},
                   index=pd.Series([1,2,4,8], name='Name2'))
result = df.reset_index(level=0).join(df2).set_index('Name1', append=True)
print(result)
#              present  Data1  Data2
# Name2 Name1                       
# 1     a            1     80      6
# 2     a            1     61      8
#       b            1     61      8
# 4     a            3     45      7
#       b            5     45      7
# 8     b            1     30      3
"
Scipy: Centroid of convex hull,"import matplotlib.pyplot as plt
#Plot convex hull
for simplex in hull.simplices:
    plt.plot(points[simplex, 0], points[simplex, 1], 'k-')

#Plot centroid
plt.plot(cx, cy,'x',ms=20)
plt.show()
"
Get all combinations of neighbour elements in list,">>> result.sort(key=lambda x: (-len(x), x))
>>> pprint.pprint(result)
[[0, 1, 2, 3, 4],
 [0, 1, 2, 3],
 [1, 2, 3, 4],
 [0, 1, 2],
 [1, 2, 3],
 [2, 3, 4],
 [0, 1],
 [1, 2],
 [2, 3],
 [3, 4],
 [0],
 [1],
 [2],
 [3],
 [4]]
"
Finding count of duplicate values and ordering in a Pandas dataframe,"n = 100
filter = (df.groupby(['movie title'])['age']
          .transform(lambda group: group.count()) >= n)
"
Faster than dict way to assign index to strings python,"for idx, word in enumerate(unique_everseen(reader), 1):
    print(idx)
"
Accelerating the calculations in Python (Simulation of particles in a magnetic field),"
$ time pypy SymMain.py 
real    0m1.071s
user    0m1.025s
sys 0m0.042s
"
python: how to plot one line in different colors,"import numpy as np
import matplotlib.pyplot as plt
from matplotlib.collections import LineCollection

xy = (np.random.random((1000, 2)) - 0.5).cumsum(axis=0)

# Reshape things so that we have a sequence of:
# [[(x0,y0),(x1,y1)],[(x0,y0),(x1,y1)],...]
xy = xy.reshape(-1, 1, 2)
segments = np.hstack([xy[:-1], xy[1:]])

fig, ax = plt.subplots()
coll = LineCollection(segments, cmap=plt.cm.gist_ncar)
coll.set_array(np.random.random(xy.shape[0]))

ax.add_collection(coll)
ax.autoscale_view()

plt.show()
"
recursively computing expression python,"class Operator:
    def __init__ (self, argc, f):
        self.argc = argc
        self.f = f

    def __call__ (self, *args):
        return self.f (*args)
"
Simple way to perform various replacements of string in a txt and erase whitespaces with python,"f = open(filename, 'r') #we're just reading it now, so we use mode 'r'
strFile = f.read()
f.close()
"
How to know the location of the library that I load in Python?,">>> import inspect
>>> from abc import *
>>> inspect.getfile(ABCMeta)
'C:\\Program Files\\Python31\\lib\\abc.py'
"
Randomize two lists by maintaining the sequence of mapping of values in the lists,">>> list1
('item4', 'item3', 'item1', 'item2')

>>> list2
('label4', 'label3', 'label1', 'label2')
"
pandas apply function to multiple columns and multiple rows,"In [117]:

%%timeit
import numpy as np
df['angle'] = np.abs(180/math.pi * np.arctan(df['xpos'].diff(1)/df['ypos'].diff(1)))

1000 loops, best of 3: 1.01 ms per loop
"
How to preserve and reverse a string?,"for word in words):
"
How can I get all the plain text from a website with Scrapy?,">>> import nltk
>>> html = """"""
... <div class=""post-text"" itemprop=""description"">
... 
...         <p>I would like to have all the text visible from a website, after the HTML is rendered. I'm working in Python with Scrapy framework.
... With <code>xpath('//body//text()')</code> I'm able to get it, but with the HTML tags, and I only want the text. Any solution for this? Thanks !</p>
... 
...     </div>""""""
>>> nltk.clean_html(html)
""I would like to have all the text visible from a website, after the HTML is rendered. I'm working in Python with Scrapy framework.\nWith xpath('//body//text()') I'm able to get it, but with the HTML tags, and I only want the text. Any solution for this? Thanks !""
"
Changing multiple positions in a list,"changedstrings = []
for pos in range(2, len(liststring) - 2):
    liststring = list(string1)  # Move this line here
    if liststring[pos] != 'A':
        liststring[pos] = 'A'
        random1 = """".join(liststring)
        changedstrings.append(random1)
print(changedstrings)
"
how to access key values in a json files dictionaries with python,"for d in r.json()['results']:
    print('{first_name} {last_name}: {twitter_id}'.format(**d))
"
Print original input order of dictionary in python,"import collections

key_value_pairs = [('Civic86', 12.5),
                   ('Camry98', 13.2),
                   ('Sentra98', 13.8)]
smallestCars = collections.OrderedDict(key_value_pairs)

for car in smallestCars:
    print(car)
"
Django 1.8 Cache busting + Amazon S3,"from storages.backends.s3boto import S3BotoStorage

StaticRootS3BotoStorage = lambda: S3BotoStorage(location='static')
MediaRootS3BotoStorage  = lambda: S3BotoStorage(location='uploads')
"
read two columns in Excel using python,"print ws.cell(column=12).value
"
Convert a 3D array to 2D array based on dictionary,"colormap[key_labels] = color2ind.values()
"
Is it safe to append to a list during iteration if I want to iterate over the added value?,"def collatz(start):
    current = start

    yield current

    while current != 1:
        if current % 2 == 0:
            current /= 2
        else:
            current = current * 3 + 1

        yield current
"
Dynamically add arguments to a Pool of workers,"class FooError(BaseException):
    pass

def foo(x):
    sleep(0.1)
    # 50% chance to have a fault
    if random.rand() > 0.5:  # fault condition
        raise FooError('foo had an error!')
    return x, x

def successful_foo(x):
    '''Version of the foo(x) function that never fails.'''

    while True:
        try:
            return foo(x)
        except FooError as e:
            pass  # Log appropriately here; etc.
"
To stop finding running average once the condition fails?,"import itertools

results = list(itertools.takewhile(lambda x: x[0] > 0.9 * x[1],
                                   itertools.izip(reversed(sub),
                                                  runningMean(reversed(sub)))))
"
"How can I tranform this (100, 100) numpy array into a grayscale sprite in pygame?","114, 202, 143, ...
"
Vectorizing for loop with repeated indices in python,"def twopointcorr2(x, y, s, dr):
    width = np.max(x)-np.min(x)
    height = np.max(y)-np.min(y)
    n = len(x)
    maxR = np.sqrt((width/2)**2 + (height/2)**2)
    r = np.arange(0, maxR, dr)    
    osub = lambda x:np.subtract.outer(x, x)

    ind = np.clip(np.round(np.hypot(osub(x), osub(y)) / dr), 0, len(r)-1).astype(int)
    rw = np.bincount(ind.ravel())
    rw[0] -= len(x)
    corrfun = np.bincount(ind.ravel(), (osub(s)**2).ravel())
    return r, corrfun, rw
"
How to compute a percentage increase/decrease multiplier in python without if statements,"
if U == 0:
   multiplier = 1
elif U > 0:
   multiplier = U/100.0 + 1
else:
   multiplier = (100 - (U * -1.0))/100.0
"
Shift matrix rows to have maxima in the middle,"# Get shape info and the middle column index
M,N = A.shape 
mid_col_idx = int(N/2)

# Get required shifts for each row
shifts = mid_col_idx - np.argmax(A,axis=1)

# Get offsetted column indices
offsetted_col_idx = np.mod(np.arange(N) - shifts[:,None],N)

# Finally generate correctly ordered linear indices for all elements 
# and set them in A in one-go
Aout = A.ravel()[offsetted_col_idx + N*np.arange(M)[:,None]]
"
Figure appearance is not preserved when its axes are added to new figure,"color = ['k', 'r','g', 'b']
alist = customfigure() # (customfigure doesn't need to take any
                       # arguments now)
for i in xrange(4):
    s = np.sin(2*(i+1) * np.pi * t)
    plt.sca(alist[i])
    plt.plot(t, s, '-', color = color[i])
"
Converting OHLC stock data into a different timeframe with python and pandas,"def ohlcsum(df):
    df = df.sort()
    return {
       'Open': df['Open'][0],
       'High': df['High'].max(),
       'Low': df['Low'].min(),
       'Close': df['Close'][-1],
       'Volume': df['Volume'].sum()
      }
"
"BeautifulSoup, how to stop executing at certain tag","clubs = {}

for table in soup.find_all('table', class_='tabelle_grafik'):
    club_name = table.find('th', class_='al').text
    count = len(table.find_all('a'))
    clubs[club_name] = count
"
Elegant ways to return multiple values from a function,"MyMultimap::iterator lower,upper;
boost::tie(lower,upper) = some_map.equal_range(key);
"
Sort a Python dictionary by value,"import operator
x = {1: 2, 3: 4, 4: 3, 2: 1, 0: 0}
sorted_x = sorted(x.items(), key=operator.itemgetter(1))
"
Python functools partial efficiency,"import timeit
import types


# http://stackoverflow.com/questions/6527633/how-can-i-make-a-deepcopy-of-a-function-in-python
def copy_func(f, name=None):
    return types.FunctionType(f.func_code, f.func_globals, name or f.func_name,
        f.func_defaults, f.func_closure)


def f(a, b, c):
    return a + b + c


i = copy_func(f, 'i')
i.func_defaults = (4, 5, 3)


print timeit.timeit('f(4,5,3)', setup = 'from __main__ import f', number=100000)
print timeit.timeit('i()', setup = 'from __main__ import i', number=100000)
"
Creating and rendering structure with years and months in django,"    <ul>
    {% for year, month in previous_year_months %}
        {% ifchanged year %}
            </ul><li>{{ year }}</li><ul>
        {% endifchanged %}
                <li>{{ month }}</li>
    {% endfor %}
    </ul>
"
How do I go about parsing the contents of a large JSON file with patterns as opposed to having to manually access each entry?,"import json
from urllib.request import urlopen

response = urlopen('https://s3.amazonaws.com/Minecraft.Download/indexes/legacy.json')
# the default encoding for JSON is UTF-8, but the response can give you
# a different codec
encoding = response.info().get_content_charset('utf-8')

data = json.loads(response.read().decode(encoding))
"
Where's my JSON data in my incoming Django request?,"def save_events_json(request):
    if request.is_ajax():
        if request.method == 'POST':
            print 'Raw Data: ""%s""' % request.body   
    return HttpResponse(""OK"")
"
Named Stuctured Data storage in Python,"print(a.__dict__)
"
Python minidom parser: Ignore tag with identical attribute values,"list = node.getElementsByTagName('Item')
items = {}
for item in list:
  output_id = item.getAttribute('id')
  items[output_id] = item # Put items into dict to use them later.
for id in items:
  print ""Item[%d] -> %s"" % (id, items[id]) # Only single item per id left.
"
Python: Mean of several dictionaries with the same keys,"T = {'a1': array([[ 32, 120,  80, 380, 360, 212, 188,  56, 312, 112],
                  [388, 348, 196, 236,  60, 200, 224, 208,  24, 104],
                  [324, 296,  24, 152, 220,  12, 104,  52, 232, 196]]),
     'a2': array([[30, 82, 99, 72, 79, 98, 93, 93, 28, 46],
                  [ 8, 17, 50, 59, 85, 73, 48, 97, 87, 41],
                  [98, 36, 27, 55, 98, 39, 73, 51, 27, 33]]),
     'a3': array([[78, 24, 87, 83, 30, 14, 88, 57, 55, 73],
                  [76, 94, 99, 58, 63, 34, 70, 81, 45, 20],
                  [32, 61,  0,  3, 33, 33, 38, 90, 11,  3]])}
"
Enforcing Class Variables in a Subclass,"import abc

class Base(object):
    __metaclass__ = abc.ABCMeta

    @abc.abstractproperty
    def value(self):
        return 'Should never get here'


class Implementation1(Base):

    @property
    def value(self):
        return 'concrete property'


class Implementation2(Base):
    pass # doesn't have the required property
"
How to execute python tkinter button without clicking mouse,"import tkFont
font = tkFont.Font(size=32, weight=""bold"")

button['bg'] = ""red""
button['fg'] = ""white""
button['font'] = font
"
pygame: replacing image of an item/enemy,"class Enemy(pygame.sprite.Sprite):
    def __init__(self, gs=None):
        pygame.sprite.Sprite.__init__(self)
        self.images = [pygame.image.load(""enemy.png""), pygame.image.load(""dead.png"")]
        self.current_image = self.images[0]
        self.rect = self.current_image.get_rectangle()
"
What is the best way to parse a colon separated string with pyparsing,"[['C:/data/my_file.txt.c', '10', '0x21', 'name1', 'name2', '0x10', '1', 'OK'],
 ['C:/data/my_file2.txt.c', '110', '0x1', 'name2', 'name5', '0x12', '1', 'NOT_OK'],
 ['./data/my_file3.txt.c', '110', '0x1', 'name2', 'name5', '0x12', '10', 'OK']]
"
Nested for-loops and dictionaries in finding value occurrence in string,">>> counter={}.fromkeys(s, 0)
>>> counter
{'a': 0, 'r': 0, 'b': 0, 'c': 0, 'd': 0}
>>> for c in s:
...    counter[c]+=1
... 
>>> counter
{'a': 5, 'r': 2, 'b': 2, 'c': 1, 'd': 1}
"
Python 3.2.2 Function Returns None on Non-Empty Variable,"def findFullURL(d, e, s):
    a = s[d]
    if a != ""/"":
        #Subtract from d to move back another letter
        d = d - 1
        return findFullURL(d, e, s)   # <<<<<<< here
    else:
        fullURL = ""http://download.ted.com/talks/"" + s[(d+1):e] + ""-480p.mp4""
        #print(fullURL)
        return fullURL
"
Counting frequency of ngrams,"from nltk.util import ngrams
import collections

with open(""text.txt"", ""rU"") as f:
    sixgrams = ngrams(f.read().decode('utf8').split(), 2)

result = collections.Counter(sixgrams)
print result
with open(""output.txt"", ""w"") as f:
    for item, count in sorted(result.iteritems()):
        if count >= 2:
            text = ""{} {}"".format("" "".join(item).encode('utf8'), count)
            print text
            print >>f, text
"
How to use beautifulsoup when HTML element doesn't have a class name?,"humidity = soup.find(text='Average Humidity')
next_cell = humidity.find_parent('td').find_next_sibling('td')
humidity_value = next_cell.string
"
Memoization python function,"decorated = decorator(original)
"
Change values of panda.dataframe (fast way) in python,"In [9]:

%%timeit 
for i in df.index:
   df.loc[i, 'gre'] = str(df.loc[i, 'gre'])[2:3]
100 loops, best of 3: 2.98 ms per loop
In [11]:

%timeit df['gre'] = df['gre'].astype(str).str[-2:]

1000 loops, best of 3: 380 µs per loop
"
how to convert long date into time,">>> import datetime
>>> date_string = '20151227135000'
>>> date = datetime.datetime.strptime(date_string, '%Y%m%d%H%M%S')
>>> date.strftime('%H:%M')
'13:50'
"
Simple counter example using mapreduce in Google App Engine,"mapreduce:
- name: Color_Counter
  params:
  - name: done_callback
    value: /mapred_update
  mapper:
    input_reader: google.appengine.ext.mapreduce.input_readers.DatastoreInputReader
    handler: mapred.process
    params:
    - name: entity_kind
      default: models.Car
"
How do I get my output in column format?,"import csv

with open('output_file.csv', 'w') as f:
    csv_w = csv.writer(f)
    for rec in time_deltas(infile): 
        csv_w.writerow(rec)
"
Pivot table from a pandas dataframe without an apply function,"d = pd.pivot_table(df,index='ID',columns='subindex',values='count').fillna(0)
"
Copying Text in Python and Preserving/Finding Special Characters,"['\n', 'h', 'e', 'l', 'l', 'o', ' ', 'w', 'o', 'r', 'l', 'd', '\n', 't', 'h', 'i', 's', '\t', 'i', 's', '\t', 't', 'a', 'b', 'b', 'e', 'd', '\n']
"
reverse template with python,">>> firstName
'John'
>>> lastName
'Smith'
>>> number
'0123'
>>> children
['Sam', 'Kim']
"
Groupby Pandas DataFrame and calculate mean and stdev of one column and add the std as a new column with reset_index,"In [39]: result.columns = ['a','c','e','b','d']

In [40]: result.reindex(columns=sorted(result.columns))
Out[40]: 
        a  b    c  d         e
0   Apple  3  4.5  7  0.707107
1  Banana  4  4.0  8       NaN
2  Cherry  7  1.0  3       NaN
"
Get business days between start and end date using pandas,"from pandas.tseries.offsets import *

In [185]: s
Out[185]: 
2011-01-01   -0.011629
2011-01-02   -0.089666
2011-01-03   -1.314430
2011-01-04   -1.867307
2011-01-05    0.779609
2011-01-06    0.588950
2011-01-07   -2.505803
2011-01-08    0.800262
2011-01-09    0.376406
2011-01-10   -0.469988
Freq: D

In [186]: s.asfreq(BDay())
Out[186]: 
2011-01-03   -1.314430
2011-01-04   -1.867307
2011-01-05    0.779609
2011-01-06    0.588950
2011-01-07   -2.505803
2011-01-10   -0.469988
Freq: B
"
minidom.parse reading short XML?,"Blah
322,13
"
Writing to numpy array from dictionary,"import numpy as np

class SonarFile(object):
    # These define the format of the file header
    header_fields = ('num_frames', 'name1', 'name2', 'name3')
    header_formats = ('i4', 'f4', 'S10', '>I4')

    def __init__(self, filename):
        self.infile = open(filename, 'r')
        dtype = dict(names=self.header_fields, formats=self.header_formats)

        # Read in the header as a numpy array (count=1 is important here!)
        self.header = np.fromfile(self.infile, dtype=dtype, count=1)

        # Store the position so we can ""rewind"" to the end of the header
        self.header_length = self.infile.tell()

        # You may or may not want to do this (If the field names can have
        # spaces, it's a bad idea). It will allow you to access things with
        # sonar_file.Name1 instead of sonar_file.header['Name1'], though.
        for field in self.header_fields:
            setattr(self, field, self.header[field])

    # __iter__ is a special function that defines what should happen when we  
    # try to iterate through an instance of this class.
    def __iter__(self):
        """"""Iterate through each frame in the dataset.""""""
        # Rewind to the end of the file header
        self.infile.seek(self.header_length)

        # Iterate through frames...
        for _ in range(self.num_frames):
            yield Frame(self.infile)

    def close(self):
        self.infile.close()

class Frame(object):
    header_fields = ('width', 'height', 'name')
    header_formats = ('i4', 'i4', 'S20')
    data_format = 'f4'

    def __init__(self, infile):
        dtype = dict(names=self.header_fields, formats=self.header_formats)
        self.header = np.fromfile(infile, dtype=dtype, count=1)

        # See discussion above...
        for field in self.header_fields:
            setattr(self, field, self.header[field])

        # I'm assuming that the size of the frame is in the frame header...
        ncols, nrows = self.width, self.height

        # Read the data in
        self.data = np.fromfile(infile, self.data_format, count=ncols * nrows)

        # And reshape it into a 2d array.
        # I'm assuming C-order, instead of Fortran order.
        # If it's fortran order, just do ""data.reshape((ncols, nrows)).T""
        self.data = self.data.reshape((nrows, ncols))
"
Controlling Program with MQTT and Python,"import paho.mqtt.client as mqtt

def on_connect(client, userdata, flags, rc):
   print(""Connected with result code ""+str(rc))
   client.subscribe(""Labbo/control"")

def on_message(client, userdata, msg):
   print(msg.topic+"" ""+str(msg.payload))
   char = str(msg.payload)
   if char == 'x':
       client.disconnect()

client = mqtt.Client()
client.on_connect = on_connect
client.on_message = on_message
client.connect(""iot.eclipse.org"", 1883, 60)
client.loop_forever()
"
Character is frozen on Pygame game,"import pygame
import sys

# Define some colors
black    = (   0,   0,   0)
white    = ( 255, 255, 255)
red      = ( 255,   0,   0)

class Player(pygame.sprite.Sprite):
    def __init__(self): 
        pygame.sprite.Sprite.__init__(self)

        self.images = {
            'left': self.load_animation('man1_lf1.gif', 'man1_lf2.gif'),
            'right': self.load_animation('man1_rt1.gif', 'man1_rt2.gif')
            'up': self.load_animation('man1_bk1.gif', 'man1_bk2.gif')
            'down': self.load_animation('man1_fr1.gif', 'man1_fr2.gif')
        }

        self.direction = 'down'
        self.moving = False

        # Arbitrary starting coordinates
        self.x = 5
        self.y = 5

    def load_animation(self, *names):
        output = []
        for name in names:
            img = pygame.image.load(name).convert()
            img.set_colorkey(white)
        return output

    @property
    def image(self):
        seconds = pygame.time.get_ticks() / 1000  
        # Returns the time in milliseconds since the game started
        image_index = seconds % 2:

        # Returns a new image every second
        if self.moving:
            return self.images[self.direction][image_index]
        else:
            return self.images[self.direction][0]

    @property
    def rect(self):
        image_rect = self.get_image().get_rect()
        return pygame.Rect((self.x, self.y), image_rect.size)


def main():
    pygame.init()

    width = 800
    height = 480
    mainScreen = pygame.display.set_mode([width,height])

    player = Player()

    all_sprites_list = pygame.sprite.Group()
    all_sprites_list.add(player)

    clock = pygame.time.Clock()

    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()

            if event.type == pygame.KEYUP:
                if event.key in (pygame.K_LEFT, pygame.K_RIGHT, pygame.K_UP, pygame.K_DOWN):
                    player.moving = False

            if event.type == pygame.KEYDOWN:
                player.moving = True
                if event.key == pygame.K_LEFT:
                    player.x -= 1
                    player.direction = 'left'
                if event.key == pygame.K_RIGHT:
                    player.x += 1
                    player.direction = 'right'
                if event.key == pygame.K_UP: 
                    player.y -=1
                    player.direction = 'up'
                if event.key == pygame.K_DOWN:
                    player.y +=1
                    player.direction = 'down'


        clock.tick(20)

        mainScreen.fill(white)
        all_sprites_list.draw(mainScreen)
        pygame.display.flip()

    pygame.quit()

if __name__ == '__main__':
    main()
"
Python: list comprehension which references an internally generated list,"(lambda random_list: [
    (x, y, not random_list.index(y)) 
    for x in some_list
    for y in random_list])(
        random_list=random.sample([1, 2, 3, 4, 5], random.choice([1, 2, 3])))
"
How to use __repr__ to create new object from it?,"def __init__(self, elements):
    self.list = elements
"
Pretty print Python Lists,">>> print(*('\t'.join(map(str, item)) for item in mylist), sep='\n')
1       /path/here      path/here/again
2       a/different/path/here   another/path/here
"
dbus Variant: How to preserve boolean datatype in Python?,"true-property type: <type 'dbus.Boolean'>
is dbus.Boolean: True
Python: True
  Dbus: 1
false-property type: <type 'dbus.Boolean'>
is dbus.Boolean: True
Python: False
  Dbus: 0
"
Python - Assigning attributes to a class instance using a for loop and a list,"for stat in Character.stats:
    self.__dict__[stat] = parser.get(self.char_class, stat))
"
Python: count occurrences in a list using dict comprehension/generator,"from itertools import groupby
words.sort()
dct = {k: sum(1 for _ in g) for k, g in groupby(words)}
"
Using OpenCV with Tkinter,"import numpy as np
import cv2
import Tkinter as tk
import Image, ImageTk

#Set up GUI
window = tk.Tk()  #Makes main window
window.wm_title(""Digital Microscope"")
window.config(background=""#FFFFFF"")

#Graphics window
imageFrame = tk.Frame(window, width=600, height=500)
imageFrame.grid(row=0, column=0, padx=10, pady=2)

#Capture video frames

cap = cv2.VideoCapture(0)

def show_frame():
    _, frame = cap.read()
    frame = cv2.flip(frame, 1)
    cv2image = cv2.cvtColor(frame, cv2.COLOR_BGR2RGBA)
    img = Image.fromarray(cv2image)
    imgtk = ImageTk.PhotoImage(image=img)
    display1.imgtk = imgtk #Shows frame for display 1
    display1.configure(image=imgtk)
    display2.imgtk = imgtk #Shows frame for display 2
    display2.configure(image=imgtk)
    window.after(10, show_frame) 

display1 = tk.Label(imageFrame)
display1.grid(row=1, column=0, padx=10, pady=2)  #Display 1
display2 = tk.Label(imageFrame)
display2.grid(row=0, column=0) #Display 2

#Slider window (slider controls stage position)
sliderFrame = tk.Frame(window, width=600, height=100)
sliderFrame.grid(row = 600, column=0, padx=10, pady=2)

show_frame() #Display
window.mainloop()  #Starts GUI
"
Python: Decorating a class method that is intended to be overwritten when inherited,"def decorate_run(cls):
    run = getattr(cls, 'run')
    def new_run(self):
        print('before')
        run(self)
        print('after')
    setattr(cls, 'run', new_run)
    return cls


class Task(object): pass

@decorate_run
class MyTask(Task):
    def run(self):
        pass

task = MyTask()
task.run()

# prints:
# before
# after
"
"How can I use the "".title() command to read a text file and capitalize every word in the file?","data.title()
"
SUDS does not parse response as array (only the first entry thereof is returned),"130     def get_reply(self, method, reply):
131         """"""
132         Process the I{reply} for the specified I{method} by sax parsing the I{reply}
133         and then unmarshalling into python object(s).
134         @param method: The name of the invoked method.
135         @type method: str
136         @param reply: The reply XML received after invoking the specified method.
137         @type reply: str
138         @return: The unmarshalled reply.  The returned value is an L{Object} for a
139             I{list} depending on whether the service returns a single object or a
140             collection.
141         @rtype: tuple ( L{Element}, L{Object} )
142         """"""
143         reply = self.replyfilter(reply)
144         sax = Parser()
145         replyroot = sax.parse(string=reply)
146         plugins = PluginContainer(self.options().plugins)
147         plugins.message.parsed(reply=replyroot)
148         soapenv = replyroot.getChild('Envelope')
149         soapenv.promotePrefixes()
150         soapbody = soapenv.getChild('Body')
151         self.detect_fault(soapbody)
152         soapbody = self.multiref.process(soapbody)
153         nodes = self.replycontent(method, soapbody)
154         rtypes = self.returned_types(method)
155         if len(rtypes) > 1:
156             result = self.replycomposite(rtypes, nodes)
157             return (replyroot, result)
158         if len(rtypes) == 1:
159             if rtypes[0].unbounded():
160                 result = self.replylist(rtypes[0], nodes)
161                 return (replyroot, result)
162             if len(nodes):
163                 unmarshaller = self.unmarshaller()
164                 resolved = rtypes[0].resolve(nobuiltin=True)
165                 result = unmarshaller.process(nodes[0], resolved)
166                 return (replyroot, result)
167         return (replyroot, None)
"
How to have a linked list within a linked list in Python 3.x,"class Package:
    def __init__(self, owner, destination, weight):
        self.own = owner
        self.dest = destination
        self.weight = weight

class Container:
    def __init__(self, destination):
        self.packages = []
        self.destination = destination
        self.weight = 0

    def add(self, package):
        self.packages.append(package)
        self.weight = self.weight + package.weight

class Containers:
    def __init__(self):
        self.containers = []

    def enqueue(self, package):
        for self.containers as c:
            if c.destination = package.destination:
                c.add(package)
                return;
        # New destination
        c = Container(package.destination)
        c.add(package)
        self.containers.append(c)
"
Interview: Adding two binary numbers given as strings,"size_t current = size;
while ( current != 0 ) {
    -- current;
    //  ...
}
"
Regex - matching numbers between hyphens,">>> str = """"""9-45-90-2-2 
... 9-45-90-2-2-89-878""""""
>>> m = re.findall(r'^[^-]*-([^-]*).*', str, re.MULTILINE)
>>> m
['45', '45']
"
How to use lattice in Rpy2 and save result to pdf?,"grdevices.dev_off()
"
a list of tuples into two lists,"zipped = [(12, 1), (123, 4), (33, 4)]
>>> b, c = zip(*zipped)
>>> b 
(12, 123, 33)
>>> c
(1, 4, 4)
"
"Drawing Arrow in (x,y) coordinate in Python","import numpy as np
import scipy as sp
import pylab as pl
import math

x = np.array([ 2, 4, 8, 10, 12, 14, 16])
y = np.array([ 5, 10, 15, 20, 25, 30, 35])
angles = np.array([45,275,190,100,280,18,45]) 

def draw_line(x,y,angle,length):
  cartesianAngleRadians = (450-angle)*math.pi/180.0
  terminus_x = x + length * math.cos(cartesianAngleRadians)
  terminus_y = y + length * math.sin(cartesianAngleRadians)
  pl.plot([x, terminus_x],[y,terminus_y])
  print [x, terminus_x],[y,terminus_y]


pl.axis('equal')
pl.axis([-5,20,-5,40])
for i in range(0,len(x)):
  print x[i],y[i],angles[i]
  draw_line(x[i],y[i],angles[i],1)

pl.show()
"
Put dict into new list based on a key value in Python,"arts = d['artist'].lower()
"
"Python method which computes the result only on the first call, without extra parameters","@cache_result
def do_once():
    print('doing it once')
    return 'expensive result'
"
Using iter on a list with a default value,"from itertools import chain, repeat
bar = chain(foo, repeat(""default""))
"
Building block matrix from array in the correct order,"In [24]: m = 4; n = 2; p = 3; q = 5

In [25]: a = np.arange(m*n*p*q).reshape(p*q, m*n)

In [26]: a.T.reshape(m, n, p, q).transpose(0, 2, 1, 3).reshape(m*p, n*q)
Out[26]:
array([[  0,   8,  16,  24,  32,   1,   9,  17,  25,  33],
       [ 40,  48,  56,  64,  72,  41,  49,  57,  65,  73],
       [ 80,  88,  96, 104, 112,  81,  89,  97, 105, 113],
       [  2,  10,  18,  26,  34,   3,  11,  19,  27,  35],
       [ 42,  50,  58,  66,  74,  43,  51,  59,  67,  75],
       [ 82,  90,  98, 106, 114,  83,  91,  99, 107, 115],
       [  4,  12,  20,  28,  36,   5,  13,  21,  29,  37],
       [ 44,  52,  60,  68,  76,  45,  53,  61,  69,  77],
       [ 84,  92, 100, 108, 116,  85,  93, 101, 109, 117],
       [  6,  14,  22,  30,  38,   7,  15,  23,  31,  39],
       [ 46,  54,  62,  70,  78,  47,  55,  63,  71,  79],
       [ 86,  94, 102, 110, 118,  87,  95, 103, 111, 119]])
"
In python convert day of year to month and fortnight,"In [11]: d
Out[11]: datetime.datetime(2004, 3, 28, 0, 0)

In [12]: d.replace(day=1 if d.day < 15 else 15)
Out[12]: datetime.datetime(2004, 3, 15, 0, 0)

In [13]: t = pd.Timestamp(d)

In [14]: t.replace(day=1 if t.day < 15 else 15)
Out[14]: Timestamp('2004-03-15 00:00:00')
"
"python's "".format"" function","def trans(year, month, location):
    return dict(year=year, month=month, location=location)
"
Saving Raw_input to a list when used in a While Loop,"while True:
        moduleName = raw_input(""Please enter module name: "") 
        if moduleName == ""-1"":
            break
        grade = raw_input (""Please enter students grade for "" + moduleName+"": "")
"
"Can I combine two 'findAll' search blocks in beautifulsoup, into one?","soup.findAll(lambda tag: tag.name in ['script', 'form'] or tag['id'] == ""footer"")
"
Find item in set via hash,"uid_to_foo = {foo.uid: foo for foo in foos}

# use 'uid_to_foo[some_foo.uid]' to find an instance fast
"
A long definition of an object inside a Python unit test,"class TestSomeFeatureWithDataXYZ(testbase.TestSomeFeature):
    @property
    def test_data_A(self): 
        return json.load(""data/XYZ.json"")
"
Python GTK3 Treeview buttons,"scrolled_window = Gtk.ScrolledWindow()
scrolled_window.add_with_viewport(self.objectsView)
scrolled_window.set_property(""shadow_type"",""in"")
"
How to print a return value from a function inside a class,"#Input
print askopenfile(mode=""rb"")

#Output
<open file u'C:/Users/User/Desktop/stuff.txt', mode 'rb' at 0x029BA078>
"
how to make *args optional in python when **kwargs is given?,"t = Test()
args = [1,2,3]
kwargs= {'a':1,'b':2}
t.f1(*args,**kwargs)
t.f1(**kwargs)
"
Modifying nested dictionaries,"{'151': {'1': 3.4, '0': 3.6, '2': '2.30'}}
"
Python: Opening a file within a print() function,"with open('file.txt', 'r') as f:
    for line in f:
        print(line, end='')
"
How to print Radio Control information,"['S', 'M', 'L']
"
pandas dataframe count uniques with respect to another column,"In [179]: result = df.groupby(['category', 'subcategory', 'contract']).sum() > 0

In [180]: result
Out[180]: 
                              week1  week2  week3
category subcategory contract                    
cat1     sub1        11001     True   True   True
         sub2        11002     True   True  False
                     11003     True   True  False
cat2     sub3        11004     True  False   True
                     11005     True   True  False
"
How do I get Python and Selenium to click an angularjs link by matching the link to user input text?,"""//span[contains(.,'{}')]/preceding-sibling::a"".format(track) 
"
"Python style: lowercase class names for ""namespaces""?","class Countries:  # pseudo-enum
    NEW_ZEALAND = 1
    UNITED_STATES = 2
"
How do I reverse items from a list and store it as a string in python,">>> myList = ['L', 'H', 'V', 'M']
>>> ''.join(reversed(myList))
'MVHL'
>>> ''.join(myList[::-1])
'MVHL'
"
Pandas: Subtract row mean from each element in row,">>> df.sub(df.mean(axis=1), axis=0)
     a     b     c
0  0.5 -0.75  0.25
1  0.5  0.75 -1.25
"
Assert that a method was called in a Python unit test,"import mock

def testClearWasCalled(self):
   aw = aps.Request(""nv1"")
   with patch.object(aw, 'Clear') as mock:
       aw2 = aps.Request(""nv2"", aw)

   mock.assert_called_with(42) # or mock.assert_called_once_with(42)
"
sum function in python,"import numpy as np
"
"python dask DataFrame, support for (trivially parallelizable) row apply?","df.apply(func, axis=1)
"
How to compare all lines in some file with another line?,"new = [line for line in new_lines if line not in existing_lines]
"
Dates to categories,"import dateutil.parser as dateparser

date_list = ['1963 to 1969', 
             'Aug. 1968 to Sept. 1968', 
             'Mar-73', 
             '24-Jul', 
             'Oct. 2 1980', 
             'Aug 29, 1980', 
             'July 1946', 
             'undated']          

for d in date_list:
    if 'to' in d:
        a, b = d.split('to')
        # Get the higher number. Use min to get lower of two.
        print max(dateparser.parse(a.strip()).year, dateparser.parse(b.strip()).year)
    elif d == 'undated':
        print '0000'
    else:
        yr = dateparser.parse(d).year
        print yr
"
Python: Delete specific timestamp index row (independently of date),"In [31]: df.reindex(df.index-df.index.take(df.index.indexer_between_time('9:30:00','9:30:00')))
Out[31]: 
                            0
2013-01-01 09:00:00 -1.452507
2013-01-01 09:15:00 -0.244847
2013-01-01 09:45:00 -0.689975
2013-01-01 10:00:00 -1.506261
2013-01-02 09:00:00 -0.096923
2013-01-02 09:15:00 -1.371506
2013-01-02 09:45:00  0.327030
2013-01-02 10:00:00  1.614000
2013-01-03 09:00:00 -1.313668
2013-01-03 09:15:00  0.563914
2013-01-03 09:45:00  0.309642
2013-01-03 10:00:00 -0.386824
2013-01-04 09:00:00 -1.245194
2013-01-04 09:15:00  0.930746
2013-01-04 09:45:00 -0.927087
2013-01-04 10:00:00 -1.098625

[16 rows x 1 columns]
"
Re-using deferred objects in Twisted,"from __future__ import print_function, unicode_literals

from twisted.internet import defer

class Foo(object):

    def __init__(self):
        self.dfd = defer.Deferred()

    def async(self):
        justForThisCall = defer.Deferred()
        def callbackForDFD(result):
            justForThisCall.callback(result)
            return result
        self.dfd.addCallback(callbackForDFD)
        return justForThisCall

    @defer.inlineCallbacks
    def func(self):
        print('Started!')
        result = yield self.async()
        print('Stopped with result: {0}'.format(result))

if __name__ == '__main__':
    foo = Foo()
    print(""calling func"")
    foo.func()
    print(""firing dfd"")
    foo.dfd.callback('no need to wait!')
    print(""calling func again"")
    foo.func()
    print(""done"")
"
python setup.py sdist and custom setup keywords don't play together,"six
"
Insert calcuated results into LaTeX document,"<< r_err >>
"
Can you list the keyword arguments a Python function receives?,">>> import inspect
>>> def func(a,b,c=42, *args, **kwargs): pass
>>> inspect.getargspec(func)
(['a', 'b', 'c'], 'args', 'kwargs', (42,))
"
How to import and create my class from my module?,"falcondup.falconpeer.LogLevel.Info
falcondup.falconpeer.LogLevel.Warn
falcondup.falconpeer.LogLevel.Error
"
Decorate subclass method,"def aMethod(....):
    ...
aMethod = deco(aMethod)
"
How can I use ElementTree to find all top level matched nodes?,"[<Element 'ElementTypeA' at 0x7f3890ef4dd0>, <Element 'ElementTypeG' at 0x7f3890eea310>]
"
How do I iterate through a string in Python?,"import string
allTheLetters = string.lowercase
"
Implementing the following algorithm for sorting," Worst case performance       О(n2)
 Best case performance        O(n)
 Average case performance     О(n2)
 Worst case space complexity  О(n) total, O(1) auxiliary
"
Trying update Twitter status with scraper data using Twython. Unsure on what to do,"import urllib2
import json
from twython import Twython

CONSUMER_KEY = 'XXXXXXXXXXXXXXXX'
CONSUMER_SECRET = 'XXXXXXXXXXXXXXXX'
ACCESS_KEY = 'XXXXXXXXXXXXXXXX'
ACCESS_SECRET = 'XXXXXXXXXXXXXXXX'

# get remote string
url = 'http://www.reddit.com/new.json?sort=new'
response=urllib2.urlopen(url)

# interpret as json
data = json.load(response)
#print(data)
response.close()

api = Twython(CONSUMER_KEY,CONSUMER_SECRET,ACCESS_KEY,ACCESS_SECRET) 

d = data['data']['children'][3]['data']
title = d['title']
permalink = d['permalink']
subreddit = d['subreddit']

api.update_status(status=title+permalink+subreddit) #or you can post this as different 
#status, depends on how you'd like to format the tweet.
"
getting object name and function name,">>> import sys
>>> class A():
...     def func(self):
...         func_name = sys._getframe().f_code.co_name
...         class_name = self.__class__.__name__
...         print 'Executing {} from {}'.format(func_name, class_name)
...         
>>> A().func()
Executing func from A
"
Python: sort list of strings in order that they appear in another string,"indices = {c: i for i, c in enumerate(thestring.split())}
"
Is there an elegant and pythonic way to require inputs for a class constructor?,"_Foo_default = object()
class Foo(object):
    def __init__(self, required_arg=_Foo_default):
        if required_arg is _Foo_default:
            raise ValueError(""Expected a user-supplied value for required_arg"")
"
"Efficient implementation for: ""Python For Else Loop"" in Java","class A {
    public static void main(String[] args) {
        int n = 13;
        found: {
            for (int x : new int[]{2,3,4,5,6,7,8,9,10,11,12})
                if (n % x == 0) {
                    System.out.println("""" + n + "" equals "" + x + ""*"" + (n/x));
                    break found;
                }
            System.out.println("""" + n + "" is a prime number"");
        }
    }
}
"
How to insert current_timestamp into Postgres via python," INSERT INTO some_table 
 (ts_column) 
 VALUES 
 (to_timestamp('16-05-2011 15:36:38', 'dd-mm-yyyy hh24:mi:ss'));
"
return index for rows in csv module python,"def main():
    tsvfile_input = sys.argv[1]
    data = csv.reader(open(tsvfile_input), delimiter = '\t')
    for index, row in enumerate(data):
        print('Row %d: %f' % (index + 1, sum(float(num) for num in row)))
"
Increment/decrement global variable using python multiprocessing module,"#!/usr/bin/env python
import random
import time
import multiprocessing

def func(arg):
    time.sleep(random.random())
    return arg*10

def main():
    counter = 10
    args = ""abc""
    pool = multiprocessing.Pool()
    for result in pool.imap_unordered(func, args):
        counter -= 1
        print(""counter=%d, result=%r"" % (counter, result))

if __name__ == ""__main__"":
    main()
"
How to store arrays of pixels in Pygame,"import json
... 
json.dumps(coords) #returns the json string containing your data
"
Reading zipped ESRI BIL files with Python,"import gdal
import gdalconst

class BilFile(object):

    def __init__(self, bil_file):
        self.bil_file = bil_file
        self.hdr_file = bil_file.split('.')[0]+'.hdr'

    def get_array(self, mask=None):
        self.nodatavalue, self.data = None, None
        gdal.GetDriverByName('EHdr').Register()
        img = gdal.Open(self.bil_file, gdalconst.GA_ReadOnly)
        band = img.GetRasterBand(1)
        self.nodatavalue = band.GetNoDataValue()
        self.ncol = img.RasterXSize
        self.nrow = img.RasterYSize
        geotransform = img.GetGeoTransform()
        self.originX = geotransform[0]
        self.originY = geotransform[3]
        self.pixelWidth = geotransform[1]
        self.pixelHeight = geotransform[5]
        self.data = band.ReadAsArray()
        self.data = np.ma.masked_where(self.data==self.nodatavalue, self.data)
        if mask is not None:
            self.data = np.ma.masked_where(mask==True, self.data)
        return self.nodatavalue, self.data
"
Python function to give default value for blank entry not working,"name = fallBack(input(""What is your name?""))
"
How can I output the summary statistics without a group by variable?,"   num_emails  total_amount  total_orders  total_purchasers
0           4           249            11                 3
"
Removing nth row in Pandas,"print (data.resample('5S', how='first'))
"
Algorithm to create a square matrix given any number of smaller square matrices,"import numpy as np

def montage(imgarray, nrows=None, border=5, border_val=np.nan):
    """"""
    Returns an array of regularly spaced images in a regular grid, separated
    by a border

    imgarray: 
        3D array of 2D images (n_images, rows, cols)
    nrows:  
        the number of rows of images in the output array. if 
        unspecified, nrows = ceil(sqrt(n_images))
    border: 
        the border size separating images (px)
    border_val:
        the value of the border regions of the output array (np.nan
        renders as transparent with imshow)
    """"""

    dims = (imgarray.shape[0], imgarray.shape[1]+2*border,
        imgarray.shape[2] + 2*border)

    X = np.ones(dims, dtype=imgarray.dtype) * border_val
    X[:,border:-border,border:-border] = imgarray

    # array dims should be [imageno,r,c]
    count, m, n = X.shape

    if nrows != None:
        mm = nrows
        nn = int(np.ceil(count/nrows))
    else:
        mm = int(np.ceil(np.sqrt(count)))
        nn = mm

    M = np.ones((nn * n, mm * m)) * np.nan

    image_id = 0
    for j in xrange(mm):
        for k in xrange(nn):
            if image_id >= count: 
                break
            sliceM, sliceN = j * m, k * n
            img = X[image_id,:, :].T
            M[sliceN:(sliceN + n), sliceM:(sliceM + m)] = img
            image_id += 1

    return np.flipud(np.rot90(M))
"
Extract points within a shape from a raster,"from numpy import *

def points_in_circle(circle, arr):
    ""A generator to return all points whose indices are within given circle.""
    i0,j0,r = circle
    def intceil(x):
        return int(ceil(x))
    for i in xrange(intceil(i0-r),intceil(i0+r)):
        ri = sqrt(r**2-(i-i0)**2)
        for j in xrange(intceil(j0-ri),intceil(j0+ri)):
            yield arr[i][j]
"
how to change a tuple into dictionary tree in python,"l = []
entries = {}
queue = {}

for id, fid, title in t:
    entries[id] = entry = {'id': id, 'fid': fid, 'title': title}
    if id in queue:
        entry['sons'] = queue[id]
        del queue[id]
    if fid == -1:
        l.append(entry)
    elif fid in entries:
        parent = entries[fid]
        parent.setdefault('son', []).append(entry)
    else:
        queue.setdefault(fid, []).append(entry)

if queue:
    raise ValueError('No entries found for fid(s) {}'.format(queue.keys()))
"
Recursively search xml by entry,">>> from BeautifulSoup import BeautifulStoneSoup
>>> xml = """"""<ns0:feed ns1:etag=""W/""LIESANDCRAPfyt7I2A9WhHERE."""" xmlns:ns4=""http://www.w3.org/2007/app"" xmlns:ns3=""http://schemas.google.com/contact/2008"" xmlns:ns2=""http://a9.com/-/spec/opensearchrss/1.0/"" xmlns:ns1=""http://schemas.google.com/g/2005"" xmlns:ns0=""http://www.w3.org/2005/Atom"">
...             <ns0:updated>2012-01-25T14:52:12.867Z</ns0:updated>
...             <ns0:category term=""http://schemas.google.com/contact/2008#profile"" scheme=""http://schemas.google.com/g/2005#kind""/>
...             <ns0:id>domain.com</ns0:id>
...             <ns0:generator version=""1.0"" uri=""http://www.google.com/m8/feeds"">Contacts</ns0:generator>
...             <ns0:author>
...                 <ns0:name>domain.com</ns0:name>
...             </ns0:author>
...             <ns0:link type=""text/html"" rel=""alternate"" href=""http://www.google.com/""/>
...             <ns0:link type=""application/atom+xml"" rel=""http://schemas.google.com/g/2005#feed"" href=""https://www.google.com/m8/feeds/profiles/domain/domain.com/full""/>
...             <ns0:link type=""application/atom+xml"" rel=""http://schemas.google.com/g/2005#batch"" href=""https://www.google.com/m8/feeds/profiles/domain/domain.com/full/batch""/>
...             <ns0:link type=""application/atom+xml"" rel=""self"" href=""https://www.google.com/m8/feeds/profiles/domain/domain.com/full?max-results=300""/>
...             <ns2:startIndex>1</ns2:startIndex>
...             <ns2:itemsPerPage>300</ns2:itemsPerPage>
...             <ns0:entry ns1:etag=""""CRAPQR4KTit7I2A4"""">
...                 <ns0:category term=""http://schemas.google.com/contact/2008#profile"" scheme=""http://schemas.google.com/g/2005#kind""/>
...                 <ns0:id>http://www.google.com/m8/feeds/profiles/domain/domain.com/full/nperson</ns0:id>
...                 <ns1:name>
...                     <ns1:familyName>Person</ns1:familyName>
...                     <ns1:fullName>Name Person</ns1:fullName>
...                     <ns1:givenName>Name</ns1:givenName>
...                 </ns1:name>
...                 <ns0:updated>2012-01-25T14:52:13.081Z</ns0:updated>
...                 <ns1:organization rel=""http://schemas.google.com/g/2005#work"" primary=""true"">
...                     <ns1:orgTitle>JobField</ns1:orgTitle>
...                     <ns1:orgDepartment>DepartmentField</ns1:orgDepartment>
...                     <ns1:orgName>CompanyField</ns1:orgName>
...                 </ns1:organization>
...                 <ns3:status indexed=""true""/>
...                 <ns0:title>Name Person</ns0:title>
...                 <ns0:link type=""image/*"" rel=""http://schemas.google.com/contacts/2008/rel#photo"" href=""https://www.google.com/m8/feeds/photos/profile/domain.com/nperson""/>
...                 <ns0:link type=""application/atom+xml"" rel=""self"" href=""https://www.google.com/m8/feeds/profiles/domain/domain.com/full/nperson""/>
...                 <ns0:link type=""application/atom+xml"" rel=""edit"" href=""https://www.google.com/m8/feeds/profiles/domain/domain.com/full/nperson""/>
...                 <ns1:email rel=""http://schemas.google.com/g/2005#other"" address=""nperson@gapps.domain.com""/>
...                 <ns1:email rel=""http://schemas.google.com/g/2005#other"" primary=""true"" address=""nperson@domain.com""/>
...                 <ns4:edited>2012-01-25T14:52:13.081Z</ns4:edited>
...             </ns0:entry>
...             <ns0:title>domain.com's Profiles</ns0:title>
...         </ns0:feed>""""""
"
Build nested tree-like dict from an array of dicts with children,"{'top_parent': {'child_one': None, 'child_two': {'grand_child': None}}}
{'top_parent': {'child_one': {}, 'child_two': {'grand_child': {}}}}
{'top_parent': {'child_one': None, 'child_two': {'grand_child': None}}}
{'top_parent': {'child_one': {}, 'child_two': {'grand_child': {}}}}
"
How to determine whether a Pandas Column contains a particular value,"In [23]: set(s)
Out[23]: {'a', 'b', 'c'}

In [24]: 'a' in set(s)
Out[24]: True
"
Python process text file with these criteria,"in_file = 'reach.txt'
out_file = 'outreach.txt'

def clean(string):
    if not string:
        return string

    cleaned = []
    items = string.split()
    for item in items:
        if item.startswith('(') and item.endswith(')'):
            cleaned.append(item.strip('()'))
            break
    cleaned.append(items[-1])
    return ' '.join(cleaned)

with open(in_file) as i, open(out_file, 'w') as o:
    o.write('\n'.join([clean(line) for line in i]))
"
Python Caesar cypher using the most common letter to decode a message,">>> c.most_common(1)
[('e', 6)]
>>> c.most_common(1)[0][0]
'e'
"
Efficient way to find the average of the rank of added scores to a list. Possibly a more efficient way of sorting or a math way?,">>> lst = range(10**5, -1, -1)
>>> %timeit solve_bisect(lst)   #Using NPE's solution
1 loops, best of 3: 1.87 s per loop
>>> %timeit solve_sorted_list(lst)
1 loops, best of 3: 221 ms per loop
>>> lst = range(10**6, -1, -1)
>>> %timeit solve_sorted_list(lst)
1 loops, best of 3: 2.31 s per loop
>>> %timeit solve_bisect(lst)
1 loops, best of 3: 3min 52s per loop
"
Extracting columns from textfile given some criteria - python," with open(""somefile.txt"", 'r') as in_file:
      dialect = csv.Sniffer().sniff(in_file.read(1024)) # detect tab delimiter
      in_file.seek(0) 
      next(reader, none) # skip header
      reader = csv.reader(in_file, dialect) # load file with the determined delimiter
"
Does Python copy references to objects when slicing a list?,">>> l2[0] is l[0]
True
"
Selecting columns in numpy based on a Boolean vector,"In [2]: a
Out[2]: 
array([[ 0.,  0.,  0.],
       [ 0.,  0.,  0.],
       [ 0.,  0.,  0.],
       [ 0.,  0.,  0.],
       [ 0.,  0.,  0.]])

In [3]: b
Out[3]: 
array([[ 1.,  1.,  1.],
       [ 1.,  1.,  1.],
       [ 1.,  1.,  1.],
       [ 1.,  1.,  1.],
       [ 1.,  1.,  1.]])

In [4]: boolvec
Out[4]: array([ True,  True, False, False, False], dtype=bool)
"
How to convert an array of dates (format 'mm/dd/yy HH:MM:SS') to numerics?,"data[:,0]  # assuming time is the first column
"
list index comparison in python,"[2]
"
Convert tree nodes to coordinates of endpoints of edges,"[[(0, 4), (1, 3)], [(0, 4), (1, 5)], [(1, 3), (2, 2)], [(1, 3), (2, 4)],
 [(1, 5), (2, 4)], [(1, 5), (2, 6)], [(2, 2), (3, 1)], [(2, 2), (3, 3)],
 [(2, 4), (3, 3)], [(2, 4), (3, 5)], [(2, 6), (3, 5)], [(2, 6), (3, 7)]]
"
Python find root for non-zero level,"from scipy.optimize import fsolve

x0 = 1.0  # Initial guess

sol = fsolve(myfunc2, x0, args=(3,))
"
Conditions with Numpy,"plt.plot(Tri_1['g0-r0'], Tri_1['g0'], '.')
"
Python Bubble sort,"#!/usr/bin/python
import turtle as t

def draw(lst, width):
  for x in lst:
    height = x[0]
    t.color(x[1])
    t.forward(width)
    t.left(90)
    t.forward(height)
    t.left(90)
    t.forward(width)
    t.left(90)
    t.forward(height)
    t.left(90)
    t.penup()
    t.forward(30)
    t.pendown()

def bubble_sort(orig_lst):  
  lst = [ (x, ""blue"") for x in orig_lst ]
  n = len(lst)-1 
  t.pensize(3)
  draw(lst, width)
  swapped = True  
  while swapped:  
    swapped = False  
    for i in range(n):  
        if lst[i+1][0] < lst[i][0]:  
            lst[i], lst[i+1] = lst[i+1], lst[i]
            lst[i] = (lst[i][0], ""green"")  
            swapped = True 
            next = raw_input(""hit any key to continue "")
            t.home()
            t.clear() 
            draw(lst,width)
  newLst = [ x[0] for x in lst ]
  return newLst

# TOP LEVEL
original_lst = input(""Enter list to be sorted: "")
width = input(""Provide the width: "")

newLst = bubble_sort(original_lst)
print ""Done! Sorted list is: "", newLst
next = raw_input(""hit any key to exit "")
"
increasing speed of python list operations and comparisons in a custom table class,"class Table(object):
    def __init__(self, xsize=1, ysize=1, zsize=1):
        self.data = numpy.zeros((xsize, ysize, zsize))

    def __getitem__(self, key):
        return self.data[key]

    def __setitem__(self, key, value):
        self.data[key] = value

    def resize(self, xsize=1, ysize=1, zsize=1):
        # This only works for increasing the size of the data,
        # but is easy do adapt to other cases
        newdata = numpy.zeros((xsize, ysize, zsize))
        shape = self.data.shape
        newdata[:shape[0], :shape[1], :shape[2]] = self.data
        self.data = newdata
"
"how to replace an integer from a column for another integer contained in another file, python or awk","awk 'NR==FNR {a[$1]=$2; next} {if ($1 in a) {$1=a[$1]}}1' f2 f1
"
Extract Columns from html using Python (Beautifulsoup),"            Date   Price    Open    High     Low Change %
0   Jun 08, 2016  3.3609  3.4411  3.4465  3.3584   -2.36%
1   Jun 07, 2016  3.4421  3.4885  3.5141  3.4401   -1.36%
2   Jun 06, 2016  3.4896  3.5265  3.5295  3.4840   -1.09%
3   Jun 05, 2016  3.5280  3.5280  3.5280  3.5280    0.11%
4   Jun 03, 2016  3.5240  3.5910  3.5947  3.5212   -1.91%
5   Jun 02, 2016  3.5926  3.6005  3.6157  3.5765   -0.22%
6   Jun 01, 2016  3.6007  3.6080  3.6363  3.5755   -0.29%
7   May 31, 2016  3.6111  3.5700  3.6383  3.5534    1.11%
8   May 30, 2016  3.5713  3.6110  3.6167  3.5675   -1.11%
9   May 27, 2016  3.6115  3.5824  3.6303  3.5792    0.81%
10  May 26, 2016  3.5825  3.5826  3.5857  3.5757   -0.03%
11  May 25, 2016  3.5836  3.5702  3.6218  3.5511    0.34%
12  May 24, 2016  3.5713  3.5717  3.5903  3.5417   -0.04%
13  May 23, 2016  3.5728  3.5195  3.5894  3.5121    1.49%
14  May 20, 2016  3.5202  3.5633  3.5663  3.5154   -1.24%
15  May 19, 2016  3.5644  3.5668  3.6197  3.5503   -0.11%
16  May 18, 2016  3.5683  3.4877  3.5703  3.4854    2.28%
17  May 17, 2016  3.4888  3.4990  3.5300  3.4812   -0.32%
18  May 16, 2016  3.5001  3.5309  3.5366  3.4944   -0.96%
19  May 13, 2016  3.5340  3.4845  3.5345  3.4630    1.39%
20  May 12, 2016  3.4855  3.4514  3.5068  3.4346    0.95%
21  May 11, 2016  3.4528  3.4755  3.4835  3.4389   -0.66%
22  May 10, 2016  3.4758  3.5155  3.5173  3.4623   -1.15%
23  May 09, 2016  3.5164  3.5010  3.6766  3.4906    0.40%
"
"SQL: update A where B is max for each unique combo of C and D, where D is element of joined table","Select * 
FROM
scores s
   INNER JOIN users u
      on s.savefileid = u.savefileid -- primary key foreign key relationship here
      AND s.timestamp = (SELECT max(timestamp) FROM Scores ss where ss.savefileid = s.savefileid          )
WHERE user=x 
  AND title=y 
"
Fastest possible way to iterate through specific list in python,"next(filter(matcher, lis)).split(';')
"
How to replace values in multidimensional array?,"for row in ArrayMulti:
    for index in range(len(row)):
        row[index] = ""a""
"
"How can I find ""week"" in django's calendar app?","[datetime.date(2010, 5, 3), datetime.date(2010, 5, 4), datetime.date(2010, 5, 5), datetime.date(2010, 5, 6), datetime.date(2010, 5, 7), datetime.date(2010, 5, 8), datetime.date(2010, 5, 9)]
"
Dynamically add legends to matplotlib plots in python,"import matplotlib.pylab
import numpy as np

for q in range(1,10):
    # create a random, 100 length array
    s_A_approx = np.random.randint(0, 100, 100)
    # note I had to make q a string to avoid an AttributeError when 
    # initializing the legend
    matplotlib.pylab.plot(s_A_approx, marker='.', linestyle='None', label=str(q))

matplotlib.pylab.legend(loc='upper left')
matplotlib.pylab.show()
"
def function returning wrong value (python 2.7),"print(str(lang))
print(str(port))
"
Modifying list contents in Python,"for sublist in thelist:
  sublist.insert(0, 9)
"
Using existing table in sqlalchemy,"print list(foo.c)
"
Make sure input is limited to variables,"CURRENCY = {
    '¥': 'JPY', 'yen': 'JPY', 'jpy': 'JPY',
    '€': 'EUR', 'euro': 'EUR', 'eur': 'EUR',
    '$': 'USD', 'dollar': 'USD', 'usd': 'USD',
    '£': 'GBP', 'pound': 'GBP', 'gbp': 'GBP',
}

def read_currency(prompt):
    """"""Prompt the user to enter a currency.

    Returns a currency code.
    """"""
    while True:
        x = input(prompt)
        try:
            return CURRENCY[x.lower()]
        except KeyError:
            print('Unknown currency: {!r}'.format(x))
"
Behavior of Python's time.sleep(0) under linux - Does it cause a context switch?,"write(1, ""loop\n"", 5)                   = 5
select(0, NULL, NULL, NULL, {0, 500000}) = 0 (Timeout)
write(1, ""loop\n"", 5)                   = 5
select(0, NULL, NULL, NULL, {0, 500000}) = 0 (Timeout)
write(1, ""loop\n"", 5)                   = 5
select(0, NULL, NULL, NULL, {0, 500000}) = 0 (Timeout)
write(1, ""loop\n"", 5)                   = 5
select(0, NULL, NULL, NULL, {0, 500000}) = 0 (Timeout)
write(1, ""loop\n"", 5)  
"
Parsing XML in Python with ElementTree - findall,"value_I_want
value_I_want
"
How to set-up this Python data structure in R,"ll <- list( c( list(c(12,14)),4) , c(list(c(2,1)),5),c(list(c(42,11)),13))

str( ll )
List of 3
 $ :List of 2
  ..$ : num [1:2] 12 14
  ..$ : num 4
 $ :List of 2
  ..$ : num [1:2] 2 1
  ..$ : num 5
 $ :List of 2
  ..$ : num [1:2] 42 11
  ..$ : num 13
"
How to search a string with the url patterns in django?,"if getattr(my_view, ""name"", None) == ""User Profile View"":
    ...
"
"how can i use python's like ""For loop"" in php to revers string?","$output = $c . $output;
"
Displaying a floor division,">>> 1000/4000
0.25
>>> 1000//4000
0
"
generating a full combination of values from multiple lists in python?,"result = [list(item) for item in result]
"
Python: how to optimize the count of all possible shortest paths?,"counts = {}
for n in G.nodes(): counts[n] = 0
"
List comprehension and logical indexing,">>> list1_clean, list2_clean = map(list, zip(*out))
>>> list1_clean
[[3, 7, 8], [1, 1, 1]]
>>> list2_clean
[2, 3]
"
How do you convert Python's urllib2.urlopen() to text?,"pip install BeautifulSoup
"
Does Python have a shorthand notation for passing part of a list without copy?,"seq = ListViwthAView(range(100))
view = seq.view[10:20][5:7]
view[0] = 1337
print seq[15]    # 1337
"
groupby common values in two columns,"df = DataFrame([['ab', 'ac', 30], ['ac', 'ab', 20],
                 ['cb', 'ca', 15], ['ca', 'cb', 70],
                 ['ff', 'zz', 35]], columns=['A', 'B', 'Value'])

mask = df['A'] > df['B']
df.loc[mask, ['A','B']] = df.loc[mask, ['B','A']].values
df['Max'] = df.groupby(['A', 'B'])['Value'].transform('max')
"
Delete rows containing particular pattern [Python/Pandas],"s = ""# blah1\n# blah2\n# blah3\nCol1 Col2 Col3\na1 b1 c1\na2 b2 c2\n""
pd.read_table(StringIO(s), skiprows=3, sep=' ')
"
Python: have a user-defined function as an input while keeping the source-code inaccessible?,"a=5
b=eval('a+5')  #b == 10
"
How to match a list of dates to a pattern?,"import datetime
import numpy as np

ts = datetime.date.toordinal # or any monotonic numeric `date` function 
hist = np.histogram(map(ts, (date for title, date, name in scientific_works)),
                    bins=map(ts, daterange(start_date, end_date, period))[0]
does_it_match = all(x >= X for x in hist)
"
setup.py sdist exclude packages in subdirectory,"$ python setup.py sdist bdist bdist_wheel
"
How do I pick a string from a list and put it in a new list with the criteria,"if foods[""Steak""] == ""veg"":
    print(""Vegetarian food"")
else:
    print(""Not a vegetarian food"")
"
How to write C++ version of Python powerset function,"int main()
{
    const int N = 5;
    vector<int> input;
    for(int i=1; i<=N; ++i) {
        input.push_back(i);
    }
    vector<vector<int>> ps = powerSet(input);
    for(const vector<int>& set:ps) {
        cout << ""[ "";
        for(int elt: set) {
            cout << elt << "" "";
        }
        cout << ""]\n"";
    }
    return 0;
}
"
Django saving datetime based on per object timezone,"Handling correctly timezones in the Admin edit view
class EventAdmin(admin.ModelAdmin):
    # ...

    # Override change view so we can peek at the timezone they've entered and
    # set the current time zone accordingly before the form is processed
    def change_view(self, request, object_id, form_url='', extra_context=None):
        if request.method == 'POST':
            tz_form = TimeZoneForm(request.POST)
            if tz_form.is_valid():
                timezone.activate(tz_form.cleaned_data['event_time_zone'])
        else:
            obj = self.get_object(request, unquote(object_id))
            timezone.activate(obj.event_time_zone)
        return super(EventAdmin, self).change_view(request, object_id, form_url, extra_context)
"
Get matplotlib color from style palette,"RcParams({u'axes.edgecolor': u'#bcbcbc',
          u'axes.facecolor': u'#eeeeee',
          u'axes.grid': True,
          u'axes.labelsize': u'large',
          u'axes.prop_cycle': cycler(u'color', [u'#348ABD', u'#A60628', u'#7A68A6', u'#467821', u'#D55E00', u'#CC79A7', u'#56B4E9', u'#009E73', u'#F0E442', u'#0072B2']),
          u'axes.titlesize': u'x-large',
          u'legend.fancybox': True,
          u'lines.linewidth': 2.0,
          u'mathtext.fontset': u'cm',
          u'patch.antialiased': True,
          u'patch.edgecolor': u'#eeeeee',
          u'patch.facecolor': u'blue',
          u'patch.linewidth': 0.5,
          u'text.hinting_factor': 8})
"
Batch rename directories in reverse order,"ls -1
"
Increasing logging verbosity of class being unit-tested in Python,"$ nosetests test.py
F
======================================================================
FAIL: test_stuff (test.SomeClass)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/../../test.py"", line 7, in test_stuff
    self.assertFalse(True)
AssertionError: True is not false
-------------------- >> begin captured stdout << ---------------------
I just did some stuff

--------------------- >> end captured stdout << ----------------------

----------------------------------------------------------------------
Ran 1 test in 0.001s

FAILED (failures=1)
"
"Python tabulate, appending element to current table","# changes fill character to dash, and fills template with empty strings
print template.replace(':', ':-').format('', '', '')
"
How to Filter letters in a string in Python,"sentence.count('a')
"
Fast interpolation over 3D array for 3D origin x,"python version: 3.41 s
numba version: 1.04 s
"
Python quiet startup,"C:\Users\Bartek>ipython --no-banner

In [1]: print ""I <3 Python!""
I <3 Python!

In [2]: exit()

C:\Users\Bartek>
"
percentile rank in pandas in groups,"In [21]: g.LgRnk.rank(pct=True)
Out[21]:
19    1.0
0     0.9
17    0.8
4     0.7
13    0.1
3     0.6
16    0.2
22    0.5
20    0.4
21    0.3
Name: 1985, dtype: float64
"
Composite primary key in django,"class MyTable(models.Model):
    class Meta:
        unique_together = (('key1', 'key2'),)

    key1 = models.IntegerField(primary_key=True)
    key2 = models.IntegerField()
"
What is the easiest way to convert list with str into list with int?,"list(map(int, [""1"", ""2"", ""3""]))
"
Return True if alphanumeric (No methods or import allowed),"if int(s[i]) in (1, 2, 3, 4, ...):
"
How do you break Python Flask controller flow when calling return inside a function?,"def verify_session(fn):
  def inner(*args,**kwargs):
    if not 'logged_in' in session:
        flash(""You are not logged in.<br/>Please, log in to use our application."", ""warning"")
        return redirect(url_for('login_path'))
    return fn(*args,**kwargs)
  return inner
"
Improving Python function to count occurrences of a substring,"import re

def MyFunc(s, sub):
    return len(re.compile(re.escape(sub)).findall(s))
"
How do I use optparse to just split the command-line arguments into options and positional args?,"o = list()
for k in vars(opt):
    o.append(k)
    o.append(getattr(opt, k))
print ""List Opt:"", o
"
python nose tests: specifying which node the test should be run in Selenium Grid,"nose.run(argv=['nosetests','-v','-s','--with-xunit','--tc-file','./configFile'], 
             plugins=[TestConfig(),Capture(),Xunit()])
"
Can Python read from a Windows Powershell namedpipe?,"import time
import struct

f = open(r'\\.\pipe\NPtest', 'r+b', 0)
i = 1

while True:
    s = 'Message[{0}]'.format(i)
    i += 1

    f.write(struct.pack('I', len(s)) + s)   # Write str length and str
    f.seek(0)                               # EDIT: This is also necessary
    print 'Wrote:', s

    n = struct.unpack('I', f.read(4))[0]    # Read str length
    s = f.read(n)                           # Read str
    f.seek(0)                               # Important!!!
    print 'Read:', s

    time.sleep(2)
"
Binding number and operator buttons to calculator buttons,"self.results = Entry(display, textvariable=numbers, width=31, fg=""black"", bg=""snow"", font=""Verdana"")
"
Class object display 'class object at ...',">>> class Car:
...     def __init__(self, make, year):
...         self.make = make
...         self.year = year
...     def __repr__(self):
...         return 'Car({!r}, {!r})'.format(self.make, self.year)
... 
>>> Car('Toyota Camry', 2007)
Car('Toyota Camry', 2007)
"
Posting html form values to python script,"import cgi
form = cgi.FieldStorage()
searchterm =  form.getvalue('searchbox')
"
Good libraries in R or Python for analytics of network/graph data,"In [8]: times = collections.Counter([j.time for j in allrecords])

In [9]: print times
Counter({'noon': 2, 'afternoon': 1, 'night': 1})

In [10]: amounts =  collections.Counter([j.amount for j in allrecords])

In [11]: print amounts
Counter({0: 2, 20: 1, 5: 1})
"
SQLite foreign key examples,"CREATE TABLE child (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT
);


CREATE TABLE dog (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    dog TEXT
);

CREATE TABLE child_dog {
    child_id INTEGER,
    dog_id INTEGER,
    FOREIGN KEY(child_id) REFERENCES child(id),
    FOREIGN KEY(dog_id) REFERENCES dog(id)
};
"
Flask: How to manage different environment databases?,"#__init__.py
app = Flask(__name__)
app.config.from_object('settings')
app.config.from_envvar('MYCOOLAPP_CONFIG',silent=True)
"
Optional Parameter Python?,"import sys

spliced = False
if '-s' in sys.argv:
    spliced = True
    sys.argv.remove('-s')
infile, outfile = sys.argv[1:]
"
Best way of linking to a page in Django,"<a href=""{% url 'index' %}"">Home</a>
<a href=""{% url 'blog' %}"">Blog</a>
"
Check for multidimensional list in Python,"mean = lambda x: sum(x)/float(len(x)) #or `from statistics import mean` in python3.4
output = [foo(r) if isinstance(r, int) else mean(map(foo, r)) for r in data]
"
How to preserve inline CSS style with lxml.html.clean.Cleaner() in Python?,"<div><span style=""color: #008800;"">67.51</span></div>
"
python: complex string algorithm,"        ''  'Entry 0'  'Entry 1'  'Entry 2'  'Entry 3'  'Entry 4'  'Entry 5'  'Entry 6'  'Entry 7'  'Entry 8'  'Entry 9' 'Entry 10' 'Entry 11' 'Entry 12' 'Entry 13'
 'Entry 0'        '-'          2          3          2          0          1          1          0          1          1          0          0          0          0
 'Entry 1'        '-'        '-'          0          0          0          0         11          0          2          5          0          0          0          0
 'Entry 2'        '-'        '-'        '-'          3          0          1          0          1          0          0          0          0          0          0
 'Entry 3'        '-'        '-'        '-'        '-'          0          4          0          2          0          0          2          0          0          0
 'Entry 4'        '-'        '-'        '-'        '-'        '-'          0          1          0          0          0          0          1          0          0
 'Entry 5'        '-'        '-'        '-'        '-'        '-'        '-'          0          3          1          0          1          1          0          0
 'Entry 6'        '-'        '-'        '-'        '-'        '-'        '-'        '-'          0          2          5          0          1          0          0
 'Entry 7'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'          0          0          0          0          0          0
 'Entry 8'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'          2          0          0          0          0
 'Entry 9'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'          0          0          0          0
'Entry 10'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'          0          0          0
'Entry 11'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'          0          0
'Entry 12'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'          2
'Entry 13'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'        '-'
"
How do I pass Python arrays to shell script as an Array?,"import os
import json
import subprocess

hello1 = ""Hello World 1""
hello2 = ""Hello World 2""

jsonData = '{""pp"": [0,3,5,7,9], ""sp"": [1,2,4,6,8]}'
jj = json.loads(jsonData)

print jj['pp']
print jj['sp']

os.putenv( 'jj', ' '.join( str(v) for v in jj['pp']  ) )

print ""start""
subprocess.call(['./test.sh', hello1, hello2 ])
print ""end""
"
Efficient strings containing each other,"[(a, b) for a in A for b in B if a in b]
"
Convert python ordinal date to normal date in Postgresql,"select date (date '0001-01-01' + interval '733973 days' - interval '1 day');
"
How to create chained selectfield in flask without refreshing the page?,"from flask import Flask, render_template_string

app = Flask(__name__)

@app.route('/')
def index():
    systems = {
        'PlayStation': ['Spyro', 'Crash', 'Ico'],
        'N64': ['Mario', 'Superman']
    }

    return render_template_string(template, systems=systems)

template = """"""
"
Hotter/Colder Number Game in Python,"import random
n = random.randint(1, 10)
g = int(raw_input(""Enter a whole number between 1 and 10: ""))

while g != n:

    if g > n:
        g = int(raw_input(""Your number was too high, pick a lower one: ""))

    elif g < n:
        g = int(raw_input(""Your number was too low, pick a higher one: ""))

else:
    print ""You win.""
    print ""Your number was "", g, "" and my number was "", n
"
Can anyone help condense this Python code?,"Metaclass
def set_properties_meta(properties):
    def meta(name, bases, attrs):
        cls = type(name, bases, attrs)
        set_pyqtproperties(cls, properties)
        return cls
    return meta
"
Passing 4 digits to view,"In [4]: p = re.compile(r'^something/(?P<id1>\d+)/(?P<id2>\d+)/(?:(?P<id3>\d+)/)?(?:(?P<id4>\d+)/)?$')

In [5]: p.match('something/1/2/3/4/').groups()
Out[5]: ('1', '2', '3', '4')

In [6]: p.match('something/1/2/3/4').groups()
Out[6]: ('1', '2', '3', None)

In [7]: p.match('something/1/2/3/').groups()
Out[7]: ('1', '2', '3', None)

In [8]: p.match('something/1/2/3').groups()
Out[8]: ('1', '2', None, None)

In [9]: p.match('something/1/2/').groups()
Out[9]: ('1', '2', None, None)
"
Adding brackets and commas to multiple JSON objects,"for filename in all_files:
    for data in read_objects(filename):
        if 'text' and 'coordinates' in data:
            f.writerow([data['id'], data['geo']['coordinates']])
"
Not able to log to two different places using Python logging module,"# implicit root logger with loglevel WARNING

# both child-logger: loglevel NOTSET
logger = logging.getLogger('file')
hipchat_logger = logging.getLogger('hipchat')

# ...create and add file handler...

# change 'file'-loglevel to DEBUG
logger.setLevel(logging.DEBUG)

# ...create hipchat handler...

# change loglevel of the handler(!) to DEBUG.
# 'hipchat'-loglevel is still NOTSET
hipchat_handler.setLevel(logging.DEBUG)

# ...add hipchat handler ...

# logger -> loglevel DEBUG -> INFO gets logged.
logger.info(""Hi, this is a test. I should not see this in Hipchat"")

# hipchat_logger -> loglevel NOTSET -> delegate to root-logger
# root-logger -> loglevel WARNING -> INFO not logged (being below threshold)
hipchat_logger.info(""Hi, display me in Hipchat"")
"
How to run code on all possible combination of 3 strings,"from itertools import permutations

# Any iterable will do. I am using a tuple.
for permutation in permutations(('a', 'b', 'c')):  # Use your strings
    print(permutation)  # Change print() to whatever you need to do with the permutation
"
When zero is not None or not False but digit 0,"result = var1 if var1 is not None and var1 is not False else var2
"
"Pythonic way to write create dictionary from dict comprehension, + something else","dict([(x, 3) for x in [_id, _if, _while, _lbrace, _println]] + [(_variable, 2)])
"
pymongo: how to use $or operator to an column that is an array?,"collection1.find({'albums': {'$in': [3, 7, 8]}})
"
Using sphinx WebSupport: Is it possible to disable commenting for specific content?,"$('.sphinx-has-comment:not(table p)').comment();
"
A better pattern for ajax loading with pyramid?,"def get_items(request):
    return {} # values that you can pick and choose from in each view

@view_config(route_name='name', permission='perm', xhr=True, renderer='json')
def r_ajax(request):
    items = get_items(request)
    return {
        'data1': 1, 'data2': 2, 'data3': 3,
        'html': renderers.render('shortr.mako', {'items': items}, request),
    }

@view_config(route_name='name', permission='perm', renderer='r.mako')
def r_html(request):
    items = get_items(request)
    return items
"
Formatting a data structure into a comma-separated list of arguments,"'function(a, b, c, d)'
"
Elegant way to skip elements in an iterable,">>> from itertools import islice, permutations
>>> from timeit import timeit
>>> def list_index():
...     return list(permutations(range(10)))[999999]
... 
>>> def for_loop():
...     p = permutations(range(10))
...     for i in xrange(999999): p.next()
...     return p.next()
... 
>>> def enumerate_loop():
...     p = permutations(range(10))
...     for i, element in enumerate(p):
...         if i == 999999:
...             return element
... 
>>> def islice_next():
...     return next(islice(permutations(range(10)), 999999, 1000000))
... 
>>> timeit('f()', 'from __main__ import list_index as f', number=10)
5.550895929336548
>>> timeit('f()', 'from __main__ import for_loop as f', number=10)
1.6166789531707764
>>> timeit('f()', 'from __main__ import enumerate_loop as f', number=10)
1.2498459815979004
>>> timeit('f()', 'from __main__ import islice_next as f', number=10)
0.18969106674194336
"
Pandas newbie: How do I assign values based on content of columns?,"In [96]: df
Out[96]:
             pet1
0             dog
1  dog;cat;rabbit
2         cat;dog
3      manbearpig
4           hippo
"
Print 3rd line from the bottom in stdout,"import Tkinter as *
import subprocess

out = []  # Create empty list
for line in iter(p.stdout.readline, ''):
    out.append(line.rstrip('\n')) # append list
print out[-3] # print item in the list, in this case -3
"
find row or column containing maximum value in numpy array,"np.argmax(np.max(x, axis=0))
"
How do i get the average of three pos_coordinates values?,"subset = pos_coordinates[3:9]
average = float(sum(subset))/len(subset)
"
Python: Check if a directory is an alias,"from Carbon import File
def osx_realpath (path):
    return File.FSResolveAliasFile(path, True)[0].as_pathname()
"
Write a function named containsLetter that identifies all of the strings in a list that contain a specified letter and returns a list of those strings,">>> filter(lambda x: searchLetter in x, hulkLine)
['like', ""i'm""]
>>>
"
How to create colormap of confidence estimates for k-Nearest Neighbor Classification,"def classify_func(X, Y):
    return np.round(abs(X+Y)).astype('int')

def prob_func(X,Y):
    return 1 - 2*abs(abs(X+Y)-classify_func(X,Y))
"
Using lxml and xpath to get text from a webpage,"Obama's approve rate: 44.4
Obama's disapprove rate: 51.6
"
Digit or Number limit with exact match on Python Regex,"def is2To4Numbers(q):
    try:
        return 10 <= int(q) <= 9999
    except:
        return False
"
Accessing array elements by internal data index and order,"[[j*10+i for j in range(i,max+1)] for i in range(max+1)]

max=2: [[0, 10, 20], [11, 21], [22]]
max=3: [[0, 10, 20, 30], [11, 21, 31], [22, 32], [33]]
max=4: [[0, 10, 20, 30, 40], [11, 21, 31, 41], [22, 32, 42], [33, 43], [44]]
"
"Python, adding a file into another file","def save_file(filename, new_list):
    with open(filename, 'w') as f:
        for line in new_list:
            f.write(line)
"
"How to convert datetime.timedelta to minutes, hours in Python?","9 minutes, 50 hours
"
Passing parameters to url using Javascript or Jquery,"https://localhost:8000/page1?ids=sdf-asdf23-as2q3r,sdfqwe-232sasdf-23rwdefr,wqerqr-3qwq2r-23rq23r
"
Python doesn't parse Serial data to an array,"[468095384.0, 468095384.0, 468095384.0, 468095384.0, 468095384.0, 468095384.0, 468095384.0, 468095384.0, 468095384.0, 468095384.0]
[0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
"
How to call a function which returns multiple values,"y,z = F1(x)
F2(y,z,q)
"
combine two json dictionary python,"out = dict(list(a.items()) + list(b.items()))

print(out)
{'Paper': 3, 'cars': 1, 'Pens': 1, 'stores': 4, 'Pencils': 2, 'schools': 3, 'houses': 2}
"
Numerical integration Loop Python,"def my_func(x):
    return 2*x
"
Showing page count with ReportLab,"self.doc.build(pdf)
"
Get the relationship metadata from sqlalchemy,"# structure returned by get_metadata function.
MetaDataTuple = collections.namedtuple(""MetaDataTuple"",
        ""coltype, colname, default, m2m, nullable, uselist, collection"")


def get_metadata_iterator(class_):
    for prop in class_mapper(class_).iterate_properties:
        name = prop.key
        if name.startswith(""_"") or name == ""id"" or name.endswith(""_id""):
            continue
        md = _get_column_metadata(prop)
        if md is None:
            continue
        yield md


def get_column_metadata(class_, colname):
    prop = class_mapper(class_).get_property(colname)
    md = _get_column_metadata(prop)
    if md is None:
        raise ValueError(""Not a column name: %r."" % (colname,))
    return md


def _get_column_metadata(prop):
    name = prop.key
    m2m = False
    default = None
    nullable = None
    uselist = False
    collection = None
    proptype = type(prop)
    if proptype is ColumnProperty:
        coltype = type(prop.columns[0].type).__name__
        try:
            default = prop.columns[0].default
        except AttributeError:
            default = None
        else:
            if default is not None:
                default = default.arg(None)
        nullable = prop.columns[0].nullable
    elif proptype is RelationshipProperty:
        coltype = RelationshipProperty.__name__
        m2m = prop.secondary is not None
        nullable = prop.local_side[0].nullable
        uselist = prop.uselist
        if prop.collection_class is not None:
            collection = type(prop.collection_class()).__name__
        else:
            collection = ""list""
    else:
        return None
    return MetaDataTuple(coltype, str(name), default, m2m, nullable, uselist, collection)


def get_metadata(class_):
    """"""Returns a list of MetaDataTuple structures.
    """"""
    return list(get_metadata_iterator(class_))


def get_metadata_map(class_):
    rv = {}
    for metadata in get_metadata_iterator(class_):
        rv[metadata.colname] = metadata
    return rv
"
Substract current time to -GMT in python,"import datetime

my_time = ""13:11:06""
new_time = datetime.datetime.strptime(""2016 "" + my_time, ""%Y %H:%M:%S"") - datetime.timedelta(hours=5, minutes=30)
print new_time.strftime(""%H:%M:%S"")
"
Dynamic Programming - Fibonacci,">>> def dynamicFibo(n,table = []):
   while len(table) < n+1: table.append(0) #this does the same thing except it doesn't change the reference to `table`
   #base case
   if n <= 1:
       return n
   #recursive case
   else:
       if table[n-1] ==  0:
           table[n-1] = dynamicFibo(n-1)

       if table[n-2] ==  0:
           table[n-2] = dynamicFibo(n-2)

       table[n] = table[n-2] + table[n-1]
   return table[n]
>>> dynamicFibo(12)
144
>>> dynamicFibo(300)
222232244629420445529739893461909967206666939096499764990979600
"
Beautiful soup queries,"'green' in tag['class']
"
python pandas/numpy True/False to 1/0 mapping,">>> True == 1
True
>>> False == 0
True
"
time.strptime got TypeError: function takes at most 8 arguments (9 given),"map(lambda x: datetime.datetime.strptime(x['date'], '%Y-%m-%dT%H:%M:%S.%fZ'), data)
"
Multiple increment operators on the same line Python,"def inc(value, *args):
    for i in args:
        yield i+value
"
Python: Project Euler 145,"seen = set()

def allEvenDigits(numb): # This is the issue one
    return all( int(n)%2 == 0 for n in str(numb))

for i in range(1, 1000): # its 1000 to save a few minutes
    revNumb = reversed(i);
    total = revNumb+i;

    if i not in seen and revNumb not in seen:
        if (allEvenDigits(total)):
            print(i, ""+"" , revNumb, ""="",total);
            seen.add(i)
            seen.add(revNumb)
"
Replace words in XML file,"import lxml.etree as ET

ban_word = 'REPLACE_ME'
replacement = 'HELLO'

data = """"""<root>
    <some_xml_tag>REPLACE_ME</some_xml_tag>
    <some_xml_tag attr=""REPLACE_ME"">some text</some_xml_tag>
    <REPLACE_ME>some text</REPLACE_ME>
</root>
""""""

root = ET.fromstring(data)

for item in root.xpath('//*[. = ""%s""]' % ban_word):
    item.text = item.text.replace(ban_word, replacement)

print ET.tostring(root)
"
Identifying if a Cell contains an equation in Word,"If oText.Range.Tables(1).Cell(r,c).Range.OMath.Count > 0 Then ... '>>here is
"
(Python) Slice lines till symbol from large file and append to other file - Fastest possible approach,"$ pyfasta split -n 6 original.fasta
"
Compare 2 .csv files with Python then output results,"{'2': {'BillingNumber': '2',
       'City': 'Reading',
       'CustomerName': 'CHARLIE RYAN',
       'IsActive': 'Yes',
       'IsCreditHold': 'No',
       'IsPayScan': 'Yes',
       'State': 'PA'},
 '3': {'BillingNumber': '3',
       'City': '',
       'CustomerName': 'INSURANCE BILLS',
       'IsActive': '',
       'IsCreditHold': '',
       'IsPayScan': '',
       'State': ''},
 '4': {'BillingNumber': '4',
       'City': '',
       'CustomerName': 'AAA',
       'IsActive': '',
       'IsCreditHold': '',
       'IsPayScan': '',
       'State': ''}}
"
splitting and merging the string in python,"def return_path(item_id):
    path = []
    # pad with zeros, grab only the last 6 digits
    str_id = format(item_id, '06d')[-6:]
    # any extra zero pairs at the start are in the path first
    while str_id.startswith('00'):
        path.append('00')
        str_id = str_id[2:]
    # for an odd number of padding zeros, swap out the 0 to the last digit
    if str_id[0] == '0':
        str_id = str_id[1:-1] + '0' + str_id[-1:]
    # grab digits in pairs starting at the end
    path += [str_id[i:i + 2] for i in range(len(str_id) - 2, -1, -2)]
    path.append(str(item_id))
    return os.path.join(*path)
"
"Need to take average of long, strangely formatted set of data in Python","print sorted( ( (k,sum(v)/len(v)) for k,v in input ), key=lambda t: t[1] )
"
Quickest/Best way to traverse XML with lxml in Python,"for x in target.xpath('//target'):
    print x.text
"
Google app engine - structuring model layout with regards to parents?,"# Create a new country:
us = Country(name='USA')
us.put()

# Create a new state
ca = State(name='California', country=us)
ca.put()

# Create a new city
la = City(name='Los Angeles', state=ca)
la.put()

# And another
sf = City(name='San Francisco', state=ca)
sf.put()

# Print states
for state in us.states:
    print state.name

    # Print cities
    for city in state.cities:
        print ' ' + city.name
"
What is the complexity of the hash function sha1,"0.000172138214111
0.303541898727
0.620085954666
0.932041883469
1.29230999947
1.57217502594
1.93531990051
2.24045419693
2.56945014
2.95437908173
"
Query a column for row values in HDFS,"import csv

def search(search_column, search_value):

    with open('file.txt', 'rb') as f:
        header = []
        reader = csv.reader(f, delimiter='\t', quotechar='""')
        for row in reader:
            if not row:
                continue
            if not header:
                header = row
                continue
            row = dict(zip(header, row))
            if row.get(search_column) == search_value:
                return row.get('Product ID')
        return None

print search('Let\'s eat pizza', '1')
"
Google App Engine NDB Read Operation Optimization,"for item in data:
    InfoDB(id=item['id'], data=item['data']).put()
"
Is there a better way than this to implement Softmax Action Selection for Reinforcement Learning?,"[ 0.02645082  0.02645082  0.94709836]
"
comparing ndarray with values in 1D array to get a mask,"In [174]: arr = np.array([[1,2,3],[4,9,6],[7,2,3]])

In [175]: bag = [1,9,3]

In [177]: np.in1d(arr, bag).reshape(arr.shape)
Out[177]: 
array([[ True, False,  True],
       [False,  True, False],
       [False, False,  True]], dtype=bool)
"
Change a specific element of a list in python?,"    'x'[2] = 'a'
"
Making subsequent POST request in session doesn't work - web scraping,"import requests

from bs4 import BeautifulSoup

h = {""X-MicrosoftAjax"": ""Delta = true"",
     ""X-Requested-With"": ""XMLHttpRequest"",
     ""User-Agent"": ""Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.87 Safari/537.36""
     }
""ctl00$ctl13 | ctl00$MainContent$physicianSearchView$btnSearch""
d = {
    ""ctl00$ctl13"": ""ctl00$MainContent$physicianSearchView$btnSearch"",
    ""__EVENTTARGET"": ""ctl00$MainContent$physicianSearchView$btnSearch"",
    'ctl00$MainContent$physicianSearchView$hfPrefetchUrl': ""http://service.cpsa.ca/OnlineService/OnlineService.svc/Services/GetAlbertaCities?name="",
    'ctl00$MainContent$physicianSearchView$hfRemoveUrl': ""http://service.cpsa.ca/OnlineService/OnlineService.svc/Services/GetAlbertaCities?name=%QUERY"",
    '__ASYNCPOST': 'true'}

nxt_d = {
    ""ctl00$ctl13"": ""ctl00$MainContent$physicianSearchView$ResultsPanel|ctl00$MainContent$physicianSearchView$gvResults$ctl14$ddlPager"",
    ""ctl00$MainContent$physicianSearchView$gvResults$ctl01$ddlPager"": ""2"",
    ""ctl00$MainContent$physicianSearchView$gvResults$ctl14$ddlPager"": ""1"",
    ""__ASYNCPOST"": ""true"",
    ""__EVENTTARGET"": ""ctl00$MainContent$physicianSearchView$gvResults$ctl14$ddlPager""}

url = ""http://search.cpsa.ca/PhysicianSearch""
with requests.session() as s:
    r = s.get(url, headers=h)
    soup = BeautifulSoup(r.content, ""lxml"")
    ev = soup.select(""#__EVENTVALIDATION"")[0][""value""]
    vs = soup.select(""#__VIEWSTATE"")[0][""value""]
    d[""__EVENTVALIDATION""] = ev
    d[""__VIEWSTATE""] = vs
    r = s.post(url, data=d, headers=h)
    soup = BeautifulSoup(s.get(""http://search.cpsa.ca/PhysicianSearch"").content, ""lxml"")
    ev = soup.select(""#__EVENTVALIDATION"")[0][""value""]
    vs = soup.select(""#__VIEWSTATE"")[0][""value""]
    nxt_d[""__EVENTVALIDATION""] = ev
    nxt_d[""__VIEWSTATE""] = vs
    r = s.post(url, data=nxt_d, headers=h)
"
Create pandas dataframe from nested dict with outer keys as df index and inner keys column headers,"In [182]: dictA = {'X':{'A': 0.2, 'B':0.3, 'C':0.4} ,'Y':{'A': 0.05, 'B':0.8, 'C':0.1},'Z':{'A': 0.15, 'B':0.6, 'C':0.25}}

In [183]: df = pd.DataFrame(dictA).T

In [184]: df
Out[184]:
      A    B     C
X  0.20  0.3  0.40
Y  0.05  0.8  0.10
Z  0.15  0.6  0.25
"
Python - one result from a list,"print(D[F-1])
"
PyGTK Entry widget in TreeViewColumn header,"def find_closest_ancestor(widget, ancestor_class):
    if not isinstance(widget, gtk.Widget):
        raise TypeError(""%r is not a gtk.Widget"" % widget)
    ancestor = widget.get_parent()
    while ancestor is not None:
        if isinstance(ancestor, ancestor_class):
            break;
        ancestor = ancestor.get_parent() if hasattr(ancestor, 'get_parent') and callable(ancestor.get_parent) else None
    return ancestor
"
py.test: how to get the current test's name from the setup method?,"============================= test session starts ==============================
platform linux2 -- Python 2.7.3 -- pytest-2.3.3
plugins: cov
collected 2 items 

test_pytest.py 
TestSomething:test_the_power
.
TestSomething:test_something_else
.

=========================== 2 passed in 0.03 seconds ===========================
"
How many times the finalizer method is called and zombies (PEP 442),"RefCycle()
import gc
gc.collect()
"
Count number of redirects in Scrapy,"scrapy crawl crazyCrawler -o items.json
"
python for loop using lambda syntax,"[['1', '1377877381', 'off', '0'],
 ['2', '1377886582', 'on', '0'],
 ['3', '1376238596', 'off', '0'],
 ['4', '1377812526', 'off', '0']]
"
Single out tags in an xml document?,"FreebieFM
micromicros
FreebieFM
Sarah Grimstone
FreebieFM
# etc.
"
Difference between isinstance and type in python,"cannot check subclasses
definitely prints
"
Collecting the numbers from a string in python,">>> from re import findall
>>> mystr = """"""
... {""object"" ""rectangle"" ""param1"" {""Type1"" ""Type2""} ""param2"" {{0.0 0.64} {0.08 0.72}} ""smth"" 0 ""point1"" 0 ""point2"" }
... """"""
>>> findall(""-?\d+\.\d+"", mystr)
['0.0', '0.64', '0.08', '0.72']
>>> var1, var2, var3, var4 = findall(""-?\d+\.\d+"", mystr)
>>> var1
'0.0'
>>> var4
'0.72'
>>>
"
Creating PPT presentation with Python vs C#,"foreach (PowerPoint.Slide slide in presentation.Slides)
{
        slide.Select();
        slide.Shapes.AddPicture(temporaryFilePath + "".bmp"", MsoTriState.msoTrue, MsoTriState.msoTrue, pptleft, ppttop, pptwidth, pptheight);
}    
"
How to override [] operator,">>> myobj[5] = 1
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
AttributeError: MyClass instance has no attribute '__setitem__'
"
wxpython setting frame menubar from panel,"import wx
import p

class MyFrame(wx.Frame):
    def __init__(self):
        wx.Frame.__init__(self, None, -1, ""Checking Menubar from external Panel"")

        sizer = wx.BoxSizer(wx.VERTICAL)

        mainPanel = p.MyPanel(parent=self)
        sizer.Add(mainPanel, 1, wx.EXPAND)
        self.SetSizer(sizer)

        self.Show()

if __name__ == '__main__':
    app = wx.App(False)
    frame = MyFrame()
    app.MainLoop()
"
Using Python to Decode Steganography Images (example images at Wikipedia),"In [2]: bin(234 & 0b11)
Out[2]: '0b10'
"
How to match an OR expression without grouping it?,"z = re.finditer(r""(\S+).*(?:\sA\s|\sCNAME\s)"", db)
z = [i.group(1) for i in z]
"
Python XOR on hex and string (parity check function),"bytestring = ""vTest\r""
bits = chr(0x7f) + bytestring
checksum = reduce(lambda x,y:chr((ord(x)^ord(y))&0xff),bits)
message = bytestring+checksum
print map(lambda x:hex(ord(x)),message)
#Result:['0x76', '0x54', '0x65', '0x73', '0x74', '0xd', '0x32']
# ser.write(message)
"
How to implement nested serializer in django rest framework?,"Serializers.py
class UserSerializer(serializers.ModelSerializer):
    class Meta:
        model = User

class UserProfileSerializer(serializers.ModelSerializer):
    user = UserSerializer(required=True)
    class Meta:
        model = UserProfile

    def create(self, validated_data):
        user_data = validated_data.pop('user', None)
        user = User.objects.create_user(**user_data)
        return UserProfile.objects.create(user=user, **validated_data)

   def update(self, instance, validated_data):
       user_dict = validated_data.pop('user', None)
       if user_dict:
           user_obj = instance.user
           for key, value in user_dict.iteritems():
                setattr(user_obj, key, value)
           user_obj.save()
           validated_data[""user""] = user_obj
       for key, value in validated_data.iteritems():
           setattr(instance, key, value)
       instance.save()
       return instance
"
For loop position in csv reader_Python,"infile.seek(0)
"
Unicode strings in tornado web app,"self.render(""template.html"", aString=aUnicodeString)
"
Creating a 2d mesh in python,"pylab.axis('scaled')
pylab.show()
"
SQLite: Select all date-value-pairs where the distance between each date and the first date is a multiple of a specific period,"select
    foo.created, foo.value
from 
    -- Subquery to pick first record to base rest of query on
    (
        select
            created,
            strftime('%d', created) as day
        from
            foo
        order by
            created
        limit 1
    ) as bar

    -- Join all rows in foo that are greater than that found in 'bar'
    -- and has the same day of the month.
    join foo
        on foo.created >= bar.created
           and strftime('%d', foo.created) = bar.day
"
How can i append database table column name as key to a list to convert it as dict,"result =[[1,'stu1','grade A'],[2,'stu2','grade B']]
title = ('id', 'name', 'grade')
map(lambda x: dict(zip(title, x)), result)
"
Plot parametric mean in Python,"import numpy as np
import matplotlib.pyplot as plt

r = np.random.random(100)

a = 1.
a_max = 1.
a_step = 0.01
a = np.arange(a_step-.3, a_max, a_step)
a.shape
#(129,)
a = a[:,None] #adds a new axis, making this a column vector, same as: a = a.reshape(-1,1)
a.shape
#(129, 1)
(a*r).shape
#(129, 100)
loga = np.log(1 + a*r)
loga.shape
#(129,100)
mloga = loga.mean(axis=1) #take the mean along the 2nd axis where `a` varies
mloga.shape
#(129,)

plt.plot(a, mloga)
plt.show()
"
Interested in searching wikipedia xml dump for only medically-related terms,"$ python define.py CHOLERAE
Vibrio cholerae is a Gram-negative, comma-shaped bacterium. Some strains of V. cholerae cause the disease cholera. V. cholerae is a facultative anaerobic organism and has a flagellum at one cell pole. V. cholerae was first isolated as the cause of cholera by Italian anatomist Filippo Pacini in 1854, but his discovery was not widely known until Robert Koch, working independently 30 years later, publicized the knowledge and the means of fighting the disease.
$ python define.py salmonella
Salmonella /ˌsælməˈnɛlə/ is a genus of rod-shaped (bacillus) bacteria of the Enterobacteriaceae family. There are only two species of Salmonella, Salmonella bongori and Salmonella enterica, of which there are around six subspecies and innumerable serovars. The genus Escherichia, which includes the species E.coli belongs to the same family.
Salmonellae are found worldwide in both cold-blooded and warm-blooded animals, and in the environment. They cause illnesses such as typhoid fever, paratyphoid fever, and food poisoning.
$ python define.py salmanela
Salmonella /ˌsælməˈnɛlə/ is a genus of rod-shaped (bacillus) bacteria of the Enterobacteriaceae family. There are only two species of Salmonella, Salmonella bongori and Salmonella enterica, of which there are around six subspecies and innumerable serovars. The genus Escherichia, which includes the species E.coli belongs to the same family.
Salmonellae are found worldwide in both cold-blooded and warm-blooded animals, and in the environment. They cause illnesses such as typhoid fever, paratyphoid fever, and food poisoning.
"
Python yield vs Ruby yield,"Line after 'yield val + 3'
--received 14 from generator
"
"running python code, to use sextractor with more than one image file","for arg in len(sys.argv):
    filename = arg.split('/')[-1].strip('.fits')
    t = sex(arg, filename +'_star_catalog.fits')
    # Whatever else
"
Comparing values of different python dictionaries with different keys & structures,"for url in dict1:
    if dict1[url] > dict2[url]:
        # do something
"
counting odd numbers in a list python,">>> def countOdd(l):
...     return fold(lambda x,y: x+(y&1),l,0)
... 
>>> def fold(f,l,a):
...     if l == list(): return a
...     return fold(f,l[1:],f(a,l[0]))
"
Pathfinding code produces unexpected results,"def alle_parents(knoten, parents = None):
    parents = parents or []
"
List database tables with SQLAlchemy,"from sqlalchemy import create_engine
engine = create_engine(""postgresql://u:p@host/database"")
"
Selecting in dropdown menu Selenium Python,"selectEle = Select(driver.find_element_by_xpath(""//select[@class='select_filter_class valid']""));

//In list it may be element instead of webelement in python
List<WebElement> list = select.find_elements_by_tag_name(""option"");
"
Edit text in file in python,"def read_file(filename):
  return open(filename).read()
"
Pandas: Use a series to do list look up,"In [15]:
s = pd.Series(np.arange(4))
l = [0,4,7,9]
s

Out[15]:
0    0
1    1
2    2
3    3
dtype: int32

In [16]:    
s.map(pd.Series(index=s.values, data=l))

Out[16]:
0    0
1    4
2    7
3    9
dtype: int64
"
How to fit datasets so that they share some (but not all) parameter values,"def power_law(x, a, b, c1, c2):
    l = len(x_data_one)
    return a * np.hstack([x[:l] + c1, x[l:] + c2]) ** b

x_data_one_two = np.hstack([x_data_one,x_data_two])
y_data_one_two = np.hstack([y_data_one,y_data_two])

(a_one, b_one, c_one, c_two), _ = curve_fit(power_law, x_data_one_two, y_data_one_two)
"
Is it possible to monitor a list (or mutable sequence) for when a member of the list is modified?,"class SimpleList(collections.MutableSequence):
    def __init__(self, collection):
        super(SimpleList, self).__init__(collection)
        for e in collection:
            e.registerPropertyChangeObserver(self)

    def simpleObjectPropertyChanged(self, simpleObject):
        pass # react to simpleObject.property being changed
"
Concatenating keys in nested dictionary,"{'A:B': {'C': 'C val', 'G': 'G val'}, 'A:D:E': {'F': 'F val'}}
"
How to use Python unit tests in self-contained program?,"$ python myscript.py 
Hello, world

$ # And now the test fails...
$ python myscript.py 
Some tests failed!
test_1 (__main__.test_hello)
Traceback (most recent call last):
  File ""myscript.py"", line 8, in test_1
    self.assertEqual(stradd(""a"", ""c""), ""ab"")
AssertionError: 'ac' != 'ab'
"
Pass time unit as a variable to the keyword argument in time delta function.,">>> from datetime import datetime, timedelta, date
>>> def subtract_from_date(date, time_unit, num):
...     return date - timedelta(**{time_unit: num})
... 
>>> subtract_from_date(date.today(), 'days', 5)
datetime.date(2015, 3, 21)
"
Pandas :Add certain row of a dataframe to a certain row of the other dataframe,"A B C Max
2 3 5 C
6 3 2 A
4 7 3 B
4 3 6 C
9 6 3 A
"
Pandas groupby year object plotting it year over year,"In [44]: vals = df.groupby(lambda x: (x.year, x.month)).sum()

In [45]: vals
Out[45]: 
(2000, 1)    -0.235044
(2000, 2)    -1.196815
(2000, 3)    -0.370850
(2000, 4)     0.719915
(2000, 5)    -1.228286
(2000, 6)    -0.192108
(2000, 7)    -0.337032
(2000, 8)    -0.174219
(2000, 9)     0.605742
(2000, 10)    1.061558
(2000, 11)   -0.683674
(2000, 12)   -0.813779
(2001, 1)     2.103178
(2001, 2)    -1.099845
(2001, 3)     0.366811
...
(2004, 10)   -0.905740
(2004, 11)   -0.143628
(2004, 12)    2.166758
(2005, 1)     0.944993
(2005, 2)    -0.741785
(2005, 3)     1.531754
(2005, 4)    -1.106024
(2005, 5)    -1.925078
(2005, 6)     0.400930
(2005, 7)     0.321962
(2005, 8)    -0.851656
(2005, 9)     0.371305
(2005, 10)   -0.868836
(2005, 11)   -0.932977
(2005, 12)   -0.530207
Length: 72, dtype: float64
"
How it to implement custom multiprocessing continuous (async) control in python?,"from multiprocessing import Pool, Manager
from Queue import Empty
import time

ff_tests = [1,2,3,4,5]
chrome_tests = [10, 11, 12, 13, 14, 15]
general_tests = [20, 21,22, 23,24,25]

def process_func(spec_queue, general_queue, browser):
    while True:
        try:
            test = spec_queue.get_nowait()
            print(""Processing {} in {} process"".format(test, browser))
            time.sleep(2)
        except Empty:
            break

    while True:
        try:
            test = general_queue.get_nowait()
            print(""Processing {} in {} process"".format(test, browser))
            time.sleep(2)
        except Empty:
            break


if __name__ == ""__main__"":
    m = Manager()
    ff_queue = m.Queue()
    chrome_queue = m.Queue()
    general_queue = m.Queue()

    for queue, tests in [(ff_queue, ff_tests), (chrome_queue, chrome_tests),
                         (general_queue, general_tests)]:
        for test in tests:
            queue.put(test)


    pool = Pool(8)
    for _ in range(4):
        pool.apply_async(process_func, args=(ff_queue, general_queue, ""firefox""))
        pool.apply_async(process_func, args=(chrome_queue, general_queue, ""chrome""))
    pool.close()
    pool.join()
"
jinja2 escape joined character in joinee,"{{ favorits|list_replace('|', '\|')|join(' | ')}}
"
How to keep the controller alive,"import wx
from enum import Enum

from wx.lib.pubsub import setupkwargs
from wx.lib.pubsub import pub

import logging

#####
#   The control events that the Controller can process
#   Usually this would be in a module imported by each of M, V and C
#   These are the possible values for the ""event"" parameter of an APP_EVENT message

class AppEvents(Enum):
    APP_EXIT = 0
    APP_ADD_WORKPLACE = 1
    APP_ADD_CUSTOMER = 2
    CUSTOMER_DEPOSIT = 3
    CUSTOMER_WITHDRAWAL = 4
    CUSTOMER_EARN = 5
    PERSON_WORK = 6
    EARN_REVENUE = 7


#################
#
#   View
#

class MainWindow(wx.Frame):

    def __init__(self,  title):
        wx.Frame.__init__(self, None, -1, title)

        self._log = logging.getLogger(""MVC Logger"")
        self._log.info(""MVC View - separate workspace: starting..."")

        self._bankStatusDisplay = None
        self._customerUIs = {}
        self._workplaceUIs = {}

        # this is where we will put display elements - it's up to the controller to add them
        self._sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.SetSizer(self._sizer)

        # but we do need one button immediately...
        add_workplace_button = wx.Button(self, label=""Add Workplace"")
        self._sizer.Add(add_workplace_button)
        self._sizer.Layout()

        self.Bind(wx.EVT_BUTTON, self._OnAddWorkplaceClick, add_workplace_button)

        # These are the events that cause us to update our display
        pub.subscribe(self._OnCustomerBalanceChange, ""CUSTOMER_BALANCE_EVENT"")
        pub.subscribe(self._OnBankBalanceChange, ""BANK_BALANCE_EVENT"")

        self.Show()

    def _OnAddWorkplaceClick(self, event):
        pub.sendMessage(""APP_EVENT"", event = AppEvents.APP_ADD_WORKPLACE)

    def AddWorkplace(self, workplace):
        self._workplaceUIs[workplace.name] = the_ui = WorkplaceInterface(self, workplace)
        self._sizer.Add(the_ui)
        self._sizer.Layout()

    def AddBank(self, bank):
        if not(self._bankStatusDisplay):
            self._bankStatusDisplay = BankStatusDisplay(self, bank)        
            self._sizer.Add(self._bankStatusDisplay)
            self._sizer.Layout()
        else:
            raise Exception(""We can only handle one bank at the moment"")

    def AddCustomer(self, customer):
        self._customerUIs[customer.name] = the_ui = CustomerInterface(self, customer)
        self._sizer.Add(the_ui)
        self._sizer.Layout()

    def _OnCustomerBalanceChange(self, value):
        customer = value
        self._customerUIs[customer.name].UpdateBalance()

    def _OnBankBalanceChange(self):
        self._bankStatusDisplay.Update()


class BankStatusDisplay(wx.Panel):
    def __init__(self, parent, bank):
        wx.Panel.__init__(self, parent, style = wx.RAISED_BORDER)

        self._bank = bank

        sizer = wx.BoxSizer(wx.VERTICAL)
        label = wx.StaticText(self, label=""Bank Funds"")

        balance_display = wx.TextCtrl(self)
        balance_display.SetEditable(False)
        balance_display.SetValue('$' + str(bank.Funds()))

        sizer.Add(label, 0, wx.EXPAND | wx.ALL)
        sizer.Add(balance_display, 0, wx.EXPAND | wx.ALL)

        self.SetSizer(sizer)        

        self._balanceDisplay = balance_display

    def Update(self):
        self._balanceDisplay.SetValue('$' + str(self._bank.Funds()))


class CustomerInterface(wx.Panel):
    def __init__(self, parent, customer):
        wx.Panel.__init__(self, parent, style = wx.RAISED_BORDER)

        self._customer = customer
        self._standardTransaction = 5 # how much customers try to deposit and withdraw

        sizer = wx.BoxSizer(wx.VERTICAL)
        label = wx.StaticText(self, label=customer.name)

        self._balanceDisplay = wx.TextCtrl(self)
        self._balanceDisplay.SetEditable(False)
        self._balanceDisplay.SetValue('$' + str(customer.CashInHand()))

        deposit_button = wx.Button(self, label=""Deposit $"" + str(self._standardTransaction))
        withdraw_button = wx.Button(self, label=""Withdraw $"" + str(self._standardTransaction))
        earn_button = wx.Button(self, label=""Earn Money"")

        sizer.Add(label, 0, wx.EXPAND | wx.ALL)
        sizer.Add(self._balanceDisplay, 0, wx.EXPAND | wx.ALL)

        sizer.Add(deposit_button, 0, wx.EXPAND | wx.ALL)
        sizer.Add(withdraw_button, 0, wx.EXPAND | wx.ALL)        
        sizer.Add(earn_button, 0, wx.EXPAND | wx.ALL)

        self.Bind(wx.EVT_BUTTON, self._OnDepositClick, deposit_button)
        self.Bind(wx.EVT_BUTTON, self._OnWithdrawClick, withdraw_button)
        self.Bind(wx.EVT_BUTTON, self._OnEarnClick, earn_button)

        self.SetSizer(sizer)
        self.Show()

    def _OnDepositClick(self, event):
        pub.sendMessage(""APP_EVENT"", event = AppEvents.CUSTOMER_DEPOSIT, value = (self._customer, self._standardTransaction))

    def _OnWithdrawClick(self, event):
        pub.sendMessage(""APP_EVENT"", event = AppEvents.CUSTOMER_WITHDRAWAL, value = (self._customer, self._standardTransaction))

    def _OnEarnClick(self, event):
        pub.sendMessage(""APP_EVENT"", event = AppEvents.CUSTOMER_EARN, value = self._customer)

    def UpdateBalance(self):
        self._balanceDisplay.SetValue('$' + str(self._customer.CashInHand()))


class WorkplaceInterface(wx.Panel):
    def __init__(self, parent, workplace):
        wx.Panel.__init__(self, parent, style = wx.RAISED_BORDER)

        self._workplace = workplace

        sizer = wx.BoxSizer(wx.VERTICAL)
        label = wx.StaticText(self, label=""Workplace Funds"")

        self._balanceDisplay = wx.TextCtrl(self)
        self._balanceDisplay.SetEditable(False)
        self._balanceDisplay.SetValue('$' + str(workplace.Funds()))

        revenue_button = wx.Button(self, label=""Earn Revenue"")

        sizer.Add(label, 0, wx.EXPAND | wx.ALL)
        sizer.Add(self._balanceDisplay, 0, wx.EXPAND | wx.ALL)

        sizer.Add(revenue_button, 0, wx.EXPAND | wx.ALL)

        self.SetSizer(sizer)
        self.Show()

        self.Bind(wx.EVT_BUTTON, self._OnRevenueClick, revenue_button)

        pub.subscribe(self._OnBalanceChange, ""WORKPLACE_BALANCE_EVENT"")

    def _OnRevenueClick(self, event):
        pub.sendMessage(""APP_EVENT"", event = AppEvents.EARN_REVENUE, value = (self._workplace))

    def _OnBalanceChange(self):
        self._balanceDisplay.SetValue('$' + str(self._workplace.Funds()))
"
"Pythonic way to ""run X before Y if Y fails""?","run a, a succeeded? False
run b, b succeeded? True
run a, a succeeded? False
"
Python CSV - Need to sum up values in a column grouped by value in another column,"defaultdict(<type 'int'>, {217387: 21, 216757: 116, 218382: 78, 216351: 185})
"
Killing or stopping an active thread,"v1 = RaspberryThread(function = shoppingcart)
v2 = RaspberryThread(function = dodgeballs)

v1.start()
v2.start()
"
pandas convert strings to float for multiple columns in dataframe,"In [14]: df = DataFrame('10.0%',index=range(100),columns=range(10))

In [15]: df.replace('%','',regex=True).astype('float')/100
Out[15]: 
<class 'pandas.core.frame.DataFrame'>
Int64Index: 100 entries, 0 to 99
Data columns (total 10 columns):
0    100  non-null values
1    100  non-null values
2    100  non-null values
3    100  non-null values
4    100  non-null values
5    100  non-null values
6    100  non-null values
7    100  non-null values
8    100  non-null values
9    100  non-null values
dtypes: float64(10)
"
How to prevent property change event loop in kivy?,"#!/usr/bin/env python2
# -*- coding: utf-8 -*-
from kivy.app import App
from kivy.uix.slider import Slider
from time import time, sleep
from threading import Thread
from kivy.uix.button import Button


class ResponseButton(Button):

    def send_response(self, value, slider):
        slider.receive_response(value)


class delayed:

    def __init__(self, seconds):
        self.seconds = seconds
        self.start = time()
        self.refused = False
        self.function = None
        self.args = None
        self.run_thread()

    def run_thread(self):

        def job():
            while True:
                sleep(self.seconds)
                if self.refused and self._time_ok():
                    self.function(*self.args)
                    self.refused = False

        thread = Thread(target=job)
        thread.daemon = True
        thread.start()

    def _time_ok(self):
        return time() - self.start > self.seconds

    def __call__(self, function):
        self.function = function

        def decorated(*args):
            self.args = args

            if self._time_ok():
                self.start = time()
                function(*self.args)
            else:
                self.refused = True

        return decorated


class MySlider(Slider):

    _call_server = True

    def receive_response(self, value):
        print '@@@ received from server:', value
        self._call_server = False
        self.value = value

    @delayed(seconds=2)
    def on_value(self, obj, value):
        if self._call_server:
            self.send_value(value)
        else:
            self._call_server = True

    def send_value(self, value):
        print '>>> sent value to server:', value


class Test(App):
    pass


Test().run()
"
Trying to find all instances of a keyword NOT in comments or literals?,"cilbup(?!.*//)
"
Is possible to create a non-existent method when it is called in Python?,"class Dispatcher(object):

    def __init__(self, caller, name):
        self.name = name
        self.caller = caller

    def __call__(self, *a, **ka):
        print('Call on Dispatcher registered!', 
              'Will create method on',
              self.caller.__class__.__name__,
              'now.')
        setattr(self.caller, self.name, self.mock)
        return getattr(self.caller, self.name)(*a, **ka)

    @classmethod
    def mock(cls, *a, **ka):
        return 'Some default value for newly created methods.'


class MyClass(object):

    def __getattr__(self, attr):
        return Dispatcher(self, attr)


instance = MyClass()
print(instance.new_method, '\n')
print(instance.new_method(), '\n')
print(instance.new_method(), '\n')
print(instance.other_method)
"
Custom keys for Google App Engine models (Python),"class Foo(NamedModel):
    KEY_NAME = '%(name)s'
    name = db.StringProperty()
"
Is it possible to import class method without instantiating class?,">>> instance = Demo()
>>> instance.class_method()
Called a class method
>>> instance.static_method()
Called a static method
>>> instance.instance_method()
Called an instance method
"
Create Shared Member Variable between instances (static),"a 3
b 5
a 2
"
Multiple Testcases Stdin (Python),"import sys

def read_data(source):
    N = int(next(source))
    for case in range(N):
        num_rows = int(next(source))
        rows = [next(source).split() for i in range(num_rows)]
        yield rows

for case in read_data(sys.stdin):
    print case
"
How to convert date from unix timestamps to human readable format in graphlab (python 2.7),"import graphlab as gl
import datetime as dt
sf = gl.SFrame({'a':[1,2,3]})
sf['a'] = sf['a'].astype(dt.datetime)
"
Find dependency/execution order of several statements,"[3, 5, 7, 8, 11, 2, 10, 9]
"
python shorthand method for a if-else based on the function's return,"
print('this {} a prime number'.format('is' if is_prime(2) else 'is not'))
"
grouping an unknown number of arguments with argparse,"import argparse

parser = argparse.ArgumentParser()
parser.add_argument('--group', nargs=4, action='append')

print parser.parse_args()
"
HTML file parsing in Python,"from bs4 import BeautifulSoup
from pprint import pprint

soup = BeautifulSoup(html)
h2s = soup.select(""h2"") #get all h2 elements
tables = soup.select(""table"") #get all tables

first = True
title =""""
players = []
for i,table in enumerate(tables):
    if first:
         #every h2 element has 2 tables. table size = 8, h2 size = 4
         #so for every 2 tables 1 h2
         title =  h2s[int(i/2)].text
    for tr in table.select(""tr""):
        player = (title,) #create a player
        for td in tr.select(""td""):
            player = player + (td.text,) #add td info in the player
        if len(player) > 1: 
            #If the tr contains a player and its not only (""Goalkeaper"") add it
            players.append(player)
    first = not first
pprint(players)
"
How to install app on heroku with postgres,"if ""DATABASE_URL"" in os.environ:
        urlparse.uses_netloc.append(""postgres"")
        url = urlparse.urlparse(os.environ.get(""DATABASE_URL""))
        DATABASE = {
             ""database"" : url.path[1:],
             ""user"" : url.username,
             ""password"": url.password,
             ""host"": url.hostname,
             ""port"": url.port
               }
        return PostgresqlDatabase(**DATABASE)
"
How to calculate p-value for two lists of floats?,">>> data = {
...     'a': [0.9, 1.0, 1.1, 1.2],
...     'b': [0.8, 0.9, 1.0, 1.1],
...     'c': [4.9, 5.0, 5.1, 5.2],
... }
"
Python Lists Comparison & Print,"print d[whatever_char]  #prints the cipher associated with that character
"
Unpack list into pandas,"In [59]:

def chunker(seq, stride):
    cols = seq[:stride]
    data = [seq[stride:][pos::stride] for pos in range(0, stride)]
    return dict(zip(cols,data))

pd.DataFrame(chunker(data['2344'],3))

Out[59]:
   id   value1   value2
0  01  Addf112  Addf113
1  02           Addf213
"
Best practices: how do you list required dependencies in your setup.py?,"import os
from setuptools import setup, find_packages
here = os.path.abspath(os.path.dirname(__file__))

install_requires = [
    'pyramid',
    'pyramid_debugtoolbar',
    'waitress',
    'requests',
    'gunicorn',
    'mongoengine',
    ]

tests_require = [
    'mock',
    'nose',
    ]

setup(name='repoapi',
      ...
      install_requires=install_requires,
      tests_require=tests_require,
      test_suite=""nose.collector"",
      ...
      )
"
Widget repeaters in gtk3 using python and glade,">> ['<widget_name>_{0}'.format(i)) for i in range(1, 4)
['<widget_name>_1', '<widget_name>_2', '<widget_name>_3']
"
Get the content of div within div using BeautifulSoup?,"<b>Bold text</b> - some text here <br/>
        lorem ipsum here <br/>
<strong> Author Name</strong>   
"
Python performance using Boost Python doesn't improve,"computeSumInboundingbox: 10 loops, best of 3: 42.4 ms per loop
computeSumInboundingbox2: 100 loops, best of 3: 2.36 ms per loop
"
Python Method object creation,"def fn(self):
    return self

class A(object):
    fn = fn

class B(object):
    fn = fn
"
Multiple Forms and Formsets in CreateView,"class CreateFatherView(CreateView):
    template_name = 'father_create.html'
    model = Father
    form_class = FatherForm # the parent object's form

    # On successful form submission
    def get_success_url(self):
        return reverse('father-created')

    # Validate forms
    def form_valid(self, form):
        ctx = self.get_context_data()
        inlines = ctx['inlines']
        if inlines.is_valid() and form.is_valid():
            self.object = form.save() # saves Father and Children
            return redirect(self.get_success_url())
        else:
            return self.render_to_response(self.get_context_data(form=form))

    def form_invalid(self, form):
        return self.render_to_response(self.get_context_data(form=form))

    # We populate the context with the forms. Here I'm sending
    # the inline forms in `inlines`
    def get_context_data(self, **kwargs):
        ctx = super(CreateFatherView, self).get_context_data(**kwargs)
        if self.request.POST:
            ctx['form'] = FatherForm(self.request.POST)
            ctx['inlines'] = FatherInlineFormSet(self.request.POST)
        else:
            ctx['form'] = Father()
            ctx['inlines'] = FatherInlineFormSet()
        return ctx
"
Class Modules in Far-Off Places,"/usr/local/lib/pythonx.y/dist-packages
"
smoothing outer edges in matplotlib,"zmin = Z1.min()
zmax=Z1.max()
levels=linspace(zmin, zmax, 400)
"
Confusion over how to share and modify class level data between instances.,"database_instance = Database()
database_instance.connect()

Database.connect()
"
"Counting the Frequency a Value appears in a given ""set"" within a DF","In [68]: df
Out[68]:
   Department     ID  Sale
0           1    Jim     1
1           1    Sue     1
2           1   John     1
3           2    Bob     0
4           2  Janet     0
5           3   John     1
6           3   John     1
7           3    Jim     1
8           3  Peggy     1

In [69]: df.drop_duplicates(['Department','ID']).groupby('ID')['Sale'].sum()
Out[69]:
ID
Bob      0
Janet    0
Jim      2
John     2
Peggy    1
Sue      1
Name: Sale, dtype: int64
"
Reusing a Django app within a single project,"(r'^/(?P<kind>blog)/$', 'view.stuff'),
(r'^/(?P<kind>news)/$', 'view.stuff'),
"
Python class attributes usage and initialization,"class Bullet2:
    def __init__(self, image):
        self.image = image
"
Can SQLAlchemy automatically create relationships from a database schema?,"class CauseCode(Base):
    __tablename__ = ""cause_code""

class NDTicket(Base):
    __tablename__ = ""ndticket""
    cause_code = relationship(""CauseCode"", backref = ""ndticket"")


q = session.query(NDTicket)
for r in q.limit(10):
    print r.ticket_id, r.cause_code.cause_code
"
Turning Printed Answers into a List,"[0, 0, 2, 0, 4, 0, 6, 0, 8, 0, 10]
"
"How to make a python script ""pipeable"" in bash?","DEBUG: got line: echo.py
DEBUG: got line: test.py
DEBUG: got line: test.sh
"
How do I set the PYTHON_PATH variable for my Google App Engine app?,"def main():
    # Do all of my initialization and run my
    # WSGIApplication

if __name__ == ""__main__"":
    main()
"
Python pandas: how to run multiple univariate regression by group,"def ols_res(df, xcols,  ycol):
    return pd.DataFrame({xcol : sm.OLS(df[ycol], df[xcol]).fit().predict() for xcol in xcols})
"
How to preserve Labels when SPSS file (.sav) imported into pandas via rpy?,"import pandas.rpy.common as com

def get_labels(filename):
    w = com.robj.r('attr(foreign::read.spss(""%s""), ""variable.labels"")' % filename)
    w = com.convert_robj(w)
    return w
"
"Managing big point lists, best approach?","item_dict = {
    1: [list1, list2, list3]
    2: [list1, list2]
    3: [list1]
    4: [list1, list2, list3]
}
"
How to make a function that detects a character in a string and returns it's position in the string? Python 3.2,"['a', 'b', 'c', 'd']
"
Capture output from C program on stdout using Python subprocess? Pexpect?,"#!/usr/bin/python

import subprocess
from time import gmtime, strftime

p = subprocess.Popen([""ping"", ""-c"", ""3"", ""-i"", ""2"", ""127.0.0.1""],
                 stdout=subprocess.PIPE)

for ln in p.stdout:
    print strftime(""%H:%M:%S"", gmtime()) + "" received "" + ln

# Now I start the same process again, reading the input the other way.

p = subprocess.Popen([""ping"", ""-c"", ""3"", ""-i"", ""2"", ""127.0.0.1""],
                 stdout=subprocess.PIPE)

while True:
    ln = p.stdout.readline()
    if '' == ln:
            break
    print strftime(""%H:%M:%S"", gmtime()) + "" received "" + ln
"
pandas get index for a row value,"adjustframe = df1.grouby(level=0).last().transpose()
"
Running program/function in background in Python,"$ python script.py
$ 
$ 
$ Done!
"
Efficient way of getting a subarray of an array that the indices are mapped,"B[X.ravel()] = A.ravel()
"
Python and C interop: Dynamic resizing of ctypes,"Python
from ctypes import *

test = CDLL('test')
size = c_int(0)
test.testout.argtypes=[c_void_p,POINTER(c_int)]
print ""Result of NULL pointer and zero size:"",test.testout(None,byref(size))
print ""Returned size:"",size.value
mem = (c_ubyte * 2)()
size = c_int(sizeof(mem))
print ""sizeof(mem):"",size.value
print ""Result of small buffer:"",test.testout(byref(mem),byref(size))
print ""Returned size:"",size.value
mem = (c_ubyte * size.value)()
print ""Result of exact size buffer:"",test.testout(byref(mem),byref(size))
print ""Returned size:"",size.value
for i in range(size.value):
    print mem[i]
mem = (c_ubyte * 20)()
size = c_int(20)
print ""Result of bigger buffer:"",test.testout(byref(mem),byref(size))
print ""Returned size:"",size.value
for i in range(size.value):
    print mem[i]
"
Selecting multiples choices in django admin filter list_filter?,"status__in=a%2Cm
"
"Using Beautifulsoup and Urllib2 in Python, how can I find the data surrounded by specific tags?","import urllib2
from bs4 import BeautifulSoup
html = urllib2.urlopen( ""http://www.google.com"" ).read()
soup = BeautifulSoup( html )
"
Efficiently Calculating a Euclidean Distance Matrix Using Numpy,"Example
>>> z = np.array([[0.+0.j, 2.+1.j, -1.+4.j]])
>>> abs(z.T-z)
array([[ 0.        ,  2.23606798,  4.12310563],
       [ 2.23606798,  0.        ,  4.24264069],
       [ 4.12310563,  4.24264069,  0.        ]])
"
Capturing regular expression in Python,"m = re.match("".*<\html>(.*)"",my_html_text_string)
print m.groups()
"
Comparing the elements in two JSON dicts and getting the difference as a ratio or percentage,"{'Sydney': '0.0%', 'Adelaide': '33.0%'}
"
Python subprocess return code without waiting,"#!/usr/bin/env python3
from subprocess import Popen

def run(cmd, log_filename):
    with open(log_filename, 'wb', 0) as logfile:
        return Popen(cmd, stdout=logfile)

# start several subprocesses
processes = {run(['echo', c], 'subprocess.%s.log' % c) for c in 'abc'}
# now they all run in parallel
# report as soon as a child process exits
while processes: 
    for p in processes: 
        if p.poll() is not None:
           processes.remove(p) 
           print('{} done, status {}'.format(p.args, p.returncode))
           break
"
"how to ""add"" things together python","operations = {'+':operator.add,'-':operator.sub,} # ...
"
Matrix-like printing of 2D arrays in Python,"np.set_printoptions(linewidth=150)
"
Matplotlib: plot differences between two images,">>> y_gray = cm.gray(y)  # RGBA image with gray levels
>>> imshow(y_gray, interpolation='nearest')  # Image of one of the arrays
>>> diff_points = numpy.empty_like(y_gray)  # Preparation of an overlay with marked points only
>>> diff_points[x == y, 3] = 0  # Common points not overwritten: alpha layer set to 0
>>> diff_points[x != y] = [0, 1, 0, 1]  # Green for points that differ
>>> imshow(diff_points, interpolation='nearest')
"
Python 3: Why are my while loops exiting?,"from itertools import product

for x, y, z in product(range(11), repeat=3):
    print('%.2f' % (x/10.0) + ' %.2f' % (y/10.0) + ' %.2f' % (z/10.0))
"
Multiprocessing and Queue with Dataframe,"f_get start
f_put start
P: 0
P: 1
P: 2
P: 3
P: 4
get (loop: 0)
get (loop: 1)
get (loop: 0)
get (loop: 0)
get (loop: 0)
"
SQLAlchemy cascading polymorphic column updates,"def get_polymorphic_class(klass, data):
  column = klass.__mapper__.polymorphic_on
  if column is None:
    # The column is not polymorphic so the Class can be returned as-is
    return klass
  identity = data.get(column.name)
  if not identity:
    raise ValueError('Missing value for ""' + column.name + '""', data)
  mapper = klass.__mapper__.polymorphic_map.get(identity)
  if mapper:
    return mapper.class_
  else:
    raise ValueError('Missing polymorphic_identity definition for ""' + identity + '""')
  return klass

def insert(klass, data):
  klass = get_polymorphic_class(klass, data)
  e = klass(**data)
  session.add(e)
  session.commit()
  return e
"
How can i make points of a python plot appear over time?,"import numpy as np
import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation

x = np.arange(10)
y = np.random.random(10)
size = np.random.randint(150, size=10)
colors = np.random.choice([""r"", ""g"", ""b""], size=10)

fig = plt.figure()
plt.xlim(0, 10)
plt.ylim(0, 1)
graph = plt.scatter([], [])

def animate(i):
    graph.set_offsets(np.vstack((x[:i+1], y[:i+1])).T)
    graph.set_sizes(size[:i+1])
    graph.set_facecolors(colors[:i+1])
    return graph

ani = FuncAnimation(fig, animate, repeat=False, interval=200)
plt.show()
"
How to track the length of a user session in Django,"import time
from django.contrib.auth import logout

SESSION_TIMEOUT = 5400 # 90 minutes

class HandleSessionExpiryMiddleware(object):
    def process_request(self, request):
        last_activity = request.session.get('last_activity')
        now = time.time()
        idle = now - last_activity if last_activity else 0

        timeout = SESSION_TIMEOUT

        if idle > timeout:
            run_on_expiry()
            logout(session)
        else:
            request.session['last_activity'] = now
            idle = 0

    def run_on_expiry(self):
        # Custom code
"
Choose Mako preprocessor based on file extension?,"<%inherit file=""base.html""/>

<%block name=""content"">
  %h1 Hello
</%block>
"
Python concatenation vs append speed on lists,"def test1():  # concat
    l = []
    for i in range(1000):
        l += [i] 
"
lxml strip_tags results in AttributeError,"import lxml.html
from lxml.html import tostring

source = """"""
<p class=""Title"">blablabla <span id = ""xxxxx"">bla</span> prprpr <span id = ""yyyyy""> jj </span> </p>
<p class = ""norm"">blalbla <span id = ""aaaa"">ttt</span> sskkss <span id = ""bbbbbb""> aa </span> </p>
""""""

h = lxml.html.document_fromstring(source)

print ""<!-- before -->""
print tostring(h, pretty_print=True)
print

for span in h.xpath('//span[@id]'):
    span_id = span.attrib.get('id', None)
    parent_class = span.getparent().attrib.get('class', None)
    if parent_class is None:
        continue
    if redundant_span(span_id, parent_class):
        unwrap(span)

print ""<!-- after -->""
print tostring(h, pretty_print=True)
"
How to get a dot notation of a python module?,">>> import datetime
>>> datetime
<module 'datetime' from '/path/to/python'>
>>> from datetime import datetime
>>> datetime
<type 'datetime.datetime'>
"
Create a Pandas dataframe with counts of items spanning a date range,"In [25]: current.fillna(0).cumsum().sum(1)
"
Check whether non-index column sorted in Pandas,">>> df = pd.DataFrame({""A"": [1,2,2], ""B"": [2,3,1]})
>>> pd.algos.is_monotonic_int64(df.A.values, False)[0]
True
>>> pd.algos.is_monotonic_int64(df.B.values, False)[0]
False
"
Accessing autoconf defined symbols in python,"version = '''@PACKAGE_VERSION@'''
"
running median excluding zeros,">>> a = [5, 2, 0, 9, 4, 2, 6, 8]

>>> RunningMedian(a,3)
[2, 5]
[2, 9]
[4, 9]
[2, 4, 9]
[2, 4, 6]
[2, 6, 8]
[3.5, 5.5, 6.5, 4, 4, 6]
"
Python: How to load a module twice?,"import mod
import sys
del sys.modules[""mod""]
import mod as mod2
"
Return a portion of a plot using matplotlib,"def calc_stats(xs, ys):
    print 'doing the calculations'
"
python delete substrings from list of strings,"l = ['abc','defghi' 'abcdef','def','defdef','defdef', 'polopolo']
l = sorted(l, key = len)
print [j for i,j in enumerate(l) if all(j == k or (j not in k) for k in l[i+1:])]
# ['defdef', 'defdef', 'polopolo', 'defghiabcdef']
"
Any better algorithm possible here?,"1   => 2
2   => 4
3   => 6
4   => 10
5   => 14
6   => 22
7   => 30
8   => 46
9   => 62
10  => 94
1e6 => 902893650
1e7 => 502879941
1e8 => 251151906
1e9 => 375000001
"
Python 3 Latin to English simple gui button translator,"     ..., command=sin_command)

...

def sin_command(self):
    self.label1.config(text='left')
"
Python Cubes Olap Framework Date PointCut,"        ""mappings"": {
            ""created_on.year"": {""column"":""created_on"", ""extract"":""year""},
            ""created_on.month"": {""column"":""created_on"", ""extract"":""month""},
            ""created_on.week"": {""column"":""created_on"", ""extract"":""week""},
            ""created_on.day"": {""column"":""created_on"", ""extract"":""day""},
            ""created_on.quarter"": {""column"":""created_on"", ""extract"":""quarter""}
        }
"
How to match every thing except some character ? regex,"r'start(?:(?:(?!word1).)*word1){2}(?:(?!word1).)*?(value1)'
"
Change the value of a variable with a button (Tkinter),"myButton = Button(root)
myButton.pack()
"
Python 3.4.3 subprocess.Popen get output of command without piping?,"import subprocess

p = subprocess.Popen(
    ['grep', '--colour=auto', 'hello', 'data.txt'],
    stdout=subprocess.PIPE
)

print(p.stdout.read())

import pexpect

child = pexpect.spawn('grep --colour=auto hello data.txt')
child.expect(pexpect.EOF)
print(child.before)

--output:--
b'hello world\n'
b'\x1b[01;31mhello\x1b[00m world\r\n'
"
Translating letters not in 7bit ASCII to ASCII (like ń to n and ą to a),"name('Ż') == 'LATIN CAPITAL LETTER Z WITH DOT ABOVE'
name('ł') == 'LATIN SMALL LETTER L WITH STROKE'
lookup('LATIN CAPITAL LETTER Z') == 'Z'
lookup('LATIN SMALL LETTER L') == 'l'
"
Loading CSV data using Pandas,"import pandas as pd

df = pd.read_csv('Test 1.csv',
                 skipfooter=1, #skip last row
                 engine='python', #remove warning
                 skiprows=[0,1], #remove first 2 rows
                 encoding='utf-16', #set encoding
                 parse_dates=[0]) #convert first column to datetime 
print (df)

    Email Open Date/Time  Total Opens
0    2016-03-25 06:00:35            1
1    2016-03-25 06:00:35            1
2    2016-03-25 06:00:46            1
3    2016-03-25 06:00:46            1
4    2016-03-25 06:00:51            1
5    2016-03-25 06:00:52            1
6    2016-03-25 06:00:57            1
7    2016-03-25 06:00:58            1
8    2016-03-25 06:01:03            1
9    2016-03-25 06:01:20            1
10   2016-03-25 06:01:20            1
11   2016-03-25 06:01:25            1
"
How to set an attribute to a vector in rpy2,"from rpy2.robjects.vectors import FloatVector, IntVector
pot = FloatVector((2.0, 3.2, 4, 5, 6, 7))
ts = IntVector((1,6,7,19,20,30))
pot.slots['times'] = ts
"
How to get the location of a Zope installation from inside an instance?,"from App.config import getConfiguration

product_config = getattr(getConfiguration(), 'product_config', {})
config = product_config.get('pd.prenotazioni', {})
logfile = config.get('logfile')
"
Does this Python class look stupid?,"# sample usage
class SWF_RGBA(object):
    __metaclass__ = MetaStruct
    fields = 'red, green, blue, alpha'
    default_field_value = 0  # otherwise would be None

c1 = SWF_RGBA()
print vars(c1)  # {'blue': 0, 'alpha': 0, 'green': 0, 'red': 0}
c2 = SWF_RGBA(red=1, blue=4)
print vars(c2)  # {'blue': 4, 'green': 0, 'alpha': 0, 'red': 1}
"
Render to template and get a response,"from django.template import Context, Template
t = Template(html)
c = Context({'HEADER':html_header,'FOOTER':html_footer})
return HttpResponse(t.render(c))
"
How to grab the output from python subprocess,"import os
import urllib
image_url = ""https://www.google.com/images/srpr/logo3w.png""
image_filename = os.path.basename(image_url)
urllib.urlretrieve(image_url, image_filename)
"
Combined diacritics do not normalize with unicodedata.normalize (PYTHON),"import re
import unicodedata

_ligature_re = re.compile(r'LATIN (?:(CAPITAL)|SMALL) LIGATURE ([A-Z]{2,})')

def split_ligatures(s):
    """"""
    Split the ligatures in `s` into their component letters. 
    """"""
    def untie(l):
        m = _ligature_re.match(unicodedata.name(l))
        if not m: return l
        elif m.group(1): return m.group(2)
        else: return m.group(2).lower()
    return ''.join(untie(l) for l in s)

>>> split_ligatures(u'B\u0153uf \u0132sselmeer \uFB00otogra\uFB00')
u'Boeuf IJsselmeer ffotograff'
"
2D Numpy Array of Strings WITH column access,"In [12]: A=np.genfromtxt(txt, delimiter=',',dtype=None)
In [13]: A
Out[13]: 
array([ (39, b' State-gov', 77516, b' Bachelors', 13, b' Never-married', b' Adm-clerical', b' Not-in-family', b' White', b' Male', 2174, 0, 40, b' United-States', b' <=50K'),
       (39, b' State-gov', 77516, b' Bachelors', 13, b' Never-married', b' Adm-clerical', b' Not-in-family', b' White', b' Male', 2174, 0, 40, b' United-States', b' <=50K'),...], 
      dtype=[('f0', '<i4'), ('f1', 'S10'), ('f2', '<i4'), ('f3', 'S10'), ('f4', '<i4'), ('f5', 'S14'), ('f6', 'S13'), ('f7', 'S14'), ('f8', 'S6'), ('f9', 'S5'), ('f10', '<i4'), ('f11', '<i4'), ('f12', '<i4'), ('f13', 'S14'), ('f14', 'S6')])
"
Check that a database file is valid and what the program is expecting?,"def db_schema(self):
    cur= self._db.cursor()
    with io.open(self.SQLPATH, ""r"") as fp:
        sql_statement= """"
        for line in fp:
            line= line.rstrip()
            if line.startswith('#'): continue
            sql_statement+= line
            if line.endswith("";""):
                try:
                    cur.execute(sql_statement)
                except sql.OperationalError:
                    print(""Failed:\n%s"" % sql_statement)
                sql_statement= """"
    # file is done
    cur.close()
"
Python install packages,"cd ${HOME}/Downloads
ls # a bunch of stuff is here, one of the files should be TkinterTreectrl-1.0.zip 
unzip TkinterTreectrl-1.0.zip 
cd TkinterTreectrl-1.0
sudo python setup.py install
"
Trouble isolating emails when downloading via Python script,"    allFiles = [f for f in os.listdir('.')]
    for file in allFiles:
        archive = zipfile.ZipFile(token+'.zip', mode='a')
        archive.write(file)
        archive.close()
        os.unlink(file)
"
FInd all intersections of xy data point graph with numpy?,"find_intersect(x_down, y_down, x_up, y_up)
Out[67]: array([ 6.28302264,  1.63658676])

find_intersect_vec(x_down, y_down, x_up, y_up)
Out[68]: array([[ 6.28302264,  1.63658676]])

%timeit find_intersect(x_down, y_down, x_up, y_up)
10 loops, best of 3: 66.1 ms per loop

%timeit find_intersect_vec(x_down, y_down, x_up, y_up)
1000 loops, best of 3: 375 us per loop
"
Confused about Python’s id(),">>> id(1000)
140697307078576
>>> id(1001)
140697307078576
>>> id(1002)
140697307078576
>>> id(1003)
140697307078576
"
Python Dict w/Array Values Passed as Params?,">>> sword.name
'Sword'

>>> sword.high
5

>>> sword.low
55
"
How can I extend a class instance?,"class App(...):
  def __init__(self, a, b):
    pass

  def do_something(self, a):
    pass


app_instance = App()


def do_something_else(self, b):
  pass

App.do_something_else = do_something_else


app_instance.do_something_else('b')
"
Flask-Admin upload and insert in database automatically,"class User(Base):
   __tablename__ = 'users'
   id = Column(Integer, primary_key=True)
   url_pic = Column(String(50), nullable=False)
   pic = Column(LargeBinary, nullable=False)
   ...
"
How to dynamically move inside a nested dict in Python,"my_dict = {""a"":{""b"":{""c"":{}}}}
set(my_dict, [""a"", ""b"", ""c""], ""something"")
print get(my_dict, [""a"", ""b"", ""c""])
"
Overlay an image segmentation with numpy and matplotlib,"plt.imshow(Image1, cmap='gray') # I would add interpolation='none'
"
Sorting a list and adding None values in the right positions,"f1 = open(""superset.txt"",""r"")
f2 = open(""subset.txt"",""r"")
l1 = list(f1)
l2 = list(f2)
l3 = []
for li in l1:
    if li in l2:
        l3.append(li.strip())
    else:
        l3.append(None)

print l3     # or you can save this to a file.
"
Finding the closest date given a date in a groupby dataframe (Python),"grouped = df.groupby('Cust_No')
"
"Python while loop does not exit, why?","def _wait_for_server(cloud_server, server):
    while server.status != 'ACTIVE':
        sleep(30)
        server = cloud_server.servers.get(server.id)
        print '%s: %s (%s%%)' % (server.id, server.status, server.progress)

    return server
"
How do I restart the scrapyd daemon?,"kill -INT $(cat /var/run/scrapyd.pid)
"
Python Crawler Beatifulsoup decompose() function,"for spec in soup.select('div.product-specs dl.product-specs--list > dt.product-specs--item-title span.product-specs--help-title'):
    print spec.get_text(strip=True)
"
How to Python prettyprint a JSON file,">>> import json
>>>
>>> your_json = '[""foo"", {""bar"":[""baz"", null, 1.0, 2]}]'
>>> parsed = json.loads(your_json)
>>> print json.dumps(parsed, indent=4, sort_keys=True)
[
    ""foo"", 
    {
        ""bar"": [
            ""baz"", 
            null, 
            1.0, 
            2
        ]
    }
]
"
Python pattern replacement,">>> s.format(name='John', age=42)
Hi my name is John and I am 42 years old
"
performance degradation when switching from pandas column concatenation to using apply on dataframe,"        t0 = time.time()

        listOfObjectAttributeNames = [""col1"",""col2"",""col3""]

        cleaned_data_set = """"
        for i in listOfObjectAttributeNames:
            cleaned_data_set = cleaned_data_set + data_set[i].map(str)

        t1 = time.time()

        print t1 - t0 
"
What's Ruby's equivalent to Python's setDefault()?,"h = {}
value = h.fetch(:some_key, [])  
# value is now []
"
"Create function in python to find the highest of all function arguments, and return the ""tag"" of the value",">>> def argmax(**kw):
...   return max(kw, key=kw.get)
... 
>>> argmax(foo=3, bar=5, frotz=1, kaka=-3)
'bar'
"
Kivy: is it possible to trigger events with class level (not instance) Properties?,"<MyLabel>:
    _prefix: app.prefix
    text: self.prefix +':'+ self.indice
"
Get number of line recursively,"1.feature:6
1.feature:13
"
Convert binary to ASCII and vice versa,"Here's  single-source Python 2/3 compatible version:
import binascii

def text_to_bits(text, encoding='utf-8', errors='surrogatepass'):
    bits = bin(int(binascii.hexlify(text.encode(encoding, errors)), 16))[2:]
    return bits.zfill(8 * ((len(bits) + 7) // 8))

def text_from_bits(bits, encoding='utf-8', errors='surrogatepass'):
    n = int(bits, 2)
    return int2bytes(n).decode(encoding, errors)

def int2bytes(i):
    hex_string = '%x' % i
    n = len(hex_string)
    return binascii.unhexlify(hex_string.zfill(n + (n & 1)))
"
Remove item from Object set that doesn't exist in query set,">>> a = []
>>> b = [] #Note: Do not do a = b = [], it will assign a and b to a list with the same ID
>>> 
"
Unable to read text from a div tag in python,"element = driver.find_element_by_xpath('//div[@class=""d3-tip n""][contains(text(), ""select"")]')
print element.text
"
Converting xml data using Python,"Output
Tom^18^London, xxx street, xxx building
John^22^Canberra, xxx street, xxx building, xxx floor, xxx room, xxx bed
"
wxPython menu text alignment,"menu = wx.Menu()
item_id = 1
item_name = 'My menu item\tCtrl+T'
help_text = 'Clicking this does something interesting.'
item = menu.Append(item_id, item_name, help_text)
"
Regex matching CSS,"\b(\w+):(\w+)(?=;)
"
Lookahead assertions and grouping with python regex,"(?i)                      # make the pattern case insensitive
(                         # open the first capturing group
    (?:^|(?<=\s))         # begining of the string or lookbehind with space
    [a-z][a-z_.]*         # a letter and zero or more chars from [a-z_.]
    (?:                   # open a non-capturing group
        \s+               # one or more spaces
        [a-z][a-z_.]*     # a letter and zero or more chars from [a-z_.]
    ){0,2}                # repeat the capturing group zero or two times
)?                        # close the capturing group and make it optional
\s+                       # one or more spaces
(                         # open a capturing group
    -?                    # - sign optional
    \d{1,3}               # between 1 or 3 digits
    (?:,\d{3})*           # a group (zero or more times) with a , and 3 digits
    (?:\.\d\d)?           # an optional group with a . and 2 digits
)                         # close the second capturing group.
"
Better way to mock class attribute in python unit test,"def test_empty(self):
    Base.assignment = {}
    assert len(Base().assignment.values()) == 0
"
Trying to use output of one function to influence the next function to count words in text file,"def main():
    harper = readFile(""Harper's Speech.txt"")
    newWords = cleanUpWords(harper)
    print(numWords(newWords), ""Words."") # use newWords here!
"
Pandas Cannot Create a DataFrame from a Numpy Array Of Timestamps,"print (pd.DataFrame.from_records(a, columns=['a','b','c']))
                          a                         b  \
0 2016-05-02 15:50:00+00:00 2016-05-02 15:50:00+00:00   
1 2016-05-02 17:10:00+00:00 2016-05-02 17:10:00+00:00   
2 2016-05-02 20:25:00+00:00 2016-05-02 20:25:00+00:00   

                          c  
0 2016-05-02 15:50:00+00:00  
1 2016-05-02 17:10:00+00:00  
2 2016-05-02 20:25:00+00:00  
"
python variable length values in dictionary,"mylst = []
d1[1] = mylst[:]      # make a copy
mylst.append('Joe')
d1[1]                 # => []     # what you expected
"
Function editing lists in Python,"import copy

a = [1,2,3]

def b(x):
    z = copy.deepcopy(x)
    z.append(10)
    return z

b(a)
print(a)
"
Is it possible to install another version of Python to Virtualenv?,"$ virtualenv
You must provide a DEST_DIR
Usage: virtualenv [OPTIONS] DEST_DIR

Options:
  --version             show program's version number and exit.
  -h, --help            show this help message and exit.
  -v, --verbose         Increase verbosity.
  -q, --quiet           Decrease verbosity.
  -p PYTHON_EXE, --python=PYTHON_EXE
                        The Python interpreter to use, e.g.,
                        --python=python2.5 will use the python2.5 interpreter
                        to create the new environment.  The default is the
                        interpreter that virtualenv was installed with
                        (/usr/bin/python)
  --clear               Clear out the non-root install and start from scratch
  --no-site-packages    Don't give access to the global site-packages dir to
                        the virtual environment
  --unzip-setuptools    Unzip Setuptools or Distribute when installing it
  --relocatable         Make an EXISTING virtualenv environment relocatable.
                        This fixes up scripts and makes all .pth files
                        relative
  --distribute          Use Distribute instead of Setuptools. Set environ
                        variable VIRTUALENV_USE_DISTRIBUTE to make it the
                        default
  --prompt==PROMPT      Provides an alternative prompt prefix for this
                        environment
"
"Reading a string of data (with a particular format) into a list, in Python","['And', ""'b'"", 'W', 'B\'"" ']
"
Order by child object's field in SQLAlchemy?,"stmnt = session.query(Reference).\
    filter_by(_mark=False).\
    join(Periodical).\
    join(ReferenceAuthor, and_(ReferenceAuthor.c.ReferenceId == Reference.ID), ReferenceAuthor.c.Index == 0)).\
    join(Person).\
    order_by(Periodical._name).\
    order_by(Person._lastname)
"
Getting a sub-list containing list[i+1] where list[i] is a specific value,"list(that for this, that in pairs(li) if this=='she')
"
"International Date ""String"" Is Subtracting Instead of Remaining in Its Original Format",">>> ""document.getElementById('ad_start_date').value = {0};"".format('""2015-05-15""')
'document.getElementById(\'ad_start_date\').value = ""2015-05-15"";'
"
str.isdecimal() and str.isdigit() difference example,">>> c = '\u00B2'
>>> c.isdecimal()
False
>>> c.isdigit()
True
"
Selecting One String from data list in Python,"print(random.choice(answers))
"
Avoid check if logger exists,"if logger:
    logger.debug('message')
"
Piping image on Windows,"from subprocess import Popen, PIPE
from StringIO import StringIO

buf = StringIO()
im.save(buf, 'PPM')

p = Popen([""gocr"", ""-""], stdin=PIPE)
p.communicate(input=buf.getvalue())
"
numpy 2D matrix- How to improve performance in this case?,"[[ 0.          2.23606798  1.11803399  3.74432905]
 [ 2.23606798  0.          2.5         2.1023796 ]
 [ 1.11803399  2.5         0.          4.40113622]
 [ 3.74432905  2.1023796   4.40113622  0.        ]]
"
Optparse: Usage on variable arg callback action does not indicate that extra params are needed,"Usage: opt.py [options]

Options:
  -h, --help            show this help message and exit
  -c LIST, --callback=LIST
                        do stuff
"
Caesar Cipher Python - Additional Features,"for character in phrase:
    x = ord(character)

    if character == ' ':
        result += ' '
    else:
        result += chr(x + shift)
"
Error in writing Python dictionary to a file,">>> test = {}
>>> for i in range(10):
...     for j in range(15):
...         test['{},{}'.format(i, j)] = i * j
... 
>>> print json.dumps(test, sort_keys=True, indent=4, separators=(',', ': '))
{
    ""0,0"": 0,
    ""0,1"": 0,
    ""0,10"": 0,
    ""0,11"": 0,
    ""0,12"": 0,
    ""0,13"": 0,
    ""0,14"": 0,
    ""0,2"": 0,
    ""0,3"": 0,
    ""0,4"": 0,
    ""0,5"": 0,
    ""0,6"": 0,
    ""0,7"": 0,
    ""0,8"": 0,
    ""0,9"": 0,
    ""1,0"": 0,
    ""1,1"": 1,
    ""1,10"": 10,
    ""1,11"": 11,
    ""1,12"": 12,
    ""1,13"": 13,
    ""1,14"": 14,
    ""1,2"": 2,
    ""1,3"": 3,
    ""1,4"": 4,
    ""1,5"": 5,
    ""1,6"": 6,
    ""1,7"": 7,
    ""1,8"": 8,
    ""1,9"": 9,
    ""2,0"": 0,
    ""2,1"": 2,
    ""2,10"": 20,
    ""2,11"": 22,
    ""2,12"": 24,
    ""2,13"": 26,
    ""2,14"": 28,
    ""2,2"": 4,
    ""2,3"": 6,
    ""2,4"": 8,
    ""2,5"": 10,
    ""2,6"": 12,
    ""2,7"": 14,
    ""2,8"": 16,
    ""2,9"": 18,
    ""3,0"": 0,
    ""3,1"": 3,
    ""3,10"": 30,
    ""3,11"": 33,
    ""3,12"": 36,
    ""3,13"": 39,
    ""3,14"": 42,
    ""3,2"": 6,
    ""3,3"": 9,
    ""3,4"": 12,
    ""3,5"": 15,
    ""3,6"": 18,
    ""3,7"": 21,
    ""3,8"": 24,
    ""3,9"": 27,
    ""4,0"": 0,
    ""4,1"": 4,
    ""4,10"": 40,
    ""4,11"": 44,
    ""4,12"": 48,
    ""4,13"": 52,
    ""4,14"": 56,
    ""4,2"": 8,
    ""4,3"": 12,
    ""4,4"": 16,
    ""4,5"": 20,
    ""4,6"": 24,
    ""4,7"": 28,
    ""4,8"": 32,
    ""4,9"": 36,
    ""5,0"": 0,
    ""5,1"": 5,
    ""5,10"": 50,
    ""5,11"": 55,
    ""5,12"": 60,
    ""5,13"": 65,
    ""5,14"": 70,
    ""5,2"": 10,
    ""5,3"": 15,
    ""5,4"": 20,
    ""5,5"": 25,
    ""5,6"": 30,
    ""5,7"": 35,
    ""5,8"": 40,
    ""5,9"": 45,
    ""6,0"": 0,
    ""6,1"": 6,
    ""6,10"": 60,
    ""6,11"": 66,
    ""6,12"": 72,
    ""6,13"": 78,
    ""6,14"": 84,
    ""6,2"": 12,
    ""6,3"": 18,
    ""6,4"": 24,
    ""6,5"": 30,
    ""6,6"": 36,
    ""6,7"": 42,
    ""6,8"": 48,
    ""6,9"": 54,
    ""7,0"": 0,
    ""7,1"": 7,
    ""7,10"": 70,
    ""7,11"": 77,
    ""7,12"": 84,
    ""7,13"": 91,
    ""7,14"": 98,
    ""7,2"": 14,
    ""7,3"": 21,
    ""7,4"": 28,
    ""7,5"": 35,
    ""7,6"": 42,
    ""7,7"": 49,
    ""7,8"": 56,
    ""7,9"": 63,
    ""8,0"": 0,
    ""8,1"": 8,
    ""8,10"": 80,
    ""8,11"": 88,
    ""8,12"": 96,
    ""8,13"": 104,
    ""8,14"": 112,
    ""8,2"": 16,
    ""8,3"": 24,
    ""8,4"": 32,
    ""8,5"": 40,
    ""8,6"": 48,
    ""8,7"": 56,
    ""8,8"": 64,
    ""8,9"": 72,
    ""9,0"": 0,
    ""9,1"": 9,
    ""9,10"": 90,
    ""9,11"": 99,
    ""9,12"": 108,
    ""9,13"": 117,
    ""9,14"": 126,
    ""9,2"": 18,
    ""9,3"": 27,
    ""9,4"": 36,
    ""9,5"": 45,
    ""9,6"": 54,
    ""9,7"": 63,
    ""9,8"": 72,
    ""9,9"": 81
}
"
Translating State Names in Python,"row[2] = name_to_abbr.get(row[1].upper(), """")
"
Track variables in Python subprocesses,"Line #    Mem usage  Increment   Line Contents
==============================================
     3                           @profile
     4      5.97 MB    0.00 MB   def my_func():
     5     13.61 MB    7.64 MB       a = [1] * (10 ** 6)
     6    166.20 MB  152.59 MB       b = [2] * (2 * 10 ** 7)
     7     13.61 MB -152.59 MB       del b
     8     13.61 MB    0.00 MB       return a
"
"Python recursive function error: ""maximum recursion depth exceeded""","print sum(n for n in xrange(2, 2000001) if all(n % i for i in xrange(2, int(n**0.5)+1)))
"
code keep firing like 7 times when using the for loops,"for pos_X in set(program_X):

    #find the position with 375
    if pos_X == '375':
       print program_time
"
How to filter out unwanted tags within tags,"from bs4 import BeautifulSoup

soup = BeautifulSoup(requests.get('http://bodetree.com/what-is-causing-your-headaches-startup-pain-points/', timeout=7.00).text)

bullets = soup.select(""div.entry-content ul li"")
print([bullet.get_text() for bullet in bullets])
"
Save a function definition in ipython,"In [2]: %save func1.py 1
The following commands were written to file `func1.py`:
def func1():
    pass
"
How to recursively remove certain keys from a multi-dimensional(depth not known) python dictionary?,"def remove_keys(obj, rubbish):
    if isinstance(obj, dict):
        obj = {
            key: remove_keys(value, rubbish) 
            for key, value in obj.iteritems()
            if key not in rubbish}
    elif isinstance(obj, list):
        obj = [remove_keys(item, rubbish)
                  for item in obj
                  if item not in rubbish]
    return obj
"
Python Randomly assign a list from a set number,"Output
 73   5  [73, 0, 0, 0, 0] -> 73
 54   6  [36, 5, 9, 0, 3, 1] -> 54
 60   7  [47, 6, 6, 1, 0, 0, 0] -> 60
 69   7  [3, 48, 15, 3, 0, 0, 0] -> 69
 72   8  [36, 18, 18, 0, 0, 0, 0, 0] -> 72
 65   8  [17, 32, 13, 3, 0, 0, 0, 0] -> 65
 54   7  [33, 13, 0, 2, 4, 1, 1] -> 54
 54   6  [7, 11, 26, 3, 5, 2] -> 54
 67   7  [62, 5, 0, 0, 0, 0, 0] -> 67
 67   8  [28, 25, 1, 0, 10, 3, 0, 0] -> 67
"
extract the subset of a pandas multi index data frame,"import pandas as pd
idx = pd.IndexSlice
df.loc[(cond1) & (cond2), idx[:,'column_name']]
"
Saving Raw_input to a list when used in a While Loop,"for module, grade in person.getModules():
       print ""Module: "" + module
       print ""Grades: "" + grade
"
Value in dict won't let me change it,"{'gold coin': 45, 'dagger': 2, 'torch': 6, 'rope': 1, 'arrow': 12, 'ruby': 1}
"
Mean value by equality of rows,"In [186]: df
Out[186]:
   x  y  z
0  1  1  2
1  1  2  3
2  1  1  4
3  2  3  5
4  3  5  6

In [187]: newdf = df.groupby(['x','y']).mean().reset_index()

In [188]: newdf
Out[188]:
   x  y  z
0  1  1  3
1  1  2  3
2  2  3  5
3  3  5  6
"
fast way to compare whether the number is in the list of ranges in python,"list1 = [23,100,1,50,60,73]
list2 = [(0,10), (25,35), (100,110), (75,85)]

[any(y[0] <= x <= y[1] for y in list2) for x in list1]
"
Printing a list with string.format rounding for float members,">>> print('\t'.join(""{:.2f}"".format(x) if isinstance(x, float) else str(x) for k
 in l for x in k))
"
Use pandas (and glob?) to merge numerous (csv) data text files from a directory.,"X,Y
1,31
2,32
3,33
"
NumPy : normalize column B according to value of column A,">>> df = pd.DataFrame({'ID': a[:, 0], 'value': a[:, 1]})
>>> df
   ID  value
0   1     10
1   1     20
2   2     15
3   2    100
4   1     12
"
Leaking TarInfo objects,"with tarfile.open(...) as tar:
    while True:
        next = tar.next()
        stream = tar.extractfile(next)
        process_stream()
        iter+=1
        tar.members = []  # Clear members list
        if not iter%1000:
            objgraph.show_growth(limit=10)
"
Smart way to delete tuples,"[(-9, 'a'), (-8, 'b'), (-7, 'c'), (-6, 'd'), (-5, 'e'), (-4, 'f'), 
 (-3, 'g'), (-2, 'h'), (-1, 'i'), (0, 'j')]
>>> index = bisect.bisect(myTup, (-threshold, None))
>>> del myTup[index:]
>>> myTup
[(-9, 'a'), (-8, 'b'), (-7, 'c'), (-6, 'd')]
"
How can I write a wrapper around ngrep that highlights matches?,"while (<CMD>) {
  s/($keyword)/\e[93m$1\e[0m/g;
  print;
}
"
How to evaluate line of data in python,"from ply import lex
from ply import yacc

# lexer
tokens = ('OPEN_PAREN', 'NUMBER', 'CLOSE_PAREN', 'ADD', 'SUB', 'MUL', 'DIV')

t_OPEN_PAREN = r'\('
t_NUMBER = r'\d+\.\d+'
t_CLOSE_PAREN = r'\)'
t_ADD = r'\+'
t_SUB = r'-'
t_MUL = r'\*'
t_DIV = r'/'

t_ignore = ' \t'


# parser
def p_expression_add(p):
    'expression : expression ADD term'
    p[0] = ('+', p[1], p[3])


def p_expression_sub(p):
    'expression : expression SUB term'
    p[0] = ('-', p[1], p[3])


def p_expression_term(p):
    'expression : term'
    p[0] = p[1]


def p_term_mul(p):
    'term : term MUL factor'
    p[0] = ('*', p[1], p[3])


def p_term_div(p):
    'term : term DIV factor'
    p[0] = ('/', p[1], p[3])


def p_term_factor(p):
    'term : factor'
    p[0] = p[1]


def p_factor(p):
    'factor : OPEN_PAREN number ADD DIV SUB number CLOSE_PAREN'
    p[0] = (p[2], p[6])


def p_number(p):
    'number : NUMBER'
    p[0] = float(p[1])


# oh, and handle errors
def p_error(p):
    raise SyntaxError(""Syntax error in input on line %d"" % lex.lexer.lineno)


def parse(input):
    '''
    parses a string with the contents of the idf file and returns the dictionary
    representation.
    '''
    lexer = lex.lex(debug=True)
    lexer.input(input)
    parser = yacc.yacc()
    result = parser.parse(debug=True)
    return result

if __name__ == '__main__':
    #result = parse('(18.13053098972887 +/- 0.9408208676613867)')
    result = parse('(18.13053098972887 +/- 0.9408208676613867) + (4.198532451786269 +/- 1.006181051488966)')
    print result
"
I need help understanding why the return value is different from what I expected. I am using the cmd module,"global user
"
Convert user input strings to raw string literal to construct regular expression,">>> import re
>>> motif = r""\section""
>>> txt = r""abcd\sectiondefghi""
>>> pattern = re.compile(re.escape(motif))
>>> txt = r""abcd\sectiondefghi""
>>> print pattern.findall(txt)
['\\section']
"
Kivy - Screen Manager - Accessing attribute in other class,"class MenuScreen(Screen):
    text = StringProperty('')
    def change_text(self):
        self.text = ""The text you want to set""
        self.manager.current = ""SettingsScreen""

class SettingsScreen(Screen):
    label_text = StringProperty('')
"
Iterate over object attributes in python,">>> class Cls(object):
...     foo = 1
...     bar = 'hello'
...     def func(self):
...         return 'call me'
...
>>> obj = Cls()
"
Output is printed on same line if input beforehand ends in 5.,"else:
    print myList[i],
"
having trouble outputting an answer to a text file,"bowler_scores = {}
for line in open('bowlingscores.txt', 'rb'):
    line = line.strip()
    if line.isalpha():
        name = line.strip()
        bowler_scores[name] = [] #1
    elif line.isdigit():
        score = int(line)
        bowler_scores[name].append(score) #2

def avg(x, y):
    return x/float(y) 

total = sum([sum(scores) for scores in bowler_scores.values()]) #3
num_scores = sum(len(value) for value in bowler_scores.values()) #4
total_avg = avg(total, num_scores) # 5

output = open('output.txt','wb')
for name, scores in bowler_scores.items(): #6
    bowler_avg = avg(sum(scores),len(scores)) #7
    if sum(scores) == 60: 
        output.write('{0} {1} Perfect\r\n'.format(name, scores))
    elif bowler_avg > total_avg: #8
        output.write('{} {} Above average\r\n'.format(name, scores)) #9
    elif bowler_avg < total_avg:
        output.write('{} {} Below average\r\n'.format(name, scores))
output.close()
"
argument type of fileinput.input() in python,"import fileinput
for line in fileinput.input(""in.txt""): # single filename string
    print (line)
"
Add multi year average column to each row,"             datetime  a_df  b_df  c_df        date  a_group  b_group  c_group
0 2011-01-01 01:00:00     1     2     3  2011-01-01       37       74      111
1 2011-01-01 02:00:00    10    20    30  2011-01-01       37       74      111
2 2011-01-01 03:00:00   100   200   300  2011-01-01       37       74      111
3 2011-01-02 01:00:00     4     5     6  2011-01-02      148      185      222
4 2011-01-02 02:00:00    40    50    60  2011-01-02      148      185      222
5 2011-01-02 03:00:00   400   500   600  2011-01-02      148      185      222
"
Find the highest number of divisors between range in python?,"import operator


def higest_divisors(a, b):
    _ret = {var: len([x for x in range(a, b+1) if not var % x]) for var in range(a, b+1)}.items()
    max = 0
    _to_ret = []
    for n, t in sorted(_ret, key=operator.itemgetter(1))[::-1]:
        if max <= t:
            _to_ret.append(n)
            max = t

    return _to_ret

if __name__ == '__main__':
    print higest_divisors(2, 10)
"
Fix values that are typed into a doublespinbox in PyQt,"class MySpinBox(QDoubleSpinBox):
    def __init__(self, parent=None):
        super(MySpinBox, self).__init__(parent)
        # any RegExp that matches the allowed input
        self.validator = QRegExpValidator(QRegExp(""\\d+[\\.]{0,1}[02468]{0,1}""), self)

    def validate(self, text, pos):
        # this decides if the entered value should be accepted
        return self.validator.validate(text, pos)
"
Spline of curve (python),"f = scipy.interpolate.interp1d(t, X)
"
Python - slice array until certain condition is met,"slices_start.searchsorted(4) #4
Out: 2
"
python: help in calculation a proportion of 1's in binary sequence,"res = [[1, 0, 0, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [1, 0, 1, 0, 0], [1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 1, 0], None, None, None, None, None]


total = sum([ x.count(1) for x in res if x<> None ]) # ignore the None elements
length = sum([len(x) for x in res if x <> None])
proportion = float(total)/length
"
"Python type() or __class__, == or is",">>> class Z(object):
...     def __getattribute__(self, name):
...             return ""ham""
... 
>>> z = Z()
>>> z.__class__
'ham'
>>> type(z)
<class '__main__.Z'>
"
Using lxml to add a string as a sub element,"<presentation>
  <format/>
  <slides>
    <slide1>
    <title>My Presentation</title>
    <subtitle>A sample presentation</subtitle>
    <phrase>Some sample text
        <subphrase>Some more text</subphrase>
    </phrase>
</slide1>
  </slides>
</presentation>
"
How to transfer message between different request in web.py?,"session = web.session.Session(app,web.session.DiskStore('sessions'), initializer={'message': """"})
render = web.template.render('templates/', globals={'context': session}, base='layout')
"
Python MySQLdb iterate through table,"for x in xrange(0,numrows):
  row = cursor.fetchone()
  print row[0], ""-->"", row[1]
"
Implementing the Alon-Matias-Szegedy Algorithm For The Second Moment Stream Approximation,"    estimateM2 += lenvect * ((2 * value) - 1)
"
"Given an iterable, how to apply a function in every possible combination?",">>> fL
['a', 'b', 'c']
"
How to parse/extract specific values from an input huge file in python?,"import xml.etree.ElementTree as ET
tree = ET.parse(source)
root = tree.getroot()
# Look at each element that has 'row' tag
for row in root.iter('row'):
    print row.get('PostTypeId')
"
python: how to interrupt a regex match,"r'^(\d{5}), [^,]+, (\d{8}), (\d{4}), [^,]+, [^,]+,' + 37 * r' ([^,]+),' + r' ([^,]+)$'
"
Can you search backwards from an offset using a Python regular expression?,"my_new_string = ""Looking feeding dancing prancing""
offset = 16
m = re.match(r'.*(\b\w+ing)(?<!.{%d})' % offset, my_new_string)
if m: print m.group(1)
"
How to create a dict of functions in Python?,"migrations = {}

def migrate(old_version, new_version):
    assert abs(new_version-old_version)==1

    def decorator(f):
        direction = 'up' if new_version > old_version else 'down'
        if old_version not in migrations:
            migrations[old_version] = {}
        migrations[old_version][direction] = f
        return f
    return decorator

@migrate(1, 2)
def upgrade():
    pass  # migration script here

@migrate(2, 1)
def downgrade():
    pass  # migration script here

@migrate(2, 3)
def upgrade():
    pass  # migration script here
# etc

print(migrations)
"
Pairs from single list,"from itertools import izip_longest
def blockwise(t, size=2, fillvalue=None):
    it = iter(t)
    return izip_longest(*[it]*size, fillvalue=fillvalue)
"
wildcard subdomains in a django project,"127.0.0.1 ny.localhost, az.localhost  # and so on
"
Pyglet hello world example doesn't show label until a key is pressed,"label = pyglet.text.Label(""Hello World!"",
                            color=(255,255,255,255),
                            font_size=36,
                            x=window.width//2, y=window.height//2,
                            anchor_x=""center"", anchor_y=""center"")
"
Averaging column 2D array python,">>> d
defaultdict(<type 'list'>,
{'469420270005000C': [-89, -91],
 '4694202700270003': [-53, -55],
 '469420270013002A': [-90, -94, -92]})
"
sorting a list of two columns based on one column python,"data = """"""1467153  12309  
1466231  21300  
1478821  10230
""""""
l = sorted([list(map(int, line.split())) # convert each pair to integers
            for line                     # iterate over lines in input
            in data.split(""\n"")          # split on linebreaks
            if line],                    # ignore empty lines
    key=lambda x: x[0])                  # sort by firt element of pair
print(l)
"
How can I check if a string has the same characters? Python,"sorted(str1) == sorted(str2)
"
When to use a django form and when to use a html one?,"myfield = forms.CharField()
"
How can I run Python source from stdin that itself reads from stdin?,"import os

with os.fdopen(3, 'r') as fp:
  for line in fp:
    print line,
"
Intersection of variable number of lists,"def intersect(lists):
    return list(set.intersection(*map(set, lists)))
"
Python selecting items by comparing values in a table using dictionary,"ACLA_095800     ACT     91.73   375     31      0       1       375     1       375     0.0     732.0
ACLA_096170     CALM    29.33   150     96      4       34      179     2       145     1e-13   55.1
ACLA_028450     EF1A    85.55   443     63      1       1       443     1       442     0.0     801.0
ACLA_065630     RPB2    65.79   1257    386     14      1       1252    4       1221    0.0     1691.0
ACLA_024600     TBB     80.0    435     87      0       1       435     1       435     0.0     729.0
"
What is more effective iterate a list and call a function or pass the list to the function,"In [29]: %%timeit
   ....: for d in l:
   ....:     func1(d)
   ....:
The slowest run took 7.57 times longer than the fastest. This could mean that an intermediate result is being cached
1000000 loops, best of 3: 1.16 µs per loop

In [30]: %%timeit
   ....: func2(l)
   ....:
The slowest run took 9.25 times longer than the fastest. This could mean that an intermediate result is being cached
1000000 loops, best of 3: 988 ns per loop

In [31]: %%timeit
   ....: [func1(d) for d in l]
   ....:
100000 loops, best of 3: 1.98 µs per loop

In [33]: %%timeit
   ....: list(map(func1,l))
   ....:
The slowest run took 4.42 times longer than the fastest. This could mean that an intermediate result is being cached
100000 loops, best of 3: 2.5 µs per loop
"
How do I marshal a pointer to a cstring between Python and C via SWIG,">>> import x
>>> x.connect('url')
[1, 'host', 'port', 'path']
"
reading boolean condition from config file in Python,"[mysettings]
cond1: x >= 10
cond2: y < 5
cond3: x + y >= 6
"
python variable contains three lists not one,"fread.close()
"
how to dynamically read a specific cell value in a table using selenium and python,"'[contains(concat("" "", normalize-space(@class), "" ""), "" btn-success "")]'
"
Best way to reduce dictionary of lists,"[sum(x) for x in zip(*my_dict.values())[1:]]
"
Python 2.7 Tkinter classes,"def text(self, str1, str2): #<-- you forgot self
"
Translating a lambda to a normal function in Python,"def y(f):
  def a(x):
    def b(*r):
      return x(x)(*r)
    return f(b)
  return a(a)

def fx(f):
  def x(q, n):
    # changed ""a and b or c"": different semantics if b can be falsy
    if len(q) <= n:
      return q
    else:
      return f(q[len(q) / 2:], n) + f(q[:len(q) / 2], n)
  return x

print ""\n"".join(
  "" "".join(y(fx)(k, z + 1) for z, k in enumerate(i[:-1].split()))
  for i in list(s)[1:])
"
Python Logic Help:,">>> words = { ""apple"" }
>>> def isOK( fragment, letter ):
...     word = fragment + letter
...     if len( word ) <= 3: return True
...     return word not in words and any( w.startswith( word ) for w in words )
...
>>> isOK( ""a"", ""p"" )
True
>>> isOK( ""ap"", ""p"" )
True
>>> isOK( ""app"", ""l"" )
True
>>> isOK( ""appl"", ""l"" )
False
>>> isOK( ""appl"", ""e"" )
False
"
Translate xml string to Python list,"from xml.etree import cElementTree as ET
xml = ET.fromstring(xmlData)

for child in xml.iter('field'):
    print child.tag, child.attrib, child.text
"
How to integrate djangobb in an existing project?,"""""""bugaga URL Configuration

The `urlpatterns` list routes URLs to views. For more information please see:
    https://docs.djangoproject.com/en/1.8/topics/http/urls/
Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  url(r'^$', views.home, name='home')
Class-based views
    1. Add an import:  from other_app.views import Home
    2. Add a URL to urlpatterns:  url(r'^$', Home.as_view(), name='home')
Including another URLconf
    1. Add an import:  from blog import urls as blog_urls
    2. Add a URL to urlpatterns:  url(r'^blog/', include(blog_urls))
""""""

from django.conf.urls import *
from django.conf import settings
from django.contrib import admin
from django.conf.urls.static import static

from djangobb_forum import settings as forum_settings
from djangobb_forum.sitemap import SitemapForum, SitemapTopic


sitemaps = {
    'forum': SitemapForum,
    'topic': SitemapTopic,
}

urlpatterns = patterns('',
    # Admin
    url(r'^admin/', include(admin.site.urls)),

    # Sitemap
    url(r'^sitemap\.xml$', 'django.contrib.sitemaps.views.sitemap', {'sitemaps': sitemaps}),

    #My_Apps
    url(r'^places/', include('app_places.urls')),
    url(r'^shows/', include('app_shows_and_times.urls')),

    # DjangoBB_Forum
    url(r'^forum/account/', include('allauth.urls')),
    url(r'^forum/', include('djangobb_forum.urls', namespace='djangobb')),
)

# PM Extension
if (forum_settings.PM_SUPPORT):
    urlpatterns += patterns('',
        url(r'^forum/pm/', include('django_messages.urls')),
   )

if (settings.DEBUG):
    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)
"
logit and inverse logit functions for extreme values,"from sympy import *
def inv_logit(p):
    return exp(p) / (1 + exp(p))
def logit(p):
    return log(p)- log(1 -p)

x=Symbol('x')
expr=logit(inv_logit(x))
# expr is now:
# -log(1 - exp(x)/(1 + exp(x))) + log(exp(x)/(1 + exp(x)))
# rewrite it: (there are many other ways to do this. read the doc)
# you may want to make an expansion (of some suitable kind) instead.
expr=cancel(powsimp(expr)).expand()
# it is now 'x'

# just evaluate any expression like this:    
result=expr.subs(x,123.231)

# result is now an equation containing: 123.231
# to get the float: 
result.evalf()
"
Optimize conversion to decimal representation,"answer = t_sec + (t_nsec / 10**9)
"
cython.parallel: variable assignment without thread-locality,"from cython.parallel import prange

cdef:
    Py_ssize_t i, n = 100
    int x = 0

with nogil:
    for i in prange(n, schedule='guided'):
        x = 1
"
Converting Python Code to PHP,"function calcNumEntropyBits($s) {
        if (strlen($s) <= 0) return 0.0;
        $symCount = array();
        foreach (str_split($s) as $c) {
                if (!in_array($c,$symCount)) $symCount[$c] = 1;
                else $symCount[$c] ++;
        }
        $entropy = 0.0;
        foreach ($symCount as $c=>$n) {
                $prob = $n / (float)strlen($s);
                $entropy += $prob * log($prob)/log(2);
        }
        if ($entropy >= 0.0) return 0.0;
        else return -($entropy*strlen($s));
}

function testEntropy($s):
        printf(""Bits of entropy in '%s' is %.2f"",$s,calcNumEntropyBits($s));

testEntropy('hello world');
testEntropy('bubba dubba');
testEntropy('aaaaaaaaaaa');
testEntropy('aaaaabaaaaa');
testEntropy('abcdefghijk');
"
"map lambda x,y with a constant x","itertools.imap(lambda x,y: x+y, itertools.repeat(x), y)
"
How to propagate tree nodes in Python,"from itertools import chain
list(chain.from_iterable(node.sons.values() for node in current_nodes))
"
Mean value by equality of rows,"df = pd.DataFrame({'x':xarray,'y':yarray,'z':zarray})
"
python while loop and for loop,"i = 1523
total = 0
while i <= 10503:
    total += i
    i += 2
print (total)

total = 0
for i in range (1523, 10504, 2):
    total += i
print (total)
"
Trying to convert HSV image to Black and white [opencv],"h,b = skin.shape[:2]    

for i in xrange(h):
    for j in xrange(b):
        if bw_image[i][j] > threshold:
            new_image[i][j] = 255 #Setting the skin tone to be White
        else:
            new_image[i][j] = 0 #else setting it to zero.
"
How to check object before adding 'inline = []' in Django,"class TestAdmin(admin.ModelAdmin):
    def get_inline_instances(self, request, obj=None):
        if obj.id > 3:
            self.inlines = [TestInfoInline, ]
        else:
            self.inlines = []
        return super(TestAdmin, self).get_inline_instances(request, obj)
"
Split a list into nested lists on a value,"500x10 times: [1, 4, N...9, 4],(None,)
    isplit_kabie takes:0.0605,avg:1.21e-05,best:0.0032,worst:0.0074
      magicsplit takes:0.0287,avg:5.74e-06,best:0.0016,worst:0.0036
     magicsplit2 takes:0.0174,avg:3.49e-06,best:0.0017,worst:0.0018
          ssplit takes:0.0149,avg:2.99e-06,best:0.0015,worst:0.0016
         ssplit2 takes:0.0198,avg:3.96e-06,best:0.0019,worst:0.0021
        split_on takes:0.0229,avg:4.59e-06,best:0.0023,worst:0.0024
500x10 times: [1, 4, N...9, 4],{9, None, 7}
    isplit_kabie takes:0.1448,avg:2.90e-05,best:0.0144,worst:0.0146
      magicsplit takes:0.0636,avg:1.27e-05,best:0.0063,worst:0.0065
     magicsplit2 takes:0.0891,avg:1.78e-05,best:0.0064,worst:0.0162
          ssplit takes:0.0593,avg:1.19e-05,best:0.0058,worst:0.0061
         ssplit2 takes:0.1004,avg:2.01e-05,best:0.0069,worst:0.0142
        split_on takes:0.0929,avg:1.86e-05,best:0.0090,worst:0.0096
500x10 times: (),()
    isplit_kabie takes:0.0041,avg:8.14e-07,best:0.0004,worst:0.0004
      magicsplit takes:0.0040,avg:8.04e-07,best:0.0004,worst:0.0004
     magicsplit2 takes:0.0022,avg:4.35e-07,best:0.0002,worst:0.0002
          ssplit takes:0.0023,avg:4.59e-07,best:0.0002,worst:0.0003
         ssplit2 takes:0.0023,avg:4.53e-07,best:0.0002,worst:0.0002
        split_on takes:0.0072,avg:1.45e-06,best:0.0007,worst:0.0009
500x10 times: range(0, 1000),()
    isplit_kabie takes:0.8892,avg:1.78e-04,best:0.0881,worst:0.0895
      magicsplit takes:0.6614,avg:1.32e-04,best:0.0654,worst:0.0673
     magicsplit2 takes:0.0958,avg:1.92e-05,best:0.0094,worst:0.0099
          ssplit takes:0.0943,avg:1.89e-05,best:0.0093,worst:0.0095
         ssplit2 takes:0.0943,avg:1.89e-05,best:0.0093,worst:0.0096
        split_on takes:1.3348,avg:2.67e-04,best:0.1328,worst:0.1340
500x10 times: 'Split me',('', '')
    isplit_kabie takes:0.0234,avg:4.68e-06,best:0.0023,worst:0.0024
      magicsplit takes:0.0126,avg:2.52e-06,best:0.0012,worst:0.0013
     magicsplit2 takes:0.0138,avg:2.76e-06,best:0.0013,worst:0.0015
          ssplit takes:0.0119,avg:2.39e-06,best:0.0012,worst:0.0012
         ssplit2 takes:0.0075,avg:1.50e-06,best:0.0007,worst:0.0008
        split_on takes:0.0191,avg:3.83e-06,best:0.0018,worst:0.0023
500x10 times: 'split m... me ',' '
    isplit_kabie takes:2.0803,avg:4.16e-04,best:0.2060,worst:0.2098
      magicsplit takes:0.9219,avg:1.84e-04,best:0.0920,worst:0.0925
     magicsplit2 takes:1.0221,avg:2.04e-04,best:0.1018,worst:0.1034
          ssplit takes:0.8294,avg:1.66e-04,best:0.0818,worst:0.0834
         ssplit2 takes:0.9911,avg:1.98e-04,best:0.0983,worst:0.1014
        split_on takes:1.5672,avg:3.13e-04,best:0.1543,worst:0.1694
500x10 times: 'split m... me,',' , , , ... , ,'
    isplit_kabie takes:2.1847,avg:4.37e-04,best:0.2164,worst:0.2275
      magicsplit takes:3.7135,avg:7.43e-04,best:0.3693,worst:0.3783
     magicsplit2 takes:3.8104,avg:7.62e-04,best:0.3795,worst:0.3884
          ssplit takes:0.9522,avg:1.90e-04,best:0.0939,worst:0.0956
         ssplit2 takes:1.0140,avg:2.03e-04,best:0.1009,worst:0.1023
        split_on takes:1.5747,avg:3.15e-04,best:0.1563,worst:0.1615
500x10 times: 'split m...ase!',' ,!'
    isplit_kabie takes:3.3443,avg:6.69e-04,best:0.3324,worst:0.3380
      magicsplit takes:2.0594,avg:4.12e-04,best:0.2054,worst:0.2076
     magicsplit2 takes:2.1850,avg:4.37e-04,best:0.2180,worst:0.2191
          ssplit takes:1.4881,avg:2.98e-04,best:0.1484,worst:0.1493
         ssplit2 takes:1.8779,avg:3.76e-04,best:0.1868,worst:0.1920
        split_on takes:2.9596,avg:5.92e-04,best:0.2946,worst:0.2980
500x10 times: range(0, 100),range(0, 100)
    isplit_kabie takes:0.9445,avg:1.89e-04,best:0.0933,worst:0.1023
      magicsplit takes:0.5878,avg:1.18e-04,best:0.0583,worst:0.0593
     magicsplit2 takes:0.5597,avg:1.12e-04,best:0.0554,worst:0.0588
          ssplit takes:0.8568,avg:1.71e-04,best:0.0852,worst:0.0874
         ssplit2 takes:0.1399,avg:2.80e-05,best:0.0121,worst:0.0242
        split_on takes:0.1462,avg:2.92e-05,best:0.0145,worst:0.0148
500x10 times: range(0, 100),range(101, 1000)
    isplit_kabie takes:19.9749,avg:3.99e-03,best:1.9789,worst:2.0330
      magicsplit takes:9.4997,avg:1.90e-03,best:0.9369,worst:0.9640
     magicsplit2 takes:9.4394,avg:1.89e-03,best:0.9267,worst:0.9665
          ssplit takes:19.2363,avg:3.85e-03,best:1.8936,worst:1.9516
         ssplit2 takes:0.2032,avg:4.06e-05,best:0.0201,worst:0.0205
        split_on takes:0.3329,avg:6.66e-05,best:0.0323,worst:0.0344
500x10 times: range(0, 100),range(50, 150)
    isplit_kabie takes:1.1394,avg:2.28e-04,best:0.1130,worst:0.1153
      magicsplit takes:0.7288,avg:1.46e-04,best:0.0721,worst:0.0760
     magicsplit2 takes:0.7220,avg:1.44e-04,best:0.0705,worst:0.0774
          ssplit takes:1.0835,avg:2.17e-04,best:0.1059,worst:0.1116
         ssplit2 takes:0.1092,avg:2.18e-05,best:0.0105,worst:0.0116
        split_on takes:0.1639,avg:3.28e-05,best:0.0162,worst:0.0168
500x10 times: [0, 1, 2..., 99],(99,)
    isplit_kabie takes:3.2579,avg:6.52e-04,best:0.3225,worst:0.3360
      magicsplit takes:2.2937,avg:4.59e-04,best:0.2274,worst:0.2344
     magicsplit2 takes:2.6054,avg:5.21e-04,best:0.2587,worst:0.2642
          ssplit takes:1.5251,avg:3.05e-04,best:0.1495,worst:0.1729
         ssplit2 takes:1.7298,avg:3.46e-04,best:0.1696,worst:0.1858
        split_on takes:4.1041,avg:8.21e-04,best:0.4033,worst:0.4291
"
Python: how to compute the number of shortest paths passing through one node?,">>> G = nx.Graph()
>>> G.add_path([0,1,2])

>>> spaths = nx.all_pairs_shortest_path(G)
>>> spaths
{0: {0: [0], 1: [0, 1], 2: [0, 1, 2]},
 1: {0: [1, 0], 1: [1], 2: [1, 2]},
 2: {0: [2, 1, 0], 1: [2, 1], 2: [2]}}
"
"Can I do a ""string contains X"" with a percentage accuracy in python?",">>> import difflib
>>> difflib.SequenceMatcher(None,'no information available','n0 inf0rmation available').ratio()
0.91666666666666663
"
"sort multible numpy arrays into one like: [1,2,..n, 1,2..n]","def concat_app(b0,b1,r0,g0,r1,g1):
    out = np.zeros((size,8),dtype=b0.dtype)
    out[:,2:] = np.concatenate((b0,b1,r0,g0,r1,g1)).reshape(-1,size)[:,::-1].T 
    return out.ravel().tolist()

def org_app(b0,b1,r0,g0,r1,g1):
    data_bin = []
    counter = 0
    for x in range(size):
        counter += 1
        data_bin.insert(0, 0)
        data_bin.insert(1, 0)
        data_bin.insert(2, b0[x])
        data_bin.insert(3, b1[x])
        data_bin.insert(4, r0[x])
        data_bin.insert(5, g0[x])
        data_bin.insert(6, r1[x])
        data_bin.insert(7, g1[x])
    return data_bin
"
Fabric: Set configuration variables per-host outside task,"env.sphinx_path = {
    'hosta': 'patha',
    'hostb': 'pathb',
}

@task
@hosts('hosta','hostb')
def foo(dummy_var):
    put('sphinx_stuff', env.sphinx_path%env.host)
"
Sorting JSON object(s) into a Hierarchy,"myJson = [
    {
      ""name"":""Folder 2"",
      ""id"":""zRDg"",
      ""parent"":""OY00"",
      ""type"":""folder""
    },
    {
      ""name"":""Folder 1"",
      ""id"":""OY00"",
      ""type"":""folder""
    },
    {
      ""name"":""Folder 3"",
      ""id"":""ZDE1"",
      ""type"":""folder""
    },
    {
      ""name"":""DX00025.jpg"",
      ""id"":""9Xdd"",
      ""parent"":""OY00"",
      ""type"":""jpeg""
    }
]

#this creates a dictionary that maps id names to JSON items.
#ex. itemsKeyedById[""9Xdd""] gives the jpg item with id ""9Xdd""
itemsKeyedById = {i[""id""]: i for i in myJson}

#iterate through each item in the `myJson` list.
for item in myJson:
    #does the item have a parent?
    if ""parent"" in item:
        #get the parent item
        parent = itemsKeyedById[item[""parent""]]
        #if the parent item doesn't have a ""children"" member, 
        #we must create one.
        if ""children"" not in parent:
            parent[""children""] = []
        #add the item to its parent's ""children"" list.
        parent[""children""].append(item)

#filter out any item that has a parent.
#They don't need to appear at the top level, 
#since they will appear underneath another item elsewhere.
topLevelItems = [item for item in myJson if ""parent"" not in item]
print topLevelItems
"
"top 5 or N lists from nested lists ""using one of the element"" from nested list (little bit complex)",">>> from operator import itemgetter
>>> sorted(m, key=itemgetter(2), reverse=True)[:3]
[['dcu', 'lz-name', 999], ['pqr', 'y-name', 333], ['mno', 'j-name', 333]]
"
Matlab freqz function in Python,"w, h = freqz(b, a, worN=n)
f = fs * w / (2*np.pi)
"
Comparing Permutation and Combinations,"inputs = {input1, input2}
found = None
for i, combo in enumerate(combinations(items, 2)):
    if set(combo) == inputs:
        found = i
        break
"
Ruby NArray.to_na() and Python numpy.array(),"[  9.05457127e+164   3.30197767e-258   6.15310337e+223]
"
How can I collapse a few lists in one with python?,">>> s = [('yellow', 1), ('blue', 2), ('yellow', 3), ('blue', 4), ('red', 1)]
>>> d = defaultdict(list)
>>> for k, v in s:
        d[k].append(v)

>>> d.items()
[('blue', [2, 4]), ('red', [1]), ('yellow', [1, 3])]
"
Python variable allocation and `id` keyword,"#if NSMALLNEGINTS + NSMALLPOSINTS > 0
/* Small integers are preallocated in this array so that they
   can be shared.
   The integers that are preallocated are those in the range
   -NSMALLNEGINTS (inclusive) to NSMALLPOSINTS (not inclusive).
*/
static PyLongObject small_ints[NSMALLNEGINTS + NSMALLPOSINTS];
"
List per Date python,"from django.db.models import F
Model.objects.values('Date').distinct().annotate(name=F('Name'), status=F('Status'))
"
List Comprehension Loop,"In [25]: df
Out[25]: 
                 price      mag signal
date       time                       
12/28/2012 1:30     10      foo      S
           2:15     11      bar      N
           3:00     12      baz      S
           4:45     13   fibble      N
           5:30     14  whatsit      S
           6:15     15     bobs      N
           7:00     16  widgets      S
           7:45     17  weevils      N
           8:30     18   badger      S
           9:15     19    moose      S
11/29/2012 1:30     10      foo      N
           2:15     11      bar      N
           3:00     12      baz      S
           4:45     13   fibble      N
           5:30     14  whatsit      N
           6:15     15     bobs      N
           7:00     16  widgets      S
           7:45     17  weevils      N
           8:30     18   badger      N
           9:15     19    moose      N
[etc.]
"
Cyclic combination of two list of different length,">>> from itertools import islice, izip
>>> list(islice(izip(cycle(list2), cycle(list1)), 5))
[('1', 'a'), ('2', 'b'), ('3', 'c'), ('4', 'a'), ('5', 'b')]
"
parsing data from xml file in python,"import xml.etree.ElementTree as ET
document = ET.parse(""recipe.xml"")
root = document.getroot()
TITLE = 0

for child in root.getiterator('references'):
    author=[]
    score=[] 
    for k in child.getiterator('person'):
        author.append(k.get('name'))
    for l in child.getiterator('score'):
        score.append(l.text)

    print child[TITLE].text
    print ', '.join(author)
    print ', '.join(score)
"
Is the list of Python reserved words and builtins available in a library?,">>> import keyword
>>> keyword.iskeyword('break')
True
>>> keyword.kwlist
['and', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'exec', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'not', 'or', 'pass', 'print', 'raise', 'return', 'try', 'while', 'with', 'yield']
"
For loops over a list,"
>>> a[b:None:-1]
[1, 3, 4, 8, 7, 6, 4, 3]
>>> a[b+1:]
[6, 7, 8, 9, 4]
"
Python: How to import 2.7 module into 3.4 program?,"import subprocess
cmd = [r'c:\python27\python.exe', 'main27.py']
p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
stdout, stderr = p.communicate()
"
How to change the python version that a virtual environment uses in Ubuntu 14.04?,"virtualenv -p python3 newenvname
"
How can I create the following data type in Python?,"from collections import defaultdict
mydata = defaultdict(lambda: defaultdict(list))
"
How to extract and change a sequence of bytes from a serial packet to the correct integer representation in python?,">>> import struct
>>> val # Generated using  binascii.unhexlify
 b'7LOO\x00\x00\x08\x00\xfft\xd1\x02)\x19\x03\x00\x00o\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
>>> struct.unpack_from('<H', val, 10)
(721,) # Note the return is a tupple so you need the 0th element
>>> struct.unpack_from('<H', val, 10)[0]
721
"
Python Renaming Multiple Files in Directory,"from os import path, rename
from glob import glob


pth = 'C:/Users/acars/Desktop/b'
src_files = os.listdir(pth)

for file_name in src_files:
    new = file_name.split(""_"", 1)[1]
    file_name = path.join(pth, file_name)
    rename(file_name, path.join(pth, new))
"
getting the data between some time interval,"not nokia collar nokia collar gsm sweater sweater gsm gsm show wayfreyerv door collar or harman women's collar sweater head
"
Python regex for something *not* in a dictionary?,">>> import re
>>> test = ""This is foo.""
>>> any(word in d for word in re.findall(""[A-Za-z0-9]+"", test))
"
Inheritable Tracking Decorator,"class Parent(object, metaclass=DecoMeta):
    ...
"
"I want to turn the string ""random.randint(2,4), into an integer","player = {""attack"": lambda: random.randint(2, 4), ""health"": 50}
"
how to read numpy 2D array from string?,"In [196]: import json

In [197]: js=json.dumps(a.tolist())

In [198]: js
Out[198]: '[[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]]'

In [199]: np.array(json.loads(js))
Out[199]: 
array([[ 0,  1,  2,  3],
       [ 4,  5,  6,  7],
       [ 8,  9, 10, 11]])
"
Login form for custom users in django,"YourCustomUser(models.Model):
    user = models.OneToOneField(User,related_name='profile')
    image = models.ImageField()
    //put here your others attributes
"
"Python write string ""1001101"" as binary stream to file","import struct
import numpy as np # for random string of ones and zeros

def chunks(s):
    for i in xrange(0, len(s), 32):
         yield s[i:i+32]

s =  ''.join(str(np.random.randint(2)) for x in xrange(32*2))
ints = (int(x, 2) for x in chunks(s)) # convert string from binary repr to integers
bins = (struct.pack('I', i) for i in ints) # pack to unsigned ints
"
How to grab item outside of tag using python+beautifulsoup,"'text1 foo bar text2 foobar baz'
"
text file each line to command in bash,"while read line
do
    ./myscript $line
done <inputfile
"
Splitting a BeautifulSoup into 2 Soup-Trees,">>> soup.p
<p>
foo
<a href=""http://...html"" target=""_blank"">foo</a> | bar
<a href=""http://...html"" target=""_blank"">foo</a> | bar
<a href=""http://...html"" target=""_blank"">foo</a> | bar
<a href=""http://...html"" target=""_blank"">foo</a> | bar
</p>
>>> soup.p.a
<a href=""http://...html"" target=""_blank"">foo</a>
"
Calculating averages of 15 records ahead of the current record as a new column,"In [16]: df = DataFrame(randn(10,2),columns=list('ab'),index=date_range('20130101 9:00',freq='T',periods=10))

In [17]: df
Out[17]: 
                            a         b
2013-01-01 09:00:00  0.516518 -1.497564
2013-01-01 09:01:00  1.747399  1.100530
2013-01-01 09:02:00 -0.223476 -0.682712
2013-01-01 09:03:00  0.343172 -0.341965
2013-01-01 09:04:00 -1.380057 -1.565732
2013-01-01 09:05:00 -2.156675  1.043532
2013-01-01 09:06:00 -1.237155 -0.219086
2013-01-01 09:07:00  1.626510 -0.596204
2013-01-01 09:08:00 -0.767588  0.496110
2013-01-01 09:09:00 -0.014556  0.012049

In [18]: df.index
Out[18]: 
<class 'pandas.tseries.index.DatetimeIndex'>
[2013-01-01 09:00:00, ..., 2013-01-01 09:09:00]
Length: 10, Freq: T, Timezone: None

In [19]: df.append(Series(name=[Timestamp('20130101 09:15')]))
Out[19]: 
                            a         b
2013-01-01 09:00:00  0.516518 -1.497564
2013-01-01 09:01:00  1.747399  1.100530
2013-01-01 09:02:00 -0.223476 -0.682712
2013-01-01 09:03:00  0.343172 -0.341965
2013-01-01 09:04:00 -1.380057 -1.565732
2013-01-01 09:05:00 -2.156675  1.043532
2013-01-01 09:06:00 -1.237155 -0.219086
2013-01-01 09:07:00  1.626510 -0.596204
2013-01-01 09:08:00 -0.767588  0.496110
2013-01-01 09:09:00 -0.014556  0.012049
2013-01-01 09:15:00       NaN       NaN

In [20]: df.append(Series(name=[Timestamp('20130101 09:15')])).index
Out[20]: 
<class 'pandas.tseries.index.DatetimeIndex'>
[2013-01-01 09:00:00, ..., 2013-01-01 09:15:00]
Length: 11, Freq: None, Timezone: None

In [21]: df.append(Series(name=[Timestamp('20130101 09:15')])).asfreq('T')
Out[21]: 
                            a         b
2013-01-01 09:00:00  0.516518 -1.497564
2013-01-01 09:01:00  1.747399  1.100530
2013-01-01 09:02:00 -0.223476 -0.682712
2013-01-01 09:03:00  0.343172 -0.341965
2013-01-01 09:04:00 -1.380057 -1.565732
2013-01-01 09:05:00 -2.156675  1.043532
2013-01-01 09:06:00 -1.237155 -0.219086
2013-01-01 09:07:00  1.626510 -0.596204
2013-01-01 09:08:00 -0.767588  0.496110
2013-01-01 09:09:00 -0.014556  0.012049
2013-01-01 09:10:00       NaN       NaN
2013-01-01 09:11:00       NaN       NaN
2013-01-01 09:12:00       NaN       NaN
2013-01-01 09:13:00       NaN       NaN
2013-01-01 09:14:00       NaN       NaN
2013-01-01 09:15:00       NaN       NaN

In [22]: df.append(Series(name=[Timestamp('20130101 09:15')])).asfreq('T').index
Out[22]: 
<class 'pandas.tseries.index.DatetimeIndex'>
[2013-01-01 09:00:00, ..., 2013-01-01 09:15:00]
Length: 16, Freq: T, Timezone: None
"
Explain what this is for me?,">>> import re
>>> regex, phrases = (r'why (.*) i (.*)\?',
... ( r'You \g<1> \g<2>?',
...   r'Perhaps you only think you \g<1> \g<2>.'))
>>> phrase1, phrase2 = phrases
>>> re.sub(regex, phrase1, 'why am i dumb?')
'You am dumb?'
>>> re.sub(regex, phrase2, 'why am i dumb?')
'Perhaps you only think you am dumb.'
"
Create DataArray from Dict of 2D DataFrames/Arrays,"<xarray.DataArray (patient: 100, month: 12, attribute: 10000)>
array([[[ 0.61176399,  0.26172557,  0.74657302, ...,  0.43742111,
          0.47503291,  0.37263983],
        [ 0.34970732,  0.81527751,  0.53612895, ...,  0.68971198,
          0.68962168,  0.75103198],
        [ 0.71282751,  0.23143891,  0.28481889, ...,  0.52612376,
          0.56992843,  0.3483683 ],
        ...,
        [ 0.84627257,  0.5033482 ,  0.44116194, ...,  0.55020168,
          0.48151353,  0.36374339],
        [ 0.53336826,  0.59566147,  0.45269417, ...,  0.41951078,
          0.46815364,  0.44630235],
        [ 0.25720899,  0.18738289,  0.66639783, ...,  0.36149276,
          0.58865823,  0.33918553]],

       ...,

       [[ 0.42933273,  0.58642504,  0.38716496, ...,  0.45667285,
          0.72684589,  0.52335464],
        [ 0.34946576,  0.35821339,  0.33097093, ...,  0.59037927,
          0.30233665,  0.6515749 ],
        [ 0.63673498,  0.31022272,  0.65788374, ...,  0.47881873,
          0.67825066,  0.58704331],
        ...,
        [ 0.44822441,  0.502429  ,  0.50677081, ...,  0.4843405 ,
          0.84396521,  0.45460029],
        [ 0.61336348,  0.46338301,  0.60715273, ...,  0.48322379,
          0.66530209,  0.52204897],
        [ 0.47520639,  0.43490559,  0.27309414, ...,  0.35280585,
          0.30280485,  0.77537204]]])
Coordinates:
  * month      (month) int64 0 1 2 3 4 5 6 7 8 9 10 11
  * patient    (patient) <U10 'patient_80' 'patient_73' 'patient_79' ...
  * attribute  (attribute) object 'attr_0' 'attr_1' 'attr_2' 'attr_3' ...
"
Trying to access a file located on a flashdrive,"    file = open(""G:\\flashdrive_folder\\flashdrive_file.txt"", ""r"")
"
Zero assignement in inline comparison," x= 0 if x > 9 else x
"
Installing python-sympy in a Docker image,"FROM  debian:jessie
RUN apt-get update && apt-get install -y \
    python \
    build-essential \
    make \
    gcc \
    pandoc \
    lrslib \
    dos2unix \
    python-dev \
    python-pygments \
    python-numpy \
    python-pip 

RUN  apt-get -y --no-install-recommends install python-sympy
"
Longest prefix of array equal to a value,"np.diff(np.where(np.r_[y[y != 'O'], ['B']] == 'B')[0])
array([3, 2, 1])
"
calling python script that requires an input from within bash for loop,"import sys
import os

assert os.path.isfile(sys.argv[1])

with open(sys.argv[1]) as filelist:
    filenames = [line.strip() for line in filelist]
    for filename in filenames:
        if not os.path.isfile(filename):
            print >> sys.stderr , ""{0} is not a valid file"".format(filename)
            break
        with open(filename,'r') as f:
            for line in f:
                #do something                                                                                                                                                                                                                
                pass
"
"Listing blog entries by year,month","entry_list = Entry.objects.order_by('pub_date')
"
Is there any way to override locally the __eq__ function/operator and restore the old one after?,"class Patched(YourClass):
  def __eq__(self, i):
    if self.original__eq:
      return YourClass.__eq__(self, i):
    else:
      pass # your code here
"
Python 3.x - Create dataframe and specify column names,"import requests
import pandas as pd
import bs4
import string
import matplotlib.pyplot as plt
url = ""https://www.revisor.mn.gov/laws/?year=2014&type=0&doctype=Chapter&id=294""

result = requests.get(url)
soup = bs4.BeautifulSoup(result.content)
summary = soup.find(""div"", {""class"":""bill_section"",""id"": ""laws.1.1.0""})
tables = summary.findAll('table')
data_table = tables[1]

Source, Amount = [], []
for row in data_table.findAll(""tr""):
    cells = row.findAll(""td"")
    try :
        for char in cells[0].findAll(""ins""):
             Source.append(char.text)   #This is where the issue is
        for char in cells[2].findAll(""ins""):
             Amount.append(char.text)   #And here
    except:
        pass
"
Multiselect dropdown/list in django admin panel only,"from django.db import models
from model_utils import Choices
awesome_choices=('Choice 1', 'Choice 2',)
class SomeAwesomeModel(models.Model):
    myfield=models.CharField(max_length=255)
    field_not_in_front_end=models.Charfield(max_length=255, choices=Choices(*awesome_choices))
"
Align field in openerp,"class cus(osv.osv):
_name = ""lis.lab""
_description = ""This table is for keeping lab data of cord blood""
_columns = {
    'name': fields.char('Lab Id',size=64,required=True),
    'excutive_name': fields.char('Excutive Name', size=64),
    'date_birth': fields.date('Date of Birth'),
    'date_delivery': fields.date('Delivery Date'),
    'hospital_name': fields.char('Hospital', size=64),
    'hospital_city': fields.char('City', size=64),
    'hospital_state': fields.char('State', size=64),
    'hospital_phone': fields.char('Phone', size=64),
    'customer_name': fields.many2one('res.partner', 'Customer Name', domain=[('customer', '=', True)]),
    'hospital_country': fields.char('Hospital Country'),
}
"
Dynamically serve static content based on server name in Django,"#custom.loaders.py
from os.path import join
from django.conf import settings
from django.template import TemplateDoesNotExist
from path.to.middleware import get_current_request

def load_template_source(template_name, template_dirs=None):
    request = get_current_request()
    host = request.get_host()
    path_to_template_dir = None
    for site in settings.SITE_TEMPLATE_FOLDERS:
        if site[0] == host:
            path_to_template_dir = site[1]
            break

    if path_to_template_dir:
        try:
            filepath = join(path_to_template_dir, template_name)
            file = open(filepath)
            try:
                return (file.read(), filepath)
            finally:
                file.close()
        except IOError:
                pass

    raise TemplateDoesNotExist(template_name)
"
More reliable method to get specific JSON value using Python,"x = {""a"": 10, ""b"": 20, ""c"": 30}
x['b'] // Returns 20
"
Extract a string between double quotes,"re.findall(r'""([^""]*)""', inputString)
"
how do I create check box or radio button in python?,"from functools import partial

[...]

for letter in self.letters:
    btn = QtWidgets.QRadioButton(letter, self)
    self.lay.addWidget(btn)
    btn.clicked.connect(partial(self.btnClicked, letter))

[...]

def btnCliked(self, letter):
    print(letter)
"
which python IDE is close to R for running a line code after the whole file,"python -i test.py
"
YAML parsing to Objects (PyYAML Python3),"class Settings:
    def __init__(self, annual_volatility_target):
        self.annual_volatility_target = annual_volatility_target

    @property:
    def daily(self):
         return annual_volatility_target/np.sqrt(252)
"
django customize reset password form,"# in e.g. myapp/forms.py
from django.contrib.auth.forms import PasswordResetForm

class CaptchaPasswordResetForm(PasswordResetForm):
    captcha = ReCaptchaField()
    ...
"
How can I get index of elements which are not integer,"(data - data.round()).nonzero()
(array([2, 3]),)
"
Providing test data in python,".F.F
======================================================================
FAIL: test_data_1 (__main__.TestIsEven)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""untitled-1.py"", line 15, in _test_func
    self.assertEqual(expected, isEven(num))
AssertionError: False != True

======================================================================
FAIL: test_data_3 (__main__.TestIsEven)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""untitled-1.py"", line 15, in _test_func
    self.assertEqual(expected, isEven(num))
AssertionError: False != True

----------------------------------------------------------------------
Ran 4 tests in 0.000s

FAILED (failures=2)
"
Finding match from a specific columns across two files,"awk 'NR==FNR{a[$2]=$2;next}{if ($2 in a) {print $0}}' File1 File2
"
Python and NLTK: How to analyze sentence grammar?,">>> import nltk
>>> grammar = nltk.parse_cfg(""""""
... NP -> Det N | Det N PP | N
... N -> 'Kim' | 'Dana' | 'everyone'
... """""")
>>> sent = ""Kim"".split()
>>> parser = nltk.ChartParser(grammar)
>>> print parser.nbest_parse(sent)
[Tree('NP', [Tree('N', ['Kim'])])]
"
Python - Sort defaultdict by key,"['01/01/2014'] = [{'timestamp': datetime.datetime(2014, 1, 1, 0, 0)},
                  {'timestamp': datetime.datetime(2014, 1, 1, 0, 0)}]
['03/01/2014'] = [{'timestamp': datetime.datetime(2014, 1, 3, 0, 0)}]
['12/05/2014'] = [{'timestamp': datetime.datetime(2014, 5, 12, 0, 0)}]
"
static files and django templates,"{% extends ""layout.html"" %}
{% load staticfiles %}
{% block references %}
    <link rel=""stylesheet"" href=""{% static ""myStylesheet.css"" %}"" type=""text/css"">
    {% include ""mySharedTemplate2.html"" with references=""True"" %}
    {% include ""mySharedTemplate3.html"" with references=""True"" %}
    {% include ""mySharedTemplate4.html"" with references=""True"" %}
{% endblock %}
...
{% include ""mySharedTemplate4.html"" with content=""True"" %}
{% include ""mySharedTemplate3.html"" with content=""True"" %}
{% include ""mySharedTemplate2.html"" with content=""True"" %}
...
"
Roulette program will not recognize correct guess. Why?,"from random import randint
from time import sleep

funds = 50



### Straight Up number bet = 35:1
### Odd/Even payout = 1:1

class RouletteTable(object):

    def __init__(self, wallet):
        self.wallet = wallet

    def spin(self, bets):
        print ""Spinning...""
        sleep(2)
        print ""The winner is...""
        sleep(1)
        winner = 25 #randint(0, 36) #FOR TESTING 
        print ""Number "", winner
        if winner in bets:
            return True

        else:
            print ""You bet on: "", bets
            print ""Better luck next time.""
            return False

    def game(self): 

        while self.wallet >= 0:
            print ""\n\nWelcome to Roulette.""
            print ""Test your luck, and place your bets!""
            print ""Current funds: $"", self.wallet
            print ""\n(1)Place bet or (2)Exit""
            choice = raw_input(""> "")

            if choice == ""1"":
                bets = []
                print '''\n\n\n
          __________
         [     0    ]
         [ 1][ 2][ 3]
         [ 4][ 5][ 6]
         [ 7][ 8][ 9]
         [10][11][12]
         [13][14][15]
         [16][17][18]
         [19][20][21]
         [22][23][24]
         [25][26][27]
         [28][29][30]
         [31][32][33]
         [34][35][36]
         [ODD] [EVEN]

        '''
                print ""How much will you bet (per number)?""
                bet_amount = int(raw_input(""> $""))
                print ""Type a number to bet on, and press Enter.""
                print ""When finished choosing, just press Enter.""
                while True:
                    print ""Funds: $"", self.wallet
                    print ""Current Bets: "", bets
                    number_choice = raw_input(""> "")
                    if number_choice != """":
                        bets.append(int(number_choice))
                        self.wallet -= bet_amount

                    else:
                        # start spin
                        did_win = self.spin(bets) 
                        # payout for bets
                        if did_win == True:
                            ammount = bet_amount*35
                            self.wallet += ammount
                            print ""You win $"", ammount


                        break

            if choice == ""2"":
                return self.wallet
                break

        if self.wallet == 0:
            print ""You're out of money!\n""

roulette = RouletteTable(funds)
funds = roulette.game()
"
Why do I have to put the project name when importing tasks when using Django with Celery?,"INSTALLED_APPS = (""someapp"", )
"
Tkinter Canvas move item to top level,"canvas.tag_raise(firstRect)
"
How to measure Python's asyncio code performance?,"@contextlib.contextmanager
def timeit(*, loop=None):
    start = time.time()
    with patch_select() as context:
        yield
    total = time.time() - start
    io_time = context.iotime    
    print(""IO time: {:.3f}"".format(io_time))
    print(""CPU time: {:.3f}"".format(total - io_time))
    print(""Total time: {:.3f}"".format(total))
"
Python string formatted in double qoutes for JS,">>> js_format(dodge)
'[""avenger|Avenger"", ""caliber|Caliber"", ""caravan|Caravan"", ""challenger|Challenger"", ""colt|Colt"", ""d150|D150"", ""d250|D250"", ""d350|D350"", ""dakota|Dakota"", ""dart|Dart"", ""daytona|Daytona"", ""durango|Durango"", ""durango-hybrid|Durango Hybrid"", ""dynasty|Dynasty"", ""grand-caravan|Grand Caravan"", ""intrepid|Intrepid"", ""journey|Journey"", ""magnum|Magnum"", ""monaco|Monaco"", ""neon|Neon"", ""nitro|Nitro"", ""omni|Omni"", ""raider|Raider"", ""ram-1500|Ram 1500"", ""ram-2500|Ram 2500"", ""ram-3500|Ram 3500"", ""ram-50|Ram 50"", ""ram-van|Ram Van"", ""ram-wagon|Ram Wagon"", ""ramcharger|Ramcharger"", ""shadow|Shadow"", ""sprinter|Sprinter"", ""srt-viper|SRT Viper"", ""spirit|Spirit"", ""stealth|Stealth"", ""stratus|Stratus"", ""viper|Viper"", ""w150|W150"", ""w250|W250"", ""w350|W350""]'
"
Parsing the result of ping using regex with python,"import csv
import re
from itertools import chain

with open('file') as f_input, open('output.csv', 'wb') as f_output:
    text = f_input.read()
    csv_output = csv.writer(f_output)

    for block in re.findall(r'Item Number:(.*?)\${5}', text, re.S):
        re_hostname =  re.search(r'host = (.*)', block)
        if re_hostname:
            data = re.findall(r'ttl=(\d+) time=([0-9.]+) ', block)
            csv_output.writerow([re_hostname.group(1)] + list(chain.from_iterable(data)))
"
how use alias in sqlachemy,"field1_count = func.count(Table1.field1)

result = session.query(Table1.field1, Table1.field2, field1_count).filter(
    Table1.user_id == self.user_id).filter(Table1.timestamp > self.from_ts).group_by(
    Table1.field1, Travelog.field2).order_by(desc(field1_count)).first()
"
How to Autoresize QLabel pixmap keeping ratio without using classes?,"class ScaledLabel(QtGui.QLabel):
    def __init__(self, *args, **kwargs):
        QtGui.QLabel.__init__(self)
        self._pixmap = QtGui.QPixmap(self.pixmap())

    def resizeEvent(self, event):
        self.setPixmap(self._pixmap.scaled(
            self.width(), self.height(),
            QtCore.Qt.KeepAspectRatio))
"
Formatting of MySQL data using python,"[3.6813, 3.6816, 3.6804, 3.6794, 3.6789, 3.6791]
"
How to multiply lists and set a single variable?,"In [5]: class Banana(object):
   ...:     pass
   ...: 

In [6]: lst = [[Banana()]*5 for _ in range(5)]

In [7]: [[id(elem) for elem in sublst] for sublst in lst]
Out[7]: 
[[139951176414824,
  139951176414824,
  139951176414824,
  139951176414824,
  139951176414824],
 [139951176415272,
  139951176415272,
  139951176415272,
  139951176415272,
  139951176415272],
 [139951176414096,
  139951176414096,
  139951176414096,
  139951176414096,
  139951176414096],
 [139951176414432,
  139951176414432,
  139951176414432,
  139951176414432,
  139951176414432],
 [139951176415496,
  139951176415496,
  139951176415496,
  139951176415496,
  139951176415496]]
"
matplotlib - No xlabel and xticks for twinx axes in subploted figures,"ax_2 = fig.add_subplot(222, sharex=None, sharey=None)
ax_22 = ax_2.twinx()
ax_2.set_xlabel(""AX2 X Lablel"")
ax_2.plot([1, 3, 5, 7, 9])

# Becomes...

ax_2 = fig.add_subplot(222, sharex=None, sharey=None)
ax_2.set_xlabel(""AX2 X Lablel"")
ax_2.plot([1, 3, 5, 7, 9])
ax_22 = ax_2.twinx()
"
Plotting in Python?,"randomnumbers = np.random.normal((mu*(price/10)), (v*(price/10)), days) #This variable generates a series of random numbers based on the normal distribution and in accordance with the return and volatility specified.
randomwalk    = [simAssetPrice[i-1] + randomnumbers[i] + k for i in range(1,days)]

plt.plot(randomwalk)
plt.ylabel('Price')
plt.show()
"
How to remove duplicates in card game- python,"hand = set()
while len(hand) < NUM_CARDS:
    hand.add((random.randint(2,14), random.randint(0, 3))
"
Remove odd elements from list in Python,"del lst[1::2]
"
Pandas: Return Hour from Datetime Column Directly,"    import pandas as pd
    pd.concat([sales, pd.DataFrame(hours, index=sales.index)], axis = 1)
"
python auto install package,"pip install -r requirements.txt
"
ODE integration with discretized values,"import numpy
from scipy import integrate
yvalues = numpy.arange(-2,3,0.1)
fvalues = - numpy.sin(yvalues)
f = lambda t,y: numpy.interp(y, yvalues, fvalues)
r = integrate.ode(f)
r.set_initial_value(1)
t1 = 10
dt = 0.1
while r.successful() and r.t < t1:
    r.integrate(r.t+dt)
    print r.t, r.y
"
py2neo: performance and return values of various commands,"import logging
logging.basicConfig(level=logging.DEBUG)
"
Reversing (or simplifying) a Cartesian product?,"def compress_list(alist):
    """"""Compress a list of colon-separated strings into a more compact
    representation.
    """"""
    components = [ss.split(':') for ss in alist]

    # Check that every string in the supplied list has the same number of tags
    tag_counts = [len(cc) for cc in components]
    if len(set(tag_counts)) != 1:
        raise ValueError(""Not all of the strings have the same number of tags"")

    # For each component, gather a list of all the applicable tags. The set
    # at index k of tag_possibilities is all the possibilities for the
    # kth tag
    tag_possibilities = list()
    for tag_idx in range(tag_counts[0]):
        tag_possibilities.append(set(cc[tag_idx] for cc in components))

    # Now take the list of tags, and turn them into slash-separated strings
    tag_possibilities_strs = ['/'.join(tt) for tt in tag_possibilities]

    # Finally, stitch this together with colons
    return ':'.join(tag_possibilities_strs)
"
Fitting a straight line to a log-log curve in matplotlib,"coefficients = numpy.polyfit(logB, logA, 1)
polynomial = numpy.poly1d(coefficients)
ys = polynomial(b)
plt.plot(logB, logA)
plt.plot(b, ys)
"
How to disregard the NaN data point in numpy array and generate the normalized data in Python?,"import numpy as np

a = np.random.rand(10)            # Generate random data.
a = np.where(a > 0.8, np.nan, a)  # Set all data larger than 0.8 to NaN

a = np.ma.array(a, mask=np.isnan(a)) # Use a mask to mark the NaNs

a_norm  = a / np.sum(a) # The sum function ignores the masked values.
a_norm2 = a / np.std(a) # The std function ignores the masked values.
"
Check if matrix elements are continuous,"matrix = [
    list('001001'),
    list('010000'),
    list('001110'),
    list('110000'),
]

starting_point = find_a_1()

walk_the_matrix(starting_point)

if find_1() is None:
    print(""The matrix is connected"")
else:
    print(""The matrix is not connected"")
"
Efficiently remove rows/columns of numpy image array,"In [31]: a = np.zeros((5000, 5000), dtype='d')
In [32]: whos
Variable   Type       Data/Info
-------------------------------
a          ndarray    5000x5000: 25000000 elems, type `float64`, 200000000 bytes (190 Mb)
In [33]: a = a[:, 3000:]
In [34]: whos
Variable   Type       Data/Info
-------------------------------
a          ndarray    5000x2000: 10000000 elems, type `float64`, 80000000 bytes (76 Mb)
"
How to use for loop to print cards?,"import itertools as it

rank_string = (""ace"",""two"",""three"",""four"",""five"",""six"",""seven"",""eight"",""nine"",""ten"",""jack"",""queen"",""king"")
suit_string = (""clubs"",""diamonds"",""hearts"",""spades"")

print 'The cards are:'
for i, card in enumerate(it.product(rank_string, suit_string)):
    print i, '{0[1]} of {0[0]}'.format(card)
"
Finding the surrounding sentence of a char/word in a string,"highlightIndices = [100,169]
subtractFromIndex = 0
for sentence in sent_tokenize(paragraph):
    for index in highlightIndices:
        if 0 < index - subtractFromIndex < len(sentence):
            sentencesWithHighlights.append(sentence)
            break
    subtractFromIndex += len(sentence)
"
3D distance vectorization,"    return  np.sum(p[np.isfinite(p)])
"
Getting number of messages in a RabbitMQ queue,"<METHOD(['channel_number=1', 'frame_type=1', ""method=<Queue.DeclareOk(['consumer_count=0', 'message_count=3', 'queue=celery'])>""])>
"
how can I speed up simultaneous read and write of multiprocessing queues?,"dan@dan:~$ ./mult_zmq.py 
Duration: 14.0204648972
Messages Per Second: 71324.3110935
dan@dan:~$ ./mult_queue.py 
Duration: 27.2135331631
Messages Per Second: 36746.4229657
"
Select first word of list of strings and concat last char of the rest of items on list in linq,"new []{""ACCGA"", ""CCGAA"", ""CGAAG"", ""GAAGC"", ""AAGCT""}.Aggregate((a,b)=>a+b.Last())
"
Fastest way to shift a Numpy array,"def syf1(A, E=True):
    out = np.empty_like(A)
    out[:-1] = A[1:] - A[:-1] # Or np.diff(my_array,axis=0)
    if E == True:
        out[-1] = 0
    else:
        out[-1] = -A[-1]
    return out
"
Faster alternative to for loop in for loop,"data = {
 '0a': [4, []],
 '1f': [9, []],
 '27': [3, []],
 '32': [8, []],
 '3f': [6, []],
 '47': [1, []],
 '7c': [2, []],
 'a1': [0, []],
 'c8': [7, []],
 'e2': [5, []]
}
"
How does one update a FITS data array with PyFITS?,"new0.data += new1.data
print new0.data
"
How to compile text as a function using AST?,"Expression(body=BinOp(left=Num(n=2), op=Add(), right=Num(n=2)))
"
Finding tuple in the list of tuples (sorting by multiple keys),"t = [('1', 3.0, 6), ('2', 2.0, 2), ('3', 2.0, 5), ('4', 4.0, 2), ('5', 2.0, 5),
     ('6', 3.0, 6), ('7', 3.0, 5), ('8', 2.0, 5), ('9', 3.0, 5), ('10', 3.0, 5)]

>>> sorted(t, key=lambda i: (i[1], -i[2]))
[('3', 2.0, 5), ('5', 2.0, 5), ('8', 2.0, 5), ('2', 2.0, 2), ('1', 3.0, 6),
 ('6', 3.0, 6), ('7', 3.0, 5), ('9', 3.0, 5), ('10', 3.0, 5), ('4', 4.0, 2)]
"
"How to allow UltimateListCtrl to rearrange itself, wxpython","class MyList(ULC.UltimateListCtrl, listmix.ColumnSorterMixin):
    def __init__(self, parent, data):
        ULC.UltimateListCtrl.__init__(self, parent, agwStyle=ULC.ULC_REPORT | ULC.ULC_HAS_VARIABLE_ROW_HEIGHT)
        self.data = data
        self.IDoMyself()
        self.Bind(wx.EVT_LIST_COL_CLICK, self.OnColumn)

    def IDoMyself(self):
        self.itemDataMap = self.data
        listmix.ColumnSorterMixin.__init__(self, len(self.data))

        self.InsertColumn(0, ""A"")      # you should generalize this for any size
        self.InsertColumn(1, ""B"")
        self.InsertColumn(2, ""C"")

        for key, data in self.data.items():
            index = self.Append(data)
            self.SetItemData(index, key)

    def OnColumn(self, e):
        self.Refresh()
        e.Skip()

    def GetListCtrl(self):
        return self
"
Count numbers in range which sum of digits is same as product,">>> from itertools import combinations_with_replacement, permutations
>>> from operator import mul
>>> from functools import reduce
>>> results = set()
>>> for digits in combinations_with_replacement(range(1, 10), 5):
...     if sum(digits) == reduce(mul, digits):
...         results.update(int(''.join(map(str, p))) for p in permutations(digits))
... 
>>> len(results)
40
>>> for result in sorted(results):
...     print(result)
... 
11125
11133
11152
11215
11222
11251
11313
11331
11512
11521
12115
12122
12151
12212
12221
12511
13113
13131
13311
15112
15121
15211
21115
21122
21151
21212
21221
21511
22112
22121
22211
25111
31113
31131
31311
33111
51112
51121
51211
52111
"
Find path from a list of tuples in Python,"weight, *path = get_path_and_weight(data, ""Abe"", ""Dan"")

print(path, ""with weight"", weight)
"
"Python - Human sort of numbers with alpha numeric, but in pyQt and a __lt__ operator","1
1a
1a2
2
3
9
9.9
10
10a
11
100
100ab
ab
aB
AB
"
Creating lists and dictionaries from JSON data in Python,"from_this = {""version"":""0.0"",""response"":[{""macAddress"":""88:5A:92:A4:E7:C8"",""networkDeviceId"":""e15789bd-47df-4df9-809f-daf81d15ff2a"",""lineCardId"":""e5bddd56-2194-4b83-8ae5-597893800051"",""lastUpdated"":""2014-06-03 01:39:19.855491-07"",""platformId"":""C897VA-K9"",""vendor"":""Cisco"",""numUpdates"":1,""interfaceCount"":""10"",""portRange"":""ATM0, ATM0.1, BRI0, BRI0:1-2, Dialer1, Ethernet0, GigabitEthernet0-8, LISP0, Loopback0-1, NVI0, Virtual-Access1, Virtual-Template1, Vlan1"",""roleSource"":""auto"",""chassisType"":""C800"",""softwareVersion"":""15.4(2)T"",""upTime"":""2 weeks, 3 days, 18 hours, 2 minutes"",""imageName"":""c800-universalk9-mz.SPA.154-2.T.bin"",""memorySize"":""988236K/60339K"",""managementIpAddress"":""192.168.2.1"",""family"":""C897VA-K9"",""type"":""UNKNOWN"",""serialNumber"":""FGL175124DX"",""role"":""Unknown"",""hostname"":""chaney-xtr""}, {""macAddress"":""88:5A:92:A4:E7:C8"",""networkDeviceId"":""e15789bd-47df-4df9-809f-daf81d15ff2a"",""lineCardId"":""e5bddd56-2194-4b83-8ae5-597893800051"",""lastUpdated"":""2014-06-03 01:39:19.855491-07"",""platformId"":""C897VA-K9"",""vendor"":""Cisco"",""numUpdates"":1,""interfaceCount"":""10"",""portRange"":""ATM0, ATM0.1, BRI0, BRI0:1-2, Dialer1, Ethernet0, GigabitEthernet0-8, LISP0, Loopback0-1, NVI0, Virtual-Access1, Virtual-Template1, Vlan1"",""roleSource"":""auto"",""chassisType"":""C800"",""softwareVersion"":""15.4(2)T"",""upTime"":""2 weeks, 3 days, 18 hours, 2 minutes"",""imageName"":""c800-universalk9-mz.SPA.154-2.T.bin"",""memorySize"":""988236K/60339K"",""managementIpAddress"":""192.168.2.2"",""family"":""C897VA-K9"",""type"":""UNKNOWN"",""serialNumber"":""XGL175124D3"",""role"":""Unknown"",""hostname"":""chaney-xtr2""}]}

dict1 = {}
dict2 = {}

for response_item in from_this['response']:
    dict1[response_item['managementIpAddress']] = response_item['hostname']
    dict2[response_item['managementIpAddress']] = response_item['platformId']
"
Basic Numpy array value assignment,"def ldlt_np(arr) :
    rows, cols = arr.shape
    tmp = 1 / np.diag(arr) # this is a float array
    mask = np.tril_indices(cols)
    ret = arr * tmp[:, None] # this will also be a float array
    ret[mask] = arr[mask]

    return ret

>>> A = np.array([[2,-1,0],[-1,2,-1],[0,-1,2]])
>>> ldlt_np(A)
array([[ 2. , -0.5,  0. ],
       [-1. ,  2. , -0.5],
       [ 0. , -1. ,  2. ]])
"
Remove empty 'rows' and 'columns' from 3D numpy pixel array,"In [1]: import numpy as np

In [2]: im = np.array([[0,0,0,0,0,0],
   ...:                [0,0,1,1,1,0],
   ...:                [0,1,1,0,1,0],
   ...:                [0,0,0,1,1,0],
   ...:                [0,0,0,0,0,0]])
"
Access parent object from submodule,"result = myDBobj.Driving_GetTachometerReading()
"
How to plot contours from multidimensional data in MatPlotLib (NumPy)?,"A, B, C, D = (row for row in m)
"
python sort list based on key sorted list,"somelist.sort(key=predefined_list.index)
"
Django version of Zend's Layouts?,"{% extends ""../templates/app/base.html""%}
{% block content %}
words on my page
{% endblock %}
"
python - find occurrences of strings from a reference file within an input file,"ref_list = map(lambda x: x.strip("" \t\n""),ref_list)
input_list = map(lambda x: x.strip("" \t\n""),input_list)
"
Why python designed as str(None) return 'None' instead of an empty string?,"result = foo() # foo will return None if failure 
if result:
    # deal with result.
    pass
"
Can scraping be applied to this page which is actively recalculating?,"import time
from selenium import webdriver

driver = webdriver.Firefox()
driver.get(""http://www.satview.org/?sat_id=41186U"")


while True:
    location = driver.find_element_by_css_selector(""#sat_latlon .texto_track2"").text
    latitude, longitude = location.split(""\n"")[:2]

    print(latitude, longitude)

    time.sleep(1)
"
Portfolio rebalancing with bandwidth method in python,"mask = (df['ratio'] >= 1+tol) | (df['ratio'] <= 1-tol)
"
Pandas compare 2 dataframes by specific rows in all columns,"   8_1  8_2  24_3  24_1  c_1trial  14_2  14_1  28_1  24_2  8_3
0    4    2    12    34         1    65     6     1    51   22
1    3    3    71    37         2     3     5     6    20    1
2    6   11    34    46         3     6     3     3     1    6
3    8   55    94   918         4    78     7     2    34   32
4    3    3     1     0         8     9     3     6    12    5
5    5    7    73    37         4     2    23    55    59    6
6   66   33    46    91         3    45    27    22    78    4
7   32   65    51    12         8     6     3     6     6    3
8   84   34    21    68         7     7    11    23   101  898
"
including external python libraries when uploading python files to github,"virtualenv env
"
If statement issues in Python,"def velocity():
    #Rows omitted for succinctness' sake

    if 'Ux_0' in lf:
        print ""Entered""
        plt.plot(time_x, value_x, color = 'r', label = 'x-vel')
    elif 'Uy_0' in lf:
        print ""Entered""
        plt.plot(time_y, value_y, color = 'b', label = 'y-vel')
    elif 'Uz_0' in lf:
        print ""Entered""
        plt.plot(time_z, value_z, color = 'g', label = 'z-vel')

    return (time_x, value_x, lf)  # Do Padraic's fixes here!
    return (time_y, value_y, lf)
    return (time_z, value_z, lf)

def save_velocity():
    plt.legend()
    plt.savefig(os.path.join(plotsDir, 'velocity'), bbox_inches='tight', dpi=100)
    plt.close() 

for path, dirs, files in os.walk(logsDir, topdown=False):
    for lf in files:
        #Rows omitted for succinctness' sake
        if 'Uz_0' in lf:
            logFile = os.path.join(path, lf)
            data_z = np.loadtxt(logFile)
            time_z, value_z = data_z[:,0], data_z[:,1]
            (time_z, value_z, lf) = velocity()

save_velocity()
"
Export Env variable from Java,"class Test {
    public static void main(String[] args) throws Exception {
        System.out.println(System.getenv(""PATH""));
        Runtime.getRuntime().exec(""tp"").waitFor();
    }
}
"
"File downloaded always blank in Python, Django",">>> import StringIO
>>> s = StringIO.StringIO()
>>> s.write('hello')
>>> s.readlines()
[]
>>> s.seek(0)
>>> s.readlines()
['hello']
"
Python Plugin Capbility,"MOTD=""HI""
def Run():
    global MOTD
    print ""API MOTD: ""+MOTD
"
Generate random number outside of range in python,"import random

screen_width = 1000
screen_height = 800
rect_x = 500
rect_y = 250
rect_width = 100
rect_height = 75

valid_points = []
for x in range(screen_width):
    if rect_x <= x < (rect_x + rect_width):
        for y in range(rect_y):
            valid_points.append( (x, y) )
        for y in range(rect_y + rect_height, screen_height):
            valid_points.append( (x, y) )
    else:
        for y in range(screen_height):
            valid_points.append( (x, y) )

for i in range(10):
    rand_point = random.choice(valid_points)
    print(rand_point)
"
Change collection class key of reference in association_proxy,"class Event(ManagerBase):
    """"""Defines an event.""""""

    __tablename__ = 'eventing_events'

    id = Column(Integer, primary_key=True)
    device_id = Column(Integer, ForeignKey(EventingDevice.id), nullable=False)
    device = relation(EventingDevice)
    type_id = Column(Integer, ForeignKey(EventType.id), nullable=False)
    type = relation(EventType)
    datetime = Column(DateTime, nullable=False)
    summary = Column(String(500))

    fields = dict_proxy(""field_values"", ""name"", ""value"")
"
Allowing the use of the token `class` as a named parameter in a method signature,"def _createTag(tag, **attributes):
    out = ""<"" + tag
    if attributes:
        for attr, value in attributes.items():
            out += "" "" + attr.rstrip('_') + ""=\"""" + value + ""\""""
    out += "">""
    return out
"
How to efficiently match regex in python,"import re
regex = re.compile(pattern)
check = ['123-333-1111', '(123)111-2222', '123-2221111', '1232221111']
for number in check:
    match = regex.match(number)
    print number, bool(match)
    if match:
        # show the numbers
        print 'nums:', filter(lambda x: x and x.isalnum(), match.groups())

>>> 
123-333-1111 True
nums: ('123', '333', '1111')
(123)111-2222 True
nums: ('123', '111', '2222')
123-2221111 True
nums: ('123', '222', '1111')
1232221111 False
"
What' the meaning of the brackets in the class?,"class OldStyleCar:
    ...
"
Faster way to build a matrix of expected frequencies from a sparse matrix of counts,"def orig_efreqs(m):

    col_total = m.sum(axis=0)
    row_total = m.sum(axis=1)
    n = int(col_total.sum(axis=1))

    A = sparse.coo_matrix(m)
    for i,j in zip(A.row,A.col):
        m[i,j]= col_total.item(j)*row_total.item(i)/n

    return m
"
Read files and count lengths for dictionary variable in python,"input_files = ['file_1.txt', 'file_2.txt', ...]
outputs = {}
for file_name in input_files:
  outputs[file_name] = GetOutput(file_name)
"
Filter information of a txt file by regular expressions,"^Sequence:[^|]*\|(?P<hitsid>[^|]*)\|\S*\s*(?P<protein>[^][]*?)\s*\[(?P<organism>[^][]*)][\s\S]*?\nE-value:\s*(?P<evalue>.*)
"
Python: Find-replace on lists,"def list_replace(lst, source_sequence, target_sequence, limit=0):
    if limit < 0:
        raise Exception('A negative replacement limit is not supported')
    source_sequence_len = len(source_sequence)
    target_sequence_len = len(target_sequence)
    original_list_len = len(lst)
    if source_sequence_len > original_list_len:
        return list(lst)
    new_list = []
    i = 0
    replace_counter = 0
    while i < original_list_len:
        suffix_is_long_enough = source_sequence_len <= (original_list_len - i)
        limit_is_satisfied = (limit == 0 or replace_counter < limit)
        if suffix_is_long_enough and limit_is_satisfied:
            if lst[i:i + source_sequence_len] == source_sequence:
                new_list.extend(target_sequence)
                i += source_sequence_len
                replace_counter += 1
                continue
        new_list.append(lst[i])
        i += 1      
    return new_list
"
how to read numpy 2D array from string?,"
'[[ 0.5544  0.4456], [ 0.8811  0.1189]]'
"
How do I keep one menu across multiple Django apps?,"{% extends ""app_one/app_base.html"" %}
"
Adjacent cells of multiple cell patches in a numpy array,"b, c = ndimage.label(a)
e = numpy.zeros(a.shape)
for i in xrange(c):

    e += ndimage.distance_transform_cdt((b == i + 1) == 0) == 1

print e
"
Delete and index and associated data from a pandas dataframe,"In [13]: pd.DataFrame(index=df.index.droplevel(2).drop_duplicates(), columns=df.columns)
Out[13]:
                a    b
0hr  0.01um   NaN  NaN
     0.1um    NaN  NaN
     Control  NaN  NaN
24hr 0.01um   NaN  NaN
     0.1um    NaN  NaN
     Control  NaN  NaN
"
List assignment with [:],"lst[:] = whatever
"
Python filter nested dict given list of key names,"fltr(x, [])
"
Permuting numpy's 2d array indexes,"def permutateIndexes(array, perm):
    return array[np.ix_(*(perm[:s] for s in array.shape))]
"
get slice from multi-dimensions in python,"x = func(a, b, c)
"
how to implement a list of paragraph word lengths using a for loop,"WordLenLi = [len(word) for word in st.split()]
print(WordLenLi)
"
How to hide <matplotlib.lines.Line2D> in IPython notebook,"_ = plt.plot(a)
"
Is there any fastest way to execute For loops in python?,"a = D1[L1.astype(bool)].sum()  
b = D2[L2.astype(bool)].sum()
"
Filtering for row-wise patterns in columns with a sequence of 0 and 1,"res = {col: t[col][t[col] != 0] for col in df.columns}
"
How to do shortest path algorithm for unweighted graph?,"In [34]: nx.shortest_path(g, source='b',target='c')
Out[34]: ['b', 'a', 'c']
"
Automated Installation of Django Using Shell Script,"python ~/myproject/manage.py runserver;
"
How to use matplotlib tight layout with Figure?,"import matplotlib.pyplot as plt

#-- In your case, you'd do something more like:
# from matplotlib.figure import Figure
# fig = Figure()
#-- ...but we want to use it interactive for a quick example, so 
#--    we'll do it this way
fig, axes = plt.subplots(nrows=4, ncols=4)

for i, ax in enumerate(axes.flat, start=1):
    ax.set_title('Test Axes {}'.format(i))
    ax.set_xlabel('X axis')
    ax.set_ylabel('Y axis')

plt.show()
"
Scrapy - Retrieve spider object in dupefilter,"# /settings.py

DUPEFILTER_CLASS = 'myproject.dupefilters.MyRFPDupeFilter'
SCHEDULER = 'myproject.scheduler.MyScheduler' 
"
Replacing column values in an array using putmask and preserving order,"import numpy as np
x = np.array([[  1.,   2.],
        [  3.,   4.],
        [  5.,   6.],
        [  7.,   8.],
        [  9.,  10.]])
mask = np.array([[ True, False],
           [ True, False],
           [ True, False],
           [ True, False],
           [ True, False]])
y = np.array([ 21.,  22.,  23.,  24.,  25.])
x[mask]=y
print(x)
# [[ 21.   2.]
#  [ 22.   4.]
#  [ 23.   6.]
#  [ 24.   8.]
#  [ 25.  10.]]
"
Scapy: How to implement a list of conditional fields?,"from scapy.all import Packet, IntField, IntEnumField, FieldLenField, \
PacketListField, StrNullField, ConditionalField, Padding, bind_layers

class RecordLONG(Packet):
    fields_desc = [
        IntField(""data_long_record"", 0),
    ]

class RecordSZ(Packet):
    fields_desc = [
        StrNullField(""data_sz_record"", """"),
    ]

bind_layers(RecordLONG, Padding)
bind_layers(RecordSZ, Padding)

class MainPacket(Packet):
    fields_desc = [
        IntEnumField(""record_type"", 1, {
            3:""DATA_LONG"",            
            8:""DATA_SZ""}),
        FieldLenField(""record_nb"", 0, fmt=""I"", count_of=""records""),
        ConditionalField(PacketListField(""records"", None, RecordLONG, count_from=lambda pkt:pkt.record_nb), lambda pkt: pkt.record_type == 3),
        ConditionalField(PacketListField(""records"", None, RecordSZ, count_from=lambda pkt:pkt.record_nb), lambda pkt: pkt.record_type == 8),
    ]

if __name__ == ""__main__"":
    p1 = MainPacket(""\x00\x00\x00\x03"" # Type is DATA_LONG
               ""\x00\x00\x00\x04"" # 4 records
               ""\x00\x00\x00\x01"" 
               ""\x00\x00\x00\x02""
               ""\x00\x00\x00\x03""
               ""\x00\x00\x00\x04"")
    p1.show()
    p2 = MainPacket(""\x00\x00\x00\x08"" # Type is DATA_SZ
               ""\x00\x00\x00\x02"" # 2 records
               ""Hello\x00""
               "" world.\x00"")
    p2.show()
"
How do you @rpc _returns polymorphic types in spyne?,"class SomeService(ServiceBase):
    @rpc(Unicode(values=['A', 'B', 'C']), _returns=GenericA)
    def get_some_a(self, type_name):
        # (...)
"
Yield Only Once Per Iteration,"def type_convert(data):
    for item in data:
        try:
            yield int(item)
            continue
        except (ValueError, TypeError) as WrongTypeError:
            pass
        try:
            yield float(item)
            continue
        except (ValueError, TypeError) as WrongTypeError:
            pass
        yield item


for a in type_convert(['a','1','1.0']):
    print (a)
"
Capture-and-yield in a list comprehension,"for foo in generator:
    yield directories.append(foo['name']) or foo
"
Include Python scripts with Plone Add-on,"from Products.Five import BrowserView
from plone.app.kss.plonekssview import PloneKSSView
class DDActions(PloneKSSView):
    def getTableColumns(self, table, currValue, currLabel):
        columns = self.context.getColumnNames(table)
        for (field, curr) in [('valueColumn', currValue), ('labelColumn',currLabel)]:
            self.replaceSelect(field, columns, (curr or self.context[field]))
"
Equivalent of named tuple in NumPy?,">>> data0 = np.array(('2011-09-20', 0), dtype=[('start date', 'S11'), ('n', int)])
>>> data0.ndim
0
"
How to find dict value by Key in list,">>> lst = [
...     {'Title1': {'Link': 'ZbELsW_tyWA', 'Episode': 'Episode Name'}},
...     {'Title2': {'Link': 'ZbELsW_tyWA', 'Episode': 'Episode Name2'}},
... ]
>>> searchtitle = 'Title1'
>>> [d[searchtitle] for d in lst if searchtitle in d]
[{'Episode': 'Episode Name', 'Link': 'ZbELsW_tyWA'}]
>>> next((d[searchtitle] for d in lst if searchtitle in d), None)
{'Episode': 'Episode Name', 'Link': 'ZbELsW_tyWA'}
"
Modifying a subset of rows in a pandas dataframe,"df.ix[df.A==0, 'B'] = df.ix[df.A==0, 'B'] / 2
"
Check a generated string against a preset string in python,">>> if set(a).intersection(b):
...     print(""yep!"")
... 
yep!
>>> if any(i in b for i in a):
...     print(""also yep, but slow"")
... 
also yep, but slow
>>> bset = set(b)
>>> if any(i in bset for i in a):
...     print(""still yep, not so bad"")
... 
still yep, not so bad
"
Parsing HTML5 data-* attribute values with Selenium in Python,"<rect rx=""3"" ry=""3"" width=""76%"" height=""40"" transform=""translate(0,40)"" data-value=""75"" class=""bar"">bar1</rect>
<rect rx=""3"" ry=""3"" width=""76%"" height=""40"" transform=""translate(0,40)"" data-value=""76"" class=""bar"">bar2</rect>
"
How do Twisted python Factory and Protocol interfaces work?,"class Connector(TCPConnector):
    def _makeTransport(self):
        return Client(self.host, self.port, self.bindAddress, self,
                      self.reactor)
"
Fill Django Form Field Data with Db Data,"form = EditEventForm(instance=event)
"
Python UTF-8 conversion,"import re
def touni(match):
    return unichr(int(match.group(1), 16))

source = '\\x{4e8b}\\x{696d}'
print(re.sub(r'\\x\{([\da-f]+)\}', touni, source))
"
Python Regex Either/Or within Line,"for line in output.split(""\n""):
    value = None
    metric = """"
    for word in line.split():
        if word.isdigit():
            value = int(word)
        else:
            metric = ""{} {}"".format(metric, word)
    print ""{} => {}"".format(metric.strip("":""), value)
"
How to check whether MFA is enabled for root account in AWS using boto?,"if summary['AccountMFAEnabled']:
    # MFA is enabled
else:
    # MFA is not enabled
"
How to convert unicode string into list using pandas python?,">>> a=[u'1,2,3'] 
>>> a
[u'1,2,3']          # This a list with one string: '1,2,3'
>>> a = a[0]
>>> a
u'1,2,3'            # I get the string from the list above
>>> a.split(',')    # I split this string on ','
[u'1', u'2', u'3']  # this is still a list of strings, 
                    # so I run int(x) on each element
                    # using a list comprehension below

>>> [int(x) for x in [u'1,2,3'][0].split(',')]
[1, 2, 3]           # the result you want
"
"By dumping a python list, creating a python "".py"" file which returns the same python list","my_array = np.load('my_array.npy')
"
printing and formatted list in python,"print 
print ""Mean: {:11.2f}      {:12.3f}"".format(-0.026, 7.26)
print ""Std : {:11.2f}      {:12.3f}"".format(2.918, 6.3)
"
Text processing with two files,"file1 = dict(l.strip().split(':') for l in open('file1', 'r'))
"
Append length of string for each string in list,"def add_len(strlist):
    return [(s, len(s)) for s in strlist]
"
Merge multi-indexed with single-indexed data frames in pandas,"df1 = pd.DataFrame([['a', 'x', 0.123], ['a','x', 0.234],
                    ['a', 'y', 0.451], ['b', 'x', 0.453]],
                   columns=['first', 'second', 'value1']
                   ).set_index(['first', 'second'])
df2 = pd.DataFrame([['a', 10],['b', 20]],
                   columns=['first', 'value']).set_index(['first'])

firsts = df1.index.get_level_values('first')
df1['value2'] = df2.ix[firsts].values

In [5]: df1
Out[5]: 
              value1  value2
first second                
a     x        0.123      10
      x        0.234      10
      y        0.451      10
b     x        0.453      20
"
Code a loop on a list of delimiters?,"    (d1|d2|d3|d4|d25)(.*?)(?=d1|d2|d3|d4|d25)
"
How to set environment variables and call a perl script with parameters in python subprocess.popen?," myenv = {'MYDIR' : 'C:\This\this\here', using backslash
 '%DIR%\bin;%PATH%'} using slash
"
"Best Pythonic way to replace any non-A-Z, non numbers, with a dash",">>> re.sub(r'[^\w-]+', '-', my_str)
'1-123_-ABC_NN-_XX-154440480-YVH-ADXX-503-TCCTGA-503-TATCCTCT-154440480'
"
Deep copy of DataFrame does not remove columns,"In [9]: data2.columns = pd.MultiIndex.from_tuples(data2.columns.values)

In [10]: data2
Out[10]:
          A
          a         b
0  0.050503  0.345575
1  1.152101  0.893495

In [11]: data2.columns.levels
Out[11]: FrozenList([[u'A'], [u'a', u'b']])
"
How to edit source csv file data using pandas,"In [4]:
df = pd.DataFrame({'country':['x', 'x ','y','z','z','z'], 'branch':list('abcdef'), 'no_of_employee':[30,20,30,40,10,15]})
df

Out[4]:
  branch country  no_of_employee
0      a       x              30
1      b      x               20
2      c       y              30
3      d       z              40
4      e       z              10
5      f       z              15

In [9]:
df['country'] = df['country'].str.strip()
df.set_index(['country', 'branch']).sum(level=0)

Out[9]:
         no_of_employee
country                
x                    50
y                    30
z                    65
"
how to create all zero dataframe in Python," import numpy
 a = numpy.zeros(shape=(3,24))
 df = pd.DataFrame(a,columns=['col1','col2', etc..])
"
Python: can a class instance evaluate to any type?,"import math

class Vector(tuple):
    def magnitude(self):
        return math.sqrt( self[0]*self[0]+self[1]*self[1]+self[2]*self[2] )
"
Sparse matrixes for matrix-vector product in PageRank computation,"P∙x = B∙x + 1/n * e∙d.T∙x = B∙x + 1/n * [[d.T∙x] * n]
"
BeautifulSoup data scrapping and database,"[{'score': u'2 - 2', 'team1': u'CSKA Moscow', 'team2': u'Manchester City'},
 {'score': u'3 - 0', 'team1': u'Zenit St. Petersburg', 'team2': u'Standard Liege'},
 {'score': u'4 - 0', 'team1': u'APOEL Nicosia', 'team2': u'AaB'},
 {'score': u'3 - 0', 'team1': u'BATE Borisov', 'team2': u'Slovan Bratislava'},
 {'score': u'0 - 1', 'team1': u'Celtic', 'team2': u'Maribor'},
 {'score': u'2 - 0', 'team1': u'FC Porto', 'team2': u'Lille'},
 {'score': u'1 - 0', 'team1': u'Arsenal', 'team2': u'Besiktas'},
 {'score': u'3 - 1', 'team1': u'Athletic Bilbao', 'team2': u'SSC Napoli'},
 {'score': u'4 - 0', 'team1': u'Bayer Leverkusen', 'team2': u'FC Koebenhavn'},
 {'score': u'3 - 0', 'team1': u'Malmo FF', 'team2': u'Salzburg'},
 {'score': u'1 - 0', 'team1': u'PFC Ludogorets Razgrad *', 'team2': u'Steaua Bucuresti'}]
"
For loops clarity,"def bar(a):
    return [ x**3 for x in a ]
"
python read -> analyze -> print multiple files,"filenames = ['file_AA.dat', 'file_AB.dat', 'file_AC.dat', 'file_BA.dat', 'file_BB.dat', 'file_BC.dat']

for filename in filenames:
    with open(filename, 'r') as input_file:
        # Do a lot, lot of analysis for lots of rows and columns :P

    with open('output_%s' % filename, 'w') as output_file:
        # Do some for loop for writing and calculation
"
How do I make relative importing work in Python using Eclipse with PyDev?,"os.path.dirname(os.getcwdu())
"
Zipping dynamic files in App Engine (Python),"z.writestr(""site/foo/hello/index.html"", my_data)
"
What is the most efficient way to search nested lists in python?,"for sublist in mylist:
   for elem in sublist
"
How to pass string as command line argument in python using C#,"python myscript.py ""Rahul done good""
"
split a list in python,"def generator_overlap_split_list(l,s):
    l2 = []
    for i in l:
        if i in s:
            yield l2
            l2 = []
        l2.append(i)
    if l2: yield l2
"
Generating random string of seedable data,"In [30]: %time generateRandomString(1000000)
Wall time: 554 ms
<and then output>
"
Docopt: options after repeating elements are interpeted as repeating elements,"% farmersmarket.py buy eggs 100 2 -p 0.25
"
"Pandas rolling sum, variating length","rng = range(1,29)
dates = pd.date_range('1/1/2000', periods=len(rng))
r = pd.DataFrame(rng, index=dates, columns=['A'])
r2 = r.resample(""1w"", how={'A': np.sum})
"
Python equivalent of C# Enum.HasFlag,"value & flag == flag
"
Tkinter: creating an arbitrary number of buttons/widgets,"buttons = dict()
for k in range(len(info)):
    buttons[k] = Button(top, text=info[k], command=lambda: my_function(buttons[k]))
"
mapping in SD in python,"dict(zip(a, b))
"
How to sort .csv file values by combining like strings using python3,"WITH_DATA_GENERATION=1 python3 group_by_trailing_pk2.py
"
Finding out exact match in python,"wordlist = ['stardictionaries','hop','stardicto',
            'stardictionaria', 'jumper',
            'gedit','leafpad','qstardict',
            'stardictionary','stardict',]

def seurch1(deb,wordlist):
    for item in wordlist:
        if item.startswith(deb):
            yield item

def seurch2(deb,wordlist):
    L = len(deb)
    for item in wordlist:
        if item[0:L]==deb:
            yield item

from pprint import pprint

pprint( list(seurch1('stardict',wordlist)) )
print
pprint( sorted(seurch1('stardict',wordlist),key=len) )  

print '--------------------'

pprint( list(seurch2('stardict',wordlist)) )
print
pprint( sorted(seurch2('stardict',wordlist),key=len) )
"
how to merge file lines having the same first word in python?,"import sys
if ""__main__"" == __name__:


    new_lines = dict()
    # start reading file
    with open(sys.argv[1]) as a:

        # iterate file by lines - removing newlines
        for a_line in a.read().splitlines():

            # candidate is first word in every sentence
            candidate = a_line.split()[0] # split on whitespace by default

            # dictionary keys are previous candidates
            if candidate in new_lines.keys():

                # word already included
                old_line = new_lines[candidate]
                new_lines[candidate] = ""%s %s"" % (old_line, a_line)

            else:

                # word not included
                new_lines[candidate] = a_line


# now we have our dictionary. print it (or do what you want with it)
for key in new_lines.keys():
    print ""%s -> %s"" % (key, new_lines[key])
"
get last insert ID,"Dropzone.options.myDropzone = {
  init: function() {
    this.on(""success"", function(file, response) {
      #alert(response)  
    });
"
Convert phrases in HTML to links with Python,"import re

content = ""...And this can be accomplished with the Awesome Method. Blah blah blah....""
links = [('awesome method', '/path/to/awesome-method')]

for keyphrase, url in links:
    content = re.sub('(%s)' % keyphrase, r'<a href=""%s"">\1</a>' % url, content, flags=re.IGNORECASE)

# content:
# '...And this can be accomplished with the <a href=""/path/to/awesome-method"">Awesome Method</a>. Blah blah blah....'
"
Count word occurrence in a list of strings,"from collections import Counter
import re

counts = Counter()
words = re.compile(r'\w+')

for sentence in sequence_of_sentences:
    counts.update(words.findall(sentence.lower()))
"
How to parse the xml file in the google-blogger in python?,"import feedparser
d = feedparser.parse('/path/to/your/xmlfile.xml')
for entry in d.entries:
    print entry.title
"
Numpy matrix from text file,"In [117]: y = np.genfromtxt('/tmp/test.out')

In [120]: y.shape
Out[120]: (10, 3)
"
"Removing ""unnamed: #"" when writing to CSV using pandas","2015-06-29|         |  2015-06-28|         |  2015-06-27|         
col1      |  col2   |  col1      |  col2   |  col1      |  col2
10        |  3      |  103.4     |  6.6    |  103.2     |  4.3
1028      |  5      |  102.4     |  6.2    |  103.3     |  2.2
90        |  6      |  91.7      |  5.0    |  93.1      |  2.4
105       |  1      |  100.8     |  5.5    |  100.9     |  1.7
345       |  7      |  103.0     |  6.1    |  102.9     |  6.3
53        |  3      |  106.0     |  8.6    |  105.3     |  7.6
110       |  5      |  113.0     |  9.1    |  110.9     |  6.7
32        |  4      |  3.9       |  1.8    |  3.5       |  2.9
"
Return value while executing paralel processes with python,"from multiprocessing import *
import time


def main():
    array, loops = list(range(1000)), 1000
    event = Event()
    p = Process(target=sample, args=(array, loops, event))
    p.start()
    event.wait()
    print('Must be at least 1000')
    p.join()


def sample(array, loops, event):
    for number in range(loops):
        if number >= 100 and not event.is_set():
            event.set()
            time.sleep(0.001)
    print('Sample is done')

if __name__ == '__main__':
    main()
"
n-dimensional sliding window with Pandas or Numpy,"In [44]: windowed.sum(axis=(1,2))
Out[44]: array([300, 425, 550, 675, 800, 925])
"
Different behaviour between python console and python script,"gtk.main()
"
"Lists, conditionals and loops don't give the result expected","i = word.find(letter)
"
Changing font in a livewires message,"self._font = pygame.font.Font(""/path/to/my/font/file"", self._size)
"
"Python, sort a list of objects by lowest sub-object attribute","class Shape(object):
    # subclasses must provide a point_array instance attribute
    @property
    def lowest_z(self):
        return min(p.z for p in self.point_array)

class Line(Shape):
    def __init__(self, pos1, pos2):
        #pos1, pos2 are points
        self.point_array = [pos1, pos2]

class Circle(Shape):
    def __init__(self, center, radius):
        #center is a point
        self.point_array = [center]
        self.radius = radius

    @property
    def lowest_z(self):
        return self.point_array[0].z - self.radius

# etc.
"
Python: Deleting Specific value from the list,">>> new, newref = zip(*((v, ref) for v, ref in zip(old, reference) if ref != ID))
>>> new
(2, 2, 6, 2, 4, 6, 6, 8, 2)
>>> newref
(7, 1, 6, 4, 9, 10, 16, 12, 5)
"
Filter a tuple with another tuple in Python,"from itertools import compress
reason = [', '.join(compress(variables, x))
          for x in zip(narrative, subject, activity, filer)]
"
Matching dates with regular expressions in Python?,">>> r.match('January 30, 2001') is not None
True
>>> r.match('January 31, 2001') is not None
True
>>> r.match('January 32, 2001') is not None
False
>>> r.match('February 32, 2001') is not None
False
>>> r.match('February 29, 2001') is not None
False
>>> r.match('February 28, 2001') is not None
True
>>> r.match('February 29, 2000') is not None
True
>>> r.match('April 30, 1908') is not None
True
>>> r.match('April 31, 1908') is not None
False
"
Is there a in built method from python csv module to enumerate all possible value for a specific column?,"import pandas as pd

df = pd.read_csv('many_cols.csv')

for col in df.columns:
    print(col, df[col].drop_duplicates().tolist())
"
Python matplotlib plot3d contour length,"x, y of contour lines  [-17.507777689387403]
23.4999959668 10.5371953741
23.5817457231 10.497649817
23.6719663171 10.4697921243
23.762186911 10.4360099894
23.852407505 10.3946824087
23.9426280989 10.3407058644
24.0328486928 10.2723811242
24.1230692868 10.1944775666
24.2132898807 10.1068535535
24.3035104746 10.0100558541
24.3937310686 9.90574448784
24.4839516625 9.79553098263
24.5741722565 9.67298314465
24.5768503134 9.66917600432
24.6643928504 9.60388531053
24.7546134443 9.52506691946
24.8448340383 9.43215297781
24.9350546322 9.32232950793
25.0252752261 9.19236277318
25.1154958201 9.03870318233
25.205716414 8.85776647714
25.2704564726 8.71121323379
25.295937008 8.68421625849
25.3861576019 8.58769144841
25.4763781958 8.48390641242
25.5665987898 8.36983000445
25.6568193837 8.23868454477
25.7470399776 8.08554200856
25.8372605716 7.90529576185
25.9035308097 7.75325046325
25.9274811655 7.71825086423
26.0177017595 7.5871801381
26.1079223534 7.45184378689
26.1981429473 7.3106545718
26.2883635413 7.16154945578
26.3785841352 7.0017709519
26.4688047291 6.82751937848
26.4848907014 6.79528769271
26.5590253231 6.59847581588
26.649245917 6.34538263269
26.739466511 6.07013541536
26.8082579554 5.83732492217
26.7438422237 4.87936215163
26.739466511 4.86265749258
26.649245917 4.53024953676
26.5590253231 4.20849894529
26.4792050487 3.92139938109
26.4688047291 3.8934269156
26.3785841352 3.6842175811
26.2883635413 3.52455851848
26.1981429473 3.39886137161
26.1079223534 3.2971242973
26.0177017595 3.21266028078
25.9274811655 3.14082302724
25.8372605716 3.07008168517
25.7470399776 2.98668089345
25.725548407 2.96343661055
25.6568193837 2.75631666794
25.5665987898 2.54190386724
25.4763781958 2.38569318308
25.3861576019 2.27114415544
25.295937008 2.18527424797
25.205716414 2.11775204404
25.1154958201 2.06220926565
25.0252752261 2.01460543416
25.0068077972 2.00547384001
length:  19.003201041
"
Getting Python to Create a new instance every time,"class DataGen(object):
    def __init__(self):
        self.first_name = 'Storm' + str(timeGen.timeGen())
        self.last_name = 'Trooper' + str(timeGen.timeGen())
        self.email = DataGen.rand_email()
        self.empid = DataGen.rand_empid()
        self.ssn = DataGen.rand_ssn()

    @staticmethod
    def rand_string():
        r_int = random.randint(1,20)
        r_string = ''.join(random.choice(string.ascii_uppercase + 
                         string.ascii_lowercase + string.digits) 
                    for _ in range(r_int))
        return r_string

    @staticmethod
    def rand_email():
        email_a = DataGen.rand_string() 
        email_b = DataGen.rand_string()
        items = ['.com','.net','.org']
        tld = random.choice(items) 
        return str(email_a) + '@' + str(email_b) + str(tld)

    @staticmethod
    def rand_empid(size=20, chars=string.ascii_uppercase + 
                                string.ascii_lowercase + string.digits):
        return ''.join(random.choice(chars) for _ in range(size))

    @staticmethod
    def rand_ssn():
        ssn = random.randint(100000000,999999999)
        return ssn
"
Extract Information From a File,"def find_ip(s, f):
    with open(f) as f:
        grouped = groupby(f, key=lambda x: x.startswith(""lease ""))
        for k, v in grouped:
            if k: # v is the lease line
                # get ip from lease line
                ip = next(v).rstrip().split()[1]
                # call next to get next element from our groupby object
                # which is each section after lease
                val = next(grouped)[1]
                # check for substring
                if any(sub.find(s) != -1 for sub in val):
                    return ip.rstrip(""{"")
    return ""No match""
"
How to convert numpy.recarray to numpy.array?,">>> a.astype([('x', '<f8'), ('y', '<f8'), ('z', '<f8')]).view('<f8')
array([ 0.,  1.,  2.,  3.,  4.,  5.])
"
Days between two dates in Python,">>> from datetime import date
>>> a = date(2011,11,24)
>>> b = date(2011,11,17)
>>> a-b
datetime.timedelta(7)
>>> (a-b).days
7
"
How to print multiplication table using nested for loops,"    1   2   3   4   5   6   7   8   9
1   1   2   3   4   5   6   7   8   9
2   2   4   6   8  10  12  14  16  18
3   3   6   9  12  15  18  21  24  27
4   4   8  12  16  20  24  28  32  36
5   5  10  15  20  25  30  35  40  45
6   6  12  18  24  30  36  42  48  54
7   7  14  21  28  35  42  49  56  63
8   8  16  24  32  40  48  56  64  72
9   9  18  27  36  45  54  63  72  81
"
Getting a specific value from a tuple within a list,"for item in tails:
    xposition = item[1]  # get item by index
    yposition = item[2]
    pygame.draw.rect(windowSurface, RED, (xposition, yposition, 16, 16))
"
Storing and Accessing node attributes python networkx,"for n1, n2 in G.edges_iter():
    print G.node[n1]['dob'], G.node[n2]['dob']
    print G.node[n1]['pob'], G.node[n2]['pob']
    # Etc.
"
Counting first element in python and printing?,">>> from collections import Counter
>>> inputdict = {'B': ['J', 'K', 'L'], 'C': ['K', 'J', 'L'], 'A': ['L', 'K', 'J'], 'D': ['J', 'L', 'K'], 'E': ['L', 'J', 'K']}
>>> site_counts = Counter(value[0] for value in inputdict.values())
>>> site_counts
Counter({'J': 2, 'L': 2, 'K': 1})
"
How to combine two dicts by key in python?,"d3 = {'A': {'a1': 10, 'a3': 30, 'a2': 20}, 'C': {'c1': 100}, 'B': {'b1': 10, 'b2': 20, 'b3': 30}}
"
Struggling to take the next step in how to store my data,"Each time you get an update, duplicate the last row and update the newest value:
INSERT INTO DeviceValueTable (device_id, valuetype1, valuetype2,..., timestamp) 
    SELECT device_id, valuetype1, @new_value, ...., NOW()
        FROM DeviceValueTable
        WHERE device_id = @device_id
        ORDER BY timestamp DESC
        LIMIT 1;
"
"python - matplotlib - Avoid plot text collisions with grid lines, border and other text","   for i, j in zip(path_loss_list,throughput_values):
       if not j> 59:
           plt.annotate( ""%s"" %str(j), xy=(i,j), xytext=(-5, 5), ha='right', textcoords='offset points')
       else:
          plt.annotate( ""%s"" %str(j), xy=(i,j), xytext=(0, 5), ha='right', textcoords='offset points')
"
Django formset - Creating a formset of just ONE form,"from my_app.forms import FormA, FormB
from django.forms import formset_factory
from django.shortcuts import render_to_response, RequestContext

def your_view(request):
     form = FormA()
     # figure out how many instances of the third field you want
     number_of_forms = 3 # however you like
     FormsetFactory = formset_factory(FormB, min_num=number_of_forms, max_num=number_of_forms,extra=0,validate_min=True,validate_max=True)
     formset = FormsetFactory()
     if request.POST:
         # do something with post

     return render_to_response('your_template.html',{'form':form,'formset':formset}, RequestContext(request))
"
TCL in Python: can't find package,"""C:\Program Files (x86)\Ixia\IxOS\6.40-EA\TclScripts\bin\wish84.exe"" ""C:\Program Files (x86)\Ixia\IxOS\6.40-EA\TclScripts\bin\IxiaWish.tcl""
"
Storing list element address into dictionary,"from collections import defaultdict as DefaultDict

def index_lookup(elements):
    result = DefaultDict(list)
    for index, key in enumerate(elements):
        result[key].append(index)
    return result

>>> l = ['e', 'l', 'e', 'm', 'e', 'n', 't', 's']
>>> index_lookup(l)
defaultdict(<type 'list'>, {'e': [0, 2, 4], 'm': [3], 'l': [1], 'n': [5], 's': [7], 't': [6]})
>>> l.pop(2)
'e'
>>> index_lookup(l)
defaultdict(<type 'list'>, {'e': [0, 3], 'm': [2], 'l': [1], 'n': [4], 's': [6], 't': [5]})
"
Calculate value relative to another value,"def get_b(a):
    return (a/500.0) * 360

print get_b(500)
print get_b(250)
print get_b(125)
"
Python: Print dictionary using column formatting?,"freqs = {',': 1, '8': 3, '0': 3, '6': 1, '7': 2, '!': 1, '+': 2, '#': 8, '%': 4, '.': 1, '&': 7, '/': 1, '1': 3, ')': 2, '""': 1, '-': 2, '3': 6, '5': 1, '$': 1, '2': 2, '*': 4, '4': 2, ""'"": 1, '9': 1, ':': 1}

for k , v in freqs.iteritems(): # iterating freqa dictionary
        print k+""\t"", v
"
Django custom user model with django-polymorphic,"def get_class_name(instance):
    return instance.__class__.__name__
"
Python: Passing a list of function names and parameters to a class instance,"{'some_function': <function some_function at 0x7faec13005a0>}
"
How to hide a Widget when the program starts in PyQt?,"QtCore.QObject.connect(self.actionShow, QtCore.SIGNAL(_fromUtf8(""activated()"")), widgetName.show)
"
"Sun Grid Engine, force one job per node","qconf -rattr exechost complex_values exclusive=1 <nodename>
"
What is the most efficient way to create a pandas dataframe that combine two unrelated series?,"%%timeit
pd.DataFrame(np.array(np.meshgrid(dfA, dfB, )).T.reshape(-1, 2))
100 loops, best of 3: 8.45 ms per loop
"
Python intersection of two lists keeping duplicates,"found = (i for i in array1 if i in array2)
"
Navigate a file containing ^J in Vim,":set ffs?
"
Python def function title,"class system:
    @staticmethod
    def do():
        pass
print system.do()
"
More Digits in Irrational Numbers,">>> from decimal import *
>>> Decimal('1.41421356237309504880168872420969807856967187537694807317667973799073247846210703885038753432764157273501384623091229702')
Decimal('1.41421356237309504880168872420969807856967187537694807317667973799073247846210703885038753432764157273501384623091229702')
"
Python multiple inheritance questions,"class D( B, C ):
    foo = B.foo
    bar = C.bar
"
Python lambda self composing function: How to return a function that is repeated n amount of times?,"sc = self_compose (lambda x: x*3, 3)

if sc(2) == 54:
  print (""SUCCESS"")
"
Is there a built-in product() in Python?,"from functools import reduce
"
Pandas reset index on series to remove multiindex,"In [130]: s
Out[130]:
0           1
1999-03-31  SOLD_PRICE   NaN
1999-06-30  SOLD_PRICE   NaN
1999-09-30  SOLD_PRICE   NaN
1999-12-31  SOLD_PRICE     3
2000-03-31  SOLD_PRICE     3
Name: 2, dtype: float64

In [131]: s.reset_index()
Out[131]:
            0           1   2
0  1999-03-31  SOLD_PRICE NaN
1  1999-06-30  SOLD_PRICE NaN
2  1999-09-30  SOLD_PRICE NaN
3  1999-12-31  SOLD_PRICE   3
4  2000-03-31  SOLD_PRICE   3
"
Loop over tkinter Listbox,"i = my_listbox.get(0, END).index(old_breakfast_string)
my_listbox.delete(i)
my_listbox.insert(i, new_breakfast_string)
"
Force set tkinter window to always have focus,"    if dialogs: # if there are any dialogs left:
        for widget in dialogs: # go through each widget
            widget.lift(aboveThis=self.root) # and lift it above the root
"
Minidom element insertion into xml,"#select a parent node
mc = document.getElementsByTagName(""mcdata"")[0]
#append the new node as child of the parent
mc.appendChild(element)
"
Python virtual classes: doing it right?,"class Line(Shape):
    def __init__(self, description):
        self.desc = description
    def number_of_edges(self, parameters):
        return 1
"
"How to round numeric output from yaml.dump, in Python?","Output
[0.09090909090909091, 0.07692307692307693, 0.058823529411764705, some more text]

[0.0909, 0.0769, 0.0588, some more text]
"
How to round to zero decimals if there is no decimal value with Jinja2?,">>> jinja2.Template('''{{ (0|round(2)|string()).strip('.0') }}''').render()
u''
"
"Calculate the greatest distance between any two strings in a group, using Python","text2.txt
- 9700 lines of text
- each line begins with one random number (1 to 10)
- each line has 400 random characters that follow the random number  # if your data is not random, you should do CONSIDERABLY better than this
"
Turning my function into a class,">>> knapsack = Knapsack([4,1,9,2,0,4,4,4,3,7],10)
>>> print(knapsack.solveIt())
(True, (4, 1, 2, 0, 3))
"
Python tkinter create buttons with loop and edit their parameters,"value = d[(3,4)].get()
print(""row 3, column 4 = %s"" % value)
"
return key by value in dictionary,"keys = values_to_keys.get(value)
"
Spark ALS predictAll returns empty,"valid_test_ = valid_test.map(lambda xs: tuple(int(x) for x in xs))
valid_test_
## PythonRDD[497] at RDD at PythonRDD.scala:43

model.predictAll(valid_test_).count()
## 3
"
Change all hex colors values to rgb,"python scriptname.py filename1 filename2
"
Escaping/Unescaping html in javascript?,"{% if messages %}notifications: [
                {% for message in messages %}{% if 'wiki_redirect' not in message.tags or waffle.flag('redirect_messages') %}{message: ""<div class='my-message'>{{ message }}</div>"", tags: ""{{ message.tags }}"", level: ""{{ message|level_tag }}""}{% if not loop.last %},{% endif %}{% endif %}
                {% endfor %}
            ],
            {% else %}
            notifications: [],
            {% endif %}
"
Most efficient way to use the django ORM when comparing elements from two lists,"Model1.objects.raw('''SELECT * from myapp_model1
                   INNER JOIN myapp_model2
                   ON myapp_model1.field = myapp_model2.field
                   AND ...''')
"
Scan through row elements whose classname is identical,"""(//span[@class='odds black'])""
"
"Delimit a specific column and add them as columns in CSV (Python3, CSV)",">>> df = pd.read_csv(""test.csv"", sep="";"")
>>> df
   Column 1  Column 2  Column 3
0         1         2     3|4|5
1         6         7     6|7|8
2        10        11  12|13|14
>>> c3 = df.pop(""Column 3"").str.split(""|"", expand=True)
>>> c3.columns = [""ID"", ""Age"", ""Height""]
>>> df.join(c3)
   Column 1  Column 2  ID Age Height
0         1         2   3   4      5
1         6         7   6   7      8
2        10        11  12  13     14
"
How to evaluate replacement part in re.sub?,"def add_two(match):
    return str(int(match.group()) + 2)

s = 'Alex 28'
re.sub(r'(\d+)', add_two, s)
"
How to detect what element of a nested list has changed? (python),"def notifyChange(self, childKey, strChangeInChild):
    strChange = ""[{0}]{1}"".format(childKey, strChangeInChild)
    self.parent.notifyChange(self.id, strChange)
"
Concat each element of list with each element of second list,">>> l2, l1 = ['_ru', '_uk', '_en'], ['1','2','3']
>>> from itertools import product
>>> ["""".join(items) for items in product(l1, l2)]
['1_ru', '1_uk', '1_en', '2_ru', '2_uk', '2_en', '3_ru', '3_uk', '3_en']
"
Python-Recursion-New To Programming,"def isEveryNumberPositiveIn(numberList):
    foundCounterexampleYet = False
    for number in numberList:
        if number <= 0:
            foundCounterexampleYet = True
            break
    return not foundCounterexampleYet 
"
how to loop list to pass string to function name in python,"request1
app/data/mydata_a.csv
request2
app/data/mydata_b.csv
"
Python Project with Multiple Modules with the same Name,"import whenver_you_put_your_env as envloc

if (envloc.env == VersionA)
    import VersionA.Package as Package
elif (envloc.env == VersionB)
    import VersionB.Package as Package
"
Constant time random selection and deletion,"class MGraph(object):
    def __init__(self):
        self.edgelist = []
        self.edgedict = defaultdict(list)
    def add(self, edge):
        self.edgedict[edge].append(len(self.edgelist))
        self.edgelist.append(edge)
    def remove(self, edge):
        for index in self.edgedict.get(edge, []):
            maxedge = len(self.edgelist) - 1
            lastedge = self.edgelist[maxedge]
            self.edgelist[index], self.edgelist[maxedge] = self.edgelist[maxedge], self.edgelist[index]
            self.edgedict[lastedge] = [i if i != maxedge else index for i in self.edgedict[lastedge]]
            del self.edgelist[-1]
        del self.edgedict[edge]
    def choice(self):
        return random.choice(self.edgelist)
"
"How to copy boost python list or his reference with ""="" operator","0x804e1ac = None
  is none check: 1
c->py_list: 0xb707024c = []
c->py_list: 0xb707024c = ['spam']
list1: 0xb70da98c = []
assign py_list to list1
list1: 0xb707024c = ['spam']
modify list1
c->py_list: 0xb707024c = ['spam', 42]
copying list1 into list2
list2: 0xb707cb0c = ['spam', 42, 'eggs']
list1: 0xb707024c = ['spam', 42]
"
How can i change a string that counts how many letters in a sentence into counting the occurence of one letter?,"sentence = 'The cat sat on the mat.'
c = 0
for letter in sentence:
    if letter == 'a':
        c += 1
print(c)
"
Python List Indexing and Returning the Item,">>> [elem.strip('()') for elem in ""(A+B)*(C+D)"".split(""*"")]
['A+B', 'C+D']
"
Algorithm to solve for water accumulation given building heights,">>> max_water_heldover([9, 8, 7, 8, 9, 5, 6])
5
>>> max_water_heldover([8, 8, 4, 5])
1
>>> max_water_heldover([3, 1, 2, 1, 3])
5
"
Specific data conversion in python,"dateranges = [
    ""1***-**-**"", 
    ""-138 - ## - ##"",
    ""18##-##-##"",
    ""1713-##-##"",
    ""####-##-##""
]
"
Can I put a tuple into an array in python?,">>> for (x,y) in list_of_tuples:
...    print x,y
... 
1 2
3 4
"
"find optional middle of string surrounded by lazy, regex",">>> re.search(r'((?:(?!HELLO|BYE).)*)(HELLO|BYE)?(.*?END)', r'qweHELLOsdfsEND').groups()
('qwe', 'HELLO', 'sdfsEND')
>>> re.search(r'((?:(?!HELLO|BYE).)*)(HELLO|BYE)?(.*?END)', r'qweBLAHsdfsEND').groups()
('qweBLAHsdfs', None, 'END')
"
python generator of generators?,"map(list, generator_of_generators)
"
Python convert string to list (No .split()),"[{u'action': 'visit_testing', u'timestamp': datetime.datetime(2016, 2, 12, 13, 32, 14)}, {u'action': 'visit_foo', u'timestamp': datetime.datetime(2016, 2, 12, 13, 37, 50)}]
2016-02-12 13:32:14
"
Setting parallel prospective in mlab/mayavi/python,"import numpy as np
from mayavi import mlab

np.random.seed(1977)
x, y, z = np.random.random((3, 10))

mlab.points3d(x, y, z)
mlab.gcf().scene.parallel_projection = True
mlab.show()
"
WTForms: I am binding each field on an object individually is there a way to bind the object to the form all at once?,"code sample
from collections import namedtuple                    

from wtforms import Form                              
from wtforms import IntegerField                      
from wtforms import TextField                         

# create some People                                  
Person= namedtuple('person', ['id', 'fname', 'lname'])
p1 = Person(1, 'bob', 'barker')                       

class TestForm(Form):                                 
    id = IntegerField('id')                           
    fname =TextField('lname')                         
    lname =TextField('lname')                         

# Build form and print                                
test_form = TestForm(obj=p1)                          

# test print                                          
print(test_form.id)                                   
print(test_form.fname)                                
print(test_form.lname)                                                                                        
print(test_form.data)   
"
Django passing a string in url,"<a href=""{% url 'dolgozo:dolgozo-detail' %}/?orderby={{ nev }}"">
"
Read Specific Windows Event Log Event,"events = win32evtlog.ReadEventLog(hand, flags,0)
events_list = [event for event in events if event.EventID == ""27035""]
if event_list:
    print 'Event Category:', events_list[0].EventCategory
"
How to compute jaccard similarity from a pandas dataframe,"import itertools
sim_df = pd.DataFrame(np.ones((5, 5)))
for col_pair in itertools.combinations(df.columns, 2):
    sim_df.loc[col_pair] = sim_df.loc[tuple(reversed(col_pair))] = jaccard_similarity_score(df[col_pair[0]], df[col_pair[1]])
print(sim_df)
      0     1     2     3     4
0  1.00  0.43  0.61  0.55  0.46
1  0.43  1.00  0.52  0.56  0.49
2  0.61  0.52  1.00  0.48  0.53
3  0.55  0.56  0.48  1.00  0.49
4  0.46  0.49  0.53  0.49  1.00
"
Pandas GroupBy aggegate only some groups,"df['Max_Val'] = df.groupby(['date','test']).transform(lambda x: x.max() if x.size > 1 else x)
"
Flattening a very nested loop,"def product(*args, **kwds):
    # product('ABCD', 'xy') --> Ax Ay Bx By Cx Cy Dx Dy
    # product(range(2), repeat=3) --> 000 001 010 011 100 101 110 111
    pools = map(tuple, args) * kwds.get('repeat', 1)
    result = [[]]
    for pool in pools:
        result = [x+[y] for x in result for y in pool]
    for prod in result:
        yield tuple(prod)
"
Simplifying a QPainterPath to an outline,"    path.lineTo(QPointF(*p0+v))
    path.lineTo(QPointF(*pn+v))
    path.lineTo(QPointF(*pn-v))
    path.lineTo(QPointF(*p0-v))
"
pandas value_counts applied to each column,"df = pd.DataFrame(data=[[34, 'null', 'mark'], [22, 'null', 'mark'], [34, 'null', 'mark']], columns=['id', 'temp', 'name'], index=[1, 2, 3]) 
"
Converting NLTK phrase structure trees to BRAT .ann standoff,"This is a representation of the grammar .
"
Python store values into binary code,"# import the context under an app-specific name (so it can easily be replaced later)
from passlib.apps import custom_app_context as pwd_context

# encrypting a password...
hash = pwd_context.encrypt(""somepass"")

# verifying a password...
ok = pwd_context.verify(""somepass"", hash)
"
Levinson algorithm in python,"%%time
count = 0
batch = 2**10
n = 10
n2 = 10*2-1
idx = toeplitz(range(n), range(n-1, 2*n-1))
todo = np.arange(0, 2**n2).astype(np.uint32).byteswap().view(np.uint8).reshape(-1, 4)
for i in range(todo.shape[0]//batch):
    B = np.unpackbits(todo[i*batch:(i+1)*batch], axis=-1)
    rows_arr = B[:, -n2:]
    A = rows_arr[:, idx]
    det = np.linalg.det(A)
    count += np.sum(np.isclose(det, 0))
print count
"
Creating a X input matrix and y output vector via Python,"import pandas as pd

df = pd.read_csv('file_name.csv')
y  =  df[[-1]] 
X  =  df[df.columns[0:-1]]
"
What's an elegant way to create a dictionary from another dictionary's keys and an array of values?,">>> {k: l[v] for k, v in exist.items()}
{'Suggested Bitrate': 120000.0, 'game slot': 1.0, 'actual bitrate': 120000.0, 'id': 'GOLD_Spider Solitaire', 'title': 'Spider\\nSolitaire'}
"
Flask Jsonify mongoengine query,"def mongo_to_dict(obj):
return_data = []

if isinstance(obj, Document):
    return_data.append((""id"",str(obj.id)))

for field_name in obj._fields:

    if field_name in (""id"",):
        continue

    data = obj._data[field_name]

    if isinstance(obj._fields[field_name], DateTimeField):
        return_data.append((field_name, str(data.isoformat())))
    elif isinstance(obj._fields[field_name], StringField):
        return_data.append((field_name, str(data)))
    elif isinstance(obj._fields[field_name], FloatField):
        return_data.append((field_name, float(data)))
    elif isinstance(obj._fields[field_name], IntField):
        return_data.append((field_name, int(data)))
    elif isinstance(obj._fields[field_name], ListField):
        return_data.append((field_name, data))
    elif isinstance(obj._fields[field_name], EmbeddedDocumentField):
        return_data.append((field_name, mongo_to_dict(data)))

return dict(return_data)
"
Comparing Two Arrays resulting into Third Array,"abbrevDict = {country: abbrev for abbrev, country in firstArray}
thirdArray = [[key, abbrevDict[country]] for key, country in secondArray]
"
Python While Not recordset.EOF that wont .MoveNext,"access.MoveNext()
"
"add multiple items to row using vectorized pandas function, not iterrows?","In [124]: regex = r'\w=(\d+)\|\w=(\d+)'

In [127]: df[['a', 'b']] = df.metadata.str.extract(regex)

In [128]: df
Out[128]: 
  metadata  a  b
0  a=1|b=4  1  4
1  a=2|b=3  2  3
2  a=1|b=1  1  1

[3 rows x 3 columns]
"
Efficient way to organise data file in columns with Python,"single_list = []
with open(your_file) as f:
    for line in f.readlines():
        single_list.extend(line.rstrip().split())

list_of_rows = [single_list[i*10:i*10+10] for i in range(len(single_list)//10)]

with open(output_file) as f:
    for line in list_of_rows:
        f.write(' '.join(line) + '\n')
"
Check if there are values other than a certain value exists in a list,"if any(some_list):
   # found at least one non-zero
else:
   # empty or all zero
"
creating a MIME email template with images to send with python / django,"from django.core.mail import EmailMessage
from email.mime.image import MIMEImage
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

# Load the image you want to send as bytes
img_data = open('logo.jpg', 'rb').read()

# Create a ""related"" message container that will hold the HTML 
# message and the image. These are ""related"" (not ""alternative"")
# because they are different, unique parts of the HTML message,
# not alternative (html vs. plain text) views of the same content.
html_part = MIMEMultipart(_subtype='related')

# Create the body with HTML. Note that the image, since it is inline, is 
# referenced with the URL cid:myimage... you should take care to make
# ""myimage"" unique
body = MIMEText('<p>Hello <img src=""cid:myimage"" /></p>', _subtype='html')
html_part.attach(body)

# Now create the MIME container for the image
img = MIMEImage(img_data, 'jpeg')
img.add_header('Content-Id', '<myimage>')  # angle brackets are important
img.add_header(""Content-Disposition"", ""inline"", filename=""myimage"") # David Hess recommended this edit
html_part.attach(img)

# Configure and send an EmailMessage
# Note we are passing None for the body (the 2nd parameter). You could pass plain text
# to create an alternative part for this message
msg = EmailMessage('Subject Line', None, 'foo@bar.com', ['bar@foo.com'])
msg.attach(html_part) # Attach the raw MIMEBase descendant. This is a public method on EmailMessage
msg.send()
"
Compare two strings in python,">>> originals = ['0430f244a18146a0815aa1dd4012db46', '0430f244a18146a0815aa1dd40 12db46', '59739CCDA2F15D5AC16DB6695CAE3378']
>>> test = '59739ccda2f15d5ac16db6695cae3378'
>>> if test.lower() in (s.lower() for s in originals):
...    print '%s is match, yeih!' % test
... 
59739ccda2f15d5ac16db6695cae3378 is match, yeih!
"
python delete all specific keys in json,"import json

def remove_error_info(d):
    if not isinstance(d, (dict, list)):
        return d
    if isinstance(d, list):
        return [remove_error_info(v) for v in d]
    return {k: remove_error_info(v) for k, v in d.items()
            if k not in {'errMsg', 'errCode'}}

data = json.loads(json_string)
data = remove_error_info(data)
json_string = json.dumps(data)
"
Get all disconnected pairs of nodes in a network,"set(g.neighbors(v1)).intersection(set(g.neighbors(v2)))
"
Implementing Google's DiffMatchPatch API for Python 2/3,"textA = ""stackoverflow is cool""
textb = ""so is very cool""
"
Remove class attribute in inherited class Python,"class A(object):
    name = 7
    description = 8
    color = 9

class Hider(object):
    def __get__(self,instance,owner):
        raise AttributeError, ""Hidden attribute""

    def __set__(self, obj, val):
        raise AttributeError, ""Hidden attribute""

class B(A):
    color = Hider()
"
Implementing Twisted style local multiple deferred callbacks in Celery,"from celery import Celery

def task_monitor(app):
    state = app.events.State()

    def announce_completed_tasks(event):
        state.event(event)
        task = state.tasks.get(event['uuid'])

        print('TASK SUCCEEDED: %s[%s] %s' % (task.name, task.uuid, task.info(), ))

    with app.connection() as connection:
        recv = app.events.Receiver(connection, handlers={'task-succeeded': announce_completed_tasks})
        recv.capture(limit=None, timeout=None, wakeup=True)

if __name__ == '__main__':
    app = Celery(broker='amqp://guest@REMOTEHOST//')
    task_monitor(app)
"
Checking the clickability of an element in selenium using python,"Parsing page number #1
Parsing page number #2
93
['http://www.funimation.com/shows/assassination-classroom/videos/official/assassination-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/assassination-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/assassination-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/baseball-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/baseball-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/baseball-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/karma-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/karma-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/karma-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/grown-up-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/grown-up-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/grown-up-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/assembly-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/assembly-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/assembly-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/test-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/test-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/test-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/school-trip-time1st-period', 'http://www.funimation.com/shows/assassination-classroom/videos/official/school-trip-time1st-period', 'http://www.funimation.com/shows/assassination-classroom/videos/official/school-trip-time1st-period', 'http://www.funimation.com/shows/assassination-classroom/videos/official/school-trip-time2nd-period', 'http://www.funimation.com/shows/assassination-classroom/videos/official/school-trip-time2nd-period', 'http://www.funimation.com/shows/assassination-classroom/videos/official/school-trip-time2nd-period', 'http://www.funimation.com/shows/assassination-classroom/videos/official/transfer-student-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/transfer-student-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/transfer-student-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/l-and-r-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/l-and-r-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/l-and-r-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/transfer-student-time2nd-period', 'http://www.funimation.com/shows/assassination-classroom/videos/official/transfer-student-time2nd-period', 'http://www.funimation.com/shows/assassination-classroom/videos/official/transfer-student-time2nd-period', 'http://www.funimation.com/shows/assassination-classroom/videos/official/ball-game-tournament-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/ball-game-tournament-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/ball-game-tournament-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/talent-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/talent-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/talent-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/vision-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/vision-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/vision-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/end-of-term-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/end-of-term-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/end-of-term-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/schools-out1st-term', 'http://www.funimation.com/shows/assassination-classroom/videos/official/schools-out1st-term', 'http://www.funimation.com/shows/assassination-classroom/videos/official/schools-out1st-term', 'http://www.funimation.com/shows/assassination-classroom/videos/official/island-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/island-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/island-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/action-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/action-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/action-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/pandemonium-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/pandemonium-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/pandemonium-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/karma-time2nd-period', 'http://www.funimation.com/shows/assassination-classroom/videos/official/karma-time2nd-period', 'http://www.funimation.com/shows/assassination-classroom/videos/official/karma-time2nd-period', 'http://www.funimation.com/shows/deadman-wonderland', 'http://www.funimation.com/shows/deadman-wonderland', 'http://www.funimation.com/shows/riddle-story-of-devil', 'http://www.funimation.com/shows/riddle-story-of-devil', 'http://www.funimation.com/shows/soul-eater', 'http://www.funimation.com/shows/soul-eater', 'http://www.funimation.com/shows/assassination-classroom/videos/official/xx-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/xx-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/xx-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/nagisa-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/nagisa-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/nagisa-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/summer-festival-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/summer-festival-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/summer-festival-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/kaede-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/kaede-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/kaede-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/itona-horibe-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/itona-horibe-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/itona-horibe-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/spinning-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/spinning-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/spinning-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/leader-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/leader-time', 'http://www.funimation.com/shows/assassination-classroom/videos/official/leader-time', 'http://www.funimation.com/shows/deadman-wonderland', 'http://www.funimation.com/shows/deadman-wonderland', 'http://www.funimation.com/shows/riddle-story-of-devil', 'http://www.funimation.com/shows/riddle-story-of-devil', 'http://www.funimation.com/shows/soul-eater', 'http://www.funimation.com/shows/soul-eater']
"
"Printing a list with a grammatically correct ""and""","1
1 and 2
1, 2 and 3
first, second, third and forth
"
Modifying python's string Formatter,"from __future__ import print_function

from string import Formatter

class CallFormatter(Formatter):
    try:  # deal with Py 2 & 3 difference
        NUMERICS = (int, long)
    except NameError:
        NUMERICS = int

    def get_value(self, key, args, kwargs):
        if key.endswith('()'):  # call?
            return kwargs[key[:-2]]()
        elif isinstance(key, self.NUMERICS):
            return args[key]
        else:
            return kwargs[key]

if __name__ == '__main__':
    fmt = CallFormatter()

    def cabbages():
        return 'hello'

    d = dict(name='Fred')

    class Thing(object):
        def __init__(self, value):
            self.attr = value
    th = Thing(42)

    print('d[name]:{d[name]}, th.attr:{th.attr}, '
          'cabbages:{cabbages}'.format(**locals()))
    print(fmt.format('d[name]:{d[name]}, th.attr:{th.attr}, '
                     'cabbages:{cabbages}, cabbages():{cabbages()}', 
                     **locals()))
"
Using Zip to read a file vertically and search through the zipped list,"with open('input.txt') as input_file:
    rows = input_file.readlines()
rows = zip(*[row.strip() for row in rows])
rows = [''.join(row) for row in rows]
print rows
"
Drag n Drop inside QgraphicsView doesn't work (PyQt),"from PyQt4 import QtGui, QtCore

class WiringGraphicsView(QtGui.QGraphicsView):
    #Initializer method
    def __init__(self, parent = None,  scene=None):
        QtGui.QGraphicsView.__init__(self, scene, parent)
    #Set Accept Drops property true
        self.setAcceptDrops(True)

    #This method creates a line between two widgets
    def paintWire(self, start_widget,  end_widget):
        #Size and Position of both widgets
        _start = start_widget.geometry()
        _end = end_widget.geometry()
        #Creates a Brush object with Red color 
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0) )
        #Creates Pen object with specified brush
        pen = QtGui.QPen(brush, 2)
        #Create a Line object between two widgets
        line = QtGui.QGraphicsLineItem(_start.x() + _start.width() / 2, _start.y() + _start.height() / 2, _end.x() + _end.width() / 2, _end.y() + _end.height() / 2)
        #Set the Pen for the Line
        line.setPen(pen)
        #Add this line item to the scene.
        self.scene().addItem( line )

class DragButton(QtGui.QPushButton):
    def __init__(self, parent):
         super(DragButton,  self).__init__(parent)
         self.allowDrag = True

    def setAllowDrag(self, allowDrag):
        if type(allowDrag) == bool:
           self.allowDrag = allowDrag
        else:
            raise TypeError(""You have to set a boolean type"")

    def mouseMoveEvent(self, e):
        if e.buttons() != QtCore.Qt.RightButton:
            return QtGui.QPushButton.mouseMoveEvent(self, e)

        if self.allowDrag == True:
            # write the relative cursor position to mime data
            mimeData = QtCore.QMimeData()
            # simple string with 'x,y'
            mimeData.setText('%d,%d' % (e.x(), e.y()))
            # print mimeData.text()

            # let's make it fancy. we'll show a ""ghost"" of the button as we drag
            # grab the button to a pixmap
            pixmap = QtGui.QPixmap.grabWidget(self)

            # below makes the pixmap half transparent
            painter = QtGui.QPainter(pixmap)
            painter.setCompositionMode(painter.CompositionMode_DestinationIn)
            painter.fillRect(pixmap.rect(), QtGui.QColor(0, 0, 0, 127))
            painter.end()

            # make a QDrag
            drag = QtGui.QDrag(self)
            # put our MimeData
            drag.setMimeData(mimeData)
            # set its Pixmap
            drag.setPixmap(pixmap)
            # shift the Pixmap so that it coincides with the cursor position
            drag.setHotSpot(e.pos())

            # start the drag operation
            # exec_ will return the accepted action from dropEvent
            if drag.exec_(QtCore.Qt.LinkAction | QtCore.Qt.MoveAction) == QtCore.Qt.LinkAction:
                print 'linked'
            else:
                print 'moved'

        return QtGui.QPushButton.mouseMoveEvent(self, e)

    def mousePressEvent(self, e):

        if e.button() == QtCore.Qt.LeftButton:
            print 'press'
            #AQUI DEBO IMPLEMENTAR EL MENU CONTEXTUAL
        return QtGui.QPushButton.mousePressEvent(self, e)

    def dragEnterEvent(self, e):
        e.accept()
        return QtGui.QPushButton.dragEnterEvent(self, e)

    def dropEvent(self, e):
        # get the relative position from the mime data
        mime = e.mimeData().text()
        x, y = map(int, mime.split(','))
            # move
            # so move the dragged button (i.e. event.source())
        print e.pos()
        # e.source().move(e.pos()-QtCore.QPoint(x, y))
            # set the drop action as LinkAction
        e.setDropAction(QtCore.Qt.LinkAction)
        # tell the QDrag we accepted it
        e.accept()

        return QtGui.QPushButton.dropEvent(self, QDropEvent(QPoint(e.pos().x(), e.pos().y()), e.possibleActions(), e.mimeData(), e.buttons(), e.modifiers()))



from PyQt4.QtGui import *
from PyQt4.QtCore import *

class MyScene(QGraphicsScene):
    def dragEnterEvent(self, e):
        e.acceptProposedAction()

    def dropEvent(self, e):
    # find item at these coordinates
    item = self.itemAt(e.scenePos())
    if item.setAcceptDrops == True:
        # pass on event to item at the coordinates
        try:
           item.dropEvent(e)
        except RuntimeError: 
            pass #This will supress a Runtime Error generated when dropping into a widget with no ProxyWidget      

    def dragMoveEvent(self, e):
        e.acceptProposedAction()

class MyProxy(QGraphicsProxyWidget):    
    def dragEnterEvent(self, e):
        e.acceptProposedAction()

    def dropEvent(self, e):
        # pass drop event to child widget
        return self.widget().dropEvent(e)        

    def dragMoveEvent(self, e):
        e.acceptProposedAction()


app = QApplication([])

scene = MyScene()

menu = QMenu()

# put a button into the scene and move it
button1 = DragButton('Button 1')
button1.setText(""aaa"")
button1.setDefault(False)
button1.setAutoDefault(True)
#button1.setMouseTracking(True)
button1.setAllowDrag(True) #Allow Drag n Drop of DragButton
button1.setGeometry(QRect(50, 50, 51, 31)) #Set dimensions of it
#Set icon of button1
icon = QIcon()
icon.addPixmap(QPixmap("":/audio-input-line.png""), QIcon.Normal, QIcon.Off)
button1.setIcon(icon)
button1.setFlat(True)
button1.setMenu(menu)
#Create a QGraphicsProxyWidget adding the widget to scene
scene_button1 = scene.addWidget(button1)
#move the button on the scene
r1 = scene_button1.geometry()
r1.moveTo(-100, -50)

# put another button into the scene
button2 = DragButton('Button 2')
button2.setText(""bbb"")
#This button shoudn't be dragged, it is just for dropping.
button2.setAllowDrag(False)
button2.setAcceptDrops(True)
icon = QIcon()
icon.addPixmap(QPixmap("":/input_small.png""), QIcon.Normal, QIcon.Off)
button2.setIcon(icon)
#button2.setMouseTracking(True)
#button2.setGeometry(QRect(270, 150, 41, 31))

# Instantiate our own proxy which forwars drag/drop events to the child widget
my_proxy = MyProxy()
my_proxy.setWidget(button2)
my_proxy.setAcceptDrops(True)
scene.addItem(my_proxy)

# Create the view using the scene
view = WiringGraphicsView(None, scene)
view.resize(300, 200)
view.show()
#and paint a wire between those buttons
view.paintWire(button1, button2)
app.exec_()
"
"Python,Sorting a dictionary","def format_author(author):
    tups = sorted(author.iteritems())           # alphabetical sorting
    kmaxlen = max([len(k) for k, v in tups])    # for output alignment

    # some custom rearrangement. if there is a 'msg' key, we want it last
    tupkeys = [k for k, v in tups]
    if 'msg' in tupkeys:
        msg_tup = tups.pop(tupkeys.index('msg'))
        tups.append(msg_tup)    # append to the end
        # alternatively tups.insert(0, msg_tup) would insert at front

    output = []

    for k, v in tups:
        # dress our values
        if not v:
            v = ''
        elif isinstance(v, list):
            if len(v) == 1:
                v = v[0]
            if len(v) == 2 and v[0] in [None, 'none', 'None']:
                v = v[1]
         v = v.strip()
        output.append(""%s: %s"" % (k.rjust(kmaxlen), v))
    return ""\n"".join(output)
"
Is there any shorthand for 'yield all the output from a generator'?,">>> def get_numbers():
...     yield from range(10)
... 
>>> list(get_numbers())
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
>>> def get_squares():
...     yield from [num ** 2 for num in range(10)]
... 
>>> list(get_squares())
[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
"
Where did my dimensions go when I did a groupby in pandas?,">>> df = df.groupby(by=['date','category','country','criteria','size'], as_index=False).sum()
"
Use dictionary in a variable as a set of arguments to a function,">>> def sample1(arg0=0, arg1=0, arg2=0, arg3=0, arg4=0):
...   print(locals())
... 
>>> argument_dictionary = {'arg0': 1, 'arg4': 4}
>>> sample1(**argument_dictionary)
{'arg0': 1, 'arg1': 0, 'arg2': 0, 'arg3': 0, 'arg4': 4}
"
Multi core ZeroMQ?,"import zmq
from threading import Thread

def send_req(request):
    context = zmq.Context()

    print(""Connecting to hello world server..."")
    socket = context.socket(zmq.REQ)
    socket.connect(""tcp://localhost:5556"")
    print(""Sending request %s ..."" % request)

    socket.send_json({""ok"" : ""Hello""})

    message = socket.recv()
    print(""Received reply %s [ %s ]"" % (request, message))

#  Do 10 requests in parallel
for request in range(10):
    Thread(target=send_req, args=(request,)).start()
"
Animating a network graph to show the progress of an algorithm,"import networkx as nx
import matplotlib.pyplot as plt

def single_source_shortest_path(G,source):
    ax = plt.gca()
    canvas = ax.figure.canvas
    background = canvas.copy_from_bbox(ax.bbox)
    level=0                  # the current level
    nextlevel={source:1}       # list of nodes to check at next level
    paths={source:[source]}  # paths dictionary  (paths to key from source)
    G.node[source]['draw'].set_color('r')
    G.node[source]['draw'].set_alpha('1.0')
    while nextlevel:
        thislevel=nextlevel
        nextlevel={}
        for v in thislevel:
#            canvas.restore_region(background)
            s = G.node[v]['draw']
            s.set_color('r')
            s.set_alpha('1.0')
            for w in G[v]:
                if w not in paths:
                    n = G.node[w]['draw']
                    n.set_color('r')
                    n.set_alpha('1.0')
                    e = G[v][w]['draw']
                    e.set_alpha(1.0)
                    e.set_color('k')
                    ax.draw_artist(e)
                    ax.draw_artist(n)
                    ax.draw_artist(s)
                    paths[w]=paths[v]+[w]
                    nextlevel[w]=1
                    canvas.blit(ax.bbox)
        level=level+1
    return paths



if __name__=='__main__':

    G = nx.grid_2d_graph(10,10)
    pos = nx.graphviz_layout(G)
    cf = plt.figure(1, figsize=(8,8))
    ax = cf.add_axes((0,0,1,1))

    for n in G:
        G.node[n]['draw'] = nx.draw_networkx_nodes(G,pos,nodelist=[n], with_labels=False,node_size=200,alpha=0.2,node_color='k')
    for u,v in G.edges():
        G[u][v]['draw']=nx.draw_networkx_edges(G,pos,edgelist=[(u,v)],alpha=0.5,arrows=False,width=5)
    plt.ion()
    plt.show()

    path = single_source_shortest_path(G,source=(0,0))
"
Create string ndarray from ndarray of int 'flags' using list of string meanings,"mapped = np.take(meanings, flags)
"
"Syntax confusion about code in pip installer, ""get-pip.py""","In [11]: packages=[]

In [12]: packages += [""setuptools"",""other""]

In [13]: packages
Out[13]: ['setuptools', 'other']

In [14]: packages=[]

In [15]: packages.append([""setuptools"",""other""])

In [16]: packages
Out[16]: [['setuptools', 'other']]
"
Numpy: Get random set of rows from 2D array,"A[np.random.choice(A.shape[0], 2, replace=False),:]
"
Script to Shutdown Ubuntu,"#!/bin/bash

ssh root@<vm-client-ip> ""shutdown -h now""
sleep 10
"
Why doesn't collections.Counter override __iadd__ method?,">>> sys.version
'3.3.0 (default, Sep 29 2012, 17:14:58) \n[GCC 4.7.2]'
>>> print(Counter.__iadd__.__doc__)
Inplace add from another counter, keeping only positive counts.

        >>> c = Counter('abbb')
        >>> c += Counter('bcc')
        >>> c
        Counter({'b': 4, 'c': 2, 'a': 1})
"
efficient method for merging 2 sorted files with duplicate coordinates in python,">>> import pandas as pd
>>> df1 = pd.read_csv(""coord1.csv"")
>>> df2 = pd.read_csv(""coord2.csv"")
>>> df1
   x-coordinate   y-coordinate   data 1   data 2
0             1             10       20        0
1             5             15        1        2
>>> df2
   x-coordinate   y-coordinate   data 3   data 4  
0             1             10        7          8
1             3             25        1          2
"
Handle the HTTP PUT method in Python WSGI,"$f1 = fopen('php://input', 'rb');
$f2 = fopen($FilePath, 'wb');

while($data = fread($f1, 4096))
{
    fwrite($f2, $data);
}

fclose($f1);
fclose($f2);
"
Regex catastrophic backtracking,"/\*.*?\*/
or
/[*].*?[*]/
"
small language in python,"import shlex, functools, sys, StringIO

def bin_numeric_op(func):
    @functools.wraps(func)
    def execute(self):
        n2, n1 = self._stack.pop(), self._stack.pop()
        n1 = float(n1)
        n2 = float(n2)
        self._stack.append(func(n1, n2))
    return execute

def relational_op(func):
    @functools.wraps(func)
    def execute(self):
        n2, n1 = self._stack.pop(), self._stack.pop()
        self._stack.append(bool(func(n1, n2)))
    return execute

def bin_bool_op(func):
    @functools.wraps(func)
    def execute(self):
        n2, n1 = self._stack.pop(), self._stack.pop()
        n1 = bool(n1)
        n2 = bool(n2)
        self._stack.append(bool(func(n1, n2)))
    return execute

class Interpreter(object):
    def __init__(self):
        self._stack = []
        self._vars = {}
        self._squarestack = []

    def processToken(self, token):
        if token == '[':
            self._squarestack.append(len(self._stack))
        # Currently inside square brackets, don't execute
        elif len(self._squarestack) > 0:
            if token == ']':
                startlist = self._squarestack.pop()
                lst = self._stack[startlist:]
                self._stack[startlist:] = [tuple(lst)]
            else:
                self._stack.append(token)
        # Not current inside list and close square token, something's wrong.
        elif token == ']':
            raise ValueError(""Unmatched ']'"")
        elif token in self.builtin_ops:
            self.builtin_ops[token](self)
        else:
            self._stack.append(token)
    def get_stack(self):
        return self._stack
    def get_vars(self):
        return self._vars
    @bin_numeric_op
    def add(n1, n2):
        return n1 + n2
    @bin_numeric_op
    def mul(n1, n2):
        return n1 * n2
    @bin_numeric_op
    def div(n1, n2):
        return n1 / n2
    @bin_numeric_op
    def sub(n1, n2):
        return n1 - n2
    @bin_numeric_op
    def mod(n1, n2):
        return n1 % n2
    @bin_numeric_op
    def Pow(n1, n2):
        return n1**n2
    @relational_op
    def less(v1, v2):
        return v1 < v2
    @relational_op
    def lesseq(v1, v2):
        return v1 <= v2
    @relational_op
    def greater(v1, v2):
        return v1 > v2
    @relational_op
    def greatereq(v1, v2):
        return v1 > v2
    @relational_op
    def isequal(v1, v2):
        return v1 == v2
    @relational_op
    def isnotequal(v1, v2):
        return v1 != v2
    @bin_bool_op
    def bool_and(v1, v2):
        return v1 and v2
    @bin_bool_op
    def bool_or(v1, v2):
        return v1 or v2
    def bool_not(self):
        stack = self._stack
        v1 = stack.pop()
        stack.append(not v1)
    def if_func(self):
        stack = self._stack
        pred = stack.pop()
        code = stack.pop()
        if pred:
            self.run(code)
    def ifelse_func(self):
        stack = self._stack
        pred = stack.pop()
        nocode = stack.pop()
        yescode = stack.pop()
        code = yescode if pred else nocode
        self.run(code)
    def store(self):
        stack = self._stack
        value = stack.pop()
        varname = stack.pop()
        self._vars[varname] = value
    def fetch(self):
        stack = self._stack
        varname = stack.pop()
        stack.append(self._vars[varname])
    def remove(self):
        varname = self._stack.pop()
        del self._vars[varname]
    # The default argument is because this is used internally as well.
    def run(self, code=None):
        if code is None:
            code = self._stack.pop()
        for tok in code:
            self.processToken(tok)
    def dup(self):
        self._stack.append(self._stack[-1])
    def swap(self):
        self._stack[-2:] = self._stack[-1:-3:-1]
    def pop(self):
        self._stack.pop()
    def showstack(self):
        print""%r"" % (self._stack,)
    def showvars(self):
        print ""%r"" % (self._vars,)
    builtin_ops = {
        '+': add,
        '*': mul,
        '/': div,
        '-': sub,
        '%': mod,
        '^': Pow,
        '<': less,
        '<=': lesseq,
        '>': greater,
        '>=': greatereq,
        '==': isequal,
        '!=': isnotequal,
        '&&': bool_and,
        '||': bool_or,
        'not': bool_not,
        'if': if_func,
        'ifelse': ifelse_func,
        '!': store,
        '@': fetch,
        'del': remove,
        'call': run,
        'dup': dup,
        'swap': swap,
        'pop': pop,
        'stack': showstack,
        'vars': showvars
        }

def shell(interp):
    try:
        while True:
            x = raw_input(""star>   "")
            msg = None
            try:
                interp.run(shlex.split(x))
            except KeyError:
                msg = ""does not exist""
            except:
                sys.excepthook(*sys.exc_info())
                msg = ""parse error!""
            if msg != None:
                print ""   =>"",msg,""\n""
            else:
                print ""   => %r\n"" % (interp.get_stack(),)
    except (EOFError, KeyboardInterrupt):
        print

interp = Interpreter()
if len(sys.argv) > 1:
    lex = shlex.shlex(open(sys.argv[1], 'r'), sys.argv[1])
    tok = shlex.get_token()
    while tok is not None:
        interp.processToken(tok)
        tok = lex.get_token()
shell(interp)
"
Format canonical URL structure correctly with URL Processors,"from werkzeug.routing import AnyConverter, Rule


class TranslateConverter(AnyConverter):

    def __init__(self, map, item):
        self.language_pairs = {language: translate_url(item, language)
                               for language in languages}
        AnyConverter.__init__(self, map, *tuple(self.language_pairs.values()))


class TranslateCorrelationRule(Rule):

    def match(self, path):
        result = Rule.match(self, path)
        if result is None:
            return result
        lang_code = result.get('lang_code')
        if lang_code is None:
            return result
        for name, value in self._converters.items():
            if not isinstance(value, TranslateConverter):
                continue
            if value.language_pairs[lang_code] != result[name]:
                return
        return result


app.url_map.converters['tr'] = TranslateConverter
app.url_rule_class = TranslateCorrelationRule
"
User input and stuck in while loop,"while prompt != 'y' or prompt != 'n':
"
Calculator Program in Ruby/Python without using any built in operators,"
class Klass
  def hello(*args)
    ""Hello "" + args.join(' ')
  end
end
k = Klass.new
k.send :hello, ""gentle"", ""readers""   #=> ""Hello gentle readers""
"
"Given the my code is open source and I'm running on a server, and I accept nearly-raw code, what's the worst that can happen to me?","2**2**1024
"
Python: Recusively remove file folders greater than x days old,"today = datetime.date.today()
for year in os.listdir('.'):
    for month in os.listdir(year):
        for day in os.listdir(os.path.join(year, month):
            date = datetime.date(int(year), int(month), int(day))
            age = today - date
            if age > datetime.timedelta(days=20):
                shutil.rmtree(os.path.join(year, month, day))
"
How to matches anything except space and new line?,"^              # the beginning of the string
 [^\n ]*       # any character except: '\n' (newline), ' ' (0 or more times)
$              # before an optional \n, and the end of the string
"
Function to calculate the difference between sum of squares and square of sums,"def square_sum_difference(n):
    return int((3*n**2 + 2*n) * (1 - n**2) / 12)
"
Shortening a Python program,"hdulists = []
for n in range(1, 23):   # range is exclusive so you get 1-22
    hdulists.append(
        pyfits.open(
            ('/home/ssridhar/mock_test_files/Roncarelli_test'
            '/roncarelli_dist_halo{0}.fits').format(n)
        )
     )
"
Pandas sorting by value and then by index,"df2.sort_values(by='val').sort_index()
"
Access dictionary from a list,"Dictionray d1, under key a contains:
    1
    2
    3
Dictionray d2, under key b contains:
    4
    5
    6
"
How do you generate a random number in a range with a specific average in python?,"    normalvariate(self, mu, sigma) method of Random instance
    Normal distribution.

    mu is the mean, and sigma is the standard deviation.
"
Unable to retrieve an Array of objects posted to Django from jQuery,"import json
box_0_string = request.POST.get('boxes[]')[0]
box_0_dict = json.loads(box_0_string)
"
Python data structure for a collection of objects with random access based on an attribute,"def enregister(d, obj):
  obj.ds.append(d)
  d[obj.key] = obj

class Item(object):
    def __init__(self, uniq_key, title=None):
        self._key = uniq_key
        self.title = title
        self.ds = []

    def adjust_key(self, newkey):
        newds = [d for d in self.ds if self._key in d]
        for d in newds:
          del d[self._key]
          d[newkey] = self
        self.ds = newds
        self._key = newkey

    def get_key(self):
        return self._key

    key = property(get_key, adjust_key)
"
Python: If in a For Loop,"if i, j, k != 4, 4, 4:
"
How do I store a fetched entity in memcache for App Engine?,"from google.appengine.api import memcache
"
Going character by character in a string and swapping whitespaces with python,"sentence = ""Ceci est une toute petite phrase.""
sentence = sentence.replace(' ', '*')
print sentence
# Ceci*sest*sune*stoute*spetite*sphrase.
"
Changing the default times in the Django TimeInput,"quickElement(""a"", quickElement(""li"", time_list, """"), gettext(""Now""), ""href"", ""javascript:DateTimeShortcuts.handleClockQuicklink("" + num + "", new Date().strftime('"" + time_format + ""'));"");
quickElement(""a"", quickElement(""li"", time_list, """"), gettext(""Midnight""), ""href"", ""javascript:DateTimeShortcuts.handleClockQuicklink("" + num + "", new Date(1970,1,1,0,0,0,0).strftime('"" + time_format + ""'));"");

...
"
How to find ngram frequency of a column in a pandas dataframe?,"from sklearn.feature_extraction.text import CountVectorizer
word_vectorizer = CountVectorizer(ngram_range=(1,2), analyzer='word')
sparse_matrix = word_vectorizer.fit_transform(df['description'])
frequencies = sum(sparse_matrix).toarray()[0]
pd.DataFrame(frequencies, index=word_vectorizer.get_feature_names(), columns=['frequency'])
"
Split list of datetime by hours using python,"from itertools import groupby

[list(g) for k, g in groupby(list_of_dts, key=lambda d: d.hour)]
"
Most efficient way to strip a % from u'96.9%' and return a float,"float(c.rstrip(u'% \n\t\r\xa0'))
"
Multiple imports of the same file name,"plugindir/
    __init__.py
    plugin1/
        __init__.py
    plugin2/
        __init__.py
"
procmal recipe to pass values to my Python script,":0
* ^From:.*@(helpicantfindgoogle.com|searchengineshateme\.net|disabled\.org)\>
* ^Subject:(.*[^0-9])?\/[0-9][0-9][0-9][0-9][0-9]?$
{
  R=`formail -zxReply-To: | sed 's/.*<//;s/>.*//'`
  :0
  | scriptname.py --reply-to ""$R"" --number ""$MATCH""
}
"
How to find a prime number with an upperbound and store in an array?,"upperBound = input(""Enter the upper bound number: "")

""""""Create a list named prime of booleans, all set to True, for numbers between 0 and the upper bound""""""
prime = [True]*(upperBound + 1) #List of booleans all set to True


""""""set prime[0] and prime[1] to False""""""
prime[0] = False #0 is not prime
prime[1] = False #1 is not prime

print ""Generating all primes between 2 and"", upperBound

""""""let p loop over all values between 2 and the upper bound (inclusive)""""""
for p in range(2, upperBound + 1): #Loop through all the values between 2 and the upper bound, inclusive
    print ""Checking"", str(p)
    if prime[p] == True: #if the number is prime
        k = p + p #k is the first multiple of the prime number
        print "" "", str(p), ""is prime""
        for x in range(k, upperBound + 1, p): #Iterate through all the multiples of the prime, less than the upper bound
            print "" "", str(x), ""is not prime""
            prime[x] = False #Mark the multiples as composite

""""""The prime list now has a True value for those numbers that are prime""""""

""""""Generate the result list with a loop adding numbers to the list""""""
primeNumbers = []
for x in range(len(prime)): #Iterate through the boolean list
    if prime[x] == True: #if the number is prime
        primeNumbers.append(x) #add it to the list of prime numbers

print primeNumbers
"
Python quickselect sorting,"        elif m > k:
            return quickSelect(smallerlist,k)
        else:
            return quickSelect(largerlist, k - m - count)
"
Pymongo or Mongodb is treating two equal python dictionaries as different objects. Can I force them to be treated the same?,"collectn.find({'goods.H.' + k:v for k,v in d1.items()})
collectn.find({'goods.H.' + k:v for k,v in d2.items()})
"
Concisely stack a constant with a Numpy array?,"
%%timeit
np.pad(b[np.newaxis, :], ((1,0), (0,0)), 'constant', constant_values=5)

10000 loops, best of 3: 39.6 µs per loop
"
Crawl Multiple pages of a website with using Selenium (Python3),"def test_sel(self):
     driver = self.driver
     delay = 3
     for reg in RegionIDArray:
         page = 0
         driver.get(self.base_url + str(reg))
         for i in range(1,4):
             driver.execute_script(""window.scrollTo(0, document.body.scrollHeight);"")
             time.sleep(2)
"
How to use this for loop to get expected result in python,"import sys

a = ['hi','helllo']
first = True
for i in a:
    if not first:
        sys.stdout.write(' ')
    first = False
    for j in i:
         sys.stdout.write(j)
print()
"
How to access tuple elements in a nested list,"[x[-1] for x in myList]
# [None, None, None, None]
"
Python regex - do not match word when it is in html tag,"$ python
Python 2.6.6 (r266:84292, Jan 22 2014, 09:42:36)
[GCC 4.4.7 20120313 (Red Hat 4.4.7-4)] on linux2
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> mystring = 'asdd qwe <a href=""http://example.com"" title=""Some title with word qwe"" class=""external-link"" rel=""nofollow"">  qwe '
>>> import re
>>> p=re.compile(r'([^\s<>]+)(?![^<>]*>)')
>>> p.findall(mystring)
['asdd', 'qwe', 'qwe']
>>>
$
"
Parsing an xml file with an ordered dictionary,"import xmltodict
from collections import OrderedDict

xmldata = """"""<NewDataSet>
    <Root>
        <Phonemic>and</Phonemic>
        <Phonetic>nd</Phonetic>
        <Description/>
        <Start>0</Start>
        <End>8262</End>
    </Root>
    <Root>
        <Phonemic>comfortable</Phonemic>
        <Phonetic>comfetebl</Phonetic>
        <Description>adj</Description>
        <Start>61404</Start>
        <End>72624</End>
    </Root>
</NewDataSet>""""""

obj = xmltodict.parse(xmldata)
obj = obj[""NewDataSet""]
root_elements = obj[""Root""] if type(obj) == OrderedDict else [obj[""Root""]] 
# Above step ensures that root_elements is always a list
for element in root_elements:
    print element[""Phonetic""]
"
send (using Python) and receive (using PHP) files via API,"var fd = new FormData(document.querySelector(""form""));
fd.append(""CustomField"", ""This is some extra data"");
$.ajax({
  url: ""stash.php"",
  type: ""POST"",
  data: fd,
  processData: false,  // tell jQuery not to process the data
  contentType: false   // tell jQuery not to set contentType
});
"
Finding minimum value of word from a lot of files in python?,"$ python ENSG.py txtdir ENSCAFG --parallel=4
"
"python, operation on big pandas Dataframe","# build an empty df
df = pd.DataFrame()
# get a list of the unique products, could skip this perhaps
df['Product'] = other_df['Sku'].unique()
"
python list of tuples to javascript array of arrays,"[ 'abc', 'state', 'fsf', 'val' ]
"
Python remove non-latin textlines in csv,"import unicodedata
def compute_ratio(input_str):
    '''
    This function will return the ratio between the number of latin letter and other letters.
    '''
    num_latin = 0
    input_str = """".join(input_str.split()) # Remove whitespaces.
    for char in input_str:
        try:
            if unicodedata.name(unicode(char))[:5] == ""LATIN"":
                num_latin += 1
            #end if
        except UnicodeDecodeError:
            pass
        #end try
    #end for
    return (num_latin*1.0)/len(input_str)
"
Placing custom class object in a list,"class dbref:
    dbnumber=0
"
OpenERP wizard syntax,"from openerp.osv import osv
from openerp.osv import fields
from openerp.tools.translate import _

class ref_generic_request(osv.osv_memory):

    # create a table in osv_memory, with the columns you need
    # to fill in your wizard
    _name = 'ref.generic.request'

    _columns = {
        'reformulation_info': fields.text(
            'Reformulation instructions',
            help='Instructions for the requestor justification the reformulation needs'),
            }

    # create a function that will save the info from your wizard into
    # your model (active_id is the id of the record you called the wizard
    # from, so you will save the info entered in wizard in that record)
    def save_info(self, cr, uid, ids, context=None):
        if 'active_id' in context:
            info = self.browse(cr, uid, ids)[0].reformulation_info
            gen_req = self.pool.get('generic.request')
            gen_req.write(
                    cr, uid, context['active_id'],
                    {'reformulation_info':info, 'needs_reformulation':1}
                    )
        return {'type':'ir.actions.act_window_close'}
ref_generic_request()
"
Pretty printing a list of list of floats?,"import sys
rows = [[1.343, 348.222, 484844.3333], [12349.000002, -2.43333]]
for row in rows:
  for val in row:
    sys.stdout.write('%20f' % val)
  sys.stdout.write(""\n"")

        1.343000          348.222000       484844.333300
    12349.000002           -2.433330
"
newline and dash not working correctly in jinja,"{%- for field in fields %}
-
  name: {{field}}
  type: string
{%- endfor -%}
"
numpy array from csv file for lasagne,"from sklearn.cross_validation import KFold

Xy = numpy.genfromtxt('yourfile.csv', delimiter="","")

# the next section provides the required
# training-validation set splitting but 
# you can do it manually too, if you want

skf = KFold(len(Xy))

for train_index, valid_index in skf:
    ind_train, ind_valid = train_index, valid_index
    break

Xy_train, Xy_valid = Xy[ind_train], Xy[ind_valid]

X_train = Xy_train[:, 1:]
y_train = Xy_train[:, 0]

X_valid = Xy_valid[:, 1:]
y_valid = Xy_valid[:, 0]


...

# you can simply ignore the test sets in your case
return X_train, y_train, X_val, y_val #, X_test, y_test
"
Convert categorical variable to color with Matplotlib,"import matplotlib
from matplotlib.cm import cool

def get_n_colors(n):
    return[ cool(float(i)/n) for i in range(n) ]
"
Sum while in Python?,"from itertools import takewhile, count

def sum_func(func, n):
    return sum(takewhile(lambda x: x < n, (func(i) for i in count(1))))
"
"Python string slicing, special case if end of string included?","for i in range(7):
    print test[-(8-i):(-(6-i) or None)]
    print i
"
Python IRC Bot link resolver?,"#!/usr/bin/env python

from re import findall

from circuits import Component
from circuits.ne t.events import connect
from circuits.net.sockets import TCPClient
from circuits.protocols.irc import ERR_NICKNAMEINUSE
from circuits.protocols.irc import RPL_ENDOFMOTD, ERR_NOMOTD
from circuits.protocols.irc import IRC, PRIVMSG, USER, NICK, JOIN

from requests import get
from lxml.html import fromstring


class Bot(Component):

    def init(self, host, port=6667):
        self.host = host
        self.port = port

        TCPClient().register(self)
        IRC().register(self)

    def ready(self, component):
        self.fire(connect(self.host, self.port))

    def connected(self, host, port):
        self.fire(USER(""circuits"", host, host, ""Test circuits IRC Bot""))
        self.fire(NICK(""circuits""))

    def numeric(self, source, target, numeric, args, message):
        if numeric == ERR_NICKNAMEINUSE:
            self.fire(NICK(""%s_"" % args))
        if numeric in (RPL_ENDOFMOTD, ERR_NOMOTD):
            self.fire(JOIN(""#circuits""))

    def message(self, source, target, message):
        if target[0] == ""#"":
            urls = findall(""http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+"", message)  # noqa
            if urls:
                url = urls[0]
                response = get(url)
                if response.status_code == 200:
                    doc = fromstring(response.text)
                    title = doc.cssselect(""title"")
                    if title:
                        title = title[0].text.strip()
                        self.fire(
                            PRIVMSG(
                                target,
                                ""URL: {0:s} Title: {1:s}"".format(
                                    url,
                                    title
                                )
                            )
                        )
        else:
            self.fire(PRIVMSG(source[0], message))


bot = Bot(""irc.freenode.net"")

bot.run()
"
Optional string segment in pyparsing,"from pyparsing import *

identifier = Word(alphas, alphanums).setName('identifier')
DOT = Suppress('.')

# Option 1 - fully specified options
full_database_name = identifier('user') + DOT + identifier('database')
just_database_name = identifier('database')
table_name = (full_database_name + DOT + identifier('table') | 
              just_database_name + DOT + identifier('table'))

# Option 2 - use FollowedBy to explicitly lookahead when checking for leading user
table_name = (Optional(identifier('user') + FollowedBy(2*(DOT+identifier)) + DOT) + 
                identifier('database') + DOT + identifier('table'))

# Option 3 - use liberally matching expression, with a parse action to assign fields
def assignTableFields(fields):
    if len(fields) == 2:
        fields['database'],fields['table'] = fields
    elif len(fields) == 3:
        fields['user'],fields['database'],fields['table'] = fields
    else:
        raise ParseException(""wrong number of fields"")
table_name = delimitedList(identifier, delim='.').setParseAction(assignTableFields)

for test in (""a.b.c"", ""b.c""):
    print test
    print table_name.parseString(test).dump()
    print
"
What is the Laplacian mask/kernel used in the scipy.ndimage.filter.laplace()?,"def derivative2(input, axis, output, mode, cval):
    return correlate1d(input, [1, -2, 1], axis, output, mode, cval, 0)
return generic_laplace(input, derivative2, output, mode, cval)
"
Numpy array [? 5 5] to five arrays with [? 5],"import numpy as np

aaa=np.array([[[ 0 , 1,  2,  3,  4],
 [ 5,  6,  7,  8,  9],
 [10, 11, 12, 13, 14],
 [15, 16, 17, 18, 19],
 [20, 21, 22, 23, 24]],
[[25, 26, 27, 28, 29],
 [30, 31, 32, 33, 34],
 [35, 36, 37, 38, 39],
 [40, 41, 42, 43, 44],
 [45, 46, 47, 48, 49]],
[[50, 51, 52, 53, 54],
 [55, 56, 57, 58, 59],
 [60, 61, 62, 63, 64],
 [65, 66, 67, 68, 69],
 [70, 71, 72, 73, 74]]])

bb= np.transpose(aaa,axes=[1,0,2])
print bb
"
Using instance variables as named format substitutions,"def fmt(msg, obj):
    return msg.format(**obj.__dict__)
"
ZMQ Poller not working within Class Instance,"import zmq
from multiprocessing import Process
import time

class ServerPubSub(Process):
    def __init__(self, port, n):
        Process.__init__(self)
        self.port = port
        self.n = n

    def run(self):
        self.context = zmq.Context()
        self.pub = self.context.socket(zmq.PUB)
        self.pub.bind('tcp://127.0.0.1:%d' % self.port)
        self.pub.setsockopt(zmq.HWM, 1000)

        time.sleep(1)

        end = False
        for i in range(self.n):
            print 'SRV: sending message %d' % i
            self.pub.send('Message %d' % i)
            print 'SRV: message %d sent' % i
            time.sleep(0.2)

        self.pub.close()

class ClientPubSub(Process):
    def __init__(self, port, n):
        Process.__init__(self)
        self.port = port
        self.n = n

    def run(self):
        self.context = zmq.Context()
        self.sub = self.context.socket(zmq.SUB)
        self.sub.connect('tcp://127.0.0.1:%d' % self.port)
        self.sub.setsockopt(zmq.SUBSCRIBE, '')
        self.poller = zmq.Poller()
        self.poller.register(self.sub, zmq.POLLIN)

        end = False
        count = 0
        while count < self.n:
            ready = dict(self.poller.poll(0))
            if self.sub in ready and ready[self.sub] == zmq.POLLIN:
                msg = self.sub.recv()
                print 'CLI: received message ""%s""' % msg
                count += 1

        self.sub.close()

if __name__ == ""__main__"":
    port = 5000
    n = 10
    server = ServerPubSub(port, n)
    client = ClientPubSub(port, n)

    server.start()
    client.start()

    server.join()
    client.join()
"
Python regex endline,"[('the', 'red', 'barn', 'and', 'fled')]
"
How to write a lot of nested 'for' loops (Recursively),"In [24]: permNums(_)
Out[24]:
[[0, 1, 2],
 [0, 1, 3],
 [0, 2, 1],
 [0, 2, 3],
 [0, 3, 1],
 [0, 3, 2],
 [1, 0, 2],
 [1, 0, 3],
 [1, 2, 0],
 [1, 2, 3],
 [1, 3, 0],
 [1, 3, 2],
 [2, 0, 1],
 [2, 0, 3],
 [2, 1, 0],
 [2, 1, 3],
 [2, 3, 0],
 [2, 3, 1],
 [3, 0, 1],
 [3, 0, 2],
 [3, 1, 0],
 [3, 1, 2],
 [3, 2, 0],
 [3, 2, 1]]
"
How to change tornado post header and add into header new data?,"$ curl -v ""Accept: application/json"" -H ""Content-type: application/json"" -X POST -d '{""key"":""...""}'  http://localhost:8000
* getaddrinfo(3) failed for Accept:80
* Couldn't resolve host 'Accept'
* Closing connection #0
curl: (6) Couldn't resolve host 'Accept'
* About to connect() to localhost port 8000 (#0)
*   Trying 127.0.0.1... connected
> POST / HTTP/1.1
> User-Agent: curl/7.22.0 (i686-pc-linux-gnu) libcurl/7.22.0 OpenSSL/1.0.1 zlib/1.2.3.4 libidn/1.23 librtmp/2.3
> Host: localhost:8000
> Accept: */*
> Content-type: application/json
> Content-Length: 13
> 
* upload completely sent off: 13out of 13 bytes
< HTTP/1.1 200 OK
< Date: Sun, 09 Jun 2013 16:49:40 GMT
< Content-Length: 3
< Validation: value
< Content-Type: text/html; charset=UTF-8
< Server: TornadoServer/3.0.1
< 
ok
* Connection #0 to host localhost left intact
* Closing connection #0
"
Prettify the code using Beautiful Soup,"    This class contains the basic parser and search code. It defines
    a parser that knows nothing about tag behavior except for the
    following:

      You can't close a tag without closing all the tags it encloses.
      That is, ""<foo><bar></foo>"" actually means
      ""<foo><bar></bar></foo>"".
"
Correctly parsing string literals with python's re module,"""This is a string with an \""escaped quote\"" inside it""
""""
""data""
"
Joining a list of dicts,"rl_shader_map = {
    'rl1': {
        'shader1': {
            'geom': ['a', 'b', 'c', 'd'],
        }
        'shader2': {
            'geom': ['e', 'f'],
        }
    },
    'rl2': {
        'shader2': {
            'geom': ['g', 'h', 'i', 'j'],
        }
    }
}
"
Formatting custom class output in PyYAML,"!A
val: !time '00:00:00'

True
"
Two very different but very consistent results from Python timeit,"timeit.timeit('1+1', 'import math', number=1000000)
"
Parallel execution of class methods,"[123]
[123]
"
"In Python, when are two objects the same?","sentinel = object()
item = next(iterable, sentinel)
if items is sentinel:
   # iterable exhausted.
"
"Numpy vectorize, using lists as arguments","array([ 6.        ,  5.4       ,  4.90909091,  4.5       ,  4.15384615,
        3.85714286,  3.6       ,  3.375     ,  3.17647059,  3.        ])
"
for loop in Python,"for i, item in enumerate(mylist):
    mylist[i] = item**2
"
Using a separate PasteDeploy file for sqlAlchemy urls with cryptic passwords,"export DB_URL=postgresql+psycopg2://user:password@localhost:5432/mydb
"
get packet size in scapy / python,">>> len(IP(dst=""www.google.com""))
20
"
Countdown timer giving me negative numbers,"393 days, 17:09:19.278093
393 days, 17:09:18.276930
393 days, 17:09:17.274710
393 days, 17:09:16.272841
393 days, 17:09:15.270777
393 days, 17:09:14.268744
393 days, 17:09:13.267112
"
Python - List comprehension with 2 for loops & a ADD AND operand,">>> [[x + y for x, y in zip(*row)] for row in zip(outgoing, incoming)]
[[486, 511, 615, 825, 760, 693, 848, 639, 651, 657], [444, 482, 562, 793, 729, 666, 812, 599, 592, 597], [42, 29, 53, 32, 31, 27, 36, 40, 59, 60], [29, 28, 35, 32, 31, 27, 36, 40, 59, 60], [13, 1, 18, 0, 0, 0, 0, 0, 0, 0]]
>>> from pprint import pprint
>>> pprint(_)
[[486, 511, 615, 825, 760, 693, 848, 639, 651, 657],
 [444, 482, 562, 793, 729, 666, 812, 599, 592, 597],
 [42, 29, 53, 32, 31, 27, 36, 40, 59, 60],
 [29, 28, 35, 32, 31, 27, 36, 40, 59, 60],
 [13, 1, 18, 0, 0, 0, 0, 0, 0, 0]]
"
An iterative rather than recursive algorithm to find all ways to split n into m pieces,"timeit f(4,3)
10000 loops, best of 3: 133 µs per loop
"
How do you remove duplicates from a list in Python whilst preserving order and length?,">>> from random import randint
>>> from statistics import mean
>>> from timeit import repeat
>>>
>>> def standard(seq):
...     """"""Trivial modification to standard method for removing duplicates.""""""
...     seen = set()
...     seen_add = seen.add
...     return ["""" if x in seen or seen_add(x) else x for x in seq]
...
>>> def dedup(seq):
...     seen = set()
...     for v in seq:
...         yield '' if v in seen else v
...         seen.add(v)
...
>>> def pedro(seq):
...     """"""Pedro's iterator based approach to removing duplicates.""""""
...     my_dedup = dedup
...     return [x for x in my_dedup(seq)]
...
>>> def srgerg(seq):
...     """"""Srgerg's dict based approach to removing duplicates.""""""
...     seen = dict()
...     seen_setdefault = seen.setdefault
...     return ["""" if cell in seen else seen_setdefault(cell, cell) for cell in seq]
...
>>> data = [randint(0, 10000) for x in range(100000)]
>>>
>>> mean(repeat(""standard(data)"", ""from __main__ import data, standard"", number=100))
1.2130275770426708
>>> mean(repeat(""pedro(data)"", ""from __main__ import data, pedro"", number=100))
3.1519048346103555
>>> mean(repeat(""srgerg(data)"", ""from __main__ import data, srgerg"", number=100))
1.2611971098676882
"
How to change the date/time in Python for all modules?,">>> import datetime
>>> datetime.datetime.now()
datetime.datetime(2010, 4, 17, 14, 5, 35, 642000)
>>> import time
>>> def mytime(): return 120000000.0
...
>>> time.time = mytime
>>> datetime.datetime.now()
datetime.datetime(1973, 10, 20, 17, 20)
"
compare two lists and return not matching items,"ssa_flat = set(ssa_flat)
"
"How to build ""many-hot"" in Python/Pandas?","import numpy as np
import pandas as pd

df = pd.read_csv('data')
df = df.replace(r' ', np.nan)
#    id   fruit1   fruit2   fruit3
# 0   1    apple   orange      NaN
# 1   2   orange      NaN      NaN
# 2   3   banana    apple      NaN

melted = pd.melt(df, id_vars=['id'])
result = pd.crosstab(melted['id'], melted['value'])
print(result)
"
Python: Calculating Average and Standard deviation for every hour in csv file,"df1.to_csv('myfile.csv', index=False)
"
Python: Shorten If / Elif control flow tree (printing highest order string that is not None),"for msj in (level_3,level_2,level_1):
    if msj:
        print msj
        break
"
"Pandas, to_csv () to a specific format","In [11]: df = pd.read_clipboard(sep=',', index_col=0)

In [12]: df
Out[12]:
   pgtime  pgstat  age  eet     g2  grade  gleason      ploidy
1     6.1       0   64    2  10.26      2        4     diploid
2     9.4       0   62    1    NaN      3        8   aneuploid
3     5.2       1   59    2   9.99      3        7     diploid
4     3.2       1   62    2   3.57      2        4     diploid
5     1.9       1   64    2  22.56      4        8  tetraploid
6     4.8       0   69    1   6.14      3        7     diploid
7     5.8       0   75    2  13.69      2      NaN  tetraploid
8     7.3       0   71    2    NaN      3        7   aneuploid
9     3.7       1   73    2  11.77      3        6     diploid
"
Equivalent to numpy.roll() in R?,"roll(1:5,-2)
[1] 3 4 5 1 2
"
Python string processing optimization,"The answer is 42
"
What module is PYSIGNAL defined in PyQt4,"PyQt4.Qt.SIGNAL
"
Python: Change the label of a matplotlib button on click,"bprive.label.set_text(""A new label"") # works
"
Python Bulbs framework example of fget argument in a bulbs object init method,"# people.py    

from bulbs.model import Node, Relationship                                                                                                                                                                                                    
from bulbs.property import String, Integer, DateTime                                                                                                                                                                                          
from bulbs.utils import current_datetime

class Person(Node):  

    element_type = ""person"" 

   name = String(nullable=False)                                                                                                                                                                                                             
    age = Integer(""calc_age"")                                                                                                                                                                                                                 

    def calc_age(self):                                                                                                                                                                                                                       
        """"""A pointless method that calculates a hard-coded age.""""""                                                                                                                                                                            
        age = 2014 - 1977                                                                                                                                                                                                                     
        return age                                                                                                                                                                                                                            

class Knows(Relationship):                                                                                                                                                                                                                    

    label = ""knows"" 

    timestamp = DateTime(default=current_datetime, nullable=False) 
"
Iterating with padding,"def generate_with_padding(tobeiterated, n, pad = None):
     count = 0
     for x in tobeiterated:
         count = count + 1
         yield x
     for _ in xrange(n - count):
         yield pad 
"
Merge dictionaries retaining values for duplicate keys,"{'a': [1, 5], 'b': [2, 4], 'c': [3], 'd': [6]}
"
Unexpected behavior of a function built to replace split (),"def better_split(s, seprators):
    assert isinstance(seprators, str), 'seprators must be string'
    buf = [s]
    for sep in seprators:
        for loop, text in enumerate(buf):
            buf[loop:loop+1] = [i for i in text.split(sep) if i]
    return buf
"
Getting a specific tag object using django-taggit,"tags = Tags.objects.filter(id__in=[ids])
for tag in tags:
    print tag.name
"
Non-recursive algorithm for full permutation with repetitive elements?,"RecFunc (parameters)
    ...
    ...
    var x = RecFunc (other parameters)
    ...
    ...
EndFunc
"
Django two views on a webpage,"<!-- form.html -->
<form><input type=""submit""/></form>
"
"How to get name from method-wrapper, builtin_function_or_method types for inspect.getmembers predicate",">>> import inspect
>>> inspect.getmembers('')[20]
('__ne__', <method-wrapper '__ne__' of str object at 0x10bbb2508>)
>>> inspect.getmembers('')[20][1].__name__
'__ne__'
"
Subdivide integers using a given ratio without producing floats,"ratio_breakdown(7, [0.36, 0.44, 0.07, 0.07, 0.03, 0.03])
[3, 3, 1, 0, 0, 0]
ratio_breakdown(10, [0.55, 0.45])
[6, 4]
ratio_breakdown(16, [0.16, 0.47, 0.13, 0.24])
[2, 8, 2, 4]
"
how to modify choices on admin pages - django,"class FooForm(forms.ModelForm):
    class Meta:
        model = Foo

    def __init__(self, *args, **kwargs):
        super(FooForm, self).__init__(*args, **kwargs)
        current_state = self.instance.state
        ...construct available_choices based on current state...
        self.fields['state'].choices = available_choices
"
How to implement chmod u-w in python,"st = os.stat(dest_file)
os.chmod(dest_file, st.st_mode & ~stat.S_IWUSR)
"
How to configure setup.py to have pip install from GitHub master?,"setup(...,
      download_url='https://github.com/USER/PROJECT/tarball/master')
"
Sorting points on multiple lines,"    candidates = top_lines.union(decremented)
"
Is py2neo caching burning me?,"q = ""MATCH (n:Node) RETURN n""
result = graph.cypher.execute(q)
my_node = result[0][0]

while True:
    my_node.pull()
    print(my_node)
"
What does a cursor for `Select * from table where ='something '`return if no data is selected,"import MySQLdb
conn = MySQLdb.Connection(...)
curs = conn.cursor()
print curs.execute(""select * from cities where city like 'San %'"")
51 //51 rows found
rows = curs.fetchall()
print len(rows)
51 // as stated above 51 rows found
"
Remove selected punctuation from unicode strings,"return regex.sub(ur""((?!-)\p{P})+"", "" "", text)

return regex.sub(ur""(\p{P}(?<!-))+"", "" "", text)
"
How can I perform a least-squares fitting over multiple data sets fast?,"ln(y) = -x^2 / (2 * sigma^2) + x * mu / sigma^2 - mu^2 / sigma^2 + ln(height)
"
"Python multiprocessing.Pool: when to use apply, apply_async or map?","import multiprocessing as mp
import time

def foo_pool(x):
    time.sleep(2)
    return x*x

result_list = []
def log_result(result):
    # This is called whenever foo_pool(i) returns a result.
    # result_list is modified only by the main process, not the pool workers.
    result_list.append(result)

def apply_async_with_callback():
    pool = mp.Pool()
    for i in range(10):
        pool.apply_async(foo_pool, args = (i, ), callback = log_result)
    pool.close()
    pool.join()
    print(result_list)

if __name__ == '__main__':
    apply_async_with_callback()
"
Combining ng repeat and django template language,"$scope.columns = [...];
"
Combining multiple csv files together and also adding a column during concatenation,"awk 'BEGIN{OFS = "",""; FS = "";""} {$1 = $1; print $0, FILENAME}' *.csv > newfile.csv
"
Python: List Comparison to find unique element count of lists,"print map(lambda ll: min([len(set(l)) for l in zip(*ll)]), lst)
"
"Python: Associating Function Output to Strings, then Combining into Dictionary","import commands

def get_free_mem(node_name):
    sys_output = commands.getoutput('ssh %s \'free -m\'' % node_name)
    free_memory = sys_output.split()[9]
    return int(free_memory)

free_list = [get_free_mem(n) for n in node_names]
node_free_mem = dict(zip(node_names, free_list))
"
How to get an attribute of an Element that is namespaced,"ns = {'ss': 'THE_VERY_SAME_REALLY_LONG_STRING_AS_ROOT', 'd': 'SOME_REALLY_LONG_STRING'}

element = root.xpath('//d:SomethingIWant', namespaces=ns)[0]
print(etree.tostring(element))

attribute = element.xpath('@ss:Name', namespaces=ns)[0]
print(attribute)
"
Python Replacing white spaces in a text file with a comma,"==================== content of the file poiu.txt ====================
'--||  ||:|||:||--||| \r\n'
'#10 23:30 abcdef : \r\n'
'802 12:25 xyz  :  \r\n'
'\r\n'
'#:35 11:18+14:39 sunny vale : sunny sea\r\n'
'  651454451 drh:hdb 54:1\r\n'
'    \r\n'
': 541514 oi:npvert654165:8\r\n'
'#5415:v541564zervt\r\n'
'#     ::    \r\n'
'#::: :::\r\n'
' E\r\n'
======================================================================

======= content of the file poiu.txt_2012_02_07_ 00_48_55.csv ========
'--||,,||:|||:||--|||,\r\n'
'#10 23,30 abcdef , \r\n'
'802,12:25,xyz,,:,,\r\n'
'\r\n'
'#,35 11,18+14,39 sunny vale , sunny sea\r\n'
',,651454451,drh:hdb,54:1\r\n'
',,,,\r\n'
':,541514,oi:npvert654165:8\r\n'
'#5415,v541564zervt\r\n'
'#     ,,    \r\n'
'#,,, ,,,\r\n'
',E\r\n'
======================================================================
"
timedelta convert to time or int and store it in GAE (python) datastore,"class TimeDeltaProperty(db.Property):
  def get_value_for_datastore(self, model_instance):
    value = self.__get__(model_instance, model_instance.__class__)
    if value is not None:
      return timedelta_to_microtime(value)

  def make_value_from_datastore(self, value):
    if value is not None:
      return datetime.timedelta(microseconds=value)
"
Scala Import Function in Scope Multiple Times,"scala> import scala.collection.mutable.{Map => MMap} // or MutableMap, or whatever label you find useful
scala> import java.util.{Map => JMap} // or JavaMap, or whatever
"
Reverse a list without reversed command,"print(list[::-1])
"
Adding a new column to a list of matrixs(arrays),">>> m = np.arange(12).reshape(3,4)
>>> m = np.hstack((m, np.ones((m.shape[0], 1), dtype=m.dtype)))
>>> m
array([[ 0,  1,  2,  3,  1],
       [ 4,  5,  6,  7,  1],
       [ 8,  9, 10, 11,  1]])
"
django-allauth set username the same as email,"n = 1
while User.objects.exclude(pk=instance.pk).filter(username=username).exists():
    n += 1
    username = user_email[:(29 - len(str(n)))] + '-' + str(n)
instance.username = username
"
How can I get the youngest objects from SQLAlchemy?,"from sqlalchemy import func

stmt = _session.query(Table) \
               .group_by(Table._date) \
               .having(Table._date == func.max(Table._date)
"
Two lists are printing the same thing when I expected them to print differently,"b = [i[:] for i in a]
"
Pull Data/Links from Google Searches using Beautiful Soup,"query = ""Thomas Jefferson""
query = query.replace(' ', '+')
"
"python, remove words in a string from a list","' '.join([i for i in query.split() if not any(w in i.lower() for w in seeds)])
"
python regex to parse ifconfig output of different locales,"\b\d+(?:\.\d+){3}\b
"
How to change text to digits and save into array in Python,"trans_table = {ord(u'\u20ac'): None, ord(u','): u'.'}
my_prices = [price.text.translate(trans_table)
                for price in data.find_all(""example"", {""class"":""example""})]
"
Sqlalchemy change decimal IP address to dotted,"from ipaddress import ip_address
ip_dotted = str(ip_address(ip_dec))
"
Change Naming Convention for Images Pipeline,"import scrapy
from scrapy.pipelines.images import ImagesPipeline


class NgaImagesPipeline(ImagesPipeline):

    def get_media_requests(self, item, info):
        # use 'accession' as name for the image when it's downloaded
        return [scrapy.Request(x, meta={'image_name': item[""accession""]})
                for x in item.get('image_urls', [])]

    # write in current folder using the name we chose before
    def file_path(self, request, response=None, info=None):
        return '%s.jpg' % request.meta['image_name']
"
How would you make a comma-separated string from a list?,"myList = ['a','b','c','d']
myString = "","".join(myList )
"
How to keep an app engine entity imported as a module to a user.py and an admin.py file consistent,"user = users.get_current_user()
acl = db.GqlQuery(""SELECT * FROM ACL WHERE user = :1"", user).get()
if 'ADMIN_VIEWER' in acl.permissions:
  # continue
else:
  # unauthorized
"
Summarizing log file to unique entries only,"
import sys
import re
import collections

logf = '/var/log/messages.log'
count = collections.Counter()
write = sys.stdout.write

with open(logf, 'r') as f:
    for line in f:
        line = re.sub(r'\d+','#',line)
        count[line] += 1

for line in sorted(count):
     write(""{c}: {l}"".format(c = count[line], l = line))
"
How to print log messages from external modules to the main Python module's terminal window?,"import logging
import test2
import multiprocessing as mp

logger = mp.get_logger()

def main():
    logger.info('Script is running')
    logger.info('Calling script test2')
    proc = mp.Process(target = test2.main)
    proc.start()
    proc.join()

if __name__ == '__main__':
    formatter = logging.Formatter('[%(asctime)s] [%(filename)s]: %(message)s',
                                  datefmt = '%H:%M:%S')
    handler = logging.StreamHandler()
    handler.setFormatter(formatter)
    logger.addHandler(handler)
    logger.setLevel(logging.INFO)    
    main()
"
Using Numpy to Count Numbers in a range,"In [588]: z=np.random.rand(10)
In [589]: z
Out[589]: 
array([ 0.33335522,  0.66155206,  0.60602815,  0.05755882,  0.03596728,
        0.85610536,  0.06657973,  0.43287193,  0.22596789,  0.62220608])
In [590]: mask = (z >= 0.3) & (z < 0.6)
In [591]: mask
Out[591]: array([ True, False, False, False, False, False, False,  True, False, False], dtype=bool)
In [592]: z * mask
Out[592]: 
array([ 0.33335522,  0.        ,  0.        ,  0.        ,  0.        ,
        0.        ,  0.        ,  0.43287193,  0.        ,  0.        ])
In [593]: np.count_nonzero(z * mask)
Out[593]: 2
In [594]: np.extract(mask, z)
Out[594]: array([ 0.33335522,  0.43287193])
In [595]: len(np.extract(mask, z))
Out[595]: 2
"
Populating a sparse list with random 1's,"Random-access:
In [5]: rsl[523]
Out[5]: 1

In [6]: rsl[524]
Out[6]: 0
"
Creating 2 arrays from one array in python,">>> a = [1, 2, 3, 4, 5, 6]
>>> a[::2]
[1, 3, 5]
>>> a[1::2]
[2, 4, 6]
"
How to scrape between span tags using beautifulsoup,"<span style=""margin-right: 0.9em"">
    TEXT1 
    <span style=""color:#111111; margin-left: 0.2em"">
        TEXT2 
    </span>
    TEXT3
</span>
"
How to call a dll function in parallel in Python,"import ctypes
import sys
import time
import threading

lib = ctypes.cdll.LoadLibrary('./test.so')
val = ctypes.c_uint64(0)

def loop():
    lib.dostuff(ctypes.byref(val))

t1 = threading.Thread(target=loop)
t1.start()

for i in range(1000):
    sys.stdout.write('%s ' % val.value)
    sys.stdout.flush()
    time.sleep(0.05)
"
R rPython remote computer's python,"require(svSocket)
startSocketServer(port = 9999) # choose your preferred port
while(1)
{
   ... # some code to do
   Sys.Sleep(0.05) # give the system some time to do other things
}
"
How to update the state of tkiner menu cascade or command?,"widget.configure(state=""disabled"")
"
Prototyping-orientated features in Python?,"E = type(""E"", (A, E1, E2), {})
"
Porting invRegex.py to Javascript (Node.js),"function Reference(iterator) { this.iterator = iterator; }

Reference.prototype.first = function() { this.i = 0; };
Reference.prototype.next  = function() { this.i++; };
Reference.prototype.ok    = function() { return this.i == 0; };
Reference.prototype.get   = function() { return this.iterator.get(); };
Reference.prototype.clone = function() { return new Reference(this.iterator); };
"
"pandas, combining multiple dataframes","df2['AVG_HR'] = df2.groupby(df2.index.hour)['avg_hr'].transform('mean')
"
Denormalize unit vector,"import numpy as np

from numpy import array
from itertools import combinations_with_replacement


for t in combinations_with_replacement(range(1, 50), 3):
    if reduce(gcd, t) != 1: continue

    v = array(map(float, t))
    u = v / np.linalg.norm(v)

    w = recover_integer_vector(u)

    assert np.allclose(w, v) or np.allclose(w, -v)
"
Populating dictionary from text file PYTHON,"import csv
from collections import defaultdict
with open('file.txt', 'r') as f:
    next(f)
    d = defaultdict(list)
    r = csv.reader(f,delimiter="" "")
    for row in r:
       d[row[0]].extend(map(int,row[1:]))
"
Precision of decimals in Python,"print('%.40f' % a)
277.8999999999999772626324556767940521240234
"
Python: get dictionary value from a dictionary within a tuple within a list and do something with it,"print(sum(float(d['avgreturns'])* b for d,b in l))
"
why does order of loop nesting matter python?,"table = [ [""row 0, column 0"", ""row 0, column 1"", ""row 0, column 2""],
          [""row 1, column 0"", ""row 1, column 1"", ""row 1, column 2""],
          [""row 2, column 0"", ""row 2, column 1"", ""row 2, column 2""],
          [""row 3, column 0"", ""row 3, column 1"", ""row 3, column 2""] ]
"
Qmessagebox not working,"      $ ls
      main.py ui_my_window.py my_window.ui
"
numpy type conversions for arrays vs. scalars,"c + 10
"
python: can executable zip files include data files?,"$ echo '#!/usr/bin/env python' | cat - zipfile > program-name
$ chmod +x program-name
"
How do I know which client is transferring data to my server?,"                connection.send(currentlow)
                ...
                connection.send(currenthigh)
"
Unique content identifier with Selenium: InvalidSelectorError,"dues = driver.find_element_by_css_selector("".right.column-datavalue.lastColOfRow"")
"
python vs octave random generator,"octave:9> rand('state',mtstate(4));
octave:10> rand(1,5)
ans =

   0.96703   0.54723   0.97268   0.71482   0.69773
"
Having some problems printing out an array in Python3,"Apr: 16, 29, 30
May: 13, 27
Jun: 10, 11, 24
Jul: 08, 22, 23
Aug: 06, 20
Sep: 02, 03, 16, 17, 30
Oct: 01, 14, 15, 29
Nov: 25
Dec: 09, 10, 23, 24
"
Choose between many-to-many techniques in App Engine DB,"class Article(db.Model):
  tags = db.ListProperty(Tag)

  @staticmethod
  def select_by_tag(tag):
    return Article.all().filter(""tags"", tag).run()
"
How to use decorators (bottle.py),"#bottle.py

def route(your_route):  #your_route <= '/static/<filepath:path>'

    def my_decorator(func):  #The decorator syntax will cause python to call this function with server_static as the argument

        def do_stuff(filepath):
            func(filepath)  #Call the server_static() function with the part of the url that matched filepath

        return do_stuff  #This function will be called when your code calls server_static(...)

    return my_decorator
"
"Python IRC Bot won't join channels on some servers, and I don't know how to make it respond to user input","a=irc.recv (4096)
print a
"
Fibonacci series in python 3 displays only final number,"def fibR(n):
    if n > len(fibR.values) - 1:
        for i in range(len(fibR.values), n+1):
            fibR.values.append(fibR(i-2) + fibR(i-1))
    return fibR.values[n]

fibR.values = [0, 1, 1]
for i in range(1,6):
    print(fibR(i))
"
How to print JSON with keys in numeric order (i.e. as if the string keys were integers),"import json

d = dict({'2':'two', '11':'eleven'})
json.dumps({int(x):d[x] for x in d.keys()}, sort_keys=True)
"
Optimizing Pandas groupby/apply,"In [24]: df.join(res.to_frame('max_date'))
Out[24]: 
         card_no       date  status   max_date
0           5790 2013-02-11       6        NaT
1           6572 2013-03-17       6        NaT
2           7764 2013-02-06       3        NaT
3           4905 2013-04-01       3        NaT
4           3871 2013-04-08       1 2013-04-10
...          ...        ...     ...        ...
3999995     1891 2013-02-16       5        NaT
3999996     9048 2013-01-11       9        NaT
3999997     1443 2013-02-23       1 2013-04-09
3999998     2845 2013-01-28       0        NaT
3999999     5645 2013-02-05       8        NaT

[4000000 rows x 4 columns]

In [25]: %timeit df.join(res.to_frame('max_date'))
10 loops, best of 3: 58.8 ms per loop
"
lxml iterparse mising child nodes,"def fast_iter(context, func, *args, **kwargs):
    # http://www.ibm.com/developerworks/xml/library/x-hiperfparse/
    # Author: Liza Daly
    for event, elem in context:
        func(elem, *args, **kwargs)
        elem.clear()
        while elem.getprevious() is not None:
            del elem.getparent()[0]
    del context

def parseXml(element,attribList,elemList): 
    for child in element:
       if child.tag in elemList:
           print len(child) #for a given child,the len should be constant
           #do things   

context=etree.iterparse(filehandle, events=('end',), tag=mainElement)   
fast_iter(context, parseXml, attribList, elemList)
"
Can I convert a tuple to a parameter list 'inline'?,">>> range(3, 6)             # normal call with separate arguments
[3, 4, 5]
>>> args = [3, 6]
>>> range(*args)            # call with arguments unpacked from a list
[3, 4, 5]
"
Is it possible to scale data by group in Spark?,"import numpy as np

np.random.seed(323)

keys = [""foo""] * 50 + [""bar""] * 50
values = (
    np.vstack([np.repeat(-10, 500), np.repeat(10, 500)]).reshape(100, -1) +
    np.random.rand(100, 10)
)

rdd = sc.parallelize(zip(keys, values))
"
Python's equivalent to C# Hash (#) in a format string,"print(""{:0<.6f} {:0<.1f}"".format(12.355, 0.12345))
"
"How to return a ""Tuple type"" in a UDF in PySpark?","from pyspark.sql.types import *

schema = ArrayType(StructType([
    StructField(""char"", StringType(), False),
    StructField(""count"", IntegerType(), False)
]))
"
Dropping time from datetime <[M8] in Pandas,"In [11]: df = pd.DataFrame({""t"": pd.date_range('2014-01-01', periods=5, freq='H')})

In [12]: df
Out[12]:
                    t
0 2014-01-01 00:00:00
1 2014-01-01 01:00:00
2 2014-01-01 02:00:00
3 2014-01-01 03:00:00
4 2014-01-01 04:00:00

In [13]: pd.DatetimeIndex(df.t).normalize()
Out[13]:
<class 'pandas.tseries.index.DatetimeIndex'>
[2014-01-01, ..., 2014-01-01]
Length: 5, Freq: None, Timezone: None

In [14]: df['date'] = pd.DatetimeIndex(df.t).normalize()

In [15]: df
Out[15]:
                    t       date
0 2014-01-01 00:00:00 2014-01-01
1 2014-01-01 01:00:00 2014-01-01
2 2014-01-01 02:00:00 2014-01-01
3 2014-01-01 03:00:00 2014-01-01
4 2014-01-01 04:00:00 2014-01-01
"
How do I extract Unicode character sequences from an MZ executable file?,"import re
data = open('c:/users/metolone/util/windiff.exe','rb').read()

# Search for printable ASCII characters encoded as UTF-16LE.
pat = re.compile(ur'(?:[\x20-\x7E][\x00]){3,}')
words = [w.decode('utf-16le') for w in pat.findall(data)]
for w in words:
    print w
"
Python - Randomly subsamble a range of points to plot,"import numpy as np
import matplotlib.pyplot as plt
import matplotlib.colors as mcolors

np.random.seed(2015)
N = 10**5
val1 = np.random.normal(loc=10, scale=2,size=N)
val2 = np.random.normal(loc=0, scale=1, size=N)

fig, ax = plt.subplots(nrows=2, sharex=True, sharey=True)
cmap = plt.get_cmap('jet')
norm = mcolors.LogNorm()

num_samples = 10**4
idx = np.random.choice(np.arange(len(val1)), num_samples)
ax[0].scatter(val1[idx], val2[idx])
ax[0].set_title('subsample')

im = ax[1].hexbin(val1, val2, gridsize=50, cmap=cmap, norm=norm)
ax[1].set_title('hexbin heatmap')

plt.tight_layout()
fig.colorbar(im, ax=ax.ravel().tolist())

plt.show()
"
TypeError: 'WordListCorpusReader' object has no attribute '__getitem__' while using nltk.classify.apply_features,">>> from nltk.corpus import names
>>> names[:5]
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
TypeError: 'LazyCorpusLoader' object has no attribute '__getitem__'
>>> names.words()[:5]
[u'Abagael', u'Abagail', u'Abbe', u'Abbey', u'Abbi']
"
Using Sphinx apidoc to generate documentation from C++ code,".. py:function:: Timer.repeat([repeat=3[, number=1000000]])
    Does something nasty with timers in repetition
"
How do I run unit tests on my Python code in Buildout?,"[test]
recipe = pbp.recipe.noserunner
eggs = ${buildout:eggs}
    pbp.recipe.noserunner
script = test
"
convert data to CSV with python,"d = """"""name Smith city Boston country USA
name Meier city Berlin ZIP 12345 country Germany
name Grigoriy country Russia""""""

keys = {}                                # will collect all keys
objs = []                                # will collect all lines
for line in d.split(""\n""):               # split input by linebreak
    ks = [x for x in line.split()[::2]]  # even positions: 0, 2, 4, 6
    vs = [x for x in line.split()[1::2]] # odd positions:  1, 3, 5, 7
    objs.append(dict(zip(ks, vs)))       # turn line into dictionary
    for key in ks:
        keys[key] = True                 # note all keys

print("","".join(keys))                    # print header row
for obj in objs:
    print("","".join([obj.get(k, """") for k in keys]))
"
How do I execute a python script from the command line using custom commands?,"$> random arg1 arg2
"
Filter pandas dataframe based on values in multiple columns,"rows = 15

s = [''] + list('YWE17N0AZX')
df = pd.DataFrame(np.random.choice(s, size=(rows, 7)), columns=list('abc') + ['dxpoa1', 'dxpoa2', 'dxpoa3', 'dxpoa4'])

cols = df.filter(like='dxpoa').columns
"
A member tuple (as opposed to member variable) of a class?,"thing = myclass()
thing['x,y'] = 3,6
x,y = thing['x,y']
thing['x,y,z'] = 1,2,3
"
how to locate the center of a bright spot in an image?,"import skimage.io
import skimage.segmentation
import numpy as np
import matplotlib.pyplot as plt

# Read in the image
# Note - intensities are floating point from [0,1]
im = skimage.io.imread('balls.jpg', True)

# Threshold the image first then clear the border
im_clear = skimage.segmentation.clear_border(im > (200.0/255.0))

# Determine where to split up the image
split_point = int(im.shape[1]/5)

# Show image in figure and hold to place dots in
plt.figure()
plt.imshow(np.dstack([im,im,im]))

# For each image...
for idx in range(5):

  # Extract sub image
  img = im_clear[:,idx*split_point:(idx+1)*split_point]

  # Find coordinates of thresholded image
  y,x = np.nonzero(img)

  # Find average
  xmean = x.mean()
  ymean = y.mean()

  # Plot on figure
  plt.plot(xmean + idx*split_point, ymean, 'r.', markersize=14)

# Show image and make sure axis is removed
plt.axis('off')
plt.show()
"
Django Loading Templates with Inheritance from Specific Directory,"{% extends ""standard/bishop/base.html"" %}
"
Remove matched tags in html files?,"print(menu_td.prettify())
"
Python Split path recursively,">>> def rec_split(s):
...     rest, tail = os.path.split(s)
...     if rest in ('', os.path.sep):
...         return tail,
...     return rec_split(rest) + (tail,)
"
Making a loop to write new lines to a txt file using python,"basicfile = open('membersofcongress.txt', 'r')
outfile = open('memberswcomma.txt','w')

for line in basicfile:
   partyst = line.find('(')
   partyend = line.find(')')
   party = line[partyst:partyend+1]
   name = line[+0:partyst-1]
   outp = name + "","" + party + ""\n""
   outfile.write(outp)

outfile.close()
basicfile.close()
"
Naming coordinates in python,"def __eq__(self, other):
    return self.lwh == other.lwh
"
How can I find the index for a list of nested lists which I am recursing over?,"def get_structure_for_node(structure, find_node=1):
    return list(flat_list(structure))[find_node][1]
"
Bash args in python,"$ dk=$(python -c ""import hashlib; print hashlib.sha256('$1' + 'salt').hexdigest()"")
$ echo $dk
532b86a29eae4a625bac7c2f0208a58b5ff08e65780917d54e027d927bc92381
"
Aparrent looping issue: Why am I appending the same thing to my list over and over again?,"title1,title2
something,another
cool,stuff
"
Python regex replace text in quotes except quotes themselves,">>> content = 'I opened my mouth, ""Good morning!"" I said cheerfully'
>>> content = re.sub(r'"".*""', '""""', content)
>>> print(content)
I opened my mouth, """" I said cheerfully
"
Python list combination,"In [1]: nums = [1, 2, 3, 4]

In [2]: [(x, tuple(y for y in nums if y != x)) for x in nums]
Out[2]: [(1, (2, 3, 4)), (2, (1, 3, 4)), (3, (1, 2, 4)), (4, (1, 2, 3))]
"
How to run Django management commands against Google Cloud SQL,"if os.getenv('SERVER_SOFTWARE', '').startswith('Google App Engine'):
    # Running on production App Engine, so use a Google Cloud SQL database.
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'HOST': '/cloudsql/project-id:instance-name',
            'NAME': 'database-name',
            'USER': 'root',
        }
    }
elif os.getenv('SETTINGS_MODE') == 'prod':
    # Running in development, but want to access the Google Cloud SQL instance in production.
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'INSTANCE': 'cloud-sql-instance-ip-address',
            'NAME': 'database-name',
            'USER': 'root',
            'PASSWORD': 'password',
        }
    }
else:
    # Running in development, so use a local MySQL database.
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'database-name',
            'USER': 'username',
            'PASSWORD': 'password',
        }
    }
"
Merging rows when counting - Django/SQL,"unique_codes_cnt = Item.objects.values('unique_codes').distinct().count()
"
Loop performance degradation,"    if key not in masterIndex.keys():
        masterIndex[key]= partialIndex[key]
    else:
        masterIndex[key].extend(partialIndex[key])
"
Celery worker hangs on ZEO database access (race condition?),"CELERY_ROUTES = {'project.tasks.ex_task': {'queue': 'multiprocessing_queue'}}
"
"For any rows with a NaN in a Pandas DataFrame, shift by 1",">>> df2.loc[:, to_shift].shift(1)
        two     three
a       NaN       NaN
b -0.447225  0.240786
c       NaN       NaN
d  1.736224  0.191835
e       NaN       NaN
f -0.310505  2.121659
g  2.542979 -0.772117
h       NaN       NaN
i -0.350395  0.825386
"
pandas dataframe aggregate - why does it return column names?,"In [24]: df.groupby(['CustID']).groups
Out[24]: {1: [0, 1], 2: [2], 3: [3, 4], 4: [5]}
"
how to parse a boolean argument in a script?,"p.add_argument('foo',type=ParseBoolean)
"
changing values of a dictionary to a list,"database[data]=[value]
"
Drain or discard a generator without looping?,"In [1]: import collections

In [2]: a = range(100000)

In [3]: timeit reduce(lambda _, __: None, a)
100 loops, best of 3: 13.5 ms per loop

In [4]: timeit for dummy in a: pass
1000 loops, best of 3: 1.75 ms per loop

In [5]: timeit collections.deque(a, maxlen=0)
1000 loops, best of 3: 1.51 ms per loop
"
Creating a table out of data in python,"Column 1                Column 2                Column 3                Column 4            

10                                        10    20                      20      
"
How do I access my database level functions inside other classes/files in Tornado?,"import main
import topic

handlers=[]
handlers.extend(main.handlers)
handlers.extend(topic.handlers)

ui_modules={}
"
Python: Not able to read first row of csv file correctly using read_csv,">>> pd.read_csv(""h.csv"", names=[""Number"", ""Line"", ""Code""], index_col=0)
          Number                     Line    Code
12  1.430000e+19       This is first line  101010
23  1.430000e+19  This is the second line  202020
34  1.430000e+19   This is the third line  303030
"
Change ALL html tags to symbol using python,"<h1>
</h1>
<img src=""foo.com/image.png"">
"
Most efficient way to create an array of cos and sin in Numpy,"      5 function calls in 4.707 seconds

Ordered by: standard name

ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     1    0.001    0.001    4.707    4.707 <string>:1(<module>)
     1    2.452    2.452    4.706    4.706 test.py:6(randvector1)
     1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
     1    0.010    0.010    0.010    0.010 {method 'random_sample' of 'mtrand.RandomState' objects}
     1    2.244    2.244    2.244    2.244 {numpy.core.multiarray.array}
"
Using Django's m2m_changed to modify what is being saved pre_add,"from django.db import models
from django.db.models.signals import m2m_changed
from django.dispatch import receiver

class Category(models.Model):
    pass

class Video(models.Model):
    category = models.ManyToManyField('Category')

@receiver(m2m_changed, sender=Video.category.through)
def video_category_changed(sender, **kwargs):
    action = kwargs.pop('action', None)
    pk_set = kwargs.pop('pk_set', None)    
    if action == ""pre_add"":
        if 1 not in pk_set:
            pk_set.update([1])
"
Django-CMS Custom plugin and placeholders,"class BigTilePlugin(CMSPluginBase):
    ...
    def render(self, context, instance, placeholder):
        context['tile'] = instance.tile
        return context
"
List Range Refinement,"c = None
a[2:c]
"
Identifying top recurring words from a list of e-mails based on a dictionary of interesting words,"... | sort -k4 -t: | tee index.by.word | awk 'FS="":"" {print $4}' | uniq -c
"
Python: csv.DictWriter returning blank strings if value is alphanumeric,"import codecs
import csv
import os

path_to_folder = '/insert/path/'

with open('hasfares.txt', 'w') as hf:
    for root, subFolders, files in os.walk(path_to_folder):
        if 'fare_rules.csv' in files:
            hf.write('%s\n' % root)

        if 'routes.csv' in files:
            routes_path = os.path.join(root, 'routes.csv')
            bus_route_ids_path = os.path.join(root, 'bus_route_ids.csv')
            appending_to_existing_file = os.path.exists(bus_route_ids_path)
            with codecs.open(routes_path, 'r', 'utf-8-sig') as inf, \
                    open(os.path.join(root, ""bus_route_ids.csv""), ""a"") as output:
                reader = csv.DictReader(inf, quotechar='""')
                headers = ['route_id']
                writer_bus_routes = csv.DictWriter(output, headers,
                                                   extrasaction='ignore')
                if not appending_to_existing_file:
                    writer_bus_routes.writeheader()
                for row in reader:
                    if row['route_type'] == '3':
                        writer_bus_routes.writerow(row)
"
getting median of particular rows of array based on index,"In [570]: import numpy as np

In [571]: idx = np.array([0,0,0,1,1,1,2,2,2,3,3,3,4,4,5,5])

In [572]: values = np.array([1.2,3.1,3.1,3.1,3.3,1.2,3.3,4.1,5.4,6,6,6.2,6,7,7.2,7.2])
"
How can I build a regular expression which has options part,">>> patt = Word(alphas)(""desc"") + OneOrMore(Group(integer*4 + Suppress(',')))(""numgroups"")
"
Why Python does not support record type i.e. mutable namedtuple,"class Record(object):
    __slots__= ""attribute1"", ""attribute2"", ""attribute3"",

    def items(self):
        ""dict style items""
        return [
            (field_name, getattr(self, field_name))
            for field_name in self.__slots__]

    def __iter__(self):
        ""iterate over fields tuple/list style""
        for field_name in self.__slots__:
            yield getattr(self, field_name)

    def __getitem__(self, index):
        ""tuple/list style getitem""
        return getattr(self, self.__slots__[index])

>>> r= Record()
>>> r.attribute1= ""hello""
>>> r.attribute2= ""there""
>>> r.attribute3= 3.14

>>> print r.items()
[('attribute1', 'hello'), ('attribute2', 'there'), ('attribute3', 3.1400000000000001)]
>>> print tuple(r)
('hello', 'there', 3.1400000000000001)
"
Spark union of multiple RDDs,"def unionAll(*dfs):
    first, *rest = dfs  # Python 3.x, for 2.x you'll have to unpack manually
    return first.sql_ctx.createDataFrame(
        first.sql_ctx._sc.union([df.rdd for df in dfs]),
        first.schema
    )
"
Change parent in xml by Python (lxml),"root = lxml.etree.fromstring(xml)
a = root.find('.//a')
parent = lxml.etree.Element('new_parent')
parent.extend(a)
a.append(parent)
"
how to set the index page in django like http://127.0.0.1:8000/,"url(r'^polls/',include('polls.urls',namespace=""polls"")),   
"
List of zeros in python,">>> zerolistmaker(4)
[0, 0, 0, 0]
>>> zerolistmaker(5)
[0, 0, 0, 0, 0]
>>> zerolistmaker(15)
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
>>> 
"
Find multiple maximum values in a 2d array fast,"full:
[[67 93 18 84 58 87 98 97]
 [48 74 33 47 97 26 84 79]
 [37 97 81 69 50 56 68  3]
 [85 40 67 85 48 62 49  8]
 [93 53 98 86 95 28 35 98]
 [77 41  4 70 65 76 35 59]
 [11 23 78 19 16 28 31 53]
 [71 27 81  7 15 76 55 72]]
x = [0 2 4 4 0 1 4 0]
y = [6 1 7 2 7 4 4 1]
Largest values: [98 97 98 98 97 97 95 93]
Compare to:     [93 95 97 97 97 98 98 98]
"
Celery tasks immediately autodiscover,"app.autodiscover_tasks(pfiles, force=True)
"
Why am I getting duplicate links ? And how do I fetch links on the next pages?,"def get_all(url, base):
    r = requests.get(url)
    page = r.text

    soup = BeautifulSoup(page)
    for team_links in soup.select(""div.details h3 a""):
        yield (urljoin(base, team_links[""href""]))
    nxt = soup.find(""div"", {""class"": ""pages""}).find(""span"", text=""Next"")
    while nxt:
        r = requests.get(urljoin(base, nxt.find_previous(""a"")[""href""]))
        page = r.text
        soup = BeautifulSoup(page)
        for team_links in soup.select(""div.details h3 a""):
            yield (urljoin(base, team_links[""href""]))
        nxt = soup.find(""div"", {""class"": ""pages""}).find(""span"", text=""Next"")
"
How to get the length of a cell value in pandas dataframe?,"         Event  EventCount
0      abc/def           2
1          abc           1
2  abc/def/hij           3
"
Running statements in 'parallel',"using std::tie;
using std::tuple;
tie(ones, twos) = tuple<int,int>((ones ^ n) ^ ~twos, (ones & n) | (twos & ~n));
"
How can I verify a cryptographic hash created by Python's Passlib using Node.js?,"var sha512crypt = require(""sha512crypt-node"").sha512crypt;

// origHash is the hash generated by passlib    
var origHash = ""$6$rounds=100000$5YnTXatKh4b1pLjp$3QQjVIfjrbiTakj.wkaw1woAcFiPRAjJP2U/b3BiGW4m8OvI8x0tgw1bb63dNQWMUl1uYNDBcTO3tWgrJ6eHh1"",
    parts = origHash.split('$'),
    rounds = parts[2],
    salt = '$' + parts[1] + '$' + rounds + '$' + parts[3],
    password = ""password"";

var hash = sha512crypt(password, salt);
console.log(""verified"", hash === origHash);
"
Modifying the warning message when deleting an object in django admin?,"storage = messages.get_messages(request)
for message in storage:
    do_something_with(message)
"
Load web page in python AFTER JavaScripts executes,"azul.
(Quizá alterac. del ár. hisp. lazawárd, este del ár. lāzaward, este del persa laǧvard o lažvard, y este del sánscr. rājāvarta, rizo del rey).
1. adj. Del color del cielo sin nubes. Es el quinto color del espectro solar. U. t. c. s.
2. m. El cielo, el espacio. U. m. en leng. poét.
3. m. Méx. Miembro del cuerpo de Policía.
~ de cobalto.
[... etc ...]
"
How can I identify invisible characters in python strings?,"print( [data] )
# or
print( repr(data) )
"
Checking if elements exist in list using python,">>> 'a' in ['a'] == True
False
>>> ('a' in ['a']) and (['a'] == True)
False
>>> ('a' in ['a']) == True
True
"
Can multiple Django sites be run effectively off a single Heroku app?," http://customer1.myapp.com/
 http://customer2.myapp.com/
"
How do I calculate all pairs of vector differences in numpy?,"In [6]: x
Out[6]: 
array([[6, 5, 3],
       [4, 3, 5],
       [0, 6, 7],
       [8, 4, 1]])

In [7]: x[:,None,:] - x
Out[7]: 
array([[[ 0,  0,  0],
        [ 2,  2, -2],
        [ 6, -1, -4],
        [-2,  1,  2]],

       [[-2, -2,  2],
        [ 0,  0,  0],
        [ 4, -3, -2],
        [-4, -1,  4]],

       [[-6,  1,  4],
        [-4,  3,  2],
        [ 0,  0,  0],
        [-8,  2,  6]],

       [[ 2, -1, -2],
        [ 4,  1, -4],
        [ 8, -2, -6],
        [ 0,  0,  0]]])
"
multiple call to a function to return a list of accumulated result,"stocks = [('rsi1', 'macd1','capratio1','other1'),
         ('rsi2','macd2','capratio2','other2'),
         ('rsi3', 'macd3','capratio3','other3')]

S = Statistician()
S.read_stocks(stocks)

#define a closure function        
def statisticCollector(statistician, key):
    def collect():
        return statistician.stock_stats(key)
    return collect

#instanciate the closed function
collectRSI = statisticCollector(S, 'RSI')
collectMACD= statisticCollector(S, 'MACD')

if __name__ == ""__main__"":
    print(collectRSI())
    print(collectMACD())
"
Most idiomatic way of applying modulo to list in python,"def f(values, x):
    return {i % x for i in values}
"
Process string-valued columns from a CSV file with Pandas,">>> df

   x     subject
0  1        math
1  2  literature
2  3        math
3  4        math
4  5     science

>>> df['num'] = df.subject.map({'math':0,'literature':1,'science':2})
>>> df

   x     subject  num
0  1        math    0
1  2  literature    1
2  3        math    0
3  4        math    0
4  5     science    2
"
Including a grammar with CMU pocketsphinx gstreamer,"    g_object_set(G_OBJECT(filter), ""lm"", MODELDIR ""/lm/en/turtle.DMP"", NULL);
"
How can I keep track of equivalent functions in different programming languages?,"from itertools import permutations
from collections import defaultdict

dd = defaultdict(dict)
for row in correspondingFunctionDatabase:
    for fst, snd in permutations(row, 2):
        dd[tuple(fst)][snd[0]] = snd[1]

print dd['Java', 'System.out.println']['Python']
# print
print dd['JavaScript', 'eval(statement)']['Python']
# eval(statement)
print dd['JavaScript', 'eval(statement)'].get('FakeLanguage', 'No Matching Function')
# No Matching Function
"
How do I unpack a list with fewer variables?,"(name, view, id), tokens = k[:3], k[3:]
"
Probability tensor multiplication using pandas.DataFrame,"In [38]: P1[X.index.get_level_values(""P1"")].values
Out[38]: array([ 0.4,  0.4,  0.6,  0.6])
"
How to assign variable to listed items in python?,"items = ['a','b','c']
print(items[0])
"
Get only last part of xpath,"Position: 4, XPath: /a/b/c
Position: 9, XPath: /a/b/d
"
Does PyQT4 signal.connect keep objects live?,"first
Done
second
"
How do I set a matplotlib colorbar extents?,"import numpy as NP
from matplotlib import pyplot as PLT

A = NP.random.random_integers(0, 10, 100).reshape(10, 10)
fig = PLT.figure()
ax1 = fig.add_subplot(111)

cax = ax1.imshow(A, interpolation=""nearest"")

# set the tickmarks *if* you want cutom (ie, arbitrary) tick labels:
cbar = fig.colorbar(cax, ticks=[0, 5, 10])

# note: 'ax' is not the same as the 'axis' instance created by calling 'add_subplot'
# the latter instance i bound to the variable 'ax1' to avoid confusing the two
cbar.ax.set_yticklabels([""lo"", ""med"", ""hi""])

PLT.show()
"
How to make an iterable class in Python in which only a specific type is allowed to be the element?,"lst1 = MyList(list)
lst2 = MyList(int)
"
Extra parameter for Django models,"Foo(name=""Bill Gates"").save(extra_param=True)

def save(self, *args, **kwargs):
    ... 
    print kwargs[""extra_param""]
"
How to comment parameters for pydoc,"""""""
The ``obvious`` module
======================

Use it to import very obvious functions.

:Example:

>>> from obvious import add
>>> add(1, 1)
2

This is a subtitle
-------------------

You can say so many things here ! You can say so many things here !
You can say so many things here ! You can say so many things here !
You can say so many things here ! You can say so many things here !
You can say so many things here ! You can say so many things here !

This is another subtitle
------------------------

Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo
consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse
cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non
proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

""""""

def add(a, b):
    """"""
    Adds two numbers and returns the result.

    This add two real numbers and return a real result. You will want to
    use this function in any place you would usually use the ``+`` operator
    but requires a functional equivalent.

    :param a: The first number to add
    :param b: The second number to add
    :type a: int
    :type b: int
    :return: The result of the addition
    :rtype: int

    :Example:

    >>> add(1, 1)
    2
    >>> add(2.1, 3.4)  # all int compatible types work
    5.5

    .. seealso:: sub(), div(), mul()
    .. warnings:: This is a completly useless function. Use it only in a 
              tutorial unless you want to look like a fool.
    .. note:: You may want to use a lambda function instead of this.
    .. todo:: Delete this function. Then masturbate with olive oil.
    """"""
    return a + b
"
changing the contents of a file applying different conditions,"import sys

def main(src, dest):
    with open(dest, 'w') as output:
        with open(src) as source:
            for line in source:
                try:
                    start, end, sound = line.split()
                except ValueError:
                    continue
                if sound == 'ay':
                    start = int(start)
                    end = int(end)
                    offset = (end - start) // 2
                    output.write('%s %s ao\n' % (start, start + offset))
                    output.write('%s %s ih\n' % (start + offset, end))
                else:
                    output.write(line)

if __name__ == ""__main__"":

    main(*sys.argv[1:])
"
python - increase array size and initialize new elements to zero,"import numpy as np

A = np.array([[1, 2 ],[2, 3]])   # Input
A_new = np.lib.pad(A, ((0,1),(0,2)), 'constant', constant_values=(0)) # Output
"
SQLAlchemy - Using Relationships to filter by class of row type,"session.query(Order).filter(and_(EventsAssoc.type==""corporate"",Event.name==""Big Corporation""))
"
counting the number of key value pairs in a dictionary,"{k: sum(1 for val in v.itervalues() if val == 'available') for k, v in seats.iteritems()}
"
How can I place a table on a plot in Matplotlib?,"import pylab as plt
import matplotlib as mpl

mpl.rc('text', usetex=True)
plt.figure()
ax=plt.gca()
y=[1,2,3,4,5,4,3,2,1,1,1,1,1,1,1,1]
#plt.plot([10,10,14,14,10],[2,4,4,2,2],'r')
col_labels=['col1','col2','col3']
row_labels=['row1','row2','row3']
table_vals=[11,12,13,21,22,23,31,32,33]
table = r'''\begin{tabular}{ c | c | c | c } & col1 & col2 & col3 \\\hline row1 & 11 & 12 & 13 \\\hline row2 & 21 & 22 & 23 \\\hline  row3 & 31 & 32 & 33 \end{tabular}'''
plt.text(9,3.4,table,size=12)
plt.plot(y)
plt.show()
"
Delete order number in django,"/quote/service_order/(\d+)/(\d+)
"
Python 2.7: replace method of string object deprecated,"string.replace(""bla"", ""a"", ""b"")
"
Most efficient way of keeping only the unique items in a list in Python,">>> set([1,2,3,2,3,4,5,6,5,6])
set([1, 2, 3, 4, 5, 6])
"
Plotting large arrays in pyqtgraph,"import pyqtgraph as pg
import numpy as np
app = pg.mkQApp()
data = np.random.normal(size=(120,20000), scale=0.2) + \
       np.arange(120)[:,np.newaxis]
view = pg.GraphicsLayoutWidget()
view.show()
w1 = view.addPlot()
now = pg.ptime.time()
for n in data:
    w1.plot(n)
print ""Plot time: %0.2f sec"" % (pg.ptime.time()-now)
app.exec_()
"
How to run an operation on a collection in Python and collect the results?,">>> y=5
>>> a=[1,2,3]
>>> [x*y for x in a]
[5, 10, 15]
"
Using re.split() for two { } in python,"re.split(r'{|}', str)
"
Rolling mean with customized window with Pandas,"pd.rolling_mean(data, window=5, center=True)
"
C Python: Running Python code within a context,"code = """"""
myvar = 300
def func():
    return myvar

func()
""""""
d = {}
eval(compile(code, ""<str>"", ""exec""), d, d)
"
Parsing string sections,"data=[]
ss=((0,19),(20,41),(42,80))
with open('/tmp/p.txt','r') as f:
    for n,line in enumerate(f):
        fields={}
        for i,j in ss:
            field=line[i:j]
            t=field.split(':')
            fields[t[0].strip()]=t[1].strip()
        data.append(fields)   
"
How to use all of the flash memory on an embedded unix system," $ yes > /path/to/my/device/yes.txt
"
Django 1.5 url redirect with regex?,"url(r'^$', UserRedirectView.as_view(), name='myapp_index'),
"
"Understanding ""runwithfriends"" facebook-app sample code","def parse_signed_request(signed_request, secret):
    """"""
    Parse signed_request given by Facebook (usually via POST),
    decrypt with app secret.

    Arguments:
    signed_request -- Facebook's signed request given through POST
    secret -- Application's app_secret required to decrpyt signed_request
    """"""

    if '.' in signed_request:
        (esig, payload) = signed_request.split('.')
    else:
        return {}

    sig = urlsafe_b64decode(str(esig))
    data = _parse_json(urlsafe_b64decode(str(payload)))

    if not isinstance(data, dict):
        raise SignedRequestError('Pyload is not a json string!')
        return {}

    if data['algorithm'].upper() == 'HMAC-SHA256':
        if hmac.new(secret, payload, hashlib.sha256).digest() == sig:
            return data
    else:

        raise SignedRequestError('Not HMAC-SHA256 encrypted!')

    return {}


def get_user_from_cookie(cookies, app_id, app_secret):
    """"""Parses the cookie set by the official Facebook JavaScript SDK.

    cookies should be a dictionary-like object mapping cookie names to
    cookie values.

    If the user is logged in via Facebook, we return a dictionary with the
    keys ""uid"" and ""access_token"". The former is the user's Facebook ID,
    and the latter can be used to make authenticated requests to the Graph API.
    If the user is not logged in, we return None.

    Download the official Facebook JavaScript SDK at
    http://github.com/facebook/connect-js/. Read more about Facebook
    authentication at http://developers.facebook.com/docs/authentication/.
    """"""
    cookie = cookies.get('fbsr_' + app_id, '')
    if not cookie:
        return None
    response = parse_signed_request(cookie, app_secret)
    if not response:
        return None

    args = dict(code=response['code'], client_id=app_id,
                client_secret=app_secret, redirect_uri='')

    file = \
        urllib.urlopen('https://graph.facebook.com/oauth/access_token?'
                       + urllib.urlencode(args))
    try:
        token_response = file.read()
    finally:
        file.close()

    access_token = cgi.parse_qs(token_response)['access_token'][-1]
    logging.debug('returning cookie')
    return dict(uid=response['user_id'], access_token=access_token)
"
How to install 2 Anacondas (Python 2.7 and 3.4) on Mac OS 10.9,"conda create -n python2 python=2.7 anaconda
"
Fastest way to match substring from large dict,">>> search('aabbccdcabcbbacdaaa', {'aaa', 'acd', 'adb', 'bccd', 'cbbb', 'abc'})
{'aaa', 'abc', 'acd', 'bccd'}
"
"RDD transformation map, Python","from itertools import islice

# Dummy data
with open(""/tmp/foo"", ""w"") as fw:
    fw.writelines([""foo"", ""1.0"", ""2.0"", ""3.0""])

def process_part(i, iter):
    if i == 0:
        # We could use enumerate as well
        for x in islice(iter, 1):
            yield x
    for x in iter:
        yield float(x)

(sc.textFile(""foo.txt"")
    .mapPartitionsWithIndex(process_part)
    .collect())
## ['""foo""', 1.0, 2.0, 3.0, 4.0]
"
Template Python list with default element values,"template_tuple = (0, 0, 'X', 0, 'Y', 'Z')
template_tuple_len = len(template_tuple)

def extract_normalized_fields_from_row(row):
    split_row = row.strip().split('\t')
    return [v if len(v) else template_tuple[i] for (i, v) in enumerate(
            split_row + [''] * (template_tuple_len - len(split_row)))]

for row in (
    '\t'.join(('1', '2', '3', '4', '5', '6')),
    '\t'.join(('1', '', '3', '4', '5', '6')),
    '\t'.join(('1', '2', '3', '4'))
    ):
    print extract_normalized_fields_from_row(row)
"
Print the key of the max value in a dictionary the pythonic way,"print max(d, key=d.get)
"
Summing elements in a list,"my_list = range(10, 17)
my_list
[10, 11, 12, 13, 14, 15, 16]

sum(my_list)
91
"
Python nose test inheritance: load unit test fixtures from subclasses,"class Something(unittest.TestCase):
    ...
"
"In Python, how to sum nested lists: [[1,0], [1,1], [1,0]] → [3,1]","b = list(map(sum,zip(*a)))
"
Calculate permutations,"def solve(d, target, total, keys, avoid):
  if total <= target:     # omit this check if values can be negative
    if keys:
      k = keys[0]
      for v in d[k]:
        if not (v in avoid):
          for s in solve(d, target, total+v, keys[1:], avoid.union([v]) ):
            yield s + [(k,v)]
    elif target == total:
      yield []

def test1():
  d = {'a':(1,2,3), 'b':(4,5), 'c':(1,3,5) }
  for s in solve(d, 10, 0, ""abc"", set([])):
    print s

def test2():
  d = {'a':(1,2,3), 'b':(1,2,3), 'c':(1,2,3) }
  for s in solve(d, 6, 0, ""abc"", set([])):
    print s
"
Python Classes: adding dynamic attributes to methods,">>> foo = Foo({'k1':1,'k2':2})
>>> foo.return_d.k1
1
"
Raspberry RFSniffer read output with python,"os.system(""sudo /home/pi/433Utils/RPi_utils/RFSniffer >output.txt & pkill --signal SIGINT RFSniffer"")
f = open(""output.txt"",""r"")
readf = f.read()
for line in readf:
    print line,
#close file
if f.closed == ""False"":
    f.close()
"
Z3: How to select 4 bytes from array of 8-bits?,"def Select4(M, I):
  return Concat(Select(M, I + 3), Select(M, I + 2), Select(M, I+1), Select(M, I))
"
Disable autosave on update in SQLAlchemy,"session.autoflush = False
"
password generator using Python,"import string
import random
characters = string.ascii_letters + string.punctuation  + string.digits

password = """"
password_length = random.randint(8, 16)

for x in range(password_length):
    char = random.choice(characters)
    password = password + char

print password
"
Python Code to read File and Extract data,"  for confidence in line:
"
User defined celery task class : init is getting called during import,"from proj import tasks
tasks.my_task.delay('hi', 'hello')
"
Openpyxl to write in a single cell,"def append(self, list_or_dict):
    """"""Appends a group of values at the bottom of the current sheet.

    * If it's a list: all values are added in order, starting from the first column
    * If it's a dict: values are assigned to the columns indicated by the keys (numbers or letters)

    :param list_or_dict: list or dict containing values to append
    :type list_or_dict: list/tuple or dict

    Usage:

    * append(['This is A1', 'This is B1', 'This is C1'])
    * **or** append({'A' : 'This is A1', 'C' : 'This is C1'})
    * **or** append({0 : 'This is A1', 2 : 'This is C1'})
"
Python calculate lots of distances quickly,"from scipy.spatial import cKDTree

tree = cKDTree(data)
# where data is (nshops, ndim) containing the Euclidean coordinates of each shop
# in units of km

pairs = tree.query_pairs(50, p=2)   # 50km radius, L2 (Euclidean) norm
"
How can I query a joints sao (secondary axis world orientation)? Maya Python,"if mc.objExists ('L_ShoulderOrient_NODE'): mc.delete ('L_ShoulderOrient_NODE')
mc.shadingNode ('transform', au=1, n='L_ShoulderOrient_NODE')
mc.addAttr ('L_ShoulderOrient_NODE', ln='jointOrient', at='enum', en='yup', k=1)
"
Confusing Behaviour of regex in Python,">>> re.findall(r'\w+\b', s)
['This', 'is', 'a', 'regular', 'sentence']
"
Removing a list of characters in string,">>> sc = set(chars_to_remove)
>>> ''.join([c for c in subj if c not in sc])
'ABC'
"
Theta(n**2) and Theta(n*lgn) algorithm perform unproperly,"for p1 in range(len(a)-1):
"
Numpy loop using an index,"A[index] += W
A += np.bincount(index, W, minlenght=len(A))
"
Python - Searching file lines for multiple patterns efficiently,">>> s = '''Security/Microsoft-Windows-Security-Auditing ID [4624] :EventData/Data -> SubjectUserSid = S-1-0-0 SubjectUserName = - SubjectDomainName = - SubjectLogonId = 0x0000000000000000 TargetUserSid = S-1-1-11-1111111111-1111111111-1111111111-1111 TargetUserName = johndoe TargetDomainName = TestDomain TargetLogonId = 0x0000000001111111 LogonType = 3 LogonProcessName = NtLmSsp  AuthenticationPackageName = NTLM WorkstationName = TestWorkstation LogonGuid = {00000000-0000-0000-0000-000000000000} TransmittedServices = - LmPackageName = NTLM V2 KeyLength = 128 ProcessId = 0x0000000000000000 ProcessName = - IpAddress = 1.1.1.1 IpPort = 11111 '''
>>> import re
>>> for item in re.findall(r'([A-Za-z]+) = (\S+)', s):
...     print('{} = {}'.format(*item))
...
SubjectUserSid = S-1-0-0
SubjectUserName = -
SubjectDomainName = -
SubjectLogonId = 0x0000000000000000
TargetUserSid = S-1-1-11-1111111111-1111111111-1111111111-1111
TargetUserName = johndoe
TargetDomainName = TestDomain
TargetLogonId = 0x0000000001111111
LogonType = 3
LogonProcessName = NtLmSsp
AuthenticationPackageName = NTLM
WorkstationName = TestWorkstation
LogonGuid = {00000000-0000-0000-0000-000000000000}
TransmittedServices = -
LmPackageName = NTLM
KeyLength = 128
ProcessId = 0x0000000000000000
ProcessName = -
IpAddress = 1.1.1.1
IpPort = 11111
"
How to make specific parts of a text line indented properly?,">>> '{:<20}'.format('Hello World!') # Add spaces to the right to reach 20 characters
'Hello World!        '
>>> '{:>20}'.format('Hello World!') # Add spaces to the left
'        Hello World!'
>>> '{:20}'.format('Hello World!') # Use default alignment for the type of object
'Hello World!        ' # For string it is left aligned
"
How to zoom out of page using python selenium,"from selenium import webdriver

def main():
    browser = webdriver.Chrome()
    browser.set_window_size(1000, 1000)
    browser.get(""http://yoursite.com"")
    browser.execute_script(""$('#values').css('zoom', 5);"")

if __name__ == '__main__':
    main()
"
Iterating over a list to make widgets,"for label in self.labels:
    label.some_method()
    do_something(label)
    ...
"
resize borderless window with vpaned in python+gtk3,"def on_resize(self, widget, event):
    if Gdk.ModifierType.BUTTON1_MASK & event.get_state() != 0:
        mouse_y = event.device.get_position()[2]
        new_height = mouse_y - self.get_position()[1]
        if new_height > 0:
            self.resize(self.get_allocation().width, new_height)
            self.show()
"
How to delete dictionary from list of dictionaries in JSON,"contacts = {'Aname':{'name': name,
                     'phone': phone,
                     'email': email
                     },
            'Bname':{'name': name,
                     'phone': phone,
                     'email': email
                    }
           }
"
Is there a map without result in python?,"Filter output: ()
Side effect result: 10
"
Which language is easiest and fastest to work with XML content?,"""""""One of many builders.  This changes all the time to fit
specific needs and situations.  The goal is to keep this
short and to-the-point so that it has the mapping and nothing
but the mapping.
""""""

import model

class MyTargetBuilder( object ):
    def makeFromXML( self, element ):
        result= model.MyTargetObject()
        result.someAttr= element.findtext( ""Some"" )
        result.anotherAttr= element.findtext( ""Another"" )
        result.this= int( element.findtext( ""This"" ) )
        result.that= float( element.findtext( ""that"" ) )
        return result
"
"Detecting ""♪"" in String","if not u'\u266a' in line:
"
How to access a specific row in a DataFrame,"import pandas as pd
from io import StringIO

data = """"""
id tweet
12  ""this is the first tweet""
34  ""this is the second tweet""
48  ""this is the third tweet""
59  ""finally the fourth tweet""
""""""

df = pd.read_csv(StringIO(data), delimiter='\s+')
"
Conditionally installing importlib on python2.6,"# py26.txt
-r base.txt
importlib
"
Putting a zipped object into a dictionary,">>> _artist_name = ['artist {}'.format(i + 1) for i in range(30)]
>>> _artist_title = ['title {}'.format(i + 1) for i in range(30)]
>>> _xl = ['xl image {}'.format(i + 1) for i in range(30)]
>>> _l = ['l image {}'.format(i + 1) for i in range(30)]
>>> _m = ['m image {}'.format(i + 1) for i in range(30)]
>>> _s = ['s image {}'.format(i + 1) for i in range(30)]
>>> 
>>> from pprint import pprint
>>> track_keys = (""artist"", ""title"", ""image_xl"", ""image_l"", ""image_m"", ""image_s"")
>>> zipped = zip(_artist_name, _artist_title, _xl, _l, _m, _s)
>>> pprint([dict(zip(track_keys, values)) for values in zipped])
[{'artist': 'artist 1',
  'image_l': 'l image 1',
  'image_m': 'm image 1',
  'image_s': 's image 1',
  'image_xl': 'xl image 1',
  'title': 'title 1'},
 {'artist': 'artist 2',
  'image_l': 'l image 2',
  'image_m': 'm image 2',
  'image_s': 's image 2',
  'image_xl': 'xl image 2',
  'title': 'title 2'},
 {'artist': 'artist 3',
  'image_l': 'l image 3',
  'image_m': 'm image 3',
  'image_s': 's image 3',
  'image_xl': 'xl image 3',
  'title': 'title 3'},
 {'artist': 'artist 4',
  'image_l': 'l image 4',
  'image_m': 'm image 4',
  'image_s': 's image 4',
  'image_xl': 'xl image 4',
  'title': 'title 4'},
 {'artist': 'artist 5',
  'image_l': 'l image 5',
  'image_m': 'm image 5',
  'image_s': 's image 5',
  'image_xl': 'xl image 5',
  'title': 'title 5'},
 {'artist': 'artist 6',
  'image_l': 'l image 6',
  'image_m': 'm image 6',
  'image_s': 's image 6',
  'image_xl': 'xl image 6',
  'title': 'title 6'},
 {'artist': 'artist 7',
  'image_l': 'l image 7',
  'image_m': 'm image 7',
  'image_s': 's image 7',
  'image_xl': 'xl image 7',
  'title': 'title 7'},
 {'artist': 'artist 8',
  'image_l': 'l image 8',
  'image_m': 'm image 8',
  'image_s': 's image 8',
  'image_xl': 'xl image 8',
  'title': 'title 8'},
 {'artist': 'artist 9',
  'image_l': 'l image 9',
  'image_m': 'm image 9',
  'image_s': 's image 9',
  'image_xl': 'xl image 9',
  'title': 'title 9'},
 {'artist': 'artist 10',
  'image_l': 'l image 10',
  'image_m': 'm image 10',
  'image_s': 's image 10',
  'image_xl': 'xl image 10',
  'title': 'title 10'},
 {'artist': 'artist 11',
  'image_l': 'l image 11',
  'image_m': 'm image 11',
  'image_s': 's image 11',
  'image_xl': 'xl image 11',
  'title': 'title 11'},
 {'artist': 'artist 12',
  'image_l': 'l image 12',
  'image_m': 'm image 12',
  'image_s': 's image 12',
  'image_xl': 'xl image 12',
  'title': 'title 12'},
 {'artist': 'artist 13',
  'image_l': 'l image 13',
  'image_m': 'm image 13',
  'image_s': 's image 13',
  'image_xl': 'xl image 13',
  'title': 'title 13'},
 {'artist': 'artist 14',
  'image_l': 'l image 14',
  'image_m': 'm image 14',
  'image_s': 's image 14',
  'image_xl': 'xl image 14',
  'title': 'title 14'},
 {'artist': 'artist 15',
  'image_l': 'l image 15',
  'image_m': 'm image 15',
  'image_s': 's image 15',
  'image_xl': 'xl image 15',
  'title': 'title 15'},
 {'artist': 'artist 16',
  'image_l': 'l image 16',
  'image_m': 'm image 16',
  'image_s': 's image 16',
  'image_xl': 'xl image 16',
  'title': 'title 16'},
 {'artist': 'artist 17',
  'image_l': 'l image 17',
  'image_m': 'm image 17',
  'image_s': 's image 17',
  'image_xl': 'xl image 17',
  'title': 'title 17'},
 {'artist': 'artist 18',
  'image_l': 'l image 18',
  'image_m': 'm image 18',
  'image_s': 's image 18',
  'image_xl': 'xl image 18',
  'title': 'title 18'},
 {'artist': 'artist 19',
  'image_l': 'l image 19',
  'image_m': 'm image 19',
  'image_s': 's image 19',
  'image_xl': 'xl image 19',
  'title': 'title 19'},
 {'artist': 'artist 20',
  'image_l': 'l image 20',
  'image_m': 'm image 20',
  'image_s': 's image 20',
  'image_xl': 'xl image 20',
  'title': 'title 20'},
 {'artist': 'artist 21',
  'image_l': 'l image 21',
  'image_m': 'm image 21',
  'image_s': 's image 21',
  'image_xl': 'xl image 21',
  'title': 'title 21'},
 {'artist': 'artist 22',
  'image_l': 'l image 22',
  'image_m': 'm image 22',
  'image_s': 's image 22',
  'image_xl': 'xl image 22',
  'title': 'title 22'},
 {'artist': 'artist 23',
  'image_l': 'l image 23',
  'image_m': 'm image 23',
  'image_s': 's image 23',
  'image_xl': 'xl image 23',
  'title': 'title 23'},
 {'artist': 'artist 24',
  'image_l': 'l image 24',
  'image_m': 'm image 24',
  'image_s': 's image 24',
  'image_xl': 'xl image 24',
  'title': 'title 24'},
 {'artist': 'artist 25',
  'image_l': 'l image 25',
  'image_m': 'm image 25',
  'image_s': 's image 25',
  'image_xl': 'xl image 25',
  'title': 'title 25'},
 {'artist': 'artist 26',
  'image_l': 'l image 26',
  'image_m': 'm image 26',
  'image_s': 's image 26',
  'image_xl': 'xl image 26',
  'title': 'title 26'},
 {'artist': 'artist 27',
  'image_l': 'l image 27',
  'image_m': 'm image 27',
  'image_s': 's image 27',
  'image_xl': 'xl image 27',
  'title': 'title 27'},
 {'artist': 'artist 28',
  'image_l': 'l image 28',
  'image_m': 'm image 28',
  'image_s': 's image 28',
  'image_xl': 'xl image 28',
  'title': 'title 28'},
 {'artist': 'artist 29',
  'image_l': 'l image 29',
  'image_m': 'm image 29',
  'image_s': 's image 29',
  'image_xl': 'xl image 29',
  'title': 'title 29'},
 {'artist': 'artist 30',
  'image_l': 'l image 30',
  'image_m': 'm image 30',
  'image_s': 's image 30',
  'image_xl': 'xl image 30',
  'title': 'title 30'}]
"
Is there a way to subclass a generator in Python 3?,">>>> [ a for a in alphagen(10)]
['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J']
"
add leading zeros to a list of numbers in Python,">>> [""{:06d}"".format(item) for item in data]
['000001', '000010', '000313', '004000', '051234', '123456']
"
Comparison between adjacent elements in sequences,"[3, 0, 3, 0]
"
Is there a better way to broadcast arrays?,">>> a = numpy.arange(9).reshape(3, 3)
>>> numpy.broadcast_arrays(a, 1)[1]
array([[1, 1, 1],
       [1, 1, 1],
       [1, 1, 1]])
"
How to automatically rerun a python program after it finishes? Supervisord?,"[program:myprog]
command=/opt/myprog/bin/myprog --opt1 --opt2
directory=/opt/myprog
user=myuser
"
How to add objects from different rows of a Python list?,"out = []

while len(li):
    tmp = li.pop(0)
    i = 0
    while i < len(li):
        item = li[i]
        if tmp[0] == item[0] and tmp[2] == item[2] and tmp[3] == item[3]:
            tmp[1] = 'Sum'
            tmp[4] = '{:.3f}'.format((float(tmp[4]) + float(item[4])))
            tmp[6] = '{:.1f}\n'.format(float(tmp[6]) + float(item[6]))
            li.pop(i)
        else:
            i += 1
    out.append(tmp)
"
How to group similar items in a list?,">>> import os, itertools
>>> test = ['abc_1_2', 'abc_2_2', 'hij_1_1', 'xyz_1_2', 'xyz_2_2']
>>> [list(g) for _, g in itertools.groupby(test, lambda x: x.split('_')[0])]
[['abc_1_2', 'abc_2_2'], ['hij_1_1'], ['xyz_1_2', 'xyz_2_2']]
>>>
"
Variable in subprocess,"subprocess.check_output(""cat fable.txt | grep %s"" %variable, shell=True)
"
Hierarchical group sizes in Pandas,"def group_count(df,x):
    by = df['A'].groupby(level=x[0])
    return by.agg(lambda g: g.groupby(level=x[1]).ngroups)

lvl = [0,[0,1],[0,1,2]]
print pd.concat([group_count(df,x) for x in zip(lvl[:-1],lvl[1:])])

bar             1
baz             3
foo             1
qux             2
(bar, one)      2
(baz, four)     1
(baz, three)    2
(baz, two)      1
(foo, one)      2
(qux, one)      1
(qux, two)      1
"
how to know the type of sql query result before it is executed in sqlalchemy,"[c['type'].python_type for c in query.column_descriptions]
"
Comparing multiple dictionaries and generating another dictionary using python,"{'Hardness': 'Hard',
 'Hardy': 'Hard',
 'Hardy Boys': 'Hard',
 'Johnny': 'John',
 'Ron': 'Ron',
 'Ronald': 'Ron',
 'Ronaldo': 'Ron',
 'Ronny': 'Ron',
 'john': 'John',
 'johnny Bravo': 'John'}
"
When to split sub-apps into new apps,"from films.models.genre import Genre
from films.models.actor import Actor
from films.models.title import Title
from films.models.actorrole import ActorRole
"
Calculate a point along a line segment one unit from a end of the seg,">>> a = Vector(4,5,0)
>>> b = Vector(5,6,0)
>>> b - a
[1, 1, 0]
"
"List of strings in ints ['123 121','42 23','23 23']","[136, 145, 136, 149, 137, 145, 138, 145, 139, 145, 142, 149, 142, 153, 145, 153]
"
Scapy In A Script,"from scapy.all import *
import sys
sr(IP(dst=sys.argv[1])/ICMP())
"
dynamically extracting data from HTML page,"from HTMLParser import HTMLParser

class ListTags(HTMLParser):
    def __init__(self, tag, attr):
        HTMLParser.__init__(self)
        self.tag = tag
        self.attr = attr
        self.matches = []
    def handle_starttag(self, tag, attrs):
         if tag == self.tag:
            ad = dict(attrs)
            if self.attr in ad:
                self.matches.append(ad[self.attr])

>>> lt = ListTags('a', 'href')
>>> lt.feed(a)
>>> lt.matches
['test-or-something', 'something-else']
"
Python remove null items from list,"[[for i in inner_list if i!='null' and not i] for inner_list in list_value]
"
Checking if a tuple is in range,"if not (0 <= x <= 78 and 0 <= y <= 28):
    level.remove_obj(theobj)
"
how to set autocommit = 1 in a sqlalchemy.engine.Connection,"conn = engine.connect()
conn.execute(""INSERT INTO users VALUES (1, 'john')"")  # autocommits
"
How can I fire a Traits static event notification on a List?,"## Broken method definition: def _inputs_changed(self, old, new):
# container event static listeners must be in the form of _foo_items_changed()
def _inputs_items_changed(self, old, new):
    # static event listener for self.inputs
    if len(new.added) > 0:
        print ""Check it out, we added %s to self.items"" % new.added
    elif len(new.removed) > 0:
        print ""Check it out, we removed %s from self.items"" % new.removed
"
Fill larger matrix from smaller matrix,"a = np.array([[1,2,3,4],[5,6,7,8],[9,10,11,12]])
blockSize = 3
cols = 11
rows = 7
"
finding colors in Image and redraw on second image(using numpy),"import PIL
import Image
import numpy as np

i = 0
im = Image.open('%*s.bmp' % (1, i)).convert('RGB')
n_test = np.asarray(im)
r, g, b = np.rollaxis(n_test, axis=-1)
ni_test = np.empty(n_test.shape[:2], dtype=np.uint8)
ni_test.fill(255)

mask = (r >= 5) & (r <= 10) & (g >= 5) & (g <= 10) & (b >= 5) & (b <= 10)
ni_test[mask] = 0
im_test = Image.fromarray(ni_test, '1')
im_test.save('test_%*s.bmp' % (1, i))
"
Live Data Monitor: PyQtGraph,"curve = plotItem.plot(data)
curve.setPos(x, 0)  # Move the curve
"
How to share the global app object in flask?,"import myapplication.myviews.view
"
very specific substring retrieval and split,"static, dynamic = line.split(';', 1)
"
Python sort list of lists / ascending and then decending,"[['b', 1], ['b', 2], ['b', 3], ['a', 1], ['a', 2], ['a', 3]]
"
How to Clean Up subprocess.Popen Instances Upon Process Termination,"import os
import time
import signal
import subprocess

# Map child PID to Popen object
SUBPROCESSES = {}

# Define handler
def handle_sigchld(signum, frame):
    pid = os.wait()[0]
    print 'Subprocess PID=%d ended' % pid
    del SUBPROCESSES[pid]

# Handle SIGCHLD
signal.signal(signal.SIGCHLD, handle_sigchld)

# Spawn a couple of subprocesses
p1 = subprocess.Popen(['sleep', '1'])
SUBPROCESSES[p1.pid] = p1
p2 = subprocess.Popen(['sleep', '2'])
SUBPROCESSES[p2.pid] = p2

# Wait for all subprocesses to die
while SUBPROCESSES:
    print 'tick'
    time.sleep(1)

# Done
print 'All subprocesses died'
"
Determine number of row in matrix,"board = [
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9],
]
"
Python: Write array values into file,"highscores.append(wins)
# Print sorted highscores print to file
file = open('highscore.txt', 'w') #write to file
file.write('Highscores (number of wins out of 10 games):') 
for line in highscores:
     file.write(line)
file.close() #close file
"
indexing a data frame using multiple date time in Python,"joined
    Date  v
0  date2  2
"
How can i read these 2 words specifically?,"for b in a.split():
"
Find the longest common starting substring in a set of strings,"sharedStart(['interspecies', 'interstelar', 'interstate'])  //=> 'inters'
sharedStart(['throne', 'throne'])                           //=> 'throne'
sharedStart(['throne', 'dungeon'])                          //=> ''
sharedStart(['cheese'])                                     //=> 'cheese'
sharedStart([])                                             //=> ''
sharedStart(['prefix', 'suffix'])                           //=> ''
"
iterate over slices of an ndarray,"In [7]: a = np.arange(200*100*300).reshape(200, 100, 300)

In [8]: %timeit for j in xrange(100): a[:, j]
10000 loops, best of 3: 60.2 us per loop

In [9]: %timeit for j in xrange(100): a[:, j, :]
10000 loops, best of 3: 82.8 us per loop

In [10]: %timeit for j in np.rollaxis(a, 1): j
10000 loops, best of 3: 28.2 us per loop

In [11]: %timeit for j in np.swapaxes(a, 0, 1): j
10000 loops, best of 3: 26.7 us per loop
"
How to access a list and dictionary in same for loop at template level in Django,"<thead>
    <tr><th>{% trans ""Name Category"" %}</th><th>{% trans "" Message"" %}</th><th>{% trans ""Sub-categories"" %}</th></tr>
</thead>
<tbody>
{% for obj in obj %}
    <tr>

        <td>{{ obj.name }}</td><td> {{ obj.Message_slug }}</td>
        <td>
            {% for i in categ %}
                  {{ i }}
            {% endfor %}
        </td>

    </tr>
{% endfor %}
</tbody>
"
"matplotlib for loop to show, save and redraw all plots","def my_plotter(ax, t, z, est_z):
    ln1 = ax.plot(t, z, 'bo-', label='sample data')
    ln2 = ax.plot(t, est_z, 'go-', label='estimated sample data')
    ax.xlabel('time')
    ax.ylabel('data value')
    ax.grid(True)
    ax.legend()
    return ln1 + ln2

for i in xrange(2):
    # get the data
    t = a[i+1:(i+1)*60, 2]
    z = a[i+1:(i+1)*60, 3]
    est_z = a[i+1:(i+1)*60, 6]
    # make the figure
    fig, ax = plt.subplots()
    # do the plot
    my_plotter(ax, t, z, est_Z)
    # save
    fig.savefig('test_{}.png'.format(i))
"
"Python sys.argv to preserve ' ' or """"","python test.py blah=\'blah\'
"
Os.walk wont work with directory matched with regex,"import os, fnmatch

#
# This wrapper for os.walk is based on Python Cookbook, 2.16.
# Added the exclude_dirs named parameter so that we can skip svn folders.
# Added the yield_files named parameter so that we can return only folders.
#

def walk_file_system (root, patterns='*', single_level=False, yield_folders=False, yield_files=True, exclude_dirs='.svn'):
    # Expand patterns from semicolon-separated string to list
    patterns = patterns.split (';')
    exclude_dirs = exclude_dirs.split (';')
    for path, subdirs, files in os.walk (root):
        for exclude_dir in exclude_dirs:
            for dir in subdirs:
                if fnmatch.fnmatch (dir, exclude_dir):
                    subdirs.remove(dir)
        fsnodes = []
        if yield_folders:
            fsnodes.extend(subdirs)
        if yield_files:
            fsnodes.extend(files)
        fsnodes.sort ( )
        for name in fsnodes:
            for pattern in patterns:
                if fnmatch.fnmatch (name, pattern):
                    yield os.path.join (path, name)
                    break
        if single_level:
            break
"
generating custom colorbar: match data with color scheme,"from mpl_toolkits.mplot3d import Axes3D
import matplotlib as mpl
import matplotlib.pyplot as plt
import numpy as np

fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
x, y = np.random.rand(2, 100) * 4
hist, xedges, yedges = np.histogram2d(x, y, bins=4)

elements = (len(xedges) - 1) * (len(yedges) - 1)
xpos, ypos = np.meshgrid(xedges[:-1]+0.25, yedges[:-1]+0.25)

xpos = xpos.flatten()
ypos = ypos.flatten()
zpos = np.zeros(elements)
dx = 0.5 * np.ones_like(zpos)
dy = dx.copy()
dz = hist.flatten()

#Define colormap and get values for barcolors from it
cmap = plt.cm.RdYlBu_r
norm = mpl.colors.Normalize(vmin=dz.min(), vmax=dz.max())
barcolors = plt.cm.ScalarMappable(norm, cmap)

#Plot bar3d
ax.bar3d(xpos, ypos, zpos, dx, dy, dz, color=barcolors.to_rgba(dz),alpha=0.4,linewidth=0.5, zsort='average')

#Add colorbar
fig.subplots_adjust(bottom=0.25)
ax1 = fig.add_axes([0.05, 0.10, 0.9, 0.1])
cb1 = mpl.colorbar.ColorbarBase(ax1, cmap=cmap,
                                   norm=norm,
                                   orientation='horizontal')
plt.show()
"
php `exec` calls python script. how return strings from python?,"import json
print json.dumps([foo, bar])
"
Extend numpy array in a way compatible with builtin arrays,">>> np.append([1,2,3], [1,2,3])
array([1, 2, 3, 1, 2, 3])
"
How can I make a custom conversion from an object to a dict?,"def __iter__(self):
    for key in ""y"", ""z"":
        yield key, getattr(self, key)
"
indexing/slicing in numpy array to modify it,">>> A = np.arange(5) + 0.5
>>> B = np.array([0, 1, 0, 2, 0, 3, 0, 4])
>>> np.add.at(A, B, 1)
>>> A
array([ 4.5,  2.5,  3.5,  4.5,  5.5])
"
How to remove line breaks and white space from variable in jQuery,"var id = $.trim( $tr.data('contact-id') );
"
Python date format?,">>> from datetime import datetime
>>> datetime.utcfromtimestamp(129893678626216000/1e8)
datetime.datetime(2011, 2, 28, 23, 46, 26, 262160)
"
How to find hidden attributes of Python objects? (attributes that don't appear in the dir(obj) list),"(['a', 'b', 'c'], ['__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__'])
"
How to open ssl socket using certificate stored in string variables in python,"            ret = SSL_CTX_use_certificate_chain_file(self->ctx,
                                                     cert_file);
"
Redirect print to string list?,"import sys
class ListStream:
    def __init__(self):
        self.data = []
    def write(self, s):
        self.data.append(s)

sys.stdout = x = ListStream()

for i in range(2):
    print ('i = ', i)

sys.stdout = sys.__stdout__
print(x.data)
"
How to make filename/path from Gtk+ (Python 3.4) FileChooserDialog accessible globally,"dialog.path
"
selecting rows in numpy ndarray based on the value of two columns,"a = np.array(xrange(5 * 3))
a.shape = (5, 3)
"
Find what customer has spent the most money across multiple payments,"class Purchase(models.Model):
    price = models.DecimalField(""Price"", max_digits=18, decimal_places=2)
    user = models.ForeignKey('auth.User', related_name='purchase_set')
"
How to make a text button which speeds up text animation,"def animate():
    <draw one frame of animation>
    if <there are more frames>:
        root.after(delay, animate)
"
Transforming stacked records into a columns in pandas,"label           label_a  label_b  label_c
report action                            
1      disable        1        1        1
2      alert          0        1        1
3      ignore         1        0        1
"
How to flatten a list of tuples and remove the duplicates?,"s = set()
result = []
for tup in lst:
    for el in tup:
        if el not in s:
            s.add(el)
            result.append(el)
"
Multikey Multivalue Non Deterministic python dictionary,"'red'           = [('car', 0.050), ('toy', 0.475), ('ballon', 0.475)]
'green'         = [('car', 0.050), ('toy', 0.475), ('ballon', 0.475)]
'blue'          = [('car', 0.425), ('toy', 0.150), ('ballon', 0.425)]
'blue,red'      = [('car', 0.050), ('toy', 0.475), ('ballon', 0.475)]
'green,red'     = [('car', 0.098), ('toy', 0.098), ('ballon', 0.800)]
'blue,green'    = [('car', 0.050), ('toy', 0.475), ('ballon', 0.475)]
'blue,green,red'= [('car', 0.050), ('toy', 0.475), ('ballon', 0.475)]
 default        = [('car', 0.050), ('toy', 0.475), ('ballon', 0.475)]
"
Several query params URL in DRF,"def do_something(request):
    # read the params first
    enterprise = request.GET['enterprise']
    ...
    # do something with those values
"
ZeroMQ - how to make a CLIENT to give up and try at a later time if the SERVER doesn't respond?,"my_client_context.setsockopt( zmq.LINGER, 0 ) # do not wait for anything
my_client_socket.close()                      # statefull close
my_client_context.term()                      # gracefull termination / release of resources ( no MEM leaks )
"
Python/Linux - unzip file while reading it,"class EncodingConverter:
    def __init__(self, fobj, encoding):
        self._iter_fobj = iter(fobj)
        self._encoding = encoding
    def __iter__(self):
        return self
    def __next__(self):
        return next(self._iter_fobj).decode(self._encoding)
"
Sort a list of lists with two index,"[u'2012-10-31', '0', 5020, '0', '0', '0', '0']
[u'2012-10-31', '1', 5256, '0', '0', '0', '0']
[u'2012-10-31', '2', 5748, '0', '0', '0', '0']
...
[u'2012-10-31', '21', 9266, '0', '0', '0', '0']
[u'2012-10-31', '22', 10526, '0', '0', '0', '0']
[u'2012-10-31', '23', 9570, '0', '0', '0', '0']
"
Vectorize a 2-dimensional function in python,"f_vec = np.vectorize(f)

In [470]: f_vec([0, 1, 2, 3], [1, 2, 3, 4])
Out[470]: array([1, 3, 5, 7])
"
How to find how many powers double 'n' is raised to to get to double 'n' in Java. Equivalent of Math.log in Python,">>> math.log(100, 10)
2.0
>>> math.log(27, 3)
3.0
"
What is the correct way to generate a json from file in GoogleAppEngine?,"var url = albums[1].songs[0].url;
"
Pandas combine rows that share an association,"second  item1  item2  item3  item4
first                             
item1       5      2      1      2
item2       2      4      1      1
item3       1      1      2      0
item4       2      1      0      3
"
Python/Django timestamp including milliseconds,">>> from django.utils import timezone
>>> tznow = timezone.now()
>>> '{:%d-%m-%Y:%H:%M:%S}.{:03d}'.format(tznow, tznow.microsecond // 1000)
'05-08-2013:15:36:00.339'
"
How do you use django-datatable-view,"url(r'^$', MyView.as_view(),  name='myview'),
"
Which is the simplest way to make a polynomial regression with sklearn?,"[  0.24052058   2.1426103   25.59437789]
"
How to round a number to significant figures in Python,">>> round(1234, -3)
1000.0
"
How can I write this with less redundancy/copy-paste?,"@login_required
@transaction.commit_manually
def submission_set_rank(request):   
    keys = {'rank1': 5, 'rank2': 4, 'rank3': 3, 'rank4': 2, 'rank5': 1}
    ranks = [request.GET.get(key,'') for key in keys]
    for ballot in BallotStats.objects.filter(object_id__in=ranks):
        ballot.score += keys[ballot.object_id]
        ballot.save()
    transaction.commit()

    return HttpResponseRedirect('/submissions/results/film/')
"
Python Unit testing with mock and patch a foreign modul,"def test_read(self):
    self.mock.inWaiting.return_value = 4
    self.mock.read.return_value = 'lulu'
    self.assertEqual(self.mc.read(), 'lulu')
    self.mock.read.assert_called_with(1)
"
Use columns from table using pandas,"print df['url']
0     CONNECT api-glb-ams.smoot.apple.com:443
1           CONNECT init.itunes.apple.com:443
2    GET http://www.rbc.ru/ajax/getnewsfeed/?
3       GET http://www.rbc.ru/ajax/mainjson/?
4     CONNECT api-glb-ams.smoot.apple.com:443
Name: url, dtype: object
"
"Python sum, why not strings?","$ python -m timeit -s 'import operator; strings = [""a""]*10000' 'r = reduce(operator.add, strings)'
100 loops, best of 3: 8.46 msec per loop
$ python -m timeit -s 'import operator; strings = [""a""]*10000' 'r = """".join(strings)'
1000 loops, best of 3: 296 usec per loop
"
How to convert unformatted time to a python time object,"Output
2015-06-26 21:07:19.108521
2015-06-26 21:07:11
2015-06-26 21:02:19
2015-06-26 10:07:19
2015-06-25 11:34:00
"
Calling C functions. Who is calling,"import traceback

def get_caller_info():
    filename, _, function_name, _ = traceback.extract_stack(limit=2)[1]
    return filename, function_name
"
Read sparse matrix in python,"A.todok().keys()
#  dict_keys([(0, 1), (0, 0), (1, 3), (1, 0), (0, 2), (1, 4)])
A.todok().items()
"
python.exe crushed while creating numpy array,"data = np.zeros([rows, cols], dtype='uint8')
for chunk_start in xrange(0, rows, rows/10):
    data[chunk_start: chunk_start+rows/10] = (
            np.random.randint(0, 100, (rows/10, cols)))
return data
"
Counting multiple letter groups in a string (python),"from collections import Counter

s = ""CTAACAAC""

def chunk_string(s, n):
    return [s[i:i+n] for i in range(len(s)-n+1)]

counter = Counter(chunk_string(s, 3))
# Counter({'AAC': 2, 'ACA': 1, 'CAA': 1, 'CTA': 1, 'TAA': 1})
"
Most efficient way to add an item and at the same time remove one from a list with a fixed length,"from collections import deque

activities = deque(maxlen=5)
# if len(activities) == 5 then the leftmost item will be removed before the push
activities.push(activity)
"
Finding a set of indices that maps the rows of one NumPy ndarray to another,"Benchmark:
In [1]: gen = np.random.RandomState(0)
In [2]: %%timeit A = gen.rand(1000000, 100); B = A.copy(); gen.shuffle(B)
....: find_row_mapping(A, B)
1 loop, best of 3: 2.76 s per loop
"
Python String Permutations Up To 2 Letter Changes Per Permutation,">>> list(changetwo('cow'))
['ocw', 'woc', 'cwo']
>>> for x in changetwo('1234'):
...     x
... 
'2134'
'3214'
'4231'
'1324'
'1432'
'1243'
"
Code optimization - number of function calls in Python,"import numpy as np

def make_data(N=100):
    X = np.random.randint(1, 20, (N, 36))
    connections = np.random.randint(2, 5, N)
    nbrs = {i: list(np.random.choice(N, c))
            for i, c in enumerate(connections)}
    return X, nbrs

def original_solution(X, nbrs):
    output = np.zeros(shape=X.shape)
    for k, v in nbrs.items():
        output[k] = np.sum(X[v], axis=0)
    return output

def vectorized_solution(X, nbrs):
    # Make neighbors all the same length, filling with -1
    new_nbrs = np.full((X.shape[0], max(map(len, nbrs.values()))), -1, dtype=int)
    for i, v in nbrs.items():
        new_nbrs[i, :len(v)] = v

    # add a row of zeros to X
    new_X = np.vstack([X, 0 * X[0]])

    # compute the sums
    return new_X.take(new_nbrs, 0).sum(1)
"
Get dictionaries in a list where the key:value pairs are in another list of dictionaries,"[{'ID': '1', 'ext': 'txt', 'file': 'test1'},
 {'ID': '3', 'ext': 'py', 'file': 'test3'}]
"
Replace value in JSON file for key which can be nested by n levels,"import json   
json_txt = """"""
{
""ROLE_NAME"": {
    ""FOO"": {
        ""download_url"": ""http: //something.staging/12345/buzz.zip""
    },
    ""BAR"": {
        ""download_url"": ""http: //something.staging/12345/fizz.zip""
    },
    ""download_url"": ""http: //something.staging/12345/fizzbuzz.zip"",
    ""db_name"": ""somedb"",
    ""db_server"": ""dbserver.staging.dmz"",
    ""plugin"": {
        ""server_url"": ""http: //lab.staging.corp/server/""
    }
}
}
""""""
data = json.loads(json_txt)

def fixup(adict, k, v):
    for key in adict.keys():
        if key == k:
            adict[key] = v
        elif type(adict[key]) is dict:
            fixup(adict[key], k, v)

import pprint
pprint.pprint( data )

fixup(data, 'download_url', 'XXX')

pprint.pprint( data )
"
Create numpy array with random elements from list,"import timeit
from matplotlib import pyplot as plt

setup = \
""""""
import numpy
import random

number_of_members = 20
values = range(50)
""""""

number_of_repetitions = 20
array_sizes = (10, 200)

python_random_times = [timeit.timeit(stmt = ""[random.sample(values, number_of_members) for index in xrange({0})]"".format(array_size),
                                     setup = setup,                      
                                     number = number_of_repetitions)
                                        for array_size in xrange(*array_sizes)]

numpy_permutation_times = [timeit.timeit(stmt = ""[numpy.random.permutation(values)[:number_of_members] for index in xrange({0})]"".format(array_size),
                               setup = setup,
                               number = number_of_repetitions)
                                    for array_size in xrange(*array_sizes)]

numpy_shuffle_times = [timeit.timeit(stmt = \
                                """"""
                                random_arrays = []
                                for index in xrange({0}):
                                    numpy.random.shuffle(values)
                                    random_arrays.append(values[:number_of_members])
                                """""".format(array_size),
                                setup = setup,
                                number = number_of_repetitions)
                                     for array_size in xrange(*array_sizes)]                                                                    

numpy_sample_times = [timeit.timeit(stmt = \
                                    """"""
                                    values = numpy.asarray(values)
                                    random_arrays = [values[indices][:number_of_members] 
                                                for indices in (numpy.random.sample(({0}, len(values))) * len(values)).astype(int)]
                                    """""".format(array_size),
                                    setup = setup,
                                    number = number_of_repetitions)
                                         for array_size in xrange(*array_sizes)]                                                                                                                                            

line_0 = plt.plot(xrange(*array_sizes),
                             python_random_times,
                             color = 'black',
                             label = 'random.sample')

line_1 = plt.plot(xrange(*array_sizes),
         numpy_permutation_times,
         color = 'red',
         label = 'numpy.random.permutations'
         )

line_2 = plt.plot(xrange(*array_sizes),
                    numpy_shuffle_times,
                    color = 'yellow',
                    label = 'numpy.shuffle')

line_3 = plt.plot(xrange(*array_sizes),
                    numpy_sample_times,
                    color = 'green',
                    label = 'numpy.random.sample')

plt.xlabel('Number of Arrays')
plt.ylabel('Time in (s) for %i rep' % number_of_repetitions)
plt.title('Different ways to sample.')
plt.legend()

plt.show()
"
How to label the x axis in fraction numbers?,"ax.xaxis.set_major_locator
"
Multiple authentication options with Tornado,"(r""/login/google/"", GoogleAuthHandler),
(r""/login/facebook/"", FacebookAuthHandler),
"
Use CSS to select range of elements in Python,"from lxml.cssselect import CSSSelector
from lxml.etree import fromstring
# Document with table, containing header, three data rows and two footer rows:
doc = fromstring('''<table><tr><td>header</td></tr><tr><td>Data 1</td></tr><tr><td>Data 2</td></tr><tr><td>Data 3</td></tr><tr><td>footer1</td></tr><tr><td>footer2</td></tr></table>''')
sel = CSSSelector('table tr')
rows = sel(doc)[1:-2] # remove header, footer1, footer2 from result
for tr in rows:
    print tr.getchildren()[0].text
"
"In python, when you pass internally defined functions into other functions, how does it keep the variables?","add1 = make_adder(1)
add5 = make_adder(5)

print add1(10)   # 11
print add5(10)   # 15
"
Proper way to organize testcases that involve a data file for each testcase?,"$ python tests.py -v
Test parsing of file1.html ... ok
Test parsing of file2.html ... ok
Test parsing of file3.html ... ok
Test parsing of file4.html ... ok
Test parsing of tests/file5.html ... ok
Test parsing of tests/file6.html ... FAIL
Test parsing of tests/file7.html ... ok
Test parsing of tests/file8.html ... ok

======================================================================
FAIL: Test parsing of tests/file6.html
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""generic.py"", line 16, in test_file
    self.assertEquals(0, 1, 'Parsing failed.')
AssertionError: Parsing failed.

----------------------------------------------------------------------
Ran 8 tests in 0.004s

FAILED (failures=1)
"
Python read website data line by line when available,"import requests

r = requests.get(url, stream=True)

for line in r.iter_lines():
    if line: print line
"
Window is losing keyboard focus after recreation,">>> t=Tkinter.Text(r)
>>> t.pack()
>>> t.insert('1.0','aaa')
>>> t.delete('1.0','end') # clear text widget
>>> t.insert('1.0','bbb')
"
How to compare multiple rows from same column in DataFrame,"import numpy as np
import pandas as pd
s = pd.DataFrame({""p"":[2, 3, 5, 6, 3, 4, 5, 6, 7, 4, 5, 6, 7, 8]})
s['inc3days'] = ((s['p'].shift(3) < s['p'].shift(2)) &  
                 (s['p'].shift(2) < s['p'].shift(1)) &  
                 (s['p'].shift(1) < s['p']) )
print s
"
what is the right way to treat Python argparse.Namespace() as a dictionary?,">>> import argparse
>>> args = argparse.Namespace()
>>> args.foo = 1
>>> args.bar = [1,2,3]
>>> d = vars(args)
>>> d
{'foo': 1, 'bar': [1, 2, 3]}
"
Change string Beautiful Soup,"<html><body><p id=""paragraph"">
Here is the paragraph <a href=""/"" id=""url"">NewString</a> the paragraph continues.
</p></body></html>
"
assign list to python object,"def get_pos():
    with open(""CONTCAR"", ""r"") as finp:
        for line in finp:
            for _ in range(6):
                sdata = finp.readline()
                tpos.append(sdata.split())

    # print(tpos)
    return tpos
"
python pyparsing word excludeChars,"Word(''.join(c for c in printables if c != ':'))
"
Python: Automatically initialize instance variables?,">>> c = process(1, 2, 3, 4, 5, 6)
>>> c.PID
1
>>> dir(c)
['FDs', 'PID', 'PPID', '__doc__', '__init__', '__module__', 'cmd', 'reachable', 'user'
"
To split strings using Python,"import csv

st=""""""\
10004, 10005, 0,'1 ',2,2,1, 0.00000E+0, 0.00000E+0, 2, 'ALCAZAR,NMRD ',1, 129,1.0000""""""

kwargs={'skipinitialspace':True, 'quotechar':""'""}

for e in csv.reader(st.splitlines(), **kwargs):
    print e
"
numpy gradient function and numerical derivatives,"plt.plot(x1,np.gradient(y(x1),1),'r--o')
plt.plot(x2,np.gradient(y(x2),0.1),'b--o')
plt.plot(x3,np.gradient(y(x3),0.01),'g--o')
"
numpy uint8 pixel wrapping solution,"Import ImageEnhance
enhancer=ImageEnhance.Brightness(img)
outimg=enhancer.enhance(1.2)
outimg.save('out.png')
"
Exporting All Data in a Loop to Excel in Python,"for row, c in enumerate(cities, start=1):
"
Downloading a large archive from AWS Glacier using Boto,"file_size = check_file_size(OUTPUT)

if job.completed:
    print ""Downloading archive""
    with open(OUTPUT, 'wb') as output_file:
        i = 0
        while True:
            response = gv.get_job_output(VAULT_NAME, job_id, (file_size + 1024 * 1024 * i, file_size + 1024 * 1024 * (i + 1)))
            output_file.write(response)
            if len(response) < 1024 * 1024:
                break
            i += 1
"
"Flask, python dictionary to highcharts JS figure","mapping = [
    ['Shanghai', 23.7],
    ['Lagos', 16.1],
    ['Instanbul', 14.2],
    ['Karachi', 14.0],
    ['Mumbai', 12.5],
    ['Moscow', 12.1],
    ['Sao Paulo', 11.8],
    ['Beijing', 11.7],
    ['Guangzhou', 11.1],
    ['Delhi', 11.1],
    ['Shenzhen', 10.5],
    ['Seoul', 10.4],
    ['Jakarta', 10.0],
    ['Kinshasa', 9.3],
    ['Tianjin', 9.3],
    ['Tokyo', 9.0],
    ['Cairo', 8.9],
    ['Dhaka', 8.9],
    ['Mexico City', 8.9],
    ['Lima', 8.9]
]
return render_template('page.html', mapping=mapping)
"
Sanitizing user input path names,">>> a = raw_input(""Enter Path:"")
Enter Path:C:\www\a\nothing.jpg
>>> a
'C:\\www\\a\\nothing.jpg'
"
Set of string tuples in python,"try:
    # Python 3
    from collections.abc import MutableSet
except ImportError:
    # Python 2
    from collections import MutableSet

class SortingSet(MutableSet):
    def __init__(self, values):
        self._values = set()
        for v in values:
            self.add(v)

    def __repr__(self):
        return '<{}({}) at {:x}>'.format(
            type(self).__name__, list(self._values), id(self))

    def __contains__(self, value):
        return tuple(sorted(value)) in self._values

    def __iter__(self):
        return iter(self._values)

    def __len__(self):
        return len(self._values)

    def add(self, value):
        self._values.add(tuple(sorted(value)))

    def discard(self, value):
        self._values.discard(tuple(sorted(value)))
"
Computer Vision: Masking a human hand,"(Cb in [77, 127]) and (Cr in [133, 173])
"
Restrictons of Python compared to Ruby: lambda's,"responses = {
    ""resp1"" => {
        ""start"" => lambda { },
        ""stop"" => lambda { },
    },
}
responses[""resp1""][""start""].call
"
Could I use a for loop instead of a while loop?,"print_at = 0
for i in range(userloop):
    if i >= print_at:
        print ""At the top i is %d"" % i
        numbers.append(i)
        userincrease = int(raw_input(""Increase > ""))
        print_at = i + userincrease

        print ""Numbers now: "", numbers
        print ""At the bottom i is %d"" % i
"
Sierpinski triangle recursion with python using turtle,"import turtle
def draw_sierpinski(length,depth):
    if depth==0:
        for i in range(0,3):
            t.fd(length)
            t.left(120)
    else:
        draw_sierpinski(length/2,depth-1)
        t.fd(length/2)
        draw_sierpinski(length/2,depth-1)
        t.bk(length/2)
        t.left(60)
        t.fd(length/2)
        t.right(60)
        draw_sierpinski(length/2,depth-1)


window = turtle.Screen()
t = turtle.Turtle()
draw_sierpinski(500,1)
window.exitonclick()
"
Limiting floats to a varying number (decided by the end-user) of decimal points in Python,"somefloat=0.0123456789
precision = 5
print(""{0:.{1}f}"".format(somefloat, precision))
# 0.01235
"
Importing matlab structure to python,"isscalar(A)
ans =
    1
"
Compute the similarity between two lists,"from collections import Counter

counterA = Counter(listA)
counterB = Counter(listB)
"
Alternative to using mechanize to fetch data?,"Step 3: use the data argument of `requests.post'
response = requests.post(url, data=data, cookies=cookies)
"
numpy: ravel_multi_index increment different results from iterating over indices loop,"import numpy as np

# some example data
acc = np.zeros((4, 3))
legit_indices = np.array([[0, 1],
                          [0, 1],
                          [1, 2],
                          [1, 0],
                          [1, 0],
                          [1, 0]])

# convert the index array into a set of indices into acc.flat
flat_idx = np.ravel_multi_index(legit_indices.T, acc.shape)

# get the set of unique indices and their corresponding counts
uidx, ucounts = np.unique(flat_idx, return_counts=True)

# assign the count value to each unique index in acc.flat
acc.flat[uidx] = ucounts

# confirm that this matches the result of your for loop
acc2 = np.zeros_like(acc)
for ii, jj in legit_indices:
    acc2[ii, jj] += 1

assert np.array_equal(acc, acc2)
"
How do I plot a planet's orbit as a function of time on an already plotted ellipse?,"import matplotlib.pyplot as plt
from matplotlib.patches import Ellipse, Circle

#Set axes aspect to equal as orbits are almost circular; hence square is needed
ax = plt.figure(0).add_subplot(111, aspect='equal')

#Setting the title, axis labels, axis values and introducing a grid underlay
#Variable used so title can indicate user inputed date
plt.title('Inner Planetary Orbits at[user input date]')
plt.ylabel('x10^6 km')
plt.xlabel('x10^6 km')
ax.set_xlim(-300, 300)
ax.set_ylim(-300, 300)
plt.grid()

#Creating the point to represent the sun at the origin (not to scale), 
ax.scatter(0,0,s=200,color='y')
plt.annotate('Sun', xy=(0,-30))

#Implementing ellipse equations to generate the values needed to plot an ellipse
#Using only the planet's min (m) and max (M) distances from the sun
#Equations return '2a' (the ellipses width) and '2b' (the ellipses height)
def OrbitLength(M, m):
    a=(M+m)/2
    c=a-m
    e=c/a
    b=a*(1-e**2)**0.5
    print(a)
    print(b)
    return 2*a, 2*b

#This function uses the returned 2a and 2b for the ellipse function's variables
#Also generating the orbit offset (putting the sun at a focal point) using M and m
def PlanetOrbit(Name, M, m):
    w, h = OrbitLength(M, m)
    Xoffset= ((M+m)/2)-m
    Name = Ellipse(xy=((Xoffset),0), width=w, height=h, angle=0, linewidth=1, fill=False)
    ax.add_artist(Name)



from math import *

EPSILON = 1e-12
def solve_bisection(fn, xmin,xmax,epsilon = EPSILON):
  while True:
      xmid = (xmin + xmax) * 0.5
      if (xmax-xmin < epsilon):
        return xmid
      fn_mid = fn(xmid)
      fn_min = fn(xmin)
      if fn_min*fn_mid < 0:
          xmax = xmid
      else:
          xmin = xmid

'''
Found something similar at this gamedev question:
http://gamedev.stackexchange.com/questions/11116/kepler-orbit-get-position-on-the-orbit-over-time?newreg=e895c2a71651407d8e18915c38024d50

Equations taken from:
https://en.wikipedia.org/wiki/Kepler%27s_laws_of_planetary_motion#Position_as_a_function_of_time
'''
def SolveOrbit(rmax, rmin, t):
  # calculation precision
  epsilon = EPSILON
  # mass of the sun [kg]
  Msun = 1.9891e30
  # Newton's gravitational constant [N*m**2/kg**2]
  G = 6.6740831e-11
  # standard gravitational parameter
  mu = G*Msun
  # eccentricity
  eps = (rmax - rmin) / (rmax + rmin)
  # semi-latus rectum
  p = rmin * (1 + eps)
  # semi/half major axis
  a = p / (1 - eps**2)
  # period
  P = sqrt(a**3 / mu)
  # mean anomaly
  M = (t / P) % (2*pi)
  # eccentric anomaly
  def fn_E(E):
    return M - (E-eps*sin(E))
  E = solve_bisection(fn_E, 0, 2*pi)
  # true anomaly
  # TODO: what if E == pi?
  def fn_theta(theta):
    return (1-eps)*tan(theta/2)**2 - ((1+eps)*tan(E/2)**2)
  theta = solve_bisection(fn_theta, 0, pi)
  # if we are at the second half of the orbit
  if (E > pi):
    theta = 2*pi - theta
  # heliocentric distance
  r = a * (1 - eps * cos(E))
  return theta, r

def DrawPlanet(name, rmax, rmin, t):
  SCALE = 1e9
  theta, r = SolveOrbit(rmax * SCALE, rmin * SCALE, t)
  x = -r * cos(theta) / SCALE
  y = r * sin(theta) / SCALE
  planet = Circle((x, y), 8)
  ax.add_artist(planet)

#These are the arguments taken from hyperphysics.phy-astr.gsu.edu/hbase/solar/soldata2.html
#They are the planet names, max and min distances, and their longitudinal angle
#Also included is Halley's Comet, used to show different scale  and eccentricity
PlanetOrbit('Mercury', 69.8, 46.0)
PlanetOrbit('Venus', 108.9, 107.5)
PlanetOrbit('Earth', 152.1, 147.1)
PlanetOrbit('Mars', 249.1, 206.7)
PlanetOrbit(""Halley's Comet"",45900,88)
for i in range(0, 52):
  DrawPlanet('Earth', 152.1, 147.1, i/52 * 365.25 *60*60*24)
for i in range(-2, 3):
  DrawPlanet(""Halley's Comet"",45900,88, 7*i *60*60*24)
print(60*60*24*365)

plt.show()
"
Python - How can I return a list for each xml node I am iterating through using xml.etree.ElementTree?,"[['bk101', 'hardcover'], ['bk102', 'softcover'], ['bk101', 'softcover']]
"
Parsing the file in Python,"from collections import defaultdict

def check():
    d = defaultdict(list)
    with open('logfile.py', 'rU') as datafile:
        for line in datafile:
            data = line.split(',')
            d[data[1].strip()].append(data[0].strip())
    return d
res = check()

for k, v in res.items():
    print(""{} : {}"".format(k, ', '.join(v)))
"
Efficiently processing data in text file,"%timeit default(fobj)
10000 loops, best of 3: 15.8 µs per loop
"
python: reading a file and storing strings as strings and integers as integers into a list,"sandy
<class 'str'>

mike
<class 'str'>

3.2
<class 'float'>

15
<class 'int'>

3.243
<class 'float'>

Washington D.C.
<class 'str'>
"
Exposing dict values via properties,"class D(dict):
    def __init__(self):
        self.changed_values = {}
        self.__initialized = True

    def __setitem__(self, key, value):
        self.changed_values[key] = value
        super(D, self).__setitem__(key, value)

    def __getattr__(self, item):
        """"""Maps values to attributes.
        Only called if there *isn't* an attribute with this name
        """"""
        try:
            return self.__getitem__(item)
        except KeyError:
            raise AttributeError(item)

    def __setattr__(self, item, value):
        """"""Maps attributes to values.
        Only if we are initialised
        """"""
        if not self.__dict__.has_key('_D__initialized'):  # this test allows attributes to be set in the __init__ method
            return dict.__setattr__(self, item, value)
        elif self.__dict__.has_key(item):       # any normal attributes are handled normally
            dict.__setattr__(self, item, value)
        else:
            self.__setitem__(item, value)

a = D()
a['hi']  = 'hello'
print a.hi
print a.changed_values

a.hi = 'wow'
print a.hi
print a.changed_values

a.test = 'test1'
print a.test
print a.changed_values
"
How to know a generated sequence is at most a certain length,">>> timeit('len(list(islice(xrange(1000), 2)))', 'from itertools import islice')
 1.089650974650752

>>> timeit('sum(1 for _ in islice(xrange(1000), 2))', 'from itertools import islice')
0.7579448552500647
"
How to make 'access_type=offline' / server-only OAuth2 operations on GAE/Python?,"from oauth2client.appengine import CredentialsModel
from oauth2client.appengine import StorageByKeyName
credentials = StorageByKeyName(
     CredentialsModel, user_id, 'credentials').get()
"
Django template in nested dictionary,">>> result_dict = {'type_0' : {'file_name' : 'abc', 'count' : 0},
...                'type_1' : {'file_name' : 'xyz', 'count' : 50}}
>>>
>>> t = Template('''
... {% for key, value in result_dict.items %}
...     {{ value }}
... {% endfor %}
... ''')
>>> print(t.render(Context({'result_dict': result_dict})))


    {&#39;count&#39;: 50, &#39;file_name&#39;: &#39;xyz&#39;}

    {&#39;count&#39;: 0, &#39;file_name&#39;: &#39;abc&#39;}
"
How to unpack a list?,"('a', 'b', 'c', 'd','e')
"
Regular Expression for multiple lines,"matches = re.findall('\s{3}(.*)', contents)
"
A pythonic way to code self writing test methods,"import pytest

@pytest.mark.parametrize(
    (""value"", ""expected""),
    [
        (True, True),
        (False, False),
    ]
)
def test_identical(value, expected):
    assert value is expected
"
"twisted client transport.write not sending data, even after close","nc -c localhost 12604
IAMAT b 1 2 3
AT Young 1394489423.5 b 1.0 2.0 3.0
"
Keep alive the object for using them in another program in python,"def main(model):
    model.similarity('word1','word2')
    ...
"
Python objects in list as JSON,"[{""version"": 3, ""name"": 20, ""dependencies"": [{""version"": 2, ""name"": 39}, {""version"": 4, ""name"": 30}]}, {""version"": 4, ""name"": 21, ""dependencies"": [{""version"": 9, ""name"": 65}, {""version"": 5, ""name"": 12}]}]
"
using Python for a solution cannot be handled in JAVA because of slow execution,"Took 2.070 seconds to write and 2.206 seconds to read 3,000,000 rows and 50 columns
"
Using python to search a text file for the occurence of specific characters,"if 'd' in line:
"
Find k smallest pairs in two lists,"sorted(c, key=sum)[:k]
"
Capturing states between tags and href by xpath in python,">>> [li.text + ' '.join(li.xpath('a/@href'))
     for li in tree.xpath('//ul[@class=""test""]/li')]
['A: A', 'B: B', 'C: C', 'D: http://example.com']

>>> [li.text + next(iter(li.xpath('a/@href')), '')
     for li in tree.xpath('//ul[@class=""test""]/li')]
['A: A', 'B: B', 'C: C', 'D: http://example.com']
"
Creating a simple scripting language in Python,">>> exec(c, {""secret"": secret, ""public"": public})
What?! I don't even... get out of here.
Hello stranger.
"
comparison between two values in two tables and Append,">>> A = [{'Destination': 'me.xx@domain.fr', 'mid': '6754', 'Type S': 'VOICE', 'Origine': '+45854521', 'Type D': 'SMTP.0', 'Time': '08:29:50.293'}, {'Destination': 'fax.server@domain.fr', 'mid': '6755', 'Type S': 'FAXG3', 'Origine': 'p0298220991', 'Type D': 'SMTP.0', 'Time': '08:55:33.731'}]
>>> B = [{'status': 'OK', 'mid': '6754'}, {'status': 'Erreur', 'mid': '6755'}, {'status': 'OK', 'mid': '6756'}]
>>> mid_status = {}
>>> for d in B:
        mid_status.setdefault(d['mid'], []).append(d['status'])


>>> for d in A:
        if d['mid'] in mid_status:
            d['status'] = mid_status[d['mid']]


>>> A
[{'status': ['OK'], 'Destination': 'me.xx@domain.fr', 'mid': '6754', 'Type S': 'VOICE', 'Origine': '+45854521', 'Time': '08:29:50.293', 'Type D': 'SMTP.0'}, {'status': ['Erreur'], 'Destination': 'fax.server@domain.fr', 'mid': '6755', 'Type S': 'FAXG3', 'Origine': 'p0298220991', 'Time': '08:55:33.731', 'Type D': 'SMTP.0'}]
"
most optimal way to perform double summation,"---                ---
\                  \
/     (x_ji-b)^2 = /   x_ji^2-2*b*x_ji+b^2   = S-2*s*b-D*b^2
---                ---
i,j                i,j
"
"Python decorator best practice, using a class vs a function","@my_decorator(param1, param2)
def my_func(...):
   ...
"
wxPython ScrolledWindow too small,"lineBoxSizer.Add(self.scroll, 1, wx.EXPAND)    
boxSizer.Add(lineBoxSizer, 1, wx.EXPAND)
"
Parse 4th capital letter of line in Python?,"In [1]: import re

In [2]: s = 'adsgasdlkgasYasdgjaUUalsdkjgaZsdalkjgalsdkjTlaksdjfgasdkgj'

In [3]: ''.join(re.findall(r'[A-Z][^A-Z]*', s)[3:])
Out[3]: 'ZsdalkjgalsdkjTlaksdjfgasdkgj'
"
Can I make matplotlib sliders more discrete?,"class DiscreteSlider(Slider):
    """"""A matplotlib slider widget with discrete steps.""""""
    def __init__(self, *args, **kwargs):
        """"""Identical to Slider.__init__, except for the ""increment"" kwarg.
        ""increment"" specifies the step size that the slider will be discritized
        to.""""""
        self.inc = kwargs.pop('increment', 0.5)
        Slider.__init__(self, *args, **kwargs)

    def set_val(self, val):
        discrete_val = int(val / self.inc) * self.inc
        # We can't just call Slider.set_val(self, discrete_val), because this 
        # will prevent the slider from updating properly (it will get stuck at
        # the first step and not ""slide""). Instead, we'll keep track of the
        # the continuous value as self.val and pass in the discrete value to
        # everything else.
        xy = self.poly.xy
        xy[2] = discrete_val, 1
        xy[3] = discrete_val, 0
        self.poly.xy = xy
        self.valtext.set_text(self.valfmt % discrete_val)
        if self.drawon: 
            self.ax.figure.canvas.draw()
        self.val = val
        if not self.eventson: 
            return
        for cid, func in self.observers.iteritems():
            func(discrete_val)
"
Python regex split but put end part of regex match back into string?,">>> re.findall(r'(.*?\sFFF[.?!])\s(?=[A-Z])', line)
['a b c FFF!', 'D a b a a FFF. gegtat FFF.']
"
Get the current git hash in a python script,"import subprocess
label = subprocess.check_output([""git"", ""describe""])
"
Graph databases and RDF triplestores: storage of graph data in python,"
<http://mycompany.com#1> <http://mycompany.com#2> <http://mycompany.com#3> .
<http://mycompany.com#3> <http://mycompany.com#4> <http://mycompany.com#5> .
"
append value in ith list of list,">>> b=[[] for _ in xrange(10)]
>>> b
[[], [], [], [], [], [], [], [], [], []]
>>> b[0].append(0)
>>> b
[[0], [], [], [], [], [], [], [], [], []]
"
Match longest substring in Python,"TBD... partial match
TBD... partial match
['frontal lobe', 'inferior frontal gyrus']
['prefrontal cortex', ('frontallobes of the brain', '', 'the ')]
TBD... partial match
TBD... partial match
TBD... partial match
TBD... partial match
"
Scrapy not returning text body of web page with my current syntax,"""There is no budget, there is money. We are in a very strong financial position. We can make big signings."" Music to the ears of Manchester United fans as vice-chairman Ed Woodward confirmed the club can make big-money acquisitions in this very transfer window. In a bid to return to the summit of England’s top tier, Woodward has effectively given the green light to a spending spree that has supporters rubbing their hands with glee. Ander Herrara and Luke Shaw have arrived for a combined £59m already this summer and the carousel through the Old Trafford entrance door shows no sign of slowing down. Ángel Di María, Mats Hummels and Daley Blind, amongst others, have all been linked with a move to United, while reports suggesting midfield pitbull Arturo Vidal is set to join Louis van Gaal’s side refuse to die down.  ""I’m still on holiday at the moment. Can I say I’m staying at Juve? I don’t know. On Monday I’ll talk to (Juventus manager, Massimili
...
 Contact Us | About Us | Glossary | Privacy Policy | WhoScored Ratings
            Copyright © 2014 WhoScored.com
"
how to print already interpreted html data in python,">>> from bs4 import BeautifulSoup                                                                                                   >>> soup = BeautifulSoup('''<tr><td valign=""top""><img src=""img.jpg""></td><td><a href=""file.zip"">file.zip</a></td><td align=""right"">24-Apr-2013 12:42 </td><td align=""right"">200K</td></tr>''')
>>> print list(soup.stripped_strings)
[u'file.zip', u'24-Apr-2013 12:42', u'200K']
"
"Python: Iterate through a list by value, not by index","class MyDataStructure:
    def __init__(self,a_list):
        self.my_data = a_list
    def __getitem__(self,arg):
        if isinstance(arg,slice):
            return [item for item in self.my_data if arg.start <= item[arg.step] <= arg.stop]

        raise Exception(""%s is unscriptable""%self)

print MyDataStructure([[1,2,3],[5,3,6],[5,4,14],[23,5,2]])[2:4:1]
"
"python optparse, how to include additional info in usage output?","def main():

    class MyParser(optparse.OptionParser):
        def format_epilog(self, formatter):
            return self.epilog

    parser =MyParser(epilog=
""""""Examples:

check_dell -c all
check_dell -c fans memory voltage
check_dell -s
"""""")
...
"
Iterating through a numpy array and then indexing a value in another array,"for [i, j], flow in np.ndenumerate(flow_direction_np):
    try:
        if flow == 32:
            ...
        elif ...
            ...
    except IndexError:
        elevation_change[i, j] = 0
"
opencv python copy mask region (black or white pixels) onto a BGR image region,">>> img[10:20,10:20] = mask[10:20,10:20]

ValueError: could not broadcast input array from shape (10,10) into shape (10,10,3)
"
How to bin many category combinations (72 variables) in python lists,"TEMP = dict.fromkeys('''FHDosed FHControl FNHDosed FNHControl FTDosed FTControl MHDosed 
                      MHControl MNHDosed MNHControl MTDosed MTControl'''.split(), 0)
TRI_1, TRI_2, TRV_1, TRV_2, TRV_3, TRV_4 = [TEMP.copy() for i in range(6)]

dmap = {
    ('G', 'A'): TRI_1,
    ('C', 'T'): TRI_1,
    ('A', 'G'): TRI_2,
    ('T', 'C'): TRI_2,        
    ('G', 'C'): TRV_1,
    ('C', 'G'): TRV_1,        
    ('A', 'T'): TRV_1,
    ('T', 'A'): TRV_1,        
    }

for row in lst:
    key, q, s = row
    dmap[q, s][key] += 1
"
How to make a save/load game for a text based python rpg?,"import jsonpickle
import os
import sys


SAVEGAME_FILENAME = 'savegame.json'

game_state = dict()


class Human(object):
    """"""The human player
    """"""
    def __init__(self, name, health, gold):
        self.name = name
        self.health = health
        self.gold = gold


class Monster(object):
    """"""A hostile NPC.
    """"""
    def __init__(self, name, health):
        self.name = name
        self.health = health


def load_game():
    """"""Load game state from a predefined savegame location and return the
    game state contained in that savegame.
    """"""
    with open(SAVEGAME_FILENAME, 'r') as savegame:
        state = jsonpickle.decode(savegame.read())
    return state


def save_game():
    """"""Save the current game state to a savegame in a predefined location.
    """"""
    global game_state
    with open(SAVEGAME_FILENAME, 'w') as savegame:
        savegame.write(jsonpickle.encode(game_state))


def initialize_game():
    """"""If no savegame exists, initialize the game state with some
    default values.
    """"""
    player = Human('Fred', 100, 10)
    imp = Monster('Imp', 50)

    state = dict()
    state['players'] = [player]
    state['npcs'] = [imp]
    return state


def attack():
    """"""Toy function to demonstrate attacking an NPC.
    """"""
    global game_state
    imp = game_state['npcs'][0]
    imp.health -= 3
    print ""You attacked the imp for 3 dmg. The imp is now at %s HP."" % imp.health


def spend_money(amount):
    """"""Toy function to demonstrate spending money.
    """"""
    global game_state
    player = game_state['players'][0]
    player.gold -= amount
    print ""You just spent %s gold. You now have %s gold."" % (amount, player.gold)


def game_loop():
    """"""Main game loop.
    This loop will run until the player exits the game.
    """"""
    global game_state

    while True:
        print ""What do you want to do?""
        choice = int(raw_input(""[1] Save game [2] Spend money ""
                               ""[3] Attack that Imp! [4] Load game ""
                               ""[5] Exit game\n""))
        if choice == 1:
            save_game()
        elif choice == 2:
            spend_money(5)
        elif choice == 3:
            attack()
        elif choice == 4:
            game_state = load_game()
        else:
            print ""Goodbye!""
            sys.exit(0)


def main():
    """"""Main function. Check if a savegame exists, and if so, load it. Otherwise
    initialize the game state with defaults. Finally, start the game.
    """"""
    global game_state

    if not os.path.isfile(SAVEGAME_FILENAME):
        game_state = initialize_game()
    else:
        game_state = load_game()
    game_loop()


if __name__ == '__main__':
    main()
"
Retain all entries except for one key python,"for key, value in your_dict.items():
    if key not in your_blacklisted_set:
        print value
"
Is it possible to sort using sorted() with attributes from two different models?,"posts_list = sorted(posts_list, key=lambda post: (Vote.objects.get_score(post)['score'], post.datetime))
"
python: using .iterrows() to create columns,"In [35]:

df = df[list('abc')]
for index,row in df.iterrows():
    row['d'] = np.random.randint(0,10)
df
Out[35]:
          a  b         c
0 -1.525011  8 -1.010391
1  0.619824  2 -0.692568
2  1.272323  8  0.192169
3  0.193523  2  1.067544
4  0.057110  3  1.706704
"
Getting the most common key value in a list of dictionaries,"[d for d in myList if d['imdb'] = most_common_imdb_value]
"
python script to edit a file in vim,"echo -e ""This code\nreally sucks!"" > program
"
packaging common python namespaces,"setup(...,
    packages: ['abc', 'abc.seo'],
    namespace_packages = ['abc']
    ...
)
"
Which is the best way to multiply a large and sparse matrix with its transpose?,"RESULT = sparse.coo_matrix((V,(I,J)),shape=(N, N))
"
efficient python raw_input and serial port polling,"while True:
    data = queue.get() # This call will block, and won't use CPU while doing so
    # process data
"
How do I replace variables in python class?,"class random(object):
    def __init__(self, a, b, c):
        self.a = a
        self.b = b
        self.c = c
        self.result = #calculations with a,b and c.

    @classmethod
    def from_file(self, filename):
        with open(filename) as fh:
            a = int(fh.readline())
            b = int(fh.readline())
            c = int(fh.readline())
            return cls(a, b, c)  # create a new instance of this class
"
how to extend model User?,"from django.contrib.auth.models import AbstractUser

class CustomUser(AbstractUser):
   ... your custom fields ...
"
"Python: matching strings against pattern strings with number, string, and date placeholders with good error catching","def match_string(input, pattern, valid_words, date_format):
    print '\n> match_string(\'%s\', \'%s\', %s, \'%s\')' % (input, pattern, valid_words, date_format)

    digits = '0123456789'
    inputIndex = 0
    patternIndex = 0

    while inputIndex < len(input) and patternIndex < len(pattern):
        if pattern[patternIndex] == '#':
            patternIndex += 1
            if pattern[patternIndex] == '#':
                patternIndex += 1
                if pattern[patternIndex] == '#':

                    # validate date
                    date_formatIndex = 0
                    while inputIndex < len(input) and date_formatIndex < len(date_format):

                        if input[inputIndex] == date_format[date_formatIndex]:
                            inputIndex += 1
                            date_formatIndex += 1

                        elif input[inputIndex] in digits:

                            startIndex = inputIndex
                            while inputIndex < len(input) and input[inputIndex] in digits:
                                inputIndex += 1
                            number = int(input[startIndex:inputIndex])

                            if date_format[date_formatIndex:].startswith('%y'):
                                placeholder = True
                            elif date_format[date_formatIndex:].startswith('%m'):
                                if number < 1 or 12 < number:
                                    return 'Error: expected a month between 1 and 12\n input   %d -> ""...%s""\n pattern %d -> ""...%s""\n date format %d -> ""...%s""' % (startIndex, input[startIndex:], patternIndex - 2, pattern[patternIndex - 2:], date_formatIndex, date_format[date_formatIndex:])   

                            elif date_format[date_formatIndex:].startswith('%d'):
                                if number < 1 or 31 < number:
                                    return 'Error: expected a day between 1 and 31\n input   %d -> ""...%s""\n pattern %d -> ""...%s""\n date format %d -> ""...%s""' % (startIndex, input[startIndex:], patternIndex - 2, pattern[patternIndex - 2:], date_formatIndex, date_format[date_formatIndex:])   

                            else:
                                return 'Error: input doesn\'t match date format\n input   %d -> ""...%s""\n pattern %d -> ""...%s""\n date format %d -> ""...%s""' % (startIndex, input[startIndex:], patternIndex - 2, pattern[patternIndex - 2:], date_formatIndex, date_format[date_formatIndex:])   

                            date_formatIndex += 2

                        else:
                            return 'Error: input doesn\'t match date format\n input   %d -> ""...%s""\n pattern %d -> ""...%s""\n date format %d -> ""...%s""' % (inputIndex, input[inputIndex:], patternIndex - 2, pattern[patternIndex - 2:], date_formatIndex, date_format[date_formatIndex:])   

                    patternIndex += 1

                else:
                    # validate word
                    valid = False
                    for word in valid_words:
                        if input[inputIndex:].startswith(word):
                            valid = True
                            inputIndex += len(word)
                            break
                    if not valid:
                        return 'Error: expected a valid word\n input   %d -> ""...%s""\n pattern %d -> ""...%s""' % (inputIndex, input[inputIndex:], patternIndex - 2, pattern[patternIndex - 2:])                    

            else:
                # validate number
                if not input[inputIndex] in digits:
                    return 'Error: expected a number\n input   %d -> ""...%s""\n pattern %d -> ""...%s""' % (inputIndex, input[inputIndex:], patternIndex - 1, pattern[patternIndex - 1:])
                while inputIndex < len(input) and input[inputIndex] in digits:
                    inputIndex += 1

        elif input[inputIndex] != pattern[patternIndex]:
            return 'Error: input and pattern do not match\n input   %d -> ""...%s""\n pattern %d -> ""...%s""' % (inputIndex, input[inputIndex:], patternIndex, pattern[patternIndex:])
        else:
            inputIndex += 1            
            patternIndex += 1
    return True

print match_string('1 and 2 are numbers foo and bar are strings 12-1-2013 is a date', '# and # are numbers ## and ## are strings ### is a date', ['foo', 'bar'], '%m-%d-%y')
print match_string('1 is a number foo is a string 12-1-2013 is a date', '# is a number ## is a string ### is a date', ['foo'], '%m-%d-%y')
print match_string('foo is a number bar is a string 12-1-2013 is a date', '# is a number ## is a string ### is a date', ['foo'], '%m-%d-%y')
print match_string('1 is a number bar is a string 12-1-2013 is a date', '# is a number ## is a string ### is a date', ['foo'], '%m-%d-%y')
print match_string('1 is a number foo is a string January is a date', '# is a number ## is a string ### is a date', ['foo'], '%m-%d-%y')
print match_string('1 and 2 are numbers foo and bar are strings 15-1-2013 is a date', '# and # are numbers ## and ## are strings ### is a date', ['foo', 'bar'], '%m-%d-%y')
print match_string('1 and 2 are numbers foo and bar are strings 08-42-2013 is a date', '# and # are numbers ## and ## are strings ### is a date', ['foo', 'bar'], '%m-%d-%y')
print match_string('1 and 2 are numbers foo and bar are strings 08;4;2013 is a date', '# and # are numbers ## and ## are strings ### is a date', ['foo', 'bar'], '%m-%d-%y')
print match_string('1 and 2 are numbers foo and bar are strings 08-4-2013 is a date', '# and # are numbers ## and ## are strings ### is a date', ['foo', 'bar'], '~%m-%d-%y')
"
How to download youtube 1080p by program,"youtube-dl -f 'bestvideo[height<=1080]' URL
"
Parsing CSV data based on header fields using Pyparsing,"$ python classes.py
"
Are there viable alternatives for Web 2.0 apps besides lots of Javascript?,"// Example One
function triangle(a,b):
    function sqroot(x): return Math.pow(x,.5)
    return sqroot( a*a + b*b )
"
Get arbitrary resources content in Python 3,"from urllib.parse import urlparse
from urllib.request import urlopen

resource = input('Enter a URL or relative file path: ')
if urlparse(resource).scheme == '':
    # assume that it is a file, use ""file:"" scheme
    resource = 'file:{}'.format(resource)
data = urlopen(resource).read()
"
Python: Assigning Random Integer to Variables in a Class,"import random

class Variables(object):
    numbers = {
        ""num{}"".format(i): ""Text {}"".format(random.randrange(100))
        for i in range(100)
    }

v = Variables()
print v.numbers[""num50""]
"
how to delete reduplicate element in an array in python,"from numpy import *

eps = 0.1
#ASSUMING the second arrow is sorted (otherwise sort it first)
a= array(
    [[1, 1.2, 3],     
    [2, 2.2, 3], 
    [3, 2.25, 1], 
    [4, 2.28, 4],
    [5, 3.2, 8], 
    [6, 4.2, 10],
    [7, 4.21, 3], 
    [8, 4.25, 4], 
    [9, 4.28, 1],
    [10, 5.2, 10],
    ])
# expected result
# a= [[1, 1.2, 3],
#     [3, 2.25, 1],
#     [5, 3.2, 8],
#     [9, 4.28, 1],
#     [10, 5.2, 10],
#     ]

n = shape(a)[0]
b = a[:,1]

a1 = a[ (diff(b)<eps) ]
#indexes of some False that could be True.
#these indexes should be checked backwards
#and evtl. added to a1
indexes = where((diff(b)<eps)==False)[0][1:]
for index in indexes:
    if b[index] - b[index-1]<eps:
        a1 = vstack( (a1,a[index,:]) )

#sort array
a1 = a1[lexsort( (a1[:,1],a1[:,1]))]

groups = where(diff(a1[:,1])>eps)[0]
i = 0
# get min of groups
for g in groups:
    ag = a1[i:g+1,2]
    Ag = a1[i:g+1,:]
    if i == 0:
        a2 = Ag [ ag == min(ag) ]
    else:
        a2 = vstack( (a2, Ag [ ag == min(ag) ] ) )

    i = g+1
#add last group
ag = a1[g+1:,2]
Ag = a1[g+1:,:]    
a2 = vstack( (a2, Ag [ ag == min(ag) ]) )

#the elements that build no groups
result = a[ in1d(a[:,0], [ int(i) for i in a[:,0] if i not in a1[:,0] ])  ] 
# add the elements of a2, these are the minimal elements of each group
result = vstack( (result, a2) )
# sort the result (optional)
result = result[lexsort( (result[:,0], result[:,0]))]
print ""final result\n"", result
"
Access files with wildcard filename in directory structure,"import glob
import os
files = []
for x in os.listdir(path_to_top_folder):
    if os.path.isdir(x):
        for fil in glob.glob(""{0}/*.txt"".format(x)):
            files += [os.path.split(fil)[-1]]
print files  
"
Equivalent of source() of R in Python,"def func1():
    print 'inside func1 in first.py'

if __name__ == '__main__':
    # first.py executed as a script
    func1()
"
How to find all elements in a numpy 2-dimensional array that match a certain list?,"out = A*M.reshape(A.shape)
"
Why are methods so slow?,"intersection = list_of_sets[0]
for s in list_of_sets[1:]:
    intersection.intersection_update(s)
"
Accessing non-consecutive elements of a list or string in python,"def select(lst, *indices):
    return (lst[i] for i in indices)
"
Passing parameters from webpage to server (Flask),"@app.route('/timeline.html', methods=['POST','GET'])
def timeline(request):
    checked = request.form.getlist('channel')

    # do something with checked array

    return render_template('timeline.html')
"
How to escape partially a template variable in Django,"#my.html
{{ error|safe }}
"
bytes manipulation in 2'complement format using python,"    h = '3aff' # 0011 1010 1111 1111
    # 14bits 2'complement integer is sealed in 16bit format.
    e = twocompbinstr(h,14)
    print e, type(e)

    output:
    -1281 <type 'int'>
"
"Perl's correspondent string literal for Python's prefix r""text""?","r'Can\'t believe it\'s not butter'   =>   Can\'t believe it\'s not butter
"
"Fast, elegant way to calculate empirical/sample covariogram","# now do the real calculations for the covariogram
#    sort by h and give clear names
i = argsort(m[:,0])  # h sorting
h = m[i,0]
zh = m[i,1]
zsh = m[i,2]
zz = zh*zsh

hvals = linspace(0,S,1000)  # the values of h to use (S should be in the units of distance, here I just used ints)
ihvals = searchsorted(h, hvals)
result = []
for i, ihval in enumerate(ihvals[1:]):
    start, stop = ihvals[i-1], ihval
    N = stop-start
    if N>0:
        mnh = sum(zh[start:stop])/N
        mph = sum(zsh[start:stop])/N
        szz = sum(zz[start:stop])/N
        C = szz-mnh*mph
        result.append([h[ihval], C])
result = array(result)
plt.plot(result[:,0], result[:,1])
plt.grid()
plt.show()
"
Pythonic way of applying changes on closing a dialog window,"self.changes.append(lambda: self.dataclass.set_checkoutbutton(value))
"
Pattern matching and compiling,"title = pattern.sub(words[0], title)
"
How to initialize NumPy structured array with different default value for each column?,"np.ndarray((x,), dt1, mat1)
"
Find and list duplicates in Python list,"seen = set()
uniq = [x for x in a if x not in seen and not seen.add(x)]    
"
Execute the script with special command iceweasel ( which is a firefox webbrowser for debian ),"$ python iceweasel.py ../*.py

    ---- ../camera2xml.py -----
    short name: camera2xml.py
    size: 567
    words: 47


    ---- ../cgi.py -----
    short name: cgi.py
    size: 612
    words: 63


    ---- ../classs.py -----
    short name: classs.py
    size: 485
    words: 44
"
Python: Passing variables between functions,"def defineAList():
    local_list = ['1','2','3']
    print ""For checking purposes: in defineAList, list is"", local_list 
    return local_list 

def useTheList(passed_list):
    print ""For checking purposes: in useTheList, list is"", passed_list

def main():
    # returned list is ignored
    returned_list = defineAList()   

    # passed_list inside useTheList is set to what is returned from defineAList
    useTheList(returned_list) 

main()
"
Regex Findall Hang in Linux,"float1 = re.findall(r'\d+\.\d+', string1)
float2 = re.findall(r'\d+\.\d+', string2)
"
Python: Check if element is not in two lists?,"items_set = set(chain(lista, listb))
if ele in items_set:  # this membership check will be a lot faster
    # do stuff
"
How do you find the IQR in Numpy?,"q75, q25 = np.percentile(x, [75 ,25])
iqr = q75 - q25
"
Converting from a string to boolean in Python?,"s == 'True'
"
Attach label information when averaging predictions across users,"import pandas as pd

df = pd.DataFrame({'user_data':user_data, 'label_user':label_user})
print(df.groupby('user_data').label_user.unique())
# user_data
# User0        [0]
# User1        [1]
# User2        [1]
# User3        [0]
# User4        [0]
# Name: label_user, dtype: object
"
subclassing Python's datetime.time,"class MyTime(datetime.time):
    def __new__(cls, t):
        return datetime.time.__new__(cls, t.hour, t.minute, t.second, t.microsecond)

print MyTime(datetime.time(10,20,30,400000))
"
How to return table data as different format types via views in Django,"class YourModel(models.Model):
    # here your fields

    def as_dict(self):
        context = {
            'pk': self.id,
            'name': self.name,
            # ...
        }

        return context
"
How Can I have newlines in multiline string print new lines in Windows?,"print sql.decode('string_escape')
"
Group by category in pandas DataFrame object output to dictionary object,">>> d = {k: v.drop(""Category"", axis=1) for k,v in list(df.groupby(""Category""))}
>>> pprint.pprint(d)
{'Thing01':             Amount
date              
2014-08-05   18.40
2014-08-05  192.60
2014-08-04   53.23,
[...]
 'Thing99':             Amount
date              
2014-08-04   76.21
2014-08-04  786.22
2014-08-04   87.44
2014-08-04   32.12}
"
How to modify a the level 0 of a pandas data frame multi index?,"df.rename(index=dict(zip(df.index.get_level_values(0), new_index)))
"
How to crawl various websites to find specific department using Python?,"TABLE pages (
    `absolute_url` VARCHAR(255) NOT NULL,
    `visited` TINYINT(1) DEFAULT 0,
    -- Additional fields
    UNIQUE KEY (`absolute_url`)
)
"
Reading a Json response recursevely with python,"~$ python test_pdb.py 
json:       {""servers"": [{""id"": ""a059eccb-d929-43b2-8db3-b32b6201d60f"", ""links"": [{""href"": ""http://192.168.100.142:8774/v2/2ad1fc162c254e59bea043560b7f73cb/servers/a059eccb-d929-43b2-8db3-b32b6201d60f"", ""rel"": ""self""}, {""href"": ""http://192.168.100.142:8774/2ad1fc162c254e59bea043560b7f73cb/servers/a059eccb-d929-43b2-8db3-b32b6201d60f"", ""rel"": ""bookmark""}], ""name"": ""birk""}]}
servers
json:       {""id"": ""a059eccb-d929-43b2-8db3-b32b6201d60f"", ""links"": [{""href"": ""http://192.168.100.142:8774/v2/2ad1fc162c254e59bea043560b7f73cb/servers/a059eccb-d929-43b2-8db3-b32b6201d60f"", ""rel"": ""self""}, {""href"": ""http://192.168.100.142:8774/2ad1fc162c254e59bea043560b7f73cb/servers/a059eccb-d929-43b2-8db3-b32b6201d60f"", ""rel"": ""bookmark""}], ""name"": ""birk""}
id
a059eccb-d929-43b2-8db3-b32b6201d60f
links
json:       {""href"": ""http://192.168.100.142:8774/v2/2ad1fc162c254e59bea043560b7f73cb/servers/a059eccb-d929-43b2-8db3-b32b6201d60f"", ""rel"": ""self""}
href
http://192.168.100.142:8774/v2/2ad1fc162c254e59bea043560b7f73cb/servers/a059eccb-d929-43b2-8db3-b32b6201d60f
rel
self
json:       {""href"": ""http://192.168.100.142:8774/2ad1fc162c254e59bea043560b7f73cb/servers/a059eccb-d929-43b2-8db3-b32b6201d60f"", ""rel"": ""bookmark""}
href
http://192.168.100.142:8774/2ad1fc162c254e59bea043560b7f73cb/servers/a059eccb-d929-43b2-8db3-b32b6201d60f
rel
bookmark
name
birk
"
How to iterate over consecutive chunks of Pandas dataframe efficiently,">>> df = pd.DataFrame(np.random.rand(15, 5), index=[0]*15)
>>> df[0] = range(15)
>>> df
    0         1         2         3         4
0   0  0.746300  0.346277  0.220362  0.172680
0   1  0.657324  0.687169  0.384196  0.214118
0   2  0.016062  0.858784  0.236364  0.963389
[...]
0  13  0.510273  0.051608  0.230402  0.756921
0  14  0.950544  0.576539  0.642602  0.907850

[15 rows x 5 columns]
"
match all words not starting with ':' Python regex,"(?<!:)\b\w+
"
Using XML python library to acces data,"1418823725
----
P AA 62
P BB 63
P CC 0
"
Making a grid with curses from a dictionary of flat tuples,"new_dict = {(2 * x + 1, 2 * y + 1): v for (x, y), v in d.items()}
"
Python - how to ignore escape chars in regexp,"(STR\()""(.+?)(?<!\\)(""\))
"
How to iterate over a list of strings and do pattern matching?,"import re

string = ''.join(lst)
results = []

for match in re.finditer('\w\(', string):
    parens = 0
    substring = string[match.start():]
    results.append([substring[0]])
    for ii, ch in enumerate(substring):
        if ch == '(':
            parens += 1
            if parens == 1:
                results[-1].append(substring[ii+1])
        elif ch == ')':
            parens -= 1
            if parens < 0:
                break
"
"paramiko, isn't talking to ssh-agent. same behavior in fabric","tail -f /var/log/auth.log 
Mar 28 11:12:36 xxxxxxxxxxx sshd[17652]: Invalid user bryan from xxx.xxx.xxx.xxx
"
How do I install Hadoop and Pydoop on a fresh Ubuntu instance,"# Add these into the Hadoop env
cat >> $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh <<EOF
export JAVA_HOME=${JAVA_HOME}
export HADOOP_PREFIX=${HADOOP_PREFIX}
EOF

cat > $HADOOP_PREFIX/etc/hadoop/core-site.xml <<EOF
<?xml version=""1.0"" encoding=""UTF-8""?>
<?xml-stylesheet type=""text/xsl"" href=""configuration.xsl""?>
<configuration>
    <property>
        <name>fs.defaultFS</name>
        <value>hdfs://localhost:9000</value>
    </property>
</configuration>
EOF

cat > $HADOOP_PREFIX/etc/hadoop/hdfs-site.xml <<EOF
<?xml version=""1.0"" encoding=""UTF-8""?>
<?xml-stylesheet type=""text/xsl"" href=""configuration.xsl""?>
<configuration>
    <property>
        <name>dfs.replication</name>
        <value>1</value>
    </property>
</configuration>
EOF
"
Remove line break inside line row from CSV with regular expression,"'Block. CertNot Valid.\nQuery with me'
"
Common xlabel/ylabel for matplotlib subplots,"fig.tight_layout()
"
Sort dictionary values and discard those which do not have a value,">>> dict1 = {""b"":""1"", ""a"":""2"", ""d"":"""", ""c"":""3""}
>>> [v for k, v in sorted(dict1.items()) if v]
['2', '1', '3']
"
"With index, open(file) as enumerate(filepointer)","with open(filename) as f:
    for index, line in enumerate(f):
        # Do stuff with each line.
"
What is a solid example of something that can be done with list comprehensions that is tricky with high order functions?,"[(x, y) | x <- [1..3], y <- [4..6]]
"
Django: How to extend SessionBase to have access to the Request Object,"import mycustomsessionbackend as myengine

class MyCustomSessionMiddleware(object):
    def process_request(self, request):
        session_key = request.COOKIES.get(settings.SESSION_COOKIE_NAME, None)
        request.session = myengine.SessionStore(session_key, request)

...

# mycustomsessionbackend.py
class SessionStore(SessionBase):
    def __init__(self, session_key=None, request=None):
        super(SessionStore, self).__init__(session_key)
        self.request = request
"
"Finding ""hotspots"" in unidimensional list in python","from sklearn.cluster import AffinityPropagation
import numpy as np

data = [[1200, 1210], [1212, 1222], [1190, 1200], [300, 310], [800, 810]]
centers = np.array([[sum(x) / len(x)] for x in data])

clf = AffinityPropagation()


for (points, cluster) in zip(data, clf.fit_predict(centers)):
    center = sum(points) / len(points)
    print points, center, cluster
"
Add a CSS class to a link in RST,".. container:: myclass

    `goolge <www.google.com>`_
"
PIG UDF (Python) Charset Encoding,"parsed = foreach a generate flatten(my.testparser($0));
"
How to check if form filled in python selenium,"district = driver.find_element_by_css_selector(""input[label=District]"")
print(district.get_attribute(""value""))
"
Make reverse diagonals white in heatmap,"#Create test data:
data = np.random.random_sample((25, 25))
#Create a diagonal mask:
mask = np.diag(np.ones(25))
#Apply mask to data:
masked_data = ma.masked_array(data, mask)
#Set mask color to white:
cm.jet.set_bad(color='white', alpha=None)
#for this to work we use pcolormesh instead of pcolor:
pcolormesh(masked_data, cmap=cm.jet)
colorbar()
show()
"
How to handle catch and handle redirect loops through requests.get or selenium?,"try:
    requests.get(looper)
except requests.exceptions.TooManyRedirects:
    do stuff
"
floating number string formatting in python,">>> '%08.3f'%(8.8)
'0008.800'
"
What is the best way to call a python script from another python script?,"import test1

def service_func():
    print 'service func'

if __name__ == '__main__':
    # service.py executed as script
    # do something
    service_func()
    test1.some_func()
"
python initialization of constants in separate file,"[constants]
key = value
x = 0
y = 1
"
How to output a Tab delimated file in a particular format,"Enter Filename:test.csv
Enter Author Name:foo
Enter Title Name:foobar
Enter year:2015
Enter Journal:foobar
"
Python calendar: day/month names in specific locale,"from calendar import TimeEncoding, month_name

def get_month_name(month_no, locale):
    with TimeEncoding(locale) as encoding:
        s = month_name[month_no]
        if encoding is not None:
            s = s.decode(encoding)
        return s

print get_month_name(3, ""nb_NO.UTF-8"")
"
Python: How to evaluate a function which is string?,"import sympy

def definition_to_function(s):
    lhs, rhs = s.split(""="", 1)
    rhs = rhs.rstrip('; ')
    args = sympy.sympify(lhs).args
    f = sympy.sympify(rhs)
    def f_func(*passed_args):
        argdict = dict(zip(args, passed_args))
        result = f.subs(argdict)
        return float(result)
    return f_func
"
'@' python decorator used to do something similar to method overriding in java?,"def f():
    g.db = connect_db()

app.before_request(f)
"
Looking for a DSL to convert JSON to CSV,"w = csv.writer(...)
for r in records: 
    l = {}
    for field in fields:
        f_ = rename(field)
        v_ = transform(field, r.get(field, default(field)))
        l[f_] = v_
    w.write(l)
"
"Permission to view, but not to change! - Django","{% submit_row %}
"
Python: standard function and context manager?,"with closing(my_func()) as my_obj:
    … do stuff …
"
Python - Print random number of lines from file,">>> import random
>>> nameLines = '''\
... apple
... cheese
... cake
... tree
... pie
... '''.splitlines()
>>> random.sample(nameLines, random.randint(1, 2))
['apple', 'cake']
>>> random.sample(nameLines, random.randint(1, 2))
['cheese']
"
Python equivalent of C++ begin() and end() for custom classes,"import numpy as np

class CustomIter:
    def __init__(self, data):
        self.data = data
        self.count = 0


    def __iter__(self):
        return self

    def __next__(self):
        count = self.count
        self.count += 1

        if count == 0:  #On first iteration, retun a sum of the keys
            return sum(self.data.keys())

        elif count == 1: #On second iteration, return the subkeys in tuples
            subkeys =  [ 
                a_dict.keys()
                for a_dict in self.data.values()
            ]

            return subkeys

        elif count == 2: #On third iteration, return the count of np arrays
            np_arrays = [
                np_array
                for a_dict in self.data.values()
                for np_array in a_dict.values()
            ]

            return len(np_arrays)

        else:  #Quit after three iterations
            raise StopIteration


custom = {
    1: {'a': np.zeros(10), 'b': np.zeros(100)}, 
    2:{'c': np.zeros(20), 'd': np.zeros(200)}
}

for i in CustomIter(custom):
    print(i)


--output:--
3
[dict_keys(['b', 'a']), dict_keys(['d', 'c'])]
4
"
"Counting data points within limits, and applying buffer to isolated points [data analysis]","0.35
"
Break string into words and phrases,"['foo', 'bar', 'baz', 'qux', 'foo bar', 'bar baz', 'baz qux', 'foo bar baz', 'bar baz qux', 'foo bar baz qux']
"
takeOrdered descending Pyspark,"RDD.takeOrdered(5, key = lambda x: -x[0])
"
Removing Corresponding Entries from Two Numpy Arrays,"In [13]: time
Out[13]: array([  0.,   1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,  10.])

In [15]: flux
Out[15]: array([  1.,   1.,   1.,   1.,   1.,  nan,  nan,  nan,   1.,   1.,   1.])


In [16]: time2 = time[~np.isnan(flux)]
In [17]: flux2 = flux[~np.isnan(flux)]  
In [18]: time2
Out[18]: array([  0.,   1.,   2.,   3.,   4.,   8.,   9.,  10.])

In [19]: flux2
Out[19]: array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.])
"
python unicode issues in both python2 and python3,"مافظة_البدائع
أوريويلا
Battle_of_Nicopolis
Qingdao
"
Filtering on one dimension retaining shape of array,"[[False False False]
 [False  True False]]
"
getattr and setattr on nested objects?,"
if __name__=='__main__':
    p = Person()
    print(rgetattr(p, 'pet.favorite.color', 'calico'))
    # 'calico'

    try:
        # Without a default argument, `rgetattr`, like `getattr`, raises
        # AttributeError when the dotted attribute is missing
        print(rgetattr(p, 'pet.favorite.color'))
    except AttributeError as err:
        print(err)
        # 'Pet' object has no attribute 'favorite'

    rsetattr(p, 'pet.name', 'Sparky')
    rsetattr(p, 'residence.type', 'Apartment')
    print(p.__dict__)
    print(p.pet.name)
    # Sparky
    print(p.residence.type)
    # Apartment
"
Faster way to calculate hexagon grid coordinates,"def calc_polygons_new(startx, starty, endx, endy, radius):
    sl = (2 * radius) * math.tan(math.pi / 6)

    # calculate coordinates of the hexagon points
    p = sl * 0.5
    b = sl * math.cos(math.radians(30))
    w = b * 2
    h = 2 * sl


    # offsets for moving along and up rows
    xoffset = b
    yoffset = 3 * p

    row = 1

    shifted_xs = []
    straight_xs = []
    shifted_ys = []
    straight_ys = []

    while startx < endx:
        xs = [startx, startx, startx + b, startx + w, startx + w, startx + b, startx]
        straight_xs.append(xs)
        shifted_xs.append([xoffset + x for x in xs])
        startx += w

    while starty < endy:
        ys = [starty + p, starty + (3 * p), starty + h, starty + (3 * p), starty + p, starty, starty + p]
        (straight_ys if row % 2 else shifted_ys).append(ys)
        starty += yoffset
        row += 1

    polygons = [zip(xs, ys) for xs in shifted_xs for ys in shifted_ys] + [zip(xs, ys) for xs in straight_xs for ys in straight_ys]
    return polygons
"
Pygame sprite jump with pressed key,"    elif (jump_pressed == True and self.vspeed == 0):
        self.vspeed = -(self.speed)*2
        print(""jump is pressed"")
"
How can I force ElementTree to write to disk every change?,"path = ""path/""
name = ""fileName""

xmlRoot = Element(""root"")#create a root element for the xml structure
xmlSub = SubElement(xmlRoot,""sub"")
subName = SubElement(xmlCard,""name"")
subName.text = ""element text""

saveName = path + name + "".xml"" #constructs location of xml file (path/fileName.xml)
tree = ElementTree(xmlRoot) #compiles the tree
tree.append(saveName) #appends to specified file
"
Removing Negative Elements in a List - Python,"L = L[:subscript] + L[subscript:]
"
What is the best Python data structure for named 2D array,"mydict = {""Pepsi"": {""respondent"": 3, ""rating"": 8}, ""Coke"": {""respondent"": 3, ""rating"":10}}
"
Inherit a parent class docstring as __doc__ attribute,"import inspect

def inheritdocstring(cls):
    for base in inspect.getmro(cls):
        if base.__doc__ is not None:
            cls.__doc__ = base.__doc__
            break
    return cls
"
How to allow users to pick dates using Python,">>> import datetime
>>> userdateString = '2013-2-1'
>>> datetime.datetime.strptime(userdateString, '%Y-%m-%d')
datetime.datetime(2013, 2, 1, 0, 0)
"
Python PIL: IOError: cannot identify image file,">>> urllib.urlopen(image_url).read()
'\n<?xml version=""1.0"" encoding=""utf-8""?>\n<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Strict//EN""\n ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"">\n<html>\n  <head>\n    <title>403 You are banned from this site.  Please contact via a different client configuration if you believe that this is a mistake.</title>\n  </head>\n  <body>\n    <h1>Error 403 You are banned from this site.  Please contact via a different client configuration if you believe that this is a mistake.</h1>\n    <p>You are banned from this site.  Please contact via a different client configuration if you believe that this is a mistake.</p>\n    <h3>Guru Meditation:</h3>\n    <p>XID: 1806024796</p>\n    <hr>\n    <p>Varnish cache server</p>\n  </body>\n</html>\n'
"
Writing wav file in Python with wavfile.write from SciPy,"data2 = np.asarray(data2, dtype=np.int16)
"
How to os.walk deep defaultdict for values?,"def dump(data, path=''):
    if isinstance(data, defaultdict):
        for k, v in data.items():
            dump(v, path + k + "":"")
    else:
        print ""%s%s"" % (path, ':'.join(""%s=%r"" % pair for pair in d.items()))

dump(data)
"
Decimal alignment formatting in Python,"import re
import textwrap

a = [  5.50056103e+02,   6.77383566e+03,   6.01001513e+05,
         3.55425142e+08,   7.07254875e+05,   8.83174744e+02,
         8.22320510e+01,   4.25076609e+08,   6.28662635e+07,
         1.56503068e+02]

thelist = textwrap.dedent(
        '\n'.join(ut0.sub(r'\1', ""%20f"" % x) for x in a)).splitlines()

print '\n'.join(thelist)
"
How to print a sublist that contains all of the strings in another list?,">>> {'word','word 1','word 2'}.issubset(['desk','chair','lamp'])
False
>>> {'word','word 1','word 2'}.issubset(['cow','word','horse','word 2','word 1'])
True
"
Can't get menpo to display images in Pycharm,"bb.view()
plt.show()
"
How does one identify the time consuming tasks in a SimPy simulation?,"python runsnakerun.py profile.dump
"
"Do I want to join/merge, concat, or append these two Pandas DataFrames?","import pandas as pd
from StringIO import StringIO

d1 = '''Country Name  Year  Population Age 0 - 14
        Aruba  1960              43.847771
      Andorra  1960                    NaN
  Afghanistan  1960              43.712284
       Angola  1960              43.759289
      Albania  1960              41.757282'''

d2 = '''Country Name  Population Age 15 - 64
        Aruba               53.667355
      Andorra                     NaN
  Afghanistan               53.834637
       Angola               53.587101
      Albania               52.941044'''

t3 = pd.DataFrame.from_csv( StringIO(d1), sep='\s{2,}', index_col=None )
print '\nt3:\n',t3

t4 = pd.DataFrame.from_csv( StringIO(d2), sep='\s{2,}', index_col=None )
print '\nt4:\n',t3

print '\n--- merge ---\n'

print pd.merge( t4, t3, on='Country Name')

print pd.merge( t4, t3[ ['Country Name', 'Population Age 0 - 14'] ], on='Country Name')

print '\n--- concat ---\n'

print pd.concat( (t4, t3['Population Age 0 - 14']), axis=1)

print '\n--- [xxx] = [xxx] ---\n'

t4['Population Age 0 - 14'] = t3['Population Age 0 - 14']

print t4
"
How to unpack a struct in Python?,"In [7]: struct.unpack('2q', x)
Out[7]: (806, 736)
"
chunk a text database into N equal blocks and retain header,"$ cat file && python mkt.py && for p in part*; do echo ---- $p; cat $p; done
header
1
2
3
4
5
6
7
8
9
10
11
12
13
14
---- part1
header
1
2
3
4
---- part2
header
5
6
7
8
---- part3
header
9
10
11
12
---- part4
header
13
14
"
"Using Python's PIL, how do I enhance the contrast/saturation of an image?",">>> contrast.enhance(2).show()
"
Python - The best way to read a sparse file into a sparse matrix,"X_data = []
X_row, X_col = [], []
targets_array = []

for row_idx, opportunity in enumerate(opp_data):
    targets_array.append(int(opportunity[-1]))
    row = np.array(map(int, opportunity[:-1]))
    col_inds, = np.nonzero(row)
    X_col.extend(col_inds)
    X_row.extend([row_idx]*len(col_inds))
    X_data.extend(row[col_inds])

print "" Starting to transform to a sparse matrix"" + str(time.now())
X = coo_matrix((X_data, (X_row, X_col)), dtype=int)
print ""Finished transform to a sparse matrix "" + str(time.now())
"
PYTHON - creating multiple lists in a loop,"for elem in dis:
    print max(dis[elem])
"
Python and Pandas - Moving Average Crossover,"import pandas as pd

df = pd.read_table('data', sep='\s+')
previous_15 = df['SMA_15'].shift(1)
previous_45 = df['SMA_45'].shift(1)
crossing = (((df['SMA_15'] <= df['SMA_45']) & (previous_15 >= previous_45))
            | ((df['SMA_15'] >= df['SMA_45']) & (previous_15 <= previous_45)))
crossing_dates = df.loc[crossing, 'Date']
print(crossing_dates)
"
Iterate over rows and expand pandas dataframe,"import pandas as pd
dfIn = pd.DataFrame({u'name': ['Tom', 'Jim', 'Claus'],
                     u'location': ['Amsterdam', ['Berlin','Paris'],
                                   ['Antwerp','Barcelona','Pisa'] ]})

def expand(row):
    locations = row['location'] if isinstance(row['location'], list) else [row['location']]
    s = pd.Series(row['name'], index=list(set(locations)))
    return s

In [156]: dfIn.apply(expand, axis=1)
Out[156]: 
  Amsterdam Antwerp Barcelona Berlin Paris   Pisa
0       Tom     NaN       NaN    NaN   NaN    NaN
1       NaN     NaN       NaN    Jim   Jim    NaN
2       NaN   Claus     Claus    NaN   NaN  Claus
"
Remove arrays from nested arrays based on first element of each array,">>> k = [j[0] for j in a]
>>> [i for i in b if i[0] not in k]
[[5, 3, 2], [7, 2, 1]]
"
writing decompressed file to disk fetched from web server,"import requests
import tempfile
import zipfile

KB = 1<<10
MB = 1<<20

url = '...' # Set url to the download link.

resp = requests.get(url, stream=True)
with tmp as tempfile.SpooledTemporaryFile(max_size=500*MB):
    for chunk in resp.iter_content(4*KB):
        tmp.write(chunk)
    archive = zipfile.ZipFile(tmp)
    archive.extractall(path)
"
How to set first column to a constant value of an empty np.zeros numPy matrix?,"myArray = np.zeros((6,6))
"
Embedding Python with C,"typedef struct {
  PyObject_HEAD
  static PyObject (*callback)(PyObject *, PyObject *);
} CallbackObject;

static PyObject *
callback_call(CallbackObject *self, PyObject *args, PyObject *kwds)
{
  return self->callback(args, kwds);
}

static PyTypeObject CallbackType = {
    PyObject_HEAD_INIT(NULL)
    0,                          /*ob_size*/
    ""Callback"",                 /*tp_name*/
    sizeof(CallbackObject),     /*tp_basicsize*/
    0,                          /*tp_itemsize*/
    0,                          /*tp_dealloc*/
    0,                          /*tp_print*/
    0,                          /*tp_getattr*/
    0,                          /*tp_setattr*/
    0,                          /*tp_compare*/
    0,                          /*tp_repr*/
    0,                          /*tp_as_number*/
    0,                          /*tp_as_sequence*/
    0,                          /*tp_as_mapping*/
    0,                          /*tp_hash */
    (ternaryfunc) callback_call, /*tp_call*/
    0,                          /*tp_str*/
    0,                          /*tp_getattro*/
    0,                          /*tp_setattro*/
    0,                          /*tp_as_buffer*/
    Py_TPFLAGS_DEFAULT,         /*tp_flags*/
};

PyObject *
c_to_python(PyObject (*callback)(PyObject *, PyObject *))
{
  CallbackObject *pycallback = PyObject_New(CallbackObject, &CallbackType);
  if (pycallback)
    pycallback->callback = callback;
  return pycallback;
}
"
Client side validation in openerp,"import time
    def check_hour_format(self,cr,uid,ids,time_field,context=None):
        try:
            time.strptime(char_input, ""%H:%M"")
            return {}
        except ValueError:
            warning = {'title'  : _(""Warning for this value!""),
                       'message': _(""Field not in correct format!""),
                      }
            return {'warning': warning}
"
How to stop a dbus gobject loop,"import gobject
import dbus
import dbus.service

from dbus.mainloop.glib import DBusGMainLoop
DBusGMainLoop(set_as_default=True)


OPATH = ""/com/example/StopLoop""
IFACE = ""com.example.StopLoop""
BUS_NAME = ""com.example.StopLoop""
TIMEOUT = 30 * 1000


class Example(dbus.service.Object):
    def __init__(self, loop):
        self.loop = loop
        bus = dbus.SessionBus()
        bus.request_name(BUS_NAME)
        bus_name = dbus.service.BusName(BUS_NAME, bus=bus)
        dbus.service.Object.__init__(self, bus_name, OPATH)
        # Add a timeout for how long to run mainloop
        # if no signal is received
        self.setup_timeout(TIMEOUT)
        # Listen to the ""Stop"" signal
        self.listen_for_signal(bus)

    def setup_timeout(self, timeout):
        gobject.timeout_add(timeout, self.handler)

    def listen_for_signal(self, bus):
        bus.add_signal_receiver(self.handler, ""Stop"")

    def handler(self):
        # This handler is used for both timeout and signal
        self.loop.quit()


if __name__ == ""__main__"":
    loop = gobject.MainLoop()
    a = Example(loop)
    loop.run()
    print ""Exited mainloop, continuing program...""
"
Update iPython to version 2.0 on Mac OS,"$ enpkg --update-all
"
Getting names from HTML file via python,"from bs4 import BeautifulSoup

import urllib2
import re

def get_players(team_id, year):
    link = ""http://espn.go.com/nba/team/stats/_/name/{}/year/{}/"".format(team_id, year)
    source = urllib2.urlopen(link)
    html = source.read()
    source.close();
    soup = BeautifulSoup(html, ""html.parser"")


    players_table = soup.find_all(""tr"",{""class"" : re.compile(r""\d+$"")})
    player_names = []
    for table in players_table:
        for a in table.find_all('a'):
            player_names.append(a.get_text())

    return player_names
"
Is this possible using regular expression,"re.sub(r'(?:(?<=,)|^)(?=(""(?:"""")*(?:[^""]+(?:"""")*)*""|[^"",]*))\1,', r'\1;', s)
"
How can you output a varying argument in Python?,"var1 = f(var2, var3)
var4 = f(var5, var6)
"
Read each line of HTML form submission Python,"items = itemList.split(""\n"")
"
Displaying multiple masks in different colours in pylab,"val1, val2 = 0.5, 1
a[a<-1]= val1
a[a>1] = val2
ax.imshow(a, interpolation='nearest')
"
How to deal with special characters in make command expansion?,"VAR2 := $(shell python -c 'print(""include_path_with[weird]characters"")')
g++ main.cpp -I'$(OUT)'
"
Fastest way to index an element by the first element of a tuple in a list of tuples in python,"C:\Users\Jesse\Desktop>python -m timeit -s ""import test"" ""test.a()""
1000000 loops, best of 3: 1.21 usec per loop

C:\Users\Jesse\Desktop>python -m timeit -s ""import test"" ""test.b()""
1000000 loops, best of 3: 1.2 usec per loop

C:\Users\Jesse\Desktop>python -m timeit -s ""import test"" ""test.c()""
1000000 loops, best of 3: 1.45 usec per loop

C:\Users\Jesse\Desktop>python -m timeit -s ""import test"" ""test.d()""
1000000 loops, best of 3: 0.922 usec per loop
"
Compressing JSON sent via CGI in Python,"$ python3 foo.py | gunzip
foofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoo
"
Queryset of people with a birthday in the next X days,"from datetime import datetime, timedelta
import operator

from django.db.models import Q

def birthdays_within(days):

    now = datetime.now()
    then = now + timedelta(days)

    # Build the list of month/day tuples.
    monthdays = [(now.month, now.day)]
    while now <= then:
        monthdays.append((now.month, now.day))
        now += timedelta(days=1)

    # Tranform each into queryset keyword args.
    monthdays = (dict(zip((""birthday__month"", ""birthday__day""), t)) 
                 for t in monthdays)


    # Compose the djano.db.models.Q objects together for a single query.
    query = reduce(operator.or_, (Q(**d) for d in monthdays))

    # Run the query.
    return Person.objects.filter(query)
"
Is this how to check if an object has no related objects in templates?,"<ul>
{% for athlete in athlete_list %}
    <li>{{ athlete.name }}</li>
{% empty %}
    <li>Sorry, no athlete in this list!</li>
{% endfor %}
<ul>
"
Speed up numerical integration in Cython,"cython -a myfile.pyx
"
How to count number of unique lists within list?,">>> Counter(tuple(e) for e in li)
Counter({(1, 2, 3): 2, (2, 3, 4): 1})
"
"Using Selenium/WebDriver and Python, how do I suppress the prompt to share my camera and microphone?","profile = webdriver.FirefoxProfile()
profile.set_preference ('media.navigator.permission.disabled', True)
profile.update_preferences()
"
Pandas get specific rows from HDF5 by index,"In [29]: c = store.select_column('df','index')

In [30]: c
Out[30]: 
0    2013-01-01
1    2013-01-02
2    2013-01-03
3    2013-01-04
4    2013-01-05
        ...    
95   2013-04-06
96   2013-04-07
97   2013-04-08
98   2013-04-09
99   2013-04-10
Name: B, dtype: datetime64[ns]
"
crawler stopped when running in the background in ubuntu,"nohup my_app.py &> myapp.log &
"
What exactly is contained within a obj.__closure__?,"def foo():
    def bar():
        print(spam)

    spam = 'ham'
    bar()
    spam = 'eggs'
    bar()
    return bar

b = foo()
b()
"
How to download a file using Python,"source = urllib2.urlopen(""http://someUrl.com/somePage.html"").read()
open(""/path/to/someFile"", ""wb"").write(source)
"
Learn Python the Hard Way Exercise 43,"# When creating an Engine object you give the map containing scenes to its constructor
def __init__(self, scene_map):
        self.scene_map = scene_map

# The method which starts playing the scenes
def play(self):

    # the opening scene from the map is selected as the current scene
    current_scene = self.scene_map.opening_scene()

     # You loop all the scenes probably, conditions of this loop are unknown because you haven't posted it entirely.
     while True:
         print ""\n--------""
         # It seems the next scene name is known in the current scene
         next_scene_name = current_scene.enter()

         # It replaces current scene with the next scene from the map
         current_scene = self.scene_map.next_scene(next_scene_name)
"
Python UDP Broadcast not sending,"tcpdump -i eth1 port 54545 -XX
listening on eth1, link-type EN10MB (Ethernet), capture size 65535 bytes

14:04:01.797259 IP 10.22.4.45.33749 > 255.255.255.255.54545: UDP, length 14
0x0000:  ffff ffff ffff f0de f1c4 8aa6 0800 4500  ..............E.
0x0010:  002a 0000 4000 4011 2c81 0a16 042d ffff  .*..@.@.,....-..
0x0020:  ffff 83d5 d511 0016 fe38 5468 6973 2069  .........8This.i
0x0030:  7320 6120 7465 7374 0000 0000            s.a.test....
"
How can Blueprint Flask routes in different files access shared objects,"from class1 import obj1
"
Multiple text fields with id's in django,"<td>{{ form.instance.user.username }}</td>
"
Webscraping an IMDb page using BeautifulSoup,"http://ia.media-imdb.com/images/M/MV5BMTA2NjEyMTY4MTVeQTJeQWpwZ15BbWU3MDQ5NDAzNDc@._V1_SX214_AL_.jpg Actor, ""Ozymandias"" Bryan Cranston
http://ia.media-imdb.com/images/M/MV5BNjUxNjcxMjE4N15BMl5BanBnXkFtZTgwNDk4NjA2MzE@._V1_SX214_AL_.jpg Actress, ""Karla"" Laura Prepon
http://ia.media-imdb.com/images/M/MV5BMTQ4MzM1MDAwMV5BMl5BanBnXkFtZTcwNTU4NzQwMw@@._V1_SX214_AL_.jpg Actress, ""The Mummy"" Rachel Weisz
http://ia.media-imdb.com/images/M/MV5BMjE0Mjg0NzE2Nl5BMl5BanBnXkFtZTcwMDE1MTkxMw@@._V1_SX214_AL_.jpg Actor, ""Jarhead"" Peter Sarsgaard
http://ia.media-imdb.com/images/M/MV5BMTMyOTYzODQ5MF5BMl5BanBnXkFtZTcwMjE3MDgzMQ@@._V1_SX214_AL_.jpg Actress, ""Blades of Glory"" Jenna Fischer
http://ia.media-imdb.com/images/M/MV5BMzE2OTAwNzM0Ml5BMl5BanBnXkFtZTcwNzE1MDg0Mw@@._V1_SX214_AL_.jpg Actress, ""Tangled"" Donna Murphy
http://ia.media-imdb.com/images/M/MV5BMTI0OTMzMzE0N15BMl5BanBnXkFtZTcwMjI1MzYyMQ@@._V1_SX214_AL_.jpg Actor, ""How the Grinch Stole Christmas"" T.J. Thyne
http://ia.media-imdb.com/images/M/MV5BNzczODkyNzY4OV5BMl5BanBnXkFtZTcwNTU0NjQzMQ@@._V1_SX214_AL_.jpg Actor, ""Home Alone"" John Heard
http://ia.media-imdb.com/images/M/MV5BMTg4MjU2MzA2OV5BMl5BanBnXkFtZTgwOTIxMjc4MjE@._V1_SX214_AL_.jpg Actress, ""Beerfest"" Audrey Marie Anderson
http://ia.media-imdb.com/images/M/MV5BMTQyOTc5NzA0M15BMl5BanBnXkFtZTYwODQ2MjYz._V1_SX214_AL_.jpg Producer, ""Kick-Ass"" Matthew Vaughn
"
Handling monthly-binned data in pandas,"In [27]: import pandas as pd

In [28]: from datetime import datetime, date

In [29]: import calendar

In [30]: def parse(dt):
             dt = datetime.strptime(dt, '%Y-%m-%d')
             dt = dt.replace(day=calendar.monthrange(dt.year, dt.month)[1])
             return dt.date()
             ....:

In [31]: parse('2013-01-01')
Out[31]: datetime.date(2013, 1, 31)

In [32]: r = pd.read_csv('date.csv', header=None, names=('date', 'value'), parse_dates=['date'], date_parser=parse)

In [33]: r
Out[33]:
         date  value
0  2013-01-31      1
1  2013-02-28      2
"
"Python Ctypes: Convert returned C array to python list, WITHOUT numpy","weights = getWeights_function_handler()
list = [weights[i] for i in xrange(ARRAY_SIZE_I_KNOW_IN_ADVANCE)]
"
"Conditional replacement of values in column A, B, C with value in column D","      A    B  C  D solution solution2
0     x          x        x         x
1   NaN    x     a       xa        xa
2   NaN    x     b       xb        xb
3   NaN    x     c       xc        xc
4   NaN  NaN  x  1      xc1       xc1
5   NaN  NaN  x  2      xc2       xc2
6   NaN    x     d       xd        xd
7   NaN  NaN  x  3      xd3       xd3
8   NaN  NaN  x  4      xd4       xd4
9     x          y        y         y
10  NaN    x     e       ye        ye
11  NaN  NaN  x  5      ye5       ye5
12  NaN  NaN  x  6      ye6       ye6
13  NaN    x     f       yf        yf
14  NaN  NaN  x  7      yf7       yf7
15  NaN  NaN  x  8      yf8       yf8
16  NaN  NaN  x  9      yf9       yf9
"
Python regex to find only second quotes of paired quotes,"import re
reg = re.compile(r'(?:\"").*?(\"")')
"
Numpy time based vector operations where state of preceding elements matters - are for loops appropriate?,"import numpy as np

TIME = np.array([0.,   10.,  20.,  30.,  40.,  50.,  60.,  70.,  80.,  90.])
FLOW = np.array([100., 75.,  60.,  20.0, 60.0, 50.0, 20.0, 30.0, 20.0, 10.0])
TEMP = np.array([300., 310., 305., 300., 310., 305., 310., 305., 300., 295.0])

last_high_flow_index = np.flatnonzero(FLOW > 50)[-1]
low_flow_indices = np.flatnonzero(FLOW < 30)
acceptable_low_flow_indices = low_flow_indices[low_flow_indices > last_high_flow_index]
apply_after_index = acceptable_low_flow_indices[0]
"
Time series normalization by event,">>> df
   product_1  product_2  product_3  product_4
1        415        400        500          0
2        550        300        400        200
3          0        300          0        200
4        550          0        500        300
5        600        300        500        300
"
"How to address a python list in MySQL query with ""WHERE""?","WHERE name IN (%s,%s,%s,%s)
"
In python curly braces with numbers from range() inside,"'[{}]'.format(' '.join(['{{{}}}'.format(i) for i in range(10)]))
"
Python List of Ngrams with frequencies,"n_grams = CountVectorizer(ngram_range=(1, 5))
"
matplotlib - Second X axis has an offset (wrt 1st X axis) I can't pin down,"In [68]: ax1.get_xlim()
Out[68]: (9.9999999999999995e-08, 34359738368.0)

In [69]: ax2.get_xlim()
Out[69]: (0.0, 34359738368.0)
"
How can I keep track of object instances in a list with python without using constructors (__init__)?," class RevealAccess(object):
   """"""
      A data descriptor that sets and returns values
      normally and prints a message logging their access.
   """"""

    def __init__(self, initval=None, name='var'):
      self.val = initval
      self.name = name

    def __get__(self, obj, objtype):
      print 'Retrieving', self.name
      return self.val

    def __set__(self, obj, val):
      print 'Updating', self.name
      self.val = val
"
Decode High Level Python to easier code,"{ 1: 2, 3: 4}
"
Print letters not in string,">>> 
the quick brown fox
['a', 'd', 'g', 'j', 'm', 'l', 'p', 's', 'v', 'y', 'z']
"
Python process keeps growing in django db upload script,"$ ./manage.py shell
> from django.conf import settings
> settings.DEBUG
True
> settings.DEBUG=False
> # django.db.connection.queries will now remain empty / []
"
Counting the number of specified words,"     america citizen 
1789    2    5 
1793    1    1 
"
Creating a multindex'd column DataFrame (expanded explanation),"pd.concat([measure1,measure2],axis=1)

grp         open               close                 vol                high                 low          
detail        sd      mean        sd      mean        sd      mean        sd      mean        sd      mean
AAPL    1.809306 -0.218046 -0.847634 -0.652089 -1.089633 -0.784762  0.679143 -0.302045 -0.329448  0.731871
MSFT   -0.370508 -1.405567  0.015618  0.902277 -0.907756  1.519284  0.335058  0.316156  0.469268 -1.535572
NTES    0.510792  1.030581 -0.657835  0.854525 -1.091934  0.890248  0.756789  0.612469 -1.016683 -0.244080
GOOG    0.171839  0.553251 -1.175595 -0.895070  0.597228 -0.948348 -0.039307 -0.134497  0.333860  1.431367
"
How to ignore quotes while splitting strings python,"print(re.split(r'\s+(?="")', line.strip())) #split on white space only if followed by a quote.
#['<abc<hd <>', '""abc""d"" ef""']     
"
Removing intersection between data frame based on multiple columns,"dimension1_id dimension2_id dimension3_id dimension4_id dimension5_id      \
0          True          True          True          True          True   True
1          True          True          True          True          True   True
2         False         False         False         False         False  False
3         False         False         False         False         False  False
4         False         False         False         False         False  False
"
Cache the result of a MySQLdb database query in memory,"import time

cache = {}
lastTime = time.time()

def timedCacheDecorator(func):

    def wrap(*args, **kwargs):

        key = str(args)+str(kwargs)

        # cache for 5 seconds
        global lastTime
        if key not in cache or time.time() - lastTime > 5:
            lastTime = time.time()
            cache[key] = func(*args, **kwargs)

        return cache[key]

    return wrap


# lets test it

@timedCacheDecorator
def myquery():
    return time.time()

print myquery()
time.sleep(1)
print myquery()
time.sleep(5)
print myquery()
time.sleep(1)
print myquery()
"
Generate partial subsets in Python,"print sum([zip(*(a[i:] for i in range(n))) for n in range(len(a)+1)], [])
"
Python: Remove top 'n' keys from a dictionary,"d = {1: [1, 2], 3: [2,4], 4:[3,3], 2:[4,1], 0:[5,0]} # dict to remove items from

sorted_list=sorted(d.items(), key=lambda x: x[1][1])
sorted_keys = [key[1] for key in sorted_list]

n=2 # number of items to remove
for key in sorted_keys[0:n]:
    d = dict([(k,v) for k,v in d.items() if v != key ])
"
"For loop, how can i use loop variable outside loop","import operator, itertools

LR = int(raw_input())

L1a = [8, 9, 14, 13, 12]
L2a = [9, 12, 14, 10, 8]
L3a = [26]
L1b = [27, 32, 26]
L2b = [30, 27, 32, 28, 31]
L3b = [31, 30, 26]
OM = [9, 10]

c1 = [(reduce(operator.mul, p), p) for p in itertools.product(L1b, L2b, L3b)]
c2 = [(reduce(operator.mul, p), p) for p in itertools.product(OM, L1a, L2a)]

RPL = [(((p[0][0]) / p[1][0]) * LR, p[0][1], p[1][1])  for p in itertools.product(c1, c2)]

print RPL
"
sparse versions of Pandas DataFrame,"df = pd.DataFrame({ 'x':[0, 0, 1, 0, 0, 3, 0, 0, 0, 5, 0] })

sdf = df.to_sparse(fill_value=0)

df.memory_usage()

x    88
dtype: int64

sdf.memory_usage()

x    24
dtype: int64
"
multiprocess.apply_async How do I wrap *args and **kwargs?,"# Normal call                                                                                        
0 (1, 2, 3) {'cat': 'dog'}
# Multicall
0 (1, 2, 3) {'cat': 'dog'}
1 (1, 2, 3) {'cat': 'dog'}
"
Python/Django: RelatedObjectDoesNotExist: Cart has no user,"class Cart(models.Model):
    user = models.OneToOneField(User, related_name='cart')        
    date_added = models.DateTimeField(auto_now_add=True, help_text=""Date when cart is added."")
    date_modified = models.DateTimeField(auto_now=True, help_text=""Date when cart is modified."")


class CartDetail(models.Model):
    cart = models.ForeignKey(Cart, related_name='cart_details')
    flower = models.ForeignKey(Flower)
    quantity = models.PositiveSmallIntegerField(help_text='Quantity to be purchased.')
    date_added = models.DateTimeField(auto_now_add=True,
                                      help_text=""Date when this item is added."")
    date_modified = models.DateTimeField(auto_now=True, help_text=""Date when this item is modified."")
"
How to compare 2 dictionary of tuples to generate this list of dictionary?,"outputDict = {}
for k, v in dict1.items():
    if k in dict2:
        result[k] = v + (dict2[k][2],)
"
Store SQL query result into Redis using Python?,">>> r.set('key', val)
"
Translating a callable test into a collection membership test,">>> 3 in even_numbers
False
>>> 4 in even_numbers
True
"
How can i write my own aggregate functions with sqlalchemy?,"# insert 30 random-valued rows
t.insert().execute([{'number': randrange(100)} for x in xrange(30)])

for row in select([func.avg(t.c.number), func.np_var(t.c.number)]).execute():
    print 'RESULT ROW: ', row
"
Can I iterate over a class in Python?,"[...]
    self.by_id[id] = weakref.ref(self)
[...]
@classmethod
def classiter(cls):
    # return all class instances which are still alive according to their weakref pointing to them
    return (i for i in (i() for i in cls.by_id.values()) if i is not None)
"
Port MATLAB bounding ellipsoid code to Python,"
import numpy as np
import numpy.linalg as la
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

pi = np.pi
sin = np.sin
cos = np.cos

def mvee(points, tol = 0.001):
    """"""
    Finds the ellipse equation in ""center form""
    (x-c).T * A * (x-c) = 1
    """"""
    N, d = points.shape
    Q = np.column_stack((points, np.ones(N))).T
    err = tol+1.0
    u = np.ones(N)/N
    while err > tol:
        # assert u.sum() == 1 # invariant
        X = np.dot(np.dot(Q, np.diag(u)), Q.T)
        M = np.diag(np.dot(np.dot(Q.T, la.inv(X)), Q))
        jdx = np.argmax(M)
        step_size = (M[jdx]-d-1.0)/((d+1)*(M[jdx]-1.0))
        new_u = (1-step_size)*u
        new_u[jdx] += step_size
        err = la.norm(new_u-u)
        u = new_u
    c = np.dot(u,points)        
    A = la.inv(np.dot(np.dot(points.T, np.diag(u)), points)
               - np.multiply.outer(c,c))/d
    return A, c

#some random points
points = np.array([[ 0.53135758, -0.25818091, -0.32382715], 
                   [ 0.58368177, -0.3286576,  -0.23854156,], 
                   [ 0.18741533,  0.03066228, -0.94294771], 
                   [ 0.65685862, -0.09220681, -0.60347573],
                   [ 0.63137604, -0.22978685, -0.27479238],
                   [ 0.59683195, -0.15111101, -0.40536606],
                   [ 0.68646128,  0.0046802,  -0.68407367],
                   [ 0.62311759,  0.0101013,  -0.75863324]])

# Singular matrix error!
# points = np.eye(3)

A, centroid = mvee(points)    
U, D, V = la.svd(A)    
rx, ry, rz = 1./np.sqrt(D)
u, v = np.mgrid[0:2*pi:20j, -pi/2:pi/2:10j]

def ellipse(u,v):
    x = rx*cos(u)*cos(v)
    y = ry*sin(u)*cos(v)
    z = rz*sin(v)
    return x,y,z

E = np.dstack(ellipse(u,v))
E = np.dot(E,V) + centroid
x, y, z = np.rollaxis(E, axis = -1)

fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')

ax.plot_surface(x, y, z, cstride = 1, rstride = 1, alpha = 0.05)
ax.scatter(points[:,0],points[:,1],points[:,2])

plt.show()
"
Merge a list of DataFrame's on a column?,"In [4]: data = [df, df, df, df]
        current = data[0].rename(columns={'Name': 'Name_month1'})
        for i, frame in enumerate(data[1:], 2):
            current = current.merge(frame, on='Rank').rename(
                         columns={'Name': 'Name_month%d' % i})
        current
Out[4]:    Rank Name_month1 Name_month2 Name_month3 Name_month4
        0     1       name1       name1       name1       name1
        1     2       name2       name2       name2       name2
        2     3       name3       name3       name3       name3
        3     4       name4       name4       name4       name4
        4     5       name5       name5       name5       name5
"
Passing a List and numpy.matrix to a python function from a C++ application,"import numpy

def print_matrix(M):
    print (M)

def transform_matrix(M, L):
    for x in L:
        M = M*x
    return M
"
Numpy vectorization algorithms to sum up numbers with the same time stamps,"% python -mtimeit -s'import test' 'test.using_lc()'
100 loops, best of 3: 9.93 msec per loop
% python -mtimeit -s'import test' 'test.using_slice()'
1000 loops, best of 3: 390 usec per loop
% python -mtimeit -s'import test' 'test.using_bincount()'
1000 loops, best of 3: 846 usec per loop
"
How to quicky create array from  big file?,"inetnums=[(int(x) for x in line.rstrip('\n').split('\t')) for line in fin]
"
How to get console output printed using kivy,"    from kivy.app import App
    from kivy.uix.boxlayout import BoxLayout
    from kivy.uix.popup import Popup
    from kivy.properties import ObjectProperty
    from kivy.uix.label import Label 
    import subprocess

    class shellcommand(BoxLayout):
        first=ObjectProperty()
        second=ObjectProperty()
        third=ObjectProperty()

        def uname(self):
            v=subprocess.check_output(""uname -a"",shell=True)
            result=Popup(title=""RESULT"",content=Label(text=""kernel is\n"" + v))
            result.open()
        def date(self):
            d=subprocess.check_output(""date"",shell=True)
            res=Popup(title=""DATE"",content=Label(text=""the date today is\n"" + d))
            res.open()
        def last(self):
            last=subprocess.check_output(""w"",shell=True)
            ls=Popup(title=""LOGIN"",content=Label(text=""logged in \n"" + last))
            ls.open()


    class shellApp(App):
        def build(self):
            return shellcommand()

    shellApp().run()
"
"How can I ""count from the back"" in python lists?",">>> l = ['h','e','l','l','o']
>>> print l[-2:]
['l', 'o']
>>> print l[-5:]
['h', 'e', 'l', 'l', 'o']
>>> print l[-6:]
['h', 'e', 'l', 'l', 'o']
>>> 
"
Is it worth using IPython parallel with scipy's eig?," m_size=300, n_mat=64, repeat=3
+------------------------------------+----------------------+
| settings                           | speedup factor       |
+--------+------+------+-------------+-----------+----------+
| func   | neng | nmkl | view type   | vs single | vs multi |
+--------+------+------+-------------+-----------+----------+
| ip_map |    2 |    1 | direct_view |      1.67 |     1.62 |
| ip_map |    2 |    1 |  loadb_view |      1.60 |     1.55 |
| ip_map |    2 |    2 | direct_view |      1.59 |     1.54 |
| ip_map |    2 |    2 |  loadb_view |      0.94 |     0.91 |
| ip_map |    4 |    1 | direct_view |      1.69 |     1.64 |
| ip_map |    4 |    1 |  loadb_view |      1.61 |     1.57 |
| ip_map |    4 |    2 | direct_view |      1.15 |     1.12 |
| ip_map |    4 |    2 |  loadb_view |      0.88 |     0.85 |
| parfor |    2 |    1 | direct_view |      0.81 |     0.79 |
| parfor |    2 |    1 |  loadb_view |      1.61 |     1.56 |
| parfor |    2 |    2 | direct_view |      0.71 |     0.69 |
| parfor |    2 |    2 |  loadb_view |      0.94 |     0.92 |
| parfor |    4 |    1 | direct_view |      0.41 |     0.40 |
| parfor |    4 |    1 |  loadb_view |      1.62 |     1.58 |
| parfor |    4 |    2 | direct_view |      0.34 |     0.33 |
| parfor |    4 |    2 |  loadb_view |      0.90 |     0.88 |
+--------+------+------+-------------+-----------+----------+
"
"statistics with ""group by"" or ""uniq""","import pandas, numpy as np
df = pandas.io.parsers.read_csv(""baseline.csv"")
df[""month""] = df[""time2""].map(lambda x: int(x.split('-')[1]))
df.groupby([""license"",""month""]).apply(len)
"
Python struct.pack dropping a byte.,">>> struct.pack('!Bhh', 1, 1, 13)
b'\x01\x00\x01\x00\r'
>>> struct.pack('!Bhh', 1, 1, 9)
b'\x01\x00\x01\x00\t'
>>> struct.pack('!Bhh', 1, 1, 65)
b'\x01\x00\x01\x00A'
"
"Register a ""Hello World"" DBus service, object and method using Python","dbus-send --session --print-reply --type=method_call --dest=com.example.HelloWorld /com/example/HelloWorld com.example.HelloWorld.SayHello.SayHello
"
Sorting numpy array with np.lexsort containing float values,"array([('ARG 212', -24.20364), ('ASN 205', -9.64164),
       ('LEU 206', -8.985774), ('ASN 207', -7.314434),
       ('PRO 208', -4.105338), ('LYS 211', -2.483852),
       ('GLY 210', -2.101412), ('ASN 209', -2.092342),
       ('SER 213', -1.181002), ('VAL 214', 0.057618)], 
      dtype=[('f', 'S9'), ('g', '<f8')])
"
Summing integers across records in Spark,">>> from operator import add
>>> rdd = sc.parallelize([(1038, u'XYZ'), ...])
>>> (rdd.filter(lambda x: ""XYZ"" == x[1])
...  .map(lambda x: (x[1], x[0]))
...  .reduceByKey(add).collect())
[('XYZ', 5809)]
"
Pairwise vdot using Numpy,"
In [307]: %timeit orig(x)
10000 loops, best of 3: 143 µs per loop

In [308]: %timeit alt(x)
100000 loops, best of 3: 8.63 µs per loop
"
python: multiplication of array to pandas dataframe,"df.drop('A', axis = 1) * z
"
"Python, ""filtered"" line editing, read stdin by char with no echo","@contextmanager
def cbreak():
    old_attrs = termios.tcgetattr(sys.stdin)
    tty.setcbreak(sys.stdin)
    try:
        yield
    finally:
        termios.tcsetattr(sys.stdin, termios.TCSADRAIN, old_attrs)
"
How to generate rows and columns in Python 3,"In [10]: for n in range(-5, 2):
             pr_right(n)
             print()
   ....:     
-5 -4 -3 -2 -1  0  1 
 2  3  4  5  6  7  8 
 9 10 11 12 13 14 15 
16 17 18 19 20 21 22 
23 24 25 26 27 28 29 
30 31 32 33 34 35 36 

-4 -3 -2 -1  0  1  2 
 3  4  5  6  7  8  9 
10 11 12 13 14 15 16 
17 18 19 20 21 22 23 
24 25 26 27 28 29 30 
31 32 33 34 35 36 37 

-3 -2 -1  0  1  2  3 
 4  5  6  7  8  9 10 
11 12 13 14 15 16 17 
18 19 20 21 22 23 24 
25 26 27 28 29 30 31 
32 33 34 35 36 37 38 

-2 -1  0  1  2  3  4 
 5  6  7  8  9 10 11 
12 13 14 15 16 17 18 
19 20 21 22 23 24 25 
26 27 28 29 30 31 32 
33 34 35 36 37 38 39 

-1  0  1  2  3  4  5 
 6  7  8  9 10 11 12 
13 14 15 16 17 18 19 
20 21 22 23 24 25 26 
27 28 29 30 31 32 33 
34 35 36 37 38 39 40 

 0  1  2  3  4  5  6 
 7  8  9 10 11 12 13 
14 15 16 17 18 19 20 
21 22 23 24 25 26 27 
28 29 30 31 32 33 34 
35 36 37 38 39 40 41 

 1  2  3  4  5  6  7 
 8  9 10 11 12 13 14 
15 16 17 18 19 20 21 
22 23 24 25 26 27 28 
29 30 31 32 33 34 35 
36 37 38 39 40 41 42 
"
Print only the list items that contain a certain character,"def stringMatch(L, char):
    counts = (char in word for word in L)  # compute the counts of `char` in each list item
    for word, count in zip(L, counts):
        if not count: continue
        print(word, count)
"
Python metaclasses: Why isn't __setattr__ called for attributes set during class definition?,"d = FooMeta.__prepare__('Foo', ())
d['Foo'] = 123
def a(self):
    pass
d['a'] = a
Foo = FooMeta('Foo', (), d)
"
when does django run the query for a OneToOneField?,"class Bar(models.Model):
    name = models.CharField(max_length=20)

class Foo(models.Model):
    bar = models.OneToOneField(Bar)
"
Iterate function changing parameter after each run,"def test(list_of_lists):
    final = []
    for L in list_of_lists:
        final += L
    return final
"
Python: How to extract floating point numbers from a text file with mixed content?,">>>
-2.435953, 1.218364
-2.001858, 1.303935
"
More on dynamic programming,"selectedList = []
def printSelected (n, low):

    if len(n) == 1:
        # No need to print because it's 
        # already printed at previous recursion level.
        return

    minVal = math.Inf
    minTupleLeft = ()
    minTupleRight = ()
    splitI = 0

    for i in range(1, len(n)):
        tuple1ToI = tuple (n[:i])
        tupleiToN = tuple (n[i:])

        if (cache[tuple1ToI] + cache[tupleiToN]) < minVal:
            minVal = cache[tuple1ToI] + cache[tupleiToN]
            minTupleLeft = tuple1ToI
            minTupleRight = tupleiToN
            splitI = low + i


    print minTupleLeft, minTupleRight, minVal
    print splitI   # OP just wants the split index 'i'.
    selectedList.append(splitI) # or add to the list as requested by OP

    printSelected (list(minTupleLeft), low)
    printSelected (list(minTupleRight), splitI)
"
formatting files with sed/ python/ etc,">>> x='<td>$GETR(""wp"",""1"")$Yes$GETR("""",""2"")$No$NOTE()$</td>'
>>> if x.count(""$GETR"")>1:
    x=x.replace(""$GETR"",""\n\t$GETR"").replace(""</td>"",""\n</td>"")


>>> print x
<td>
    $GETR(""wp"",""1"")$Yes
    $GETR("""",""2"")$No$NOTE()$
</td>
>>> x='<td>$GETR("""",""2"")$No$NOTE()$</td>'
>>> if x.count(""$GETR"")>1:
    x=x.replace(""$GETR"",""\n\t$GETR"").replace(""</td>"",""\n</td>"")


>>> print x
<td>$GETR("""",""2"")$No$NOTE()$</td>
"
Dictionary As Table In Django Template,"[u'Birthday:', u'Education', u'Job:', u'Child Sex:']
"
"Python: Converting ('Monday', 'Tuesday', 'Wednesday') to 'Monday to Wednesday'","day_indexes = {name:i for i, name in enumerate(calendar.day_name)}
def weekdays_consecutive(days):
    indexes = [day_indexes[d] for d in days]
    expected = range(indexes[0], indexes[-1] + 1)
    return indexes == expected
"
Deleting n number of lines after specific line of file in python,"import fileinput

counter = 0
for line in fileinput.input('inp.txt', inplace=True):
    if not counter:
        if line.startswith('# my comment'):
            counter = 4
        else:
            print line,
    else:
        counter -= 1
"
xpath: string manipulation,"substring-before($string, $needle)
substring-after($string, $needle)
substring-before(
  substring-after(//td[@class=""show_content""]/text(), 'on '), ' Read')
"
Efficient way to compute intersecting values between two numpy arrays,">>> np.intersect1d(A, B)
array([1, 4, 5, 6, 7, 9])
"
A beginner's inquiry about classes and methods in python,"    print(p.getTotal())
"
Passing string as argument adds escape characters,">>> check_output('''curl -d '{""data"": [{""content"": ""blabla""}]}' http://service.location.com''', shell=True)
b'<!DOCTYPE html>\n<!--[if lt IE 7]>      <html class=""location no-js lt-ie9 lt-ie8 lt-ie7"" lang=""en"" ng-app=""homeapp"" ng-controller=""AppCtrl""> <![endif]-->\n<!--[if IE 7]>         <html class=""location no-js lt-ie9 lt-ie8"" lang=""en"" ng-app=""homeapp"" ng-controller=""AppCtrl""> <![endif]-->\n<!--[if IE 8]>         <html class=""location no-js lt-ie9"" lang=""en"" ng-app=""homeapp"" ng-controller=""AppCtrl""> <![endif]-->\n<!--[if gt IE 8]><!--> <html class=""location no-js"" ng-app=""homeapp"" ng-controller=""AppCtrl""> <!--<![endif]-->\n\n<head>\n    <title>Location.com\xe2\x84\xa2 | Real Estate Locations for Sale and Rent</title>\n    <!--[if IE]><meta http-equiv=""X-UA-Compatible"" content=""IE=edge,chrome=1"" /><![endif]-->\n    <meta charset=""utf-8"">\n\n                <link rel=""dns-prefetch"" href=""//ajax.googleapis.com"" />\n 
"
Generating list until certain condition is met using a single line,"def frob(x):
    if str(x) == str(x)[::-1]: 
        return x
    else:
        return frob(x + int(str(x)[::-1]))

print frob(29)
"
Python - Why doesn't this instance method need parentheses when called inside another instance method?,"self.bttn[""command""] = self.update_count
"
How to get a list of dates from a week number in python,"In [369]: list(get_week(datetime.datetime.utcnow()))
Out[369]: 
[<Arrow [2015-04-20T00:00:00+00:00]>,
 <Arrow [2015-04-21T00:00:00+00:00]>,
 <Arrow [2015-04-22T00:00:00+00:00]>,
 <Arrow [2015-04-23T00:00:00+00:00]>,
 <Arrow [2015-04-24T00:00:00+00:00]>,
 <Arrow [2015-04-25T00:00:00+00:00]>,
 <Arrow [2015-04-26T00:00:00+00:00]>]
"
Selecting a date between two dates while also accounting for separate time field,"CREATE TABLE sometable(date1 date not null, time1 time not null, date2 date not null, time2 time not null);
INSERT INTO sometable(date1,time1,date2,time2) VALUES
('2012-01-01','11:15','2012-02-03','04:00');

CREATE TABLE othertable(somedate date, sometime time);
INSERT INTO othertable(somedate, sometime) VALUES
(NULL, NULL),
(NULL, '11:15'),
('2012-03-08',NULL),
('2014-09-18','23:12');
"
adding string in others,"'C:/Users/dell/Python27/byteyears.py'
"
how to concatenate multiple files for stdin of Popen,"import os
import gzip
import bz2
try:
    import magic
except ImportError:
    has_magic = False
else:
    has_magic = True


mime_openers = {
    'application/x-bzip2': bz2.BZ2File,
    'application/x-gzip': gzip.GzipFile,
}

ext_openers = {
    '.bz2': bz2.BZ2File,
    '.gz': gzip.GzipFile,
}


def open_autodecompress(filename, mode='r'):
    if has_magic:
        ms = magic.open(magic.MAGIC_MIME_TYPE)
        ms.load()
        mimetype = ms.file(filename)
        opener = mime_openers.get(mimetype, open)
    else:
        basepart, ext = os.path.splitext(filename)
        opener = ext_openers.get(ext, open)
    return opener(filename, mode)
"
Multipart email PDF attachment blank,">>> print msg
From nobody Tue Mar  3 16:35:45 2015
Content-Type: multipart/mixed; boundary=""===============4785752000147824692==""
MIME-Version: 1.0
Subject: Test multipart message

--===============4785752000147824692==
MIME-Version: 1.0
Content-Type: text/plain; charset=""utf-8""
Content-Transfer-Encoding: base64

VGhpcyBpcyB0aGUgZW1haWwgdGV4dCBib2R5LgpBbmQgdGhlcmUgaXMgYW4gYXR0YWNoZWQgUERG
Lgo=

--===============4785752000147824692==
Content-Type: application/pdf
MIME-Version: 1.0
Content-Transfer-Encoding: base64
content-disposition: attachment; filename=""quickref.pdf""

JVBERi0xLjQKJcfsj6IKNiAwIG9iago8PC9MZW5ndGggNyAwIFIvRmlsdGVyIC9GbGF0ZURlY29k
ZT4+CnN0cmVhbQp4nOVbSXMctxW+T+We6xxnkkwb+3KUY9lVTizHFm1XyuUDTUk0o6Eka2Hik/56
.
.
.
--===============4785752000147824692==--
"
List with tuples in python,"print "" "".join([wordclass for word, wordclass in your_list if word == 'federal'])
"
python socket GET,"s.sendall(""GET / HTTP/1.1\r\nHost: www.cnn.com\r\n\r\n"")
"
What is the pythonic way of generating this type of list? (Faces of an n-cube),"
>>> faces(1)
[(-1,), (1,)]
>>> faces(2)
[(-1, 0), (1, 0), (0, -1), (0, 1)]
>>> faces(3)
[(-1, 0, 0), (1, 0, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, 1)]
"
Python Logging: Group logs which belong to one request,"#Either all messages should have custom fields
# or the Formatter used should support messages
# both with and without custom fields
logging.basicConfig(<...>,format='%(asctime)-15s %(name)-5s %(levelname)-8s IP: %(ip)-15s User: %(user)-8s %(message)s')
class AddClientInfo(logging.Filter):
    #override __init__ or set attributes to specify parameters
    def filter(self, record):
        record.ip = <get_client_ip()>
        record.user = <get_client_name()>
        return True    #do not filter out anything
l=<logger()>
l.addFilter(AddClientInfo()) #can attach to either loggers or handlers
<...>
l.info('message')
"
Find out if/which BLAS library is used by Numpy,"~$ ldd /usr/lib/python2.7/dist-packages/numpy/core/_dotblas.so 
    linux-vdso.so.1 =>  (0x00007fff12db8000)
    libblas.so.3 => /usr/lib/libblas.so.3 (0x00007fce7b028000)
    libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007fce7ac60000)
    libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007fce7a958000)
    libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007fce7a738000)
    /lib64/ld-linux-x86-64.so.2 (0x00007fce7ca40000)
"
Python minidom parser: Ignore tag with identical attribute values,"list = node.getElementsByTagName('Item')
items = dict((item.getAttribute('id'), item) for item in list)
for id in items:
  print ""Item[%d] -> %s"" % (id, items[id]) # Only single item per id left.
"
Conditional merge for CSV files using python (pandas),"In [11]: res = df1.merge(df2, on=['store_id', 'phone'], how='outer')

In [12]: res
Out[12]:
   store_id     address_x        phone           address_y
0      9191  9827 Park st    999999999  9827 Park st Apt82
1      8181  543 Hello st   1111111111                 NaN
2      7171           NaN  87282728282         912 John st
"
determine matplotlib axis size in pixels,"
% identify /tmp/test.png
/tmp/test.png PNG 640x480 640x480+0+0 8-bit DirectClass 50.5KB 0.020u 0:00.020
"
Generate Joined Lists of Given Size in python,">>> from itertools import combinations
>>> lol = [[1,2],[1,3],[3,4]]
>>> k = len(lol[0])
>>> pair_sets = (set().union(*x) for x in combinations(lol,2))
>>> keep = [sorted(x) for x in pair_sets if len(x) == k+1]
>>> keep
[[1, 2, 3], [1, 3, 4]]
"
"Comparing 2 dicts, if values are the same, but key is different, add key to a new list in python","renamed = []
for h in name_from_hash1:
    if h in name_from_hash2 and name_from_hash1[h] != name_from_hash2[h]:
        renamed.append(name_from_hash2[h])
"
Problems stopping a thread when signaled from a menu event?,"def OnConnect(self, event):
    #print [event.IsChecked()]
    if not hasattr(self, ""mon""):
        self.mon = Monitor("""", """", """", self.path, ""60"", self.StatusBar)
    if event.IsChecked():
        print ""Set Menu Label Disconnected""
        self._Connect.SetItemLabel(""Disconnect"")
        print ""Start Monitor""
        self.mon.Start()
        print ""Start Finished""
    else:
        print ""Set Menu Label Connected""
        self._Connect.SetItemLabel(""Connect"")
        print ""Stop Monitor""
        self.mon.Stop()
        print ""Stop Finished""
"
matplotlib: aspect ratio in subplots with various y-axes,"import matplotlib.pyplot as plt
import numpy as np

fig, axes = plt.subplots(nrows=2, ncols=2, sharey=True, sharex=True)
for i, ax in enumerate(axes.flat, start=1):
    ax.set(aspect=1, adjustable='box-forced', xticks=range(i))
    ax.plot(np.arange(0, i * 4, i))

plt.show()
"
"How can I split a module into multiple files, without breaking a backwards compatibly?",">>> from model import Foo
>>> Foo()
<model.foo.Foo object at 0x31307d0>
"
pandas condensing multiple columns for same value,"import pandas as pd
import numpy as np

df1 = pd.DataFrame([['Address Data1','City data1','State Data1', 'Zip Data1', 'Address Data2','City data2','State Data2', 'Zip Data2',np.nan,np.nan,np.nan,np.nan],
 [ np.nan,np.nan,np.nan,np.nan,'Address Data3','City data3','State Data3', 'Zip Data3',np.nan,np.nan,np.nan,np.nan],
              [ np.nan,np.nan,np.nan,np.nan,np.nan,np.nan,np.nan,np.nan,'Address Data4','City data4','State Data4', 'Zip Data4']],
             columns = ['Address1','City1','State1','Zip1','Address2','City2','State2','Zip2','Address3','City3','State3','Zip3'])

print (df1)
        Address1       City1       State1       Zip1       Address2  \
0  Address Data1  City data1  State Data1  Zip Data1  Address Data2   
1            NaN         NaN          NaN        NaN  Address Data3   
2            NaN         NaN          NaN        NaN            NaN   

        City2       State2       Zip2       Address3       City3       State3  \
0  City data2  State Data2  Zip Data2            NaN         NaN          NaN   
1  City data3  State Data3  Zip Data3            NaN         NaN          NaN   
2         NaN          NaN        NaN  Address Data4  City data4  State Data4   

        Zip3  
0        NaN  
1        NaN  
2  Zip Data4  
"
Python read txt and print,"with open('table.txt', 'r') as table:
    while True:
        try:
            row1 = [i.strip() for i in table.readline().split('\t')] # Split based on number of spaces in btw 2 values or numbers
            row2 = [i.strip() for i in table.readline().split('\t')]
            print row1[0] + ' ' + row1[2] + ' ' + row1[4] + ' ' + row2[2] + ' ' + row2[4]
        except:
            break
"
How do I remove duplicate arrays in a list in Python,">>> set(map(tuple, items))
set([(4, 1, 2), (1, 2, 3)])
"
creating and referencing separate matplotlib plots,"import matplotlib.pyplot as plt

fig = plt.figure(figsize=(8, 6))
ax1 = fig.add_subplot(211)
ax1.scatter(x1, y1, c = 'r', alpha = 0.3)

ax2 = fig.add_subplot(212)
ax2.scatter(x2, y2, c = 'k', alpha = 0.7)

plt.show()
"
Multipy matrix by its transpose in constant memory,"Y = np.zeros((M, M), dtype=float)
for j in xrange(N):
    Y += X[:,np.newaxis,j] * X.T[j,np.newaxis,:]
"
Removing help_text from Django UserCreateForm,"<tr><th><label for=""id_username"">Username:</label></th><td><input id=""id_username"" type=""text"" name=""username"" maxlength=""30"" /></td></tr>
<tr><th><label for=""id_password1"">Password:</label></th><td><input type=""password"" name=""password1"" id=""id_password1"" /></td></tr>
<tr><th><label for=""id_password2"">Password confirmation:</label></th><td><input type=""password"" name=""password2"" id=""id_password2"" /></td></tr>
<tr><th><label for=""id_email"">Email:</label></th><td><input type=""text"" name=""email"" id=""id_email"" /></td></tr>
"
Seeded Python RNG showing non-deterministic behavior with sets,"In [13]: random.seed(0)

In [14]: k = set()

In [15]: for n in range (20):
    k.add(bigSet())
   ....:     

In [16]: for x in k:
    print(id(x))
   ....:     
34856629808
34856629864
34856631936
34856630424
34856629920
34856631992
34856630480
34856629976
34856632048
34856631040
34856630536
34856632104
34856630032
34856630592
34856630088
34856632160
34856629752
34856629696
34856630760
34856630256

In [17]: random.seed(0)

In [18]: k = set()

In [19]: for n in range (20):
   ....:         k.add(bigSet())
   ....:     

In [20]: for x in k:
   ....:         print(id(x))
   ....:     
34484534800
34856629808
34484534856
34856629864
34856631936
34856630424
34856629920
34856631992
34484534968
34856629976
34856630480
34856632048
34856631040
34484535024
34484535080
34484535136
34856632216
34484534688
34484534912
34484534744
"
How to share behavior b/w classes in python?,"class Foo(object):
    def __init__(self):
        pass

    from methods import baz, bar, quux
"
Zigbee and Python,"ifdef MT_UART_DEFAULT_PORT
  //HalUARTWrite ( MT_UART_DEFAULT_PORT, msg_ptr, len ); // Commented out by JW
"
Calling C++ 64bit shared library from Python,"import ctypes

libc = ctypes.cdll.LoadLibrary(""msvcrt"")
# or on linux
# import ctypes.util
# libc = ctypes.cdll.LoadLibrary(ctypes.util.find_library(""c""))

strchr = libc.strchr

strchr.argtypes = (ctypes.c_char_p, ctypes.c_char)
strchr.restype = ctypes.c_char_p

result = strchr(b""abcde"", b""c"")
assert result == b""cde""
"
Extracting Data From Multiple Dictionaries,"matches = []
"
Improving Pandas iteration performance,"%lprun -f accountCurve.__init__  A = accountCurve(...)
"
How do I initialize values in a dictionary?,"stats = subclassed_dict()
"
How to fill a button with image in python gtk,"gobutton.set_hexpand(False)
gobutton.set_halign(Gtk.Align.CENTER)
gobutton.set_vexpand(False)
gobutton.set_valign(Gtk.Align.CENTER)
"
Replacing a string whose surroundings are known but the value of the string is not known Python,"print ""I've got a lovely bunch of coconuts""
var beforeDate = new Date('2015-08-21') #date determined by fair die roll
print ""Here they are, standing in a row""
"
Dynamic order in django-mptt,"Comment2
Comment3
Comment1
"
Python: Split numpy array,"[['54.51399994', '-12.10200024', '-11.88099957'], ['56.23899841', '-8.30799961', '-2.03500009']]
"
Using OpenCV with Tkinter,"import numpy as np
import cv2
import Tkinter as tk
import Image, ImageTk

#Set up GUI
window = tk.Tk()  #Makes main window
window.wm_title(""Digital Microscope"")
window.config(background=""#FFFFFF"")

#Graphics window
imageFrame = tk.Frame(window, width=600, height=500)
imageFrame.grid(row=0, column=0, padx=10, pady=2)

#Capture video frames
lmain = tk.Label(imageFrame)
lmain.grid(row=0, column=0)
cap = cv2.VideoCapture(0)
def show_frame():
    _, frame = cap.read()
    frame = cv2.flip(frame, 1)
    cv2image = cv2.cvtColor(frame, cv2.COLOR_BGR2RGBA)
    img = Image.fromarray(cv2image)
    imgtk = ImageTk.PhotoImage(image=img)
    lmain.imgtk = imgtk
    lmain.configure(image=imgtk)
    lmain.after(10, show_frame) 



#Slider window (slider controls stage position)
sliderFrame = tk.Frame(window, width=600, height=100)
sliderFrame.grid(row = 600, column=0, padx=10, pady=2)


show_frame()  #Display 2
window.mainloop()  #Starts GUI
"
Reverse mapping class attributes to classes in Python,"magic_reverse_mapping = {}

class MagicRegister(type):
   def __new__(meta, name, bases, dict):
      cls = type.__new__(meta, name, bases, dict)
      magic_reverse_mapping[dict['_internal_attribute']] = cls
      return cls

class A(object):
    __metaclass__ = MagicRegister
    _internal_attribute = 'A attribute'

afoo = magic_reverse_mapping['A attribute']()
"
SUDS does not parse response as array (only the first entry thereof is returned),"158         if len(rtypes) == 1:
159             if rtypes[0].unbounded() or len(nodes)>1:
160                 result = self.replylist(rtypes[0], nodes)
161                 return (replyroot, result)
"
choice_set django tutorial part one,"DATABASES = {
    'default': {
    'ENGINE': 'django.db.backends.sqlite3',
    'NAME': '/home/JoeButy/mysite/polls/db.sqlite',
    'USER': '',
    'PASSWORD': '',
    'HOST': '',
    'PORT': ''
    }
}
"
Regex - matching numbers between hyphens,">>> str = ""9-b-90-2-2 ""
>>> m = re.findall(r'^[^-]*-([^-]*).*', str)
>>> m 
['b']
"
Easiest way to push RabbitMQ events to browser using WebSockets in Python?,"class SocketHandler(tornado.websocket.WebSocketHandler):
    def open(self):
        logging.info('WebSocket opened')
        clients.append(self)

    def on_close(self):
        logging.info('WebSocket closed')
        clients.remove(self)
"
does anyone have any examples of using jqGrid with twisted / python,"from myapp.views import grid_handler, grid_config
...
url(r'^examplegrid/$', grid_handler, name='grid_handler'),
url(r'^examplegrid/cfg/$', grid_config, name='grid_config'),
"
selectively copying from an input file,"def selectivelyCopy(inputFile,outputFile,predicate):
    linesCopied = 0
    for line in inputFile:
        if predicate(line): # test each line with the predicate function
            outputFile.write(line)
            linesCopied+=1
    inputFile.close()
    return linesCopied
"
Implementing `__dir__` in Python: Does it need to return a list and does the list need to be sorted?,">>> class G:
...     def __dir__(self):
...             return ['c','b','a']
... 
>>> dir(G())
['a', 'b', 'c']
"
How can I split a 2D array into an array with unique values and a dictionary?,">>> [(i, dict((k[1], n) for n, k in enumerate(j, 1))) for i, j in grouped]
[('Seq3.xls', {'B08524_052': 1, 'B08524_053': 2, 'B08524_054': 3}),
 ('Seq98.xls', {'B25034_001': 1, 'B25034_002': 2, 'B25034_003': 3})]
"
"Why is 'x' in ('x',) faster than 'x' == 'x'?","static PyObject *
cmp_outcome(int op, PyObject *v, PyObject *w)
{
    int res = 0;
    switch (op) {
    case PyCmp_IS: ...
    case PyCmp_IS_NOT: ...
    case PyCmp_IN:
        res = PySequence_Contains(w, v);
        if (res < 0)
            return NULL;
        break;
    case PyCmp_NOT_IN: ...
    case PyCmp_EXC_MATCH: ...
    default:
        return PyObject_RichCompare(v, w, op);
    }
    v = res ? Py_True : Py_False;
    Py_INCREF(v);
    return v;
}
"
SQL Alchemy overriding ==,"class MyPasswordType(String):
    class comparator_factory(String.Comparator):
        def __eq__(self, other):
            return self.operate(operators.eq, hash(other))
"
Using Django ORM to get a related model in a method,"for user in users:
    profiles = [profile for profile in user.profile.all()]
"
How to create dictionary mapping keys to class methods and initialize this object in the same time,"dictionary_map = {'foo': (Bar, 'some_method'), 'foo2': (Bar2, 'some_method')}
"
"python, loop through a pipe delimited text file and run an sql","from subprocess import check_call

with open('/tmp/so_insert_report20150804.txt') as fd:
    for line in fd:
        c1, c2, c3, c4 = line.strip().split('|')
        check_call(['prosql', '-n', '/psd_apps/700p6/cus/so_insert.enq', c1, c3])
"
Comparing Lists,"jan 
    subscribed: Louis le Roy 
    quit: Andrew Alexander,Cat Stevens,El Gordo Baba
feb 
    subscribed: Cat Stevens 
    quit: John Smith
"
Bottle multiple template variables,"d = { ""name"": ""Anne"", ""address"": ""4 Elm Street"", ""dob"": datetime.datetime(1977,12,2,1,2,3) }
template('mytemplate.tpl', **d)
"
Ajax returning only new message,"timestamp = form.cleaned_data['timestamp'] # get timestamp from form, 
messages = Message.objects.filter(timestamp__gt=timestamp) # return only messages newer than timestamp
"
Output object attributes and values in alphabetical order,"from collections import namedtuple

TRX = namedtuple('TRX', ('file_name', 'bank', 'trans_type', 'account'))
"
most pythonic way to interate a finite but arbitrary number of time through list values,"for item in itertools.islice(itertools.cycle(rlist), iterations):
    # do something with item from rlist
"
Searching 2 dimensional dictionary,"def findPeople(people, filter):
    ret = {}
    for k, v in people.items():
        if filter(v):
            ret[k] = v
    return ret
"
How do I change the date format in a dataframe column.,"from datetime import datetime 

def format_date_col(x):
    return datetime.strptime(str(x), '%Y%m%d')

df['date'] = df['date'].apply(format_date_col)

print df['date'].dtype
>> datetime64[ns]
"
what is my openssl and ssl Default CA Certs Path?,"[someone@somewhere ~]$ ls -la /etc/pki/tls/certs/
total 1908
drwxr-xr-x. 4 root   root      4096 Mar 22 18:15 .
drwxr-xr-x. 5 root   root      4096 Apr  6 10:09 ..
lrwxrwxrwx  1 root   root        49 Apr  6 09:54 ca-bundle.crt -> /etc/pki/ca-trust/some/path/of/cert/tls-ca-bundle.pem
"
Introspection to get decorator names on a method?,"class Foo(object):
    @many
    @decorators
    @here
    def bar(self):
        pass
"
Plone: How to change ownership of an archetype content?,"obj.setCreators([creator])
"
Using python to process a chunk of a file every x lines,"['13 Whence springs the woodbind, and the bramble-rose,\n', '14 And where the sleepy cowslip sheltered grows;\n', '15 Whilst now a paler hue the foxglove takes,\n']
['23 When darkened groves their softest shadows wear,\n', '24 And falling waters we distinctly hear;']
"
Better python datetime display?,"$ python tz.py 
United States (New York) Time
"
preferred way to implement 'yield' in Scala?,"Source.fromFile(file).getLines().flatMap(x =>
  Iterator(""something"") ++
  "":"".r.split(x).iterator.flatMap(field =>
    if (field contains ""/"") ""/"".r.split(field).iterator
    else {
      if (!field.startsWith(""#"")) {
        /* vals, whatever */
        if (some_calculation && field.startsWith(""r"")) Iterator(""r"",field.slice(1))
        else Iterator(field)
      }
      else Iterator.empty
    }
  )
)
"
"""Group By"" multiple columns on Large Data in HDFStore","import numpy as np
import pandas as pd
import os

fname = 'groupby.h5'

# create a frame
df = pd.DataFrame({'A': ['foo', 'foo', 'foo', 'foo',
                         'bar', 'bar', 'bar', 'bar',
                         'foo', 'foo', 'foo'],
                   'B': [1,1,1,2,
                         1,1,1,2,
                         2,2,1],
                   'C': ['dull', 'dull', 'shiny', 'dull',
                         'dull', 'shiny', 'shiny', 'dull',
                         'shiny', 'shiny', 'shiny'],
                   'D': np.random.randn(11),
                   'E': np.random.randn(11),
                   'F': np.random.randn(11)})


# create the store and append, using data_columns where I possibily
# could aggregate
with pd.get_store(fname,mode='w') as store:
    store.append('df',df,data_columns=['A','B','C'])

    print ""\ndf:\n%s"" % store['df']

    # get the groups
    A = store.select_column('df','A')
    B = store.select_column('df','B')
    idx = pd.MultiIndex.from_arrays([A,B])
    groups = idx.unique()

    # iterate over the groups and apply my operations
    l = []
    for (a,b) in groups:

        grp = store.select('df',where = [ 'A=%s and B=%s' % (a,b) ])

        # this is a regular frame, aggregate however you would like
        l.append(grp[['D','E','F']].sum())

print ""\nresult:\n%s"" % pd.concat(l, keys = groups)

os.remove(fname)
"
Fastest way to substitute a set of characters in a string,">>> subs('4567')
'\x07\x0c67'
"
Convert Datetime object of type: %B %D %Y,"%y  Year without century as a zero-padded decimal number.   00, 01, ..., 99  
%Y  Year with century as a decimal number.  1970, 1988, 2001, 2013   
"
Print a python array on a specific format,"arrays = [[[0, 1], ['foo', 'moo'], ['17-03-2014', '17-03-2014'], ['17-03-2014', '17-03-2014'], ['12:02', '12:02'], ['12:07', '12:07'], [123, 123], [1, 1], [0, 0], [0.22991937398910522, 0.45983871817588806]], [[2, 3], ['bar', 'les'], ['18-03-2014', '18-03-2014'], ['21-03-2014', '21-03-2014'], ['12:03', '12:03'], ['12:03', '12:03'], [123, 123], [1, 1], [0, 0], [0.22991937398910522, 0.45983871817588806]]]
types = ['type one', 'type two']

for arr, typ in zip(arrays, types):
    print typ
    for row in arr:
        item1, item2 = row
        print ""{} {:>20}"".format(item1, item2)
    print
"
Get combinations of words lists,"['Like',
 'Hate',
 'Like Big',
 'Like Medium',
 'Like Small',
 'Like Big Trucks',
 'Like Big Cars',
 'Like Medium Trucks',
 'Like Medium Cars',
 'Like Small Trucks',
 'Like Small Cars',
 'Hate Big',
 'Hate Medium',
 'Hate Small',
 'Hate Big Trucks',
 'Hate Big Cars',
 'Hate Medium Trucks',
 'Hate Medium Cars',
 'Hate Small Trucks',
 'Hate Small Cars',
 'Big Trucks',
 'Big Cars',
 'Medium Trucks',
 'Medium Cars',
 'Small Trucks',
 'Small Cars',
 'Trucks',
 'Cars']
"
Set Python class variable equal to the output of class function,">>> foo = Foo()
>>> foo.bar
[1, 2, 3]
>>> foo.baz  # foo.baz is called and returns max(foo.bar)
3
>>> foo.bar.append(7)  # foo.baz is not called
>>> foo.baz  # foo.baz is called and returns max(foo.bar)
7
>>>
"
Real distance between two points over image,"def calc(ImageDim, StadionDim, Point):
    return (Point[0] * StadionDim[0]/ImageDim[0], Point[1] * StadionDim[1]/ImageDim[1])
"
An elegant way to make a 2d array with all possible columns,"(((np.arange(2**r)[:,None] & 2**np.arange(r)[::-1]))>0).astype(int)
"
How to create single Python dict from a list of dicts by summing values with common keys?,"import operator, itertools
dict((key, sum(itertools.imap(operator.itemgetter(key), dictList))) 
      for key in dictList[0])
"
Change specific value in CSV file via Python,"r = csv.reader(open('/tmp/test.csv')) # Here your csv file
lines = [l for l in r]
"
Execution of Python code with -m option or not,"$ PYTHONPATH=test python -m foo.bar
python: No module named foo.bar.__main__; 'foo.bar' is a package and cannot be directly executed
$ cp test/foo/bar/baz.py test/foo/bar/__main__.py
$ PYTHONPATH=test python -m foo.bar
foo.bar
__main__
"
"How do I get a count of values in an array, in a range or above a threshold value?","np.count_nonzero(simfourty48[0] > 350)
"
Python reading text files for calculation,"{fname: coords_t(*data.replace('\n', ' ').split(' ')[:-1])}
"
Not sure why key press is not doing anything,"stages = [True, False]

while True:
    process(Cursor, movie, music, stages)

    Effects.List.draw(screen)
    pygame.display.flip()
"
Elegant/proper way to wrap a python module,"from __future__ import absolute_import
from pep8 import *
MAX_LINE_LENGTH = 119 
"
jquery.ajax post request to get data from app engine server,"class ResultsHandler(webapp.RequestHandler):
    def post(self):
        k = db.Key.from_path('Engineer', the_engineer_id) #will be an integer
        e = db.get(k)
        output = {'salary': e.salary}
        output = json.dumps(output) #json encoding
        self.response.write.out(output)
"
Call all __init__ but once in Python," super().__init__(*args,**kwargs)
"
Parsing GenBank file: get locus tag vs product,"m!/(?:locus_tag|product)=""(.+?)""!sg
#                                ^---- this
"
Numpy meshgrid points,"In [38]: def meshgrid2(*arrs):
   ....:     arrs = tuple(reversed(arrs))
   ....:     lens = map(len, arrs)
   ....:     dim = len(arrs)
   ....:     sz = 1
   ....:     for s in lens:
   ....:        sz *= s
   ....:     ans = []
   ....:     for i, arr in enumerate(arrs):
   ....:         slc = [1]*dim
   ....:         slc[i] = lens[i]
   ....:         arr2 = asarray(arr).reshape(slc)
   ....:         for j, sz in enumerate(lens):
   ....:             if j != i:
   ....:                 arr2 = arr2.repeat(sz, axis=j)
   ....:         ans.append(arr2)
   ....:     return tuple(ans)
"
Is there a way to verify a Python interpreter built from source is correct?,"./python -m test
"
Python scoping issue with dictionary comprehension inside class level code,"class Foo:
    def loadings():
        load = dict(hi=1)
        if 'hi' in load:
            print(load['hi']) 
            print({e:load[e] for e in load})
        return load
    loadings = loadings()

print(Foo.loadings)
"
Use cases for the 'setdefault' dict method,"headers = parse_headers( msg ) # parse the message, get a dict
# now add all the optional headers
for headername, defaultvalue in optional_headers:
    headers.setdefault( headername, defaultvalue )
"
Have Win32 MessageBox appear over other programs,"ConEmu -basic -MinTSA -cmd C:\Python27\python.exe C:\pythonScript.py
    or
CMDOW /RUN /MIN C:\Python27\python.exe C:\pythonScript.py
"
"Python and Pandas - column that ""count direction"" and show ""avarage until now""","df['RA_wnd_4'] = pd.rolling_mean(df.price, 4, 1)
"
Numpy recarray writes byte literals tags to my csv file?,"data1 = data.astype('U24,i,f') # convert bytestring field to unicode
"
Call a function from within another function in Python,"result of func1(""test"")
result of func2(""result of func1(""test"")"")
"
Extract tuple from list,">>> a[0][1]
'now'
"
Django admin site : Help needed,"class ContributionAdmin(admin.ModelAdmin):

    list_display = ('id','nlcc','subscriber','application_number',
                    'date','receipt_number','amount', 'status')    

    def application_number(self, obj):
        return obj.subscriber.application_number
    application_number.short_description = ""Subscriber's Application Number""
"
python generator with check for empty condition,"try:
    next_item = next(it)
except StopIteration:
    # exhausted, handle this case
"
get array values in python,"array1 = arr1.split(',')
array2 = arr2.split(',')
for i,value in enumerate(array1):
   print value, array2[i]
"
How do I get my tkinter picture viewer working?,"import os
import tkinter as tk
from tkinter import Frame, Button
from PIL import Image, ImageTk

tk_root = tk.Tk()
tk_root.title(""Picture Viewer - Do I want to keep this picture?"")
file_count = 0

p = path = 'C:\\Users\\MyUserName\\Desktop\\Test\\'


def search(directory):
    global file_count
    for root, subdirs, files in os.walk(directory):
        for file in files:
            if os.path.splitext(file)[1].lower() in ('.jpg', '.jpeg'):
                img = os.path.join(root, file)
                file_count += 1
                yield img


def next_image():
    try:
        global photo_path
        photo_path = next(path_generator)
        photo = ImageTk.PhotoImage(Image.open(photo_path))
        picture.configure(image=photo)
        picture.image = photo
    except StopIteration:
        picture.configure(image='', text='All done!')


def move_file(directory):
    if not os.path.exists(directory):
        os.makedirs(directory)
    new_file = directory + 'Picture_{0}.jpg'.format(file_count)
    os.rename(photo_path, new_file)


def yes():
    move_file(path + 'Yes\\')
    next_image()


def maybe():
    move_file(path + 'Maybe\\')
    next_image()


def skip():
    move_file(path + 'Skipped\\')
    next_image()


def delete():
    # Code for deleting file here
    next_image()

top_frame = Frame(tk_root)
bottom_frame = Frame(tk_root)
top_frame.pack(side='top')
bottom_frame.pack(side='bottom')

path_generator = search(p)
photo_path = next(path_generator)

photo = ImageTk.PhotoImage(Image.open(photo_path))
picture = tk.Label(tk_root, image=photo)
picture.image = photo
picture.pack(side='top')

button_yes = Button(top_frame, text=""Yes"", command=yes)
button_maybe = Button(top_frame, text=""Maybe"", command=maybe)
button_skip = Button(top_frame, text=""skip"", command=skip)
button_delete = Button(bottom_frame, text=""Delete"", command=delete)

button_yes.pack(side='left')
button_maybe.pack(side='left')
button_skip.pack(side='left')
button_delete.pack(side='bottom')

tk_root.mainloop()
"
how to look-up rdf object knowing subject or other way around?,"#Parse the file
g = rdflib.Graph()
g.parse(""yourdata.nquads"")
subject = article = rdflib.term.URIRef(""http://www.someuri.org/for/your/subject"")

# (subject,None,None) represents a constrain to iterate over the graph. By setting
# any of the three elements in the triple you constrain by any combination of subject,
# predicate or object. In this case we only  constrain by subject.
for triple in g.triples((subject,None,None)):
    print triple
"
Spherical coordinates plot in matplotlib,"cmap = plt.get_cmap('jet')
norm = mcolors.Normalize(vmin=Z.min(), vmax=Z.max())
plot = ax.plot_surface(
    X, Y, Z, rstride=1, cstride=1, 
    facecolors=cmap(norm(Z)),
    linewidth=0, antialiased=False, alpha=0.5)
"
Customizable setUp for every test in a test class,"class Test1(TestBase):
    MYPARAMETER = 1
    def setUp(self):
        TestBase.setUp(self)
        # etc

class Test2(TestBase):
    MYPARAMETER = 17
    def setUp(self):
        TestBase.setUp(self)
        # etc
"
Find indices of specific rows in a 3d numpy array,"out = np.where(((Z == S[:,None,None,:]).all(3)).any(0))
"
"Python Pandas Join: If One Column Does Not Work, Try Others","merge remaining entries on dob, first and last
df4 = pd.merge(df1.drop(df3.index), df2.drop(df3.index), on = ['DOB','First','Last'])
"
stripping the zeros in csv with python,"with open('infilename', 'r') as infile, open('outfilename', 'w') as outfile:
    reader = csv.reader(infile)
    writer = csv.writer(outfile)
    for row in reader:
        # strip all 0's from the front
        stripped_value = re.sub(r'^0+', '', row[5])
        # pad zeros on the left to smaller numbers to make them 4 digits
        row[5] = '%04d'%int(stripped_value)
        writer.writerow(row)
"
MultiIndex Group By in Pandas Data Frame,"data.groupby(level=['Metric', 'Year']).sum()
Metric  Year
GDP     2011    20
        2012    11
        2013     0
        2014    10
Pop.    2011     5
        2012    10
        2013     0
        2014     8
"
load a certain number of rows from csv with numpy,"import  numpy as np
from operator import itemgetter
import csv
with open(filename) as f:
   from itertools import islice,imap
   r = csv.reader(f)
   np.genfromtxt(imap(itemgetter(1),islice(r,  start, end+1)))
"
Python import cookies,"cookies = {""username"": ""USERNAME"", ""session"": ""xxxxxxx""...}
"
How to column stack arrays ignoring nan in Python?,"array([[  8.00000000e+00,   5.12000000e+02],
       [  9.00000000e+00,   7.29000000e+02],
       [  1.00000000e+01,   1.00000000e+03],
       [  1.20000000e+01,   1.72800000e+03],
       [  1.60000000e+01,   4.09600000e+03],
       [  1.90000000e+01,   6.85900000e+03],
       [  2.10000000e+01,   9.26100000e+03],
       [  2.30000000e+01,   1.21670000e+04]])
"
How to solve sin(z)=2 in Sympy?,"In [3]: sols = solve(sin(z) - 2, z)

In [4]: sols
Out[4]: [π - asin(2), asin(2)]

In [5]: [i.rewrite(log) for i in sols]
Out[5]:
⎡         ⎛  ___        ⎞        ⎛  ___        ⎞⎤
⎣π + ⅈ⋅log⎝╲╱ 3 ⋅ⅈ + 2⋅ⅈ⎠, -ⅈ⋅log⎝╲╱ 3 ⋅ⅈ + 2⋅ⅈ⎠⎦
"
Python OrderedDict ordered by date,"# assuming unordered_dict is a dict that contains your data 
ordered_dict = OrderedDict()
for key, value in sorted(unordered_dict.iteritems(), key=lambda t: t[0]):
    ordered_dict[key] = value
"
how to loop through list multiple times in Python,"['dc', 'cb', 'ba', 'jh', 'gf', 'ed']
"
Sorting Counter collection in python with secondary term (tie breaker),"lambda x: (-x[1], x[0])
"
Making a tree shape.,"def tree(head, stem):
    for i in xrange(1, head+1, 2):
        print ('*'*i).center(head)
    x = (head/2) if (head/2)%2 else (head/2)-1
    for _ in xrange(stem):
        print ('*'*x).center(head)

>>> tree(12, 2)
     *      
    ***     
   *****    
  *******   
 *********  
*********** 
   *****    
   *****    
>>> tree(14, 4)
      *       
     ***      
    *****     
   *******    
  *********   
 ***********  
************* 
   *******    
   *******    
   *******    
   *******    
"
Python multiprocessing: avoid communication via module between processes,"class myStruct():
    def __init__(self,s,a=1,b=1): ##Here you've set the default a and b values to 1
        self.a=a
        self.b=b
        self.s=s
"
"Function name convention for ""convert foo to bar""","foo = Foo.new(...)   # make a new Foo
bar = foo.to_bar     # convert it to a Bar
"
Why numpy.double applies to a nested list and numpy.complex doesn't?,">>> np.float_([1,2])
array([ 1.,  2.])
>>> np.double is np.float_
True
>>> np.complex_([1,2])
array([ 1.+0.j,  2.+0.j])
>>> np.float32([1,2])
array([ 1.,  2.], dtype=float32)
>>> np.complex192([1,2])
array([ 1.0+0.0j,  2.0+0.0j], dtype=complex192)
"
django multiple update dates in one field,"class YourModel(models.Model):
    name = models.CharField(max_length=100)

class YourModelUpdateHistory(models.Model):
    your_model = models.ForeignKey('YourModel')
    updated = models.DateTimeField() 
"
itertools.product eliminating repeated elements,"def uprod(*seqs):
    def inner(i):
        if i == n:
            yield tuple(result)
            return
        for elt in sets[i] - seen:
            seen.add(elt)
            result[i] = elt
            for t in inner(i+1):
                yield t
            seen.remove(elt)

    sets = [set(seq) for seq in seqs]
    n = len(sets)
    seen = set()
    result = [None] * n
    for t in inner(0):
        yield t
"
Django 1.7 removing Add button from inline form,"import django.contrib.admin.widgets
from django.utils.safestring import mark_safe


class NoAddingRelatedFieldWidgetWrapper(django.contrib.admin.widgets.RelatedFieldWidgetWrapper):

    def render(self, name, value, *args, **kwargs):
        from django.contrib.admin.views.main import TO_FIELD_VAR
        rel_to = self.rel.to
        info = (rel_to._meta.app_label, rel_to._meta.model_name)
        self.widget.choices = self.choices
        output = [self.widget.render(name, value, *args, **kwargs)]
        '''
        if self.can_add_related:
            related_url = reverse('admin:%s_%s_add' % info, current_app=self.admin_site.name)
            url_params = '?%s=%s' % (TO_FIELD_VAR, self.rel.get_related_field().name)
            # TODO: ""add_id_"" is hard-coded here. This should instead use the
            # correct API to determine the ID dynamically.
            output.append('<a href=""%s%s"" class=""add-another"" id=""add_id_%s"" onclick=""return showAddAnotherPopup(this);""> '
                          % (related_url, url_params, name))
            output.append('<img src=""%s"" width=""10"" height=""10"" alt=""%s""/></a>'
                          % (static('admin/img/icon_addlink.gif'), _('Add Another')))
        '''
        return mark_safe(''.join(output))

# Monkeypatch
django.contrib.admin.widgets.RelatedFieldWidgetWrapper = NoAddingRelatedFieldWidgetWrapper
"
Reorganise list in list python,">>> t=sorted(chain(*s))
>>> t
[('a', -12), ('a', -8), ('a', -5), ('a', 3), ('a', 12), ('a', 23), ('b', -11), ('b', -7), ('b', -3), ('b', -2), ('b', 2), ('b', 5), ('b', 11), ('b', 11), ('c', -22), ('c', -5), ('c', -3), ('c', -2), ('c', 2), ('c', 3), ('c', 8), ('c', 21), ('d', -21), ('d', 22)]
"
Create new list based on values taken from sublist,"b = zip(*(col for col in zip(*a) if col[0] == 2))
"
"Replacing ""tokens"" in Python string with alternate values",">>> import re
>>> s = ""http://whatever.org/?title=@Title@&note=@Note@""
>>> re.sub(r""@(\w+?)@"", r""{\1}"", s)
'http://whatever.org/?title={Title}&note={Note}'
"
Actual difference in implementing/overriding using @abstractproperty and @abstractmethod,"cls = super(ABCMeta, mcls).__new__(mcls, name, bases, namespace)
# Compute set of abstract method names
abstracts = set(name
             for name, value in namespace.items()
             if getattr(value, ""__isabstractmethod__"", False))
for base in bases:
    for name in getattr(base, ""__abstractmethods__"", set()):
        value = getattr(cls, name, None)
        if getattr(value, ""__isabstractmethod__"", False):
            abstracts.add(name)
cls.__abstractmethods__ = frozenset(abstracts)
"
pandas efficient dataframe set row,"In [22]: (method2() == method1()).all().all()
Out[22]: True

In [23]: (method2() == method3()).all().all()
Out[23]: True


In [8]: %timeit method1()
1 loops, best of 3: 1.76 s per loop

In [10]: %timeit method2()
1000 loops, best of 3: 7.79 ms per loop

In [14]: %timeit method3()
1 loops, best of 3: 1.33 s per loop
"
count suffixes appearing in the word file,"with open('longWordList.txt') as fd:
    print('Suffixes: ')
    mx, mn = max(sfx_dict, key=len), min(sfx_dict, key=len)
    for ln in map(str.rstrip, fd):
        suf = ln[-mx:]
        for i in range(mx-1, mn-1, -1):
            if suf in sfx_dict:
                sfx_dict[suf] += 1
            suf = suf[-i:]
    for k,v in sfx_dict:
        print(""Suffix = {} Count =  {}"".format(k,v))
"
Recursive Nested Lists,">>> def recursiveRef(nested, idxList):
    if len(idxList) > 1:
        return recursiveRef(nested[idxList[0]], idxList[1:])
    return nested[idxList[0]] 

>>> recursiveRef([[[1, 2], 3], [4, [5, 6]], 7, [8, 9, 10]], [3, 1])
9
"
Unicode Characters in Twitter (Python),"import io

with io.open('filename', encoding='utf-8') as file:
    text = file.read()
"
Determine if entry is visible by startdate and enddate,"# views.py
now = datetime.now()    
objs0 = Entry.objects.filter(visible=True)
objs1 = Entry.objects.filter(visible_start__lte=now, visible_stop__gt=now)
objects = objs0 | objs1

# template.html
{% for obj in objects %}
    {{ obj.title }}
{% endfor %}
"
C struct python equivalent,"import collections
test = collections.namedtuple('test', ['a', 'next'])
"
Python: Fetching and parsing text from html files,">>> from BeautifulSoup import BeautifulSoup as bs
>>> html = '''
... <div><a href=""/link1"">link1 contents</a></div>
... <div><a href=""/link2"">link2 contents</a></div>
... '''
>>> soup = bs(html)
>>> for anchor_tag in soup.findAll('a'):
...   print anchor_tag.contents[0]
... 
link1 contents
link2 contents
"
install pil on virtualenv with libjpeg,"    JPEG_ROOT = None 
"
How do I change the built-in button labels on a gtk.Assistant?,"for child in get_buttons_hbox(a).get_children():
    label = child.get_label()
    if label == 'gtk-apply':
        child.set_label('Start')
"
Matching everything after series of hyphens,"This is content. It should be captured.
Any sets of three hyphens beyond this point should be ignored.
"
Python code speedup by storing commonly used list elements in local variables,"2.7.7 (default, Jun 14 2014, 23:12:13) 
[GCC 4.2.1 Compatible Apple LLVM 5.1 (clang-503.0.40)]
f1: 2.27 secs
f2: 1.77 secs
f3: 2.07 secs

3.4.1 (default, May 19 2014, 13:10:29) 
[GCC 4.2.1 Compatible Apple LLVM 5.1 (clang-503.0.40)]
f1: 4.14 secs
f2: 2.41 secs
f3: 4.16 secs

2.7.6 (32f35069a16d, Jun 06 2014, 20:12:47)
[PyPy 2.3.1 with GCC 4.2.1 Compatible Apple LLVM 5.0 (clang-500.2.79)]
f1: 0.257 secs
f2: 0.241 secs
f3: 0.241 secs

3.2.5 (986752d005bb+, Jun 19 2014, 19:20:06)
[PyPy 2.3.1 with GCC 4.2.1 Compatible Apple LLVM 5.1 (clang-503.0.38)]
f1: 0.267 secs
f2: 0.263 secs
f3: 0.269 secs
"
Array from interpolated plot in python,"from scipy.interpolate import interp2d
import numpy as np

x = 50
y = 150

a = np.random.uniform(0,10,(y, x))
b = interp2d(np.arange(x), np.arange(y), a)
"
How does the dictionary add keys in python?,">>> hash
<built-in function hash>
"
Moving files and creating directories if certain file type in python,"from itertools import ifilter
from fnmatch import fnmatch

ext = '.mp3'
fnPattern = '*'+ext

for dirName, subdirList, fileList in os.walk(source_dir):
    if not any(ifilter(lambda fname: fnmatch(fname, fnPattern), fileList)):
        print '  skipping ""{}""'.format(dirName)
        continue
    ...
"
Dynamically name processes,"1000      1231  0.0  0.0   7836   552 pts/5    S+   13:32   0:00 foobar: 1
1000      1232  0.0  0.0   7836   552 pts/5    S+   13:32   0:00 foobar: 2
1000      1233  0.0  0.0   7836   552 pts/5    S+   13:32   0:00 foobar: 3
1000      1235  0.0  0.0   7836   552 pts/5    S+   13:32   0:00 foobar: 4
1000      1236  0.0  0.0   7836   552 pts/5    S+   13:32   0:00 foobar: 5
"
Pandas Crosstab: Change Order of Columns That Are Named as Formatted Dates (mmm yy),"""COLLECTION_DATE    12 10_Oct 12  12 11_Nov 12  12 12_Dec 12  13 01_Jan 13  
EW_REGIONCOLLSITE                                                           
EAST                        825          2108          2280          2757   
WEST                         42           407          1003          2216   
All                         867          2515          3283          4973   

COLLECTION_DATE    13 02_Feb 13  13 03_Mar 13  13 04_Apr 13  13 05_May 13  
EW_REGIONCOLLSITE                                                           
EAST                       2272          1682          1964          1981   
WEST                       2351          2770          2579          3014   
All                        4623          4452          4543          4995   

COLLECTION_DATE    13 06_Jun 13  13 07_Jul 13  13 08_Aug 13  13 09_Sep 13  
EW_REGIONCOLLSITE                                                           
EAST                       1902          2113          2092           975   
WEST                       1823          1506          2011           888   
All                        3725          3619          4103          1863   

COLLECTION_DATE      All  
EW_REGIONCOLLSITE         
EAST               22951  
WEST               20610  
All                43561 ""
"
Simplest code to import a .gif,">>> def printer(event):
...     print(event.x, event.y)
...
>>> canvas.bind(""<Button-1>"", printer)
"
Python: Sub sequence search,"char_generator = (pair for pair in enumerate(sequence) if pair[1] in subsequence)
for combo in itertools.combinations(char_generator, len(subsequence)):
    ...
"
Adding a string with spaces to a stack,"class FlashCard:
    def __init__(self):
        self.commands = {'addQuestion':self.addQuestion}

    def addQuestion(self, phrase):
        answer = raw_input(phrase)

    def interpret(self, expressions):
        for expression in expressions.split('\n'):
            phrase, command = expression.rsplit(' ', 1)
            if command in self.commands:
                operator = self.commands[command]
                operator(phrase)
            else:
                raise RuntimeError('Invalid command')

expressions = '''testing this addQuestion
testing that addQuestion
testing error removeQuestion'''
i = FlashCard()
i.interpret(expressions)
"
Is there any way you can get back to the original function?,"something.action = tmp
"
Sorting an array of arrays in Python,"[[[   520    614    573   7448]]

 [[   625    770    706   8822]]

 [[   512    520      1 130523]]]
"
Efficiently select the best string from keys in a dict,"def coalesce(*args):
   for a in args:
      if a is not None:
          return a
"
"Python: separate list of values into x number of sections, and give each value in x a variable",">>> chunks = 7
>>> for i,num in enumerate(nums):
    print(""%s:%s""%(num,colors[i*chunks//len(nums)%len(colors)]))


1:red
2:red
3:green
4:orange
5:blue
6:red
7:green
8:orange
"
matplotlib - Allow bar to extend beyond chart limits?,"import matplotlib.pyplot as plt
import numpy as np

data = np.array([1,3,70,924,3])

plt.bar(np.arange(data.size), data, clip_on=False)
plt.ylim([0, 300])

plt.show()
"
Trying to read the first line of CSV file returns ['/'],"In [5]:
import csv
with open (r'c:\data\csv_test.csv') as csvfile:
    csv_reader = csv.reader(csvfile)
    csv_headings = next(csv_reader)
    print (csv_headings)

['column_1', 'column_2', 'column_3']
"
Python: Only saving three latest scores,"import json


with open('scores.json', 'a') as f:
    try:
        scores = json.load(f)
    except ValueError:
        scores = {}
        # add user if not already in the dict with a list as a value
        scores.setdefault(name,[])
         # just append the latest score making sure when you have three to relace the last
        scores[name].append(whatever)
 #   do your logic replacing last score for each name or adding names

    with open('scores.json', 'w') as f:
       json.dump(scores,f)
"
Restructuring Dataframe,"    Date    Maturity    value   Currency
0   2005-01-04  0.08333333  4.709456    GBP
1   2005-01-05  0.08333333  4.713099    GBP
2   2005-01-06  0.08333333  4.707237    GBP
3   2005-01-07  0.08333333  4.705043    GBP
4   2005-01-10  0.08333333  4.697150    GBP
"
"Updating a list of python dictionaries with a key, value pair from another list",">>> l1 = [{'domain':'Ratios'},{'domain':'Geometry'}]
>>> l2 = [3, 6]
>>> for d,num in zip(l1,l2):
        d['count'] = num


>>> l1
[{'count': 3, 'domain': 'Ratios'}, {'count': 6, 'domain': 'Geometry'}]
"
"Reduce a list of 2-dicts, to a list unique by the one item, concatenating the other items in python3","from collections import defaultdict
d = defaultdict(list) 
for node in my_list: 
    d[node['delim_type']].append(node['arcana_list'])
"
Need to load a dynamically generated list of strings from an AJAX call (flask backend),"$.ajax({
    url : ""/failing_jobs/"",
    type : ""GET"",
    contentType: ""application/json"",
    success : function(data){
        alert(data.jobs);
    }
});
"
Multiple Unpacking Assignment in Python when you don't know the sequence length,"a, b, *c = someseq
"
R with function in python,"In [10]: df = pd.DataFrame({'A': range(10), 'B': range(10), 'C': range(10)})

In [21]: df[['A', 'B']].sum(axis=1)  # row sums
Out[21]: 
0     0
1     2
2     4
3     6
4     8
5    10
6    12
7    14
8    16
9    18
dtype: int64
"
How to get the exact shrink value when customizing arrow styles in annotate,"orig =   (1.1,2.)
target = (1.1,7.)
shrinkA = 0.1 # given in points
shrinkB = 0.1
b = patches.ConnectionStyle('Arc')
path = b.connect( orig, target )
path = b._shrink( path, shrinkA, shrinkB )
"
Fetch specific data from JSON,"print(obj1[""txs""][0][""out""][1][""addr_tag""])

Satoshi Dice Change Address
"
"Select text of textEdit object with QTextCursor, QTextEdit","def mytext(self):
        cursor = self.ui.editor_window.textCursor()
        textSelected = cursor.selectedText()
        s = textSelected.upper()
        self.ui.editor_window.append(s)  
"
Numpy-y way to build a polynomial array from set of points,"import numpy as np
square_points = np.array([
    [37,  44],  # x1,y1
    [67,  74],  # x2,y2
    [97,  104], # x3,y3
    [247, 194], # x4,y4
    [157, 97],  # x5,y5
    ])
x, y = square_points.T

P = np.ones((5,4))
P[:,1] = x
P[:,2] = y
P[:,3] = x * y
"
Enable only pylint for Python files in Syntastic for Vim,"let g:syntastic_python_checkers = ['pylint']
"
What's the best way(error proof / foolproof) to parse a file using python with following format?,"[{'block1': {'othervalue': 32423432,
             'some_value': ['some', 'other', 'kind', 'of', 'data'],
             'value': 'data'},
  'block2': {'othervalue': 32423432,
             'some_value': ['some', 'other', 'kind', 'of', 'data'],
             'value': 'data'}}]
"
Variables not receiving amounts? Python,"from datetime import datetime,timedelta
def main():
    time_Amount = timedelta( seconds = int(input('Enter time in seconds: ')))

    while (time_Amount == timedelta(seconds = 0)):
        time_Amount = timedelta( seconds = int(input(""Enter a non-zero amount of seconds: "")))    

    calc_time = datetime(1,1,1) + time_Amount
    print(""--------Break Down--------"")
    print(""%d day(s), %d hour(s), %d minute(s), %d second(s)"" %
          (calc_time.day-1, calc_time.hour, calc_time.minute, calc_time.second))
"
Python Multiple Inheritance: Argument passing (**kwargs) and super(),"Friend -> Contact -> AddressHolder -> object
"
Merging a list of numpy arrays into one array (fast),"timeit numpy.vstack(firstmatrices)
100 loops, best of 3: 18.2 ms per loop
"
How to add up scraped strings representing integers?,"for post in posts:
    ... # rest of code snippet you posted

print(sum(float(re.sub(r""[^\d.]"", """", post.text)) for post in posts))
"
How can I reference #defines in a C file from python?,"#define FOO_A 0x3
#define FOO_B 0x5
"
Parse Key Value Pairs in Python,"import re
s = """"""""Matt""
{
    ""Location""    ""New York""
    ""Age""         ""22""
    ""Items""
    {
        ""Banana""    ""2""
        ""Apple""     ""5""
        ""Cat""       ""1""
    }
}""""""

# Put a colon after the first string in every line
s1 = re.sub(r'^\s*("".+?"")', r'\1:', s, flags=re.MULTILINE)
# add a comma if the last non-whitespace character in a line is "" or }
s2 = re.sub(r'([""}])\s*$', r'\1,', s1, flags=re.MULTILINE)
"
Increasing speed of python code,">>> import numpy
>>> utils = numpy.random.uniform(0, 300, 10)
>>> print repr(utils[0])
42.777972538362874
>>> type(utils[0])
<type 'numpy.float64'>
"
Killing all python interpreters but the one which launches kill command,"import psutil
for process in psutil.process_iter():
    if process.name == 'python.exe' and process.pid != mypid:
        process.kill() # or send_signal(signal)
"
Solve seemingly (but not actually!) overdetermined sparse linear system in Python,"from scipy.sparse.linalg import lsqr
return_values = lsqr(A, b)
x = return_values[0]
"
numpy.array boolean to binary?,"In [1]: vector_A = scipy.randn(4)

In [2]: vector_B = scipy.zeros(4)

In [3]: vector_A
Out[3]: array([ 0.12515902, -0.53244222, -0.67717936, -0.74164708])

In [4]: vector_B
Out[4]: array([ 0.,  0.,  0.,  0.])

In [5]: vector_C = vector_A > vector_B

In [6]: vector_C
Out[6]: array([ True, False, False, False], dtype=bool)

In [7]: vector_C.sum()
Out[7]: 1

In [8]: vector_C.mean()
Out[8]: 0.25

In [9]: 3 - vector_C
Out[9]: array([2, 3, 3, 3])
"
How to move a model between two Django apps (Django 1.7),"$ python manage.py makemigrations app2 && python manage.py migrate app2
$ python manage.py makemigrations app1 && python manage.py migrate --fake app1
"
Energy for 1-D wavelet in Python,"coeffs[-k]
"
Check for multiple values in a M2M relationship in Django,"class UserType( models.Model ):
    TYPES = (( 'tenant', 'Tenant'),
             ( 'propman', 'Property Manager'),
             ( 'propown', 'Property Owner'),
             ( 'vendman', 'Vendor Manager'),
             ( 'vendor', 'Vendor'),
             ( 'viewer', 'Viewer'),
             ( 'moderator', 'Moderator'),
             ( 'admin', 'Administrator'))

    name = models.CharField( max_length = 135, choices=TYPES )

def has_role(user, role):
    return user.profile.user_types.filter(name=role).count() == 1

def has_roles(user, roles):
    return user.profile.user_types.filter(name__in=roles).count() == len(roles)

print has_roles(user, ['viewer','moderator','admin'])
"
Dynamically define a function,"def foo():
    funcstr=textwrap.dedent('''\
        def func(x, {p}):
            return x * 2*a + 4*b - 5*c
        ''')
"
Python dictionary merge values and delete previous,"def split(row):
    character, positions = row
    return character == "" ""

def merge(group):
    letters, position_groups = zip(*group)
    return """".join(letters), next(iter(position_groups))

def group(value):
    return [merge(group) for isspace, group in
            itertools.groupby(value, key=split) if not isspace]

print({key: group(value) for key, value in old.items()})
"
averaging list of lists python,"from __future__ import division
def mean(a):
    return sum(a) / len(a)
a =  [[240, 240, 239],
      [250, 249, 237], 
      [242, 239, 237],
      [240, 234, 233]]
print map(mean, zip(*a))
"
Python: How to I unbind a variable from instance in a class?,"my_variable = copy.deepcopy(self.myinstance) # Deep copy
"
Numpy modify array in place?,">>> def foo(a):
...     a += 10
... 
>>> a = numpy.arange(10)
>>> a
array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
>>> foo(a)
>>> a
array([10, 11, 12, 13, 14, 15, 16, 17, 18, 19])
"
ForLoop Iterations as List Index in Django Template,"rows = zip(list1, list2, list3, list4)
"
Installing OSQA on windows (local system),"{DJANGOSTACK}\python\python.exe manage.py syncdb
"
"PHP to Python Code Differences - Arrays, Foreach Loops","$array = ['some', 'array']; 
// Or, for PHP < 5.4: $array = array( 'some', 'array');
foreach( $array as $i => $a)
"
"Removing ""unnamed: #"" when writing to CSV using pandas","  2015-06-30      2015-06-29      2015-06-28      2015-06-27     
        col1 col2       col1 col2       col1 col2       col1 col2
2          1    3         10    3      103.4  6.6      103.2  4.3
3         28    5       1028    5      102.4  6.2      103.3  2.2
4        901    6         90    6       91.7  5.0       93.1  2.4
5         15    1        105    1      100.8  5.5      100.9  1.7
6         45    7        345    7      103.0  6.1      102.9  6.3
7        533    3         53    3      106.0  8.6      105.3  7.6
8         15    5        110    5      113.0  9.1      110.9  6.7
9         75    4         32    4        3.9  1.8        3.5  2.9
"
Advanced Slicing of Intervals in Pandas Dataframe,"In [12]: pd.concat(next_n_asof(df.B, t, 3)
                   for t in df2.index + pd.tseries.timedeltas.to_timedelta(18, unit='h'))
Out[12]:
2005-09-06 18:00:00    6
2005-09-06 20:00:00    7
2005-09-06 22:00:00    8
2005-12-07 18:00:00    6
2005-12-07 20:00:00    4
2005-12-07 22:00:00    2
Name: B, dtype: int64
"
python how to register dynamic class in module,"import foo

foo.Bar = superClassCreator()
"
Building a dictionary from a tab delimited file in a pythonic way,"import csv
import StringIO
results = ""sku\tdelivered-price-gbp\tdelivered-price-euro\tid\n32850238\t15.53\t35.38\t258505\n""

data = list(csv.DictReader(StringIO.StringIO(results), delimiter='\t'))
print(data)
"
BeautifulSoup scraping information from multiple divs using loops into JSON,"from pprint import pprint

from bs4 import BeautifulSoup

data = """"""
<div>
    <div class=""audioBoxWrap clearBoth"">
        <h3>Title 1</h3>
        <p>Description 1</p>
        <div class=""info"" style=""line-height: 1px; height: 1px; font-size: 1px;""></div>
        <div class=""audioBox"" style=""display: none;"">
            stuff
        </div>
        <div> [ <a href=""link1.mp3"">Right-click to download</a>] </div>
    </div>
    <div class=""audioBoxWrap clearBoth"">
        <h3>Title 2</h3>
        <p>Description 2</p>
        <div class=""info"" style=""line-height: 1px; height: 1px; font-size: 1px;""></div>
        <div class=""audioBox"" style=""display: none;"">
            stuff
        </div>
        <div> [ <a href=""link2.mp3"">Right-click to download</a>] </div>
    </div>
</div>""""""

soup = BeautifulSoup(data, ""html.parser"")

tracks = soup.find_all('div', {'class':""audioBoxWrap clearBoth""})
result = {
    ""podcasts"": [
        {
            ""title"": track.h3.get_text(strip=True),
            ""description"": track.p.get_text(strip=True),
            ""link"": track.a[""href""]
        }
        for track in tracks
    ]
}
pprint(result)
"
Looking a instance's class hierarchy in Python,">>> hasattr(zip_instance, 'send')
False
>>> hasattr(zip_instance, 'throw')
False
>>> hasattr(zip_instance, 'close')
False
"
how can I select all descendants of a certain element with ElementTree in Python 3.3?,"text = """"""
<root>
    <entry id=""1"">
        <headword>go</headword>
        <example>I <hw>go</hw> to school.</example>
    </entry>
</root>
""""""

import lxml.etree
import StringIO

data = lxml.etree.parse(StringIO.StringIO(text))
root = data.getroot()

for entry in root.xpath('//example/ancestor::entry[1]'):
    examplegrp = lxml.etree.SubElement(entry,""examplegrp"")
    nodes = [node for node in entry.xpath('./example')]
    for node in nodes:
        entry.remove(node)
        examplegrp.append(node)

print lxml.etree.tostring(root,pretty_print=True)
"
How can I serialize a numpy array while preserving matrix dimensions?,"memfile = StringIO.StringIO()
memfile.write(json.loads(serialized).encode('latin-1'))
memfile.seek(0)
a = numpy.load(memfile)
"
What does classmethod do in this code?,">>> class y(object):
...   def __init__(self, astring):
...     self.s = astring
...   @classmethod
...   def fromlist(cls, alist):
...     x = cls('')
...     x.s = ','.join(str(s) for s in alist)
...     return x
...   def __repr__(self):
...     return 'y(%r)' % self.s
...
>>> y1 = y('xx')
>>> y1
y('xx')
>>> y2 = y.fromlist(range(3))
>>> y2
y('0,1,2')
"
finding nearest items across two lists/arrays in Python,"def nearest_neighbors_sorted(x, y) :
    x, y = map(np.asarray, (x, y))
    y_idx = np.argsort(y)
    y = y[y_idx]
    nearest_neighbor = np.empty((len(x),), dtype=np.intp)
    for j, xj in enumerate(x) :
        idx = np.searchsorted(y, xj)
        if idx == len(y) or idx != 0 and y[idx] - xj > xj - y[idx-1] :
            idx -= 1
        nearest_neighbor[j] = y_idx[idx]
        y = np.delete(y, idx)
        y_idx = np.delete(y_idx, idx)
    return nearest_neighbor
"
Dates and time zone codes around a DST change,"# Increment using timedelta
print 'This works:'
d = start_datetime
for i in range(5):
    print str(d) + ' ' + tz.tzname(d, is_dst=is_dst(d, tz))
    d += timedelta(minutes=30)  # Add 30 minutes
    d = tz.normalize(tz.localize(d)).replace(tzinfo=None)

# Increment by adding seconds to epoch
print 'This works too:'
epoch = datetime.utcfromtimestamp(0)
timestamp = (start_datetime - epoch).total_seconds()
for i in range(5):
    d = tz.normalize(datetime.fromtimestamp(timestamp, pytz.utc).astimezone(tz)).replace(tzinfo=None)
    print str(d) + ' ' + tz.tzname(d, is_dst=is_dst(d, tz))
    timestamp += 30 * 60  # Add 30 minutes
"
How to select increasing elements of a list of tuples?,"a = [a[i] for i in range(1, len(a)) if a[i][1] > a[i-1][1]]
"
what is the most efficient way to creating a dict with two lists?,"import itertools

x = ['a', 'b', 'c', 'd']
y = [1, 2, 3, 4]

method1 = dict(zip(x, y))
method2 = itertools.izip(x, y)
"
How to display a byte array as hex values,"Python 3.4.0a3 (default, Nov  8 2013, 18:33:56)
>>> import struct
>>> data = struct.pack('2I',12, 30)
>>> type(data)
<class 'bytes'>
>>> type(data[1])
<class 'int'>
>>>
>>> [hex(i) for i in data]
['0xc', '0x0', '0x0', '0x0', '0x1e', '0x0', '0x0', '0x0']
"
How to properly write coss-references to external documentation with intersphinx?,"[u'np-c:function',
 u'std:label',
 u'c:member',
 u'np:classmethod',
 u'np:data',
 u'py:class',
 u'np-c:member',
 u'c:var',
 u'np:class',
 u'np:function',
 u'py:module',
 u'np-c:macro',
 u'np:exception',
 u'py:method',
 u'np:method',
 u'np-c:var',
 u'py:exception',
 u'np:staticmethod',
 u'py:staticmethod',
 u'c:type',
 u'np-c:type',
 u'c:macro',
 u'c:function',
 u'np:module',
 u'py:data',
 u'np:attribute',
 u'std:term',
 u'py:function',
 u'py:classmethod',
 u'py:attribute']
"
I cannot figure out how to manipulate strings in a couple different ways,"d
 i
  n
   o
    s
     a
      u
       r
        s

d
 i
  n
   o
    s
   a
  u
 r
s

d       s
 i     r
  n   u
   o a
    s
"
Django query with contains and keywords,"result = []
for keyword in keywords.split(' '):
    result += list(Table.objects.filter(name__icontains=keyword))
"
How can I parse multiple (unknown) date formats in python?,"import re

ss = '''10/02/09
07/22/09
09-08-2008
9/9/2008
11/4/2010
03-07-2009
09/01/2010'''


regx = re.compile('[-/]')
for xd in ss.splitlines():
    m,d,y = regx.split(xd)
    print xd,'   ','/'.join((m.zfill(2),d.zfill(2),'20'+y.zfill(2) if len(y)==2 else y))
"
python - find the occurrence of the word in a file,"from collections import Counter

data = '''\
ashwin programmer india
amith programmer india'''

c = Counter()
for line in data.splitlines():
    c.update(line.split())
print(c)
"
python numpy array slicing,"means=arr2.mean(axis=1)
print(means)
# [  0.5   2.5   4.5   6.5   8.5  10.5  12.5  14.5  16.5  18.5  20.5  22.5
#   24.5  26.5  28.5  30.5  32.5  34.5]
"
How to select specific information from a file? Python,">CRISPR_10_7784249_7784543_1 GTTAAGATTTTCAGCCGAAGCATAAGACTGCTCA
>CRISPR_10_7784249_7784543_2 ATCAATAACAATACCTTGCTTTTCAGTTTCATT
>CRISPR_10_7784249_7784543_3 TATAACTTTCTCCTTCTATTGTTGATGTAACATA
>CRISPR_10_7784249_7784543_4 TTTTCATTTGCATCAAGTTCTTTTTCAAGGTCAA
>CRISPR_11_8822044_8822520_1 TTTACCAATCTCGGCTCTTTACTCCCGCTGGGTGCATT
>CRISPR_11_8822044_8822520_2 TTAAAGCAGATACAAAGAAGCCTTGTGAGGAATATT
>CRISPR_11_8822044_8822520_3 TATACTTCAGAAGTGCTGAGTTCCAGAAGCTTTTT
>CRISPR_11_8822044_8822520_4 AAATATATGATTAATAATAAGAATAATCAAATAGTA
>CRISPR_11_8822044_8822520_5 TTTCGTGGTTCCATCTGCTTATGAAACATTATTGATCT
>CRISPR_11_8822044_8822520_6 GGATGAGGCTGGTACATATACGTACCTGGTTCTTC
"
Why is numpy/pandas parsing of a csv file with long lines so slow?,"In [6]: %timeit pd.read_csv('test.csv', sep=',', engine='c', header=None)
1 loops, best of 3: 6.42 s per loop

In [7]: %timeit pd.read_csv('test.csv', sep=',', engine='c', header=None, na_filter=False)
1 loops, best of 3: 4.72 s per loop
"
How to load an uppercase alphabet?,"for letter in message:
    if letter.isupper():
        # do something
"
Could someone please go through this code line by line and explain it please? Pseudocode or English,"while True: # Loop will continue until break is called
    try:
        number = input('Enter') #Asks user to input 7 digit number

        # Checks if the length of the input
            # If not 7 characters long
            # Will then ask for input again due to while loop
        if len(str(number)) != 7:
            print('Incorrect')

            # If is 7 chacters long
        if len(str(number)) == 7:
            print('Okay')
            multiplier = [3,1]
            times = ''
            total = 0
            # example input for number '1234567'
            # list(str(number))
            # '1234567' -> ['1', '2', '3', '4', '5', '6', '7']
            for index, digit in enumerate(list(str(number))):
                # index%2 returns either 0 or 1
                # this is used to get 3 or 1 from multiplier
                # depending on if the index is odd or even

                # for first index and digit from example
                # index = 0, digit = '1'
                # total = total + 1 * 3
                total = total + int(digit)*multiplier[index%2]

                # adds the multiplier value from digit * multiplier[index%2]
                # to times as a string. First value is
                # times = times + str(1 * 3) which is 3
                times = times+str(int(digit)*multiplier[index%2])+', '
            # essentially rounds up to nearest 10
            mof10 = total + (10 - total%10)
            # gets the number it was rounded up by
            checkdigit = mof10 - total
            final = str(number) + str(checkdigit)
            print(times[:-1]) # slice the string to return everything except the last value
            print(total)
            print(mof10)
            print(checkdigit)
            print(final)
            break # exit while loop
        # If the convertion from string to int returns an error
        # meaning a non-number was entered into input eg. !@#$
        # print the following, while loop will continue and prompt again
    except ValueError:
        print('Not a number')
"
Converting a sentence to pig latin?,"    else:
        while word[0] not in ""aeiou"":
            word = """".join((word[1:], word[0]))
        print(word, end="" "")
"
Automating this: Finding and deleting rows in several dataframes,"AR = AR[~AR.PNR.isin(bad_values)]
"
Python - regex with Japanese letters matches only one character,">>> import re
>>> add = u""埼玉県川口市金山町１２丁目１－１０４番地""
>>> test = re.search(ur'番地|丁目', add)
>>> test.group(0)
u'\u4e01\u76ee'
>>> print test.group(0)
丁目
"
Eclipse IDE: How to add this configuration during running?,"setenv(""PYTHONPATH"",""."",1);
"
Iterate through a list of numpy arrays,"for i in list_of_arrays:
    print total(i)
"
How to get the current open file line in python?,"from random import randint
from itertools import islice, dropwhile

file = ""/etc/passwd""
f = open(file, ""r"")

f.seek(randint(10,250))
pos = f.tell()

print ""pos=%d"" % pos

def countbytes(iterable):
    bytes = 0
    for item in iterable:
        bytes += len(item)
        yield bytes

print list(
        islice(
            dropwhile(lambda x: x[1] <= pos, enumerate(countbytes(open(file, ""r""))))
            , 1))[0][0]+1
"
"Retrive the (index,column) tuple of non nan values",">>> df = pd.DataFrame([[1,np.nan,np.nan],[np.nan,np.nan,np.nan],[np.nan,6,np.nan]])
>>> np.where(~np.isnan(df))
(array([0, 2]), array([0, 1]))
"
interpolate linear array to non linear array using python numpy or scipy,"[ 0.          0.06825397  0.14615385  0.22631579  0.3137931   0.4
  0.49090909  0.58823529  0.67857143  0.776       0.8826087   0.9893617
  1.09574468  1.21162791  1.33243243]
"
Using MongoEngine Document class methods for custom validation and pre-save hooks,"class MyDocument(mongoengine.Document):

    def save(self, *args, **kwargs):
        for hook in self._pre_save_hooks:
            # the callable can raise an exception if
            # it determines that it is inappropriate
            # to save this instance; or it can modify
            # the instance before it is saved
            hook(self):

        super(MyDocument, self).save(*args, **kwargs)
"
Recursively remove nested items in dictionary,"entire file:
assign_var = {'compare' : None , 'discard' : [] , 'keep' : [] , 'pairs' : None}
subjects = {'keep' : ['Bookmarks Menu'] , 'discard' : ['surf'] , 'compare' : None , 'pairs' : [ {'keep' : ['Bookmarks Menu'] , 'discard' : ['surf']} , {'keep':'bla','discard':'etc'} ] }
def test(y):
    if 'children' in y:
        if y['title'] not in subjects['keep']:
            discard_func(y['children'])
        else:
            pass
    elif y['title'] in assign_var['keep']:
        print 'Dupicate found'
        return False
    return True
def discard_func(loo):
    loo[:] = [x for x in loo if test(x)]
    return loo
def keep_func(x):
    global assign_var
    for y in x:
        if 'children' in y:
            if y['title'] not in subjects['discard']:
                keep_func(y['children'])
            else:
                continue
        else:
            assign_var['keep'].append(y['title'])
    return x
def _finditem(op_type, obj):
    if isinstance(obj, dict):
        obj['children'] = _finditem(op_type, obj['children'])
    else:
        for x in obj:
            if x['title'] in subjects[op_type]:
                x['children'] = operations[op_type](x['children'])
            else:
                try:
                    x['children'] = _finditem(op_type, x['children'])
                except:
                    continue
    return obj
operations = { 'keep' : keep_func , 'discard' : discard_func , 'pairs' : None , 'compare' : None }
def parent_function():
    op_type = 'keep'
    _finditem(op_type, book)
    op_type = 'discard'
    book_new = _finditem(op_type, book)
    # for op_type in assign_var:
    #   try:
    #       _finditem(op_type = op_type, obj = book)
    #   except:
    #       pass
    return book_new
if __name__ == '__main__':
    print 'In __main__'
    import json
    loc = 'C:\\workspace\\temp\\'
    with open(loc + 'bookmarks-2014-05-24.json', 'r') as nctn:
        book = json.load(nctn)
    book_new = parent_function()
    with open(loc + 'bookmarks-2014-05-24_new.json', 'w') as nctn:
        nctn.write(json.dumps(book_new))
"
Python - finding value position in a list and outputting as a new list,"expected_element = 3
my_list = [...]
result_list = []
for i in range(len(my_list)):
    if my_list[i] == expected_element:
        result_list.append(i)
"
Change directory in terminal using python,"#!/usr/bin/python
import os
if __name__ == '__main__':
    os.chdir(""/home/name/projects/python"")
    os.system(""pwd"")
    os.system(""/bin/bash"")
"
re match a pattern,"re.findall('^([^;]+;)(.*)(\r\n\(%i\d+\).+)$', text, re.S)
"
Python: Access nested datastructures,">>> periods = dic['opening_hours']['periods']
>>> for period in periods:
    print(period)


{u'close': {u'day': 1, u'time': u'0100'}, u'open': {u'day': 0, u'time': u'0800'}}
{u'close': {u'day': 2, u'time': u'0100'}, u'open': {u'day': 1, u'time': u'0800'}}
{u'close': {u'day': 3, u'time': u'0100'}, u'open': {u'day': 2, u'time': u'0800'}}
{u'close': {u'day': 4, u'time': u'0100'}, u'open': {u'day': 3, u'time': u'0800'}}
{u'close': {u'day': 5, u'time': u'0100'}, u'open': {u'day': 4, u'time': u'0800'}}
{u'close': {u'day': 6, u'time': u'0100'}, u'open': {u'day': 5, u'time': u'0800'}}
{u'close': {u'day': 0, u'time': u'0100'}, u'open': {u'day': 6, u'time': u'0800'}}

>>> for index, period in enumerate(periods, 1):
    print('Period number %s starts %s, day %s, and ends %s, day %s.' % (
        index,
        period['open']['time'],
        period['open']['day'],
        period['close']['time'],
        period['close']['day'],
    ))


Period number 1 starts 0800, day 0, and ends 0100, day 1.
Period number 2 starts 0800, day 1, and ends 0100, day 2.
Period number 3 starts 0800, day 2, and ends 0100, day 3.
Period number 4 starts 0800, day 3, and ends 0100, day 4.
Period number 5 starts 0800, day 4, and ends 0100, day 5.
Period number 6 starts 0800, day 5, and ends 0100, day 6.
Period number 7 starts 0800, day 6, and ends 0100, day 0.
"
Less clunky way of checking a string for comma separation in Python?,"In [6]: %run 
hello, world True
hello world False
hello,  world False
hello world, good, morning False
"
Add percent of total column to Pandas pivot_table,"In [62]: pass_rate_pivot.groupby(level=0).transform(lambda x: x/x.sum())
Out[62]: 
04-11-2014  audited        0.292276
            is_adserver    0.014614
            rejected       0.156576
            unauditable    0.536534
04-18-2014  audited        0.363450
            is_adserver    0.020534
            pending        0.090349
            rejected       0.061602
            unauditable    0.464066
04-25-2014  audited        0.194389
            is_adserver    0.010020
            pending        0.066132
            rejected       0.018036
            unauditable    0.711423
dtype: float64
"
"python pandas, DF.groupby().agg(), column reference in agg()","print(df.loc[idx, ['word', 'tag']])
"
python debug: replace string between two unknown substrings,"<root>
    <StartNum>1</StartNum>
    <StartNum>5</StartNum>
    <StartNum>8</StartNum>
    <StartNum>9</StartNum>
    <StartNum>13</StartNum>
    <StartNum>33</StartNum>
    <foo>
        <bar baz=""5"" />
    </foo>
</root>
"
storing list/tuples in sqlite database with sqlalchemy,"Point = collections.namedtuple('Point', 'x y')
"
distribution for existing data,"plt.hist(a, len(data1), normed=True,)
"
"Draw middle form of arabic character alone, Python PIL","SHAPING = {
 u'\u0621' : ( u'\uFE80' ) ,
 u'\u0622' : ( u'\uFE81', u'\uFE82' ) ,
 u'\u0623' : ( u'\uFE83', u'\uFE84' ) ,
 u'\u0624' : ( u'\uFE85' , u'\uFE86' ) ,
 u'\u0625' : ( u'\uFE87' , u'\uFE88' ) ,
 u'\u0626' : ( u'\uFE89' , u'\uFE8B' , u'\uFE8C' , u'\uFE8A' ) ,
 u'\u0627' : ( u'\uFE8D' , u'\uFE8E' ) ,
 u'\u0628' : ( u'\uFE8F' , u'\uFE91' , u'\uFE92' , u'\uFE90' ) ,
 u'\u0629' : ( u'\uFE93' , u'\uFE94' ) ,
 u'\u062A' : ( u'\uFE95' , u'\uFE97' , u'\uFE98' , u'\uFE96' ) ,
 u'\u062B' : ( u'\uFE99' , u'\uFE9B' , u'\uFE9C' , u'\uFE9A' ) ,
 u'\u062C' : ( u'\uFE9D' , u'\uFE9F' , u'\uFEA0', u'\uFE9E' ) ,
 u'\u062D' : ( u'\uFEA1' , u'\uFEA3' , u'\uFEA4' , u'\uFEA2' ) ,
 u'\u062E' : ( u'\uFEA5' , u'\uFEA7' , u'\uFEA8' , u'\uFEA6' ) ,
 u'\u062F' : ( u'\uFEA9' , u'\uFEAA' ) ,
 u'\u0630' : ( u'\uFEAB'  , u'\uFEAC' ) ,
 u'\u0631' : ( u'\uFEAD' , u'\uFEAE' ) ,
 u'\u0632' : ( u'\uFEAF'  , u'\uFEB0' ) ,
 u'\u0633' : ( u'\uFEB1' , u'\uFEB3' , u'\uFEB4' , u'\uFEB2' ) ,
 u'\u0634' : ( u'\uFEB5' , u'\uFEB7' , u'\uFEB8' , u'\uFEB6' ) ,
 u'\u0635' : ( u'\uFEB9' , u'\uFEBB' , u'\uFEBC' , u'\uFEBA' ) ,
 u'\u0636' : ( u'\uFEBD' , u'\uFEBF' , u'\uFEC0' , u'\uFEBE' ) ,
 u'\u0637' : ( u'\uFEC1' , u'\uFEC3' , u'\uFEC4' , u'\uFEC2' ) ,
 u'\u0638' : ( u'\uFEC5' , u'\uFEC7' , u'\uFEC8' , u'\uFEC6' ) ,
 u'\u0639' : ( u'\uFEC9' , u'\uFECB' , u'\uFECC' , u'\uFECA' ) ,
 u'\u063A' : ( u'\uFECD' , u'\uFECF' , u'\uFED0', u'\uFECE' ) ,
 u'\u0640' : ( u'\u0640' ) ,
 u'\u0641' : ( u'\uFED1' , u'\uFED3' , u'\uFED4' , u'\uFED2' ) ,
 u'\u0642' : ( u'\uFED5' , u'\uFED7' , u'\uFED8' , u'\uFED6' ) ,
 u'\u0643' : ( u'\uFED9' , u'\uFEDB' , u'\uFEDC' , u'\uFEDA' ) ,
 u'\u0644' : ( u'\uFEDD' , u'\uFEDF' , u'\uFEE0', u'\uFEDE' ) ,
 u'\u0645' : ( u'\uFEE1' , u'\uFEE3' , u'\uFEE4' , u'\uFEE2' ) ,
 u'\u0646' : ( u'\uFEE5' , u'\uFEE7' , u'\uFEE8' , u'\uFEE6' ) ,
 u'\u0647' : ( u'\uFEE9' , u'\uFEEB' , u'\uFEEC' , u'\uFEEA' ) ,
 u'\u0648' : ( u'\uFEED' , u'\uFEEE' ) ,
 u'\u0649' : ( u'\uFEEF' , u'\uFEF0' ) ,
 u'\u064A' : ( u'\uFEF1' , u'\uFEF3' , u'\uFEF4' , u'\uFEF2' )
}
"
Range with chars or strings in Python arrays,"for c in range(ord('a'), ord('e')+1):
     print 'Alphabet:', chr(c)

Alphabet: a
Alphabet: b
Alphabet: c
Alphabet: d
Alphabet: e
"
Customizing Mezzanine,"url(""^%s(?P<category>.*)%s$"" % _slashes,
    ""mezzanine.blog.views.blog_post_list"",
    name=""blog_post_list_category"")
"
"Python 2.6: How can I compare two lists of same object types on one particular field, efficiently?","a_names = {record.username for record in List_A}
b_names = {record.username for record in List_B}
for name in a_names & b_names:
    print ""Duplicate username: {0}"".format(name)
"
Ping a website address to return an IP,"import socket
print socket.gethostbyname('www.google.com')
"
Pandas DataFrame get column combined max values,"df = pd.DataFrame({""A"": [3,1,2,4,5,3,4,10], ""B"": [1,3,2,4,0,0,1,0]})
"
Dynamic Django Filter with Prerequisite,"f1= some_object.filter_with_prefix( 'foo', object )
self.customers = Fest.objects.filter(**f1)
f2= some_object.filter_with_prefix( 'bar', object )
self.customers = Fest.objects.filter(**f2)
f3= some_object.filter_with_prefix( 'baz', object )
self.customers = Fest.objects.filter(**f3)
"
How do I check for next to next line while reading a file in python and strip the newline character at its end?,"from inplace import inplace

with inplace(inputfilename) as (ifh, ofh):
    for line in ifh:
        if line.startswith('for(') and line.endswith(';'):
            line = line.rstrip('\n') + next(ifh).rstrip('\n') + next(ifh)
        ofh.write(line)
"
python enumeration class for ORM purposes,"type(self).__dict__[attr] = type(self)(attr)
"
Is it possible to add an attribute to a variable in python?,"class Variables:
    def __init__(self):
        self.value = 25
        self.unit = ""m/s""
"
python: regex needed for format: 'delete([any text here])',"^delete\(.*\)$

    ^ assert position at start of the string
    delete matches the characters delete literally (case sensitive)
    \( matches the character ( literally
    .* matches any character (except newline)
        Quantifier: * Between zero and unlimited times, as many times as possible, giving back as needed [greedy]
    \) matches the character ) literally
    $ assert position at end of the string
"
How to read lines of dictionary and write to a CSV file,"for d in dicts:
    score = d['Score']
    d['Score'] = score[0]/score[1] if score[1] != 0 else 0
    #d['Score'] = '{}/{}'.format(score[0], score[1]) if score[1] != 0 else '0'
"
Mapping result rows to namedtuple in python sqlite,"con.row_factory = my_row_factory
"
Selecting text nodes with text not equal to a value,"from lxml import etree

data = """"""
<detection-run>
    <wireless-network>
        <SSID>
            <encryption>WEP</encryption>
        </SSID>
    </wireless-network>
    <wireless-network>
        <SSID>
            <encryption>WPA-PSK</encryption>
        </SSID>
    </wireless-network>
    <wireless-network>
        <SSID>
            <encryption>WPA2-PSK</encryption>
        </SSID>
    </wireless-network>
</detection-run>
""""""

root = etree.fromstring(data)
print root.xpath('//encryption[text()!=""WPA-PSK""]/text()')
"
Using Numpy creates a tcl folder when using py2exe,"numpy -> numpy.lib -> numpy.lib.utils -> pydoc -> Tkinter 
"
Twisted protocol to handle concantenated TCP stream with custom frame structure?,"from twisted.internet.protocol import Protocol
class MyProtocol(Protocol):
    buffer = b""""
    def dataReceived(self, data):
        messages, self.buffer = Message.parseStream(self.buffer + data)
        for message in messages:
            self.messageReceived(message)
    def messageReceived(self, message):
        ""do something useful with a message""
"
"matplotlib change linewidth on line segments, using list","Line Collection Example

import numpy as np
import matplotlib.pyplot as plt
from matplotlib.collections import LineCollection
np.random.seed(1977)

x = np.arange(10)
y = np.cos(x / np.pi)
width = 20 * np.random.random(x.shape)

# Create the line collection. Widths are in _points_!  A line collection
# consists of a series of segments, so we need to reformat the data slightly.
coords = zip(x, y)
lines = [(start, end) for start, end in zip(coords[:-1], coords[1:])]
lines = LineCollection(lines, linewidths=width)

fig, ax = plt.subplots()
ax.add_collection(lines)
ax.autoscale()
plt.show()
"
"PySide Qt tr() does not translate, context wrong?","$ pyside-lupdate -verbose -noobsolete i18n/tr.pro
Updating 'tr_de.ts'...
    Found 2 source texts (2 new and 0 already existing)
$ lrelease-qt4 i18n/tr.pro
Updating './i18n/tr_de.qm'...
    Generated 2 translation(s) (2 finished and 0 unfinished)
"
How to set a Python object's field/member by name,">>> class Klass:
...     def __init__(self):
...         self.a = 1
...         self.b = 2
...
>>> x = Klass()
>>> setattr(x, 'a', 3)
>>> x.a
3
"
list all functions defined in a file,"command! -nargs=1 GJ vimgrep <q-args> % | copen
"
Converting LEFT OUTER JOIN query to Django orm queryset/query,"    where = [""app_restProdAPI.rest_host = app_soapProdAPI.soap_host \
              OR app_restProdAPI.rest_ip = app_soapProdAPI.soap_ip"",
             ""app_restProdAPI.rest_mode=%s""
    ],
    params = ['Excluded']
"
How to display a value in a PyQt text field using matplotlib's object picking function?,"main.lbl.setText(str(self.msg[0])+' '+str(self.msg[1]))
"
Python merge two arrays on specific columns,">>> keys = {x[:2] for x in a}
>>> [x for x in b if x[:2] in keys]
[(12, 14, 44, 12), (19, 22, 96, 45)]
"
Where do I include django-admin-tools menu for my project,"MyApp/MyApp/Template/...
MyApp/App1/...
MyApp/App2/...
MyApp/Menu/...
"
Heat map of features and weights,"import numpy as np
from matplotlib import pyplot as plt 

n_features = 50

feature_names = [""feature_""+str(i) for i in range(n_features)]
weights = np.random.randn(n_features)

# select top 15 high and low features
indeces = np.argsort(weights)
n_top = 15
top = np.hstack((indeces[:n_top], indeces[-n_top:]))[::-1]

vmax = np.abs(weights).max()

plt.clf()
plt.imshow(weights[top].reshape((-1,1)),interpolation='nearest', cmap=""seismic"", vmin=-vmax, vmax=vmax)
plt.axes().xaxis.set_visible(False)
plt.colorbar()

tick_marks = np.arange(2 * n_top)
plt.yticks(tick_marks, [feature_names[i] for i in top]) 
"
What is the difference between the following two statements?,"func(xa, *args)
"
3D-plotting nested dictionaries made up of different length arrays,"{1: {1: array([11, 12, 13, 14, 15, 16]), 2: array([21, 22, 23, 24, 25, 26]),
  3: array([31, 32, 33, 34, 35, 36]), 4: array([41, 42, 43, 44, 45]),
  5: array([51, 52, 53, 54, 55, 56]), 6: array([61, 62, 63, 64, 65, 66])},
 2: {1: array([71, 72, 73, 74, 75, 76]), 2: array([21, 22, 23, 24, 25, 26]),
  3: array([31, 32, 33, 34, 35, 36]), 4: array([41, 42, 43, 44, 45]),
  5: array([51, 52, 53, 54, 55, 56]), 6: array([61, 62, 63, 64, 65, 66])}}
"
"python, how to run commands on remote hosts and show output in GUI in real time?","var config = {};
var app = require('http').createServer().listen(config.server.port);

var io = require('socket.io').listen(app);

var listenerDgram = require('dgram').createSocket('udp4');
listenerDgram.bind(config.listeners.udp.port);

var sprintf = require('sprintf').sprintf;

var users = [];

app.on('error', function(er) {
    console.log(sprintf('[%s] [ERROR] HTTP Server at port %s has thrown %s', Date(), config.server.port, er.toString()));
    process.exit();
});

listenerDgram.on('error', function(er) {
    console.log(sprintf('[%s] [ERROR] UDP Listener at port %s has thrown %s', Date(), config.listeners.udp.port, er.toString()));
    process.exit();
});

listenerDgram.on('message', function(msg, rinfo) {
    // handling, let's say, JSONized msg from part two script,
    // buildinf a var frame and finally
    if(user) {
        // emit to single user based on what happened
        // inside this method
        users[user].emit('notification', frame);
    } else {
        // emit to all users
        io.emit('notification', frame);
    }

});

io.sockets.on('connection', function(socket) {
    // handling user connection here and pushing users' sockets to
    // users aray.
});
"
Python Numpy: Replace duplicate values with mean value,"In [16]: x
Out[16]: array([7, 0, 2, 8, 5, 4, 1, 9, 6, 8, 1, 3, 5])

In [17]: y
Out[17]: 
array([ 6.7 ,  0.12,  2.33,  8.19,  5.19,  3.68,  0.62,  9.46,  6.01,
        8.  ,  1.07,  3.07,  5.01])

In [18]: x_new
Out[18]: array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])

In [19]: y_new_mean
Out[19]: 
array([ 0.12 ,  0.845,  2.33 ,  3.07 ,  3.68 ,  5.1  ,  6.01 ,  6.7  ,
        8.095,  9.46 ])
"
Why Tkinter can be procedural and PyQt can only be used just with the OO paradigm?,"import sys
from PyQt5.QtWidgets import (QWidget, QToolTip,
    QPushButton, QApplication)
from PyQt5.QtGui import QFont

app = QApplication(sys.argv)

w = QWidget()

QToolTip.setFont(QFont('SansSerif', 10))
w.setToolTip('This is a <b>QWidget</b> widget')

btn = QPushButton('Button', w)
btn.setToolTip('This is a <b>QPushButton</b> widget')
btn.resize(btn.sizeHint())
btn.move(50, 50)

w.setGeometry(300, 300, 300, 200)
w.setWindowTitle('Tool Tips')
w.show()

sys.exit(app.exec_())
"
Chained comparison number range in Python,"def InRange(number):
    return 0 < number < 6
"
Python max() takes no keyword arguments,"# Note: untested
times_files = [(os.path.getctime(f),f) for f in glob.glob(bDir+'*.[Dd][Mm][Pp]')]
newest = max(timed_files)[1] # grab the filename back out of the ""max"" tuple
"
Defining a dictionary of dictionaries with vectors as inner and outer keys,">>> m = {((1,2,3,4),(9,8,8,2)):""info""}
>>> m[((1,2,3,4),(9,8,8,2))]
'info'
"
"Calculate distance between cities & find surrounding cities based on GeoPT, in Python on Google App Engine","def get_closest_cities(self, kms):
  cities = []
  #Find surrounding Cities of a given city within a given radius
  allcities = self.country.city_set
  for city in allcities:
    distance = HaversineDistance((self.location.lat, self.location.lon),(city.location.lat, city.location.lon))
    if not distance >= kms:
      cities.append((city.name, int(distance)))
  cities.remove(cities[0])
  return cities
"
"Python, make a list for a for loop when parsing a CSV","print ('%-20s %-90s OnHand: %-10s OnOrder: %-10s') % (i[l[0]],i[l[1]],i[l[2]],i[l[3]])
"
TEXT compression in python,"import base64
import zlib
compressed = 'eJwdktkNgDAMQxfqR+5j/8V4QUJQUttx3Nrzl0+f+uunPPpm+Tf3Z/tKX1DM5bXP+wUFA777bCob4HMRfUk14QwfDYPrrA5gcuQB49lQQxdZpdr+1oN2bEA3pW5Nf8NGOFsR19NBszyX7G2raQpkVUEBdbTLuwSRlcDCYiW7GeBaRYJrgImrM3lmI/WsIxFXNd+aszXoRXuZ1PnZRdwKJeqYYYKq6y1++PXOYdgM0TlZcymCOdKqR7HYmYPiRslDr2Sn6C0Wgw+a6MakM2VnBk6HwU6uWqDRz+p6wtKTCg2WsfdKJwfJlHNaFT4+Q7PGfR9hyWK3p3464nhFwpOd7kdvjmz1jpWcxmbG/FJUXdMZgrpzs+jxC11twrBo3TaNgvsf8oqIYwT4r9XkPnNC1XcP7qD5cW7UHSJZ3my5qba+ozncl5kz8gGEEYOQ'
data = zlib.decompress(base64.b64decode(compressed))
"
Joining multiple tables for a single report in Django,"query output
[
    {'b__color': u'black', 'c__taste': u'pizza', 'c__smell': u'coffee'}, 
    {'b__color': u'black', 'c__taste': u'vanilla', 'c__smell': u'peppermint'}, 
    {'b__color': u'white', 'c__taste': u'pizza', 'c__smell': u'coffee'}, 
    {'b__color': u'white', 'c__taste': u'vanilla', 'c__smell': u'peppermint'}, 
    {'b__color': None, 'c__taste': None, 'c__smell': None}
]
"
How can I call a clean method before get_or_create saves to the database?,"from django.db.models.signals import pre_save

class Article(models.Model):
    optional_attribute = models.CharField(max_length = 250)

    @classmethod
    def pre_save_handler(cls, sender, instance, **kwargs):
        if not instance.optional_attribute:
            instance.optional_attribute = 'Default'

pre_save.connect(Article.pre_save_handler, sender=Article)
"
Scrapy Passing Arguments and Writing to MySQL,"import logging
import sys

# DATABASE
import pymysql
import sqlalchemy
from sqlalchemy.sql import table, column, exists
from sqlalchemy import *

sys.path.append(""/Volumes/Orange-1a/^datamine/^scripts/^foundation/"")
import music_tables
from music_tables import *

from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker

logger = logging.getLogger(__name__)


class FuriousmePipeline(object):

    def __init__(self):
        self.seen = []

    def process_item(self, item, spider):
        logger.info(item)

        some_engine = create_engine('mysql+pymysql://root@127.0.0.1/music_marketing?charset=utf8&use_unicode=0', pool_recycle=3600)

        # create a configured ""Session"" class
        Session = sessionmaker(bind=some_engine)

        # create a Session
        session = Session()

        thelist_id = item.get('entity_id')

        for email in item.get('emails'):
            if not email in self.seen:
                self.seen.append(email)
                try:
                    ins = data.insert().values(thelist=thelist_id, tag=22, value=email)
                    conn.execute(ins)  # remember this to write to database!
                except Exception, e:
                    print 'INSERT ERROR: ', thelist_id

        return item
"
Button for row deletion in GTK 3,"    # List
    self.store = Gtk.ListStore(str, str, str)
    self.store.append(['https://www.youtube.com/watch?v=dQw4w9WgXcQ',  # URL
                       'Rick Astley - Never Gonna Give You Up',  # Title
                       'edit-delete'])  # Action icon
    tree = Gtk.TreeView(self.store)
    tree.set_size_request(600, 400)

    # Editable URL
    url = Gtk.CellRendererText()
    url.set_property(""editable"", True)
    column_url = Gtk.TreeViewColumn(""YouTube URL"", url, text=0)
    column_url.set_min_width(300)
    tree.append_column(column_url)

    # Title
    title = Gtk.CellRendererText()
    column_title = Gtk.TreeViewColumn(""Title"", title, text=1)
    tree.append_column(column_title)

    # Action icon
    action_icon = Gtk.CellRendererPixbuf()
    self.column_action_icon = Gtk.TreeViewColumn("""", action_icon, icon_name=2)
    tree.append_column(self.column_action_icon)

    # Make a click activate a row such that we get the row_activated signal when it is clicked
    tree.set_activate_on_single_click(True)

    # Connect a listener to the row_activated signal to check whether the correct column was clicked
    tree.connect(""row_activated"", self.action_icon_clicked)

def action_icon_clicked(self, treeview, path, column):
    # If the column clicked is the action column remove the clicked row
    if column is self.column_action_icon:

        # Get the iter that points to the clicked row
        iter = self.store.get_iter(path)

        # Remove it from the ListStore
        self.store.remove(iter)
"
Python Tornado: Delete request never ends,"@web.asynchronous
@gen.coroutine
def delete(self, _id):
    try:
        model = Model()
        model.delete(_id)
        self.set_status(204)
    except Exception as e:
        logging.error(e)
        self.set_status(500)
    self.finish()
    return
"
Self executing functions in python,"def c_fn():
    def a_fn():
        //do something
    def b_fn():
        //do something
    b_fn()
    a_fn()
"
How to specify each index number - Python,"  result += w
"
Python -- import a module from a directory that's not a package,"sys.path.append('./dir2/dir3')
import packages
"
numpy vectorization of double python for loop,"In [20]: np.allclose(isaac_code(V, F), op_code(V, F))
Out[20]: True

In [21]: %timeit op_code(V, F)
100 loops, best of 3: 3.18 ms per loop

In [22]: %timeit isaac_code(V, F)
10 loops, best of 3: 24.3 ms per loop
"
Aggregating Column Values Into A Sequence Using Pandas,"In [62]:
df.groupby('userid')['var1'].apply(list).reset_index().rename(columns={'var1':'activity_seq'})

Out[62]:
   userid activity_seq
0  100001    [a, b, c]
1  100002       [a, b]
"
How to disable selection highlighting in a QTableWidget,"tableWidget->setFocusPolicy(Qt::NoFocus);
"
Python / Cython / Numpy optimization of np.nonzero,"def sphericity(np.ndarray[np.uint8_t, ndim=3] array):
"
Skip first two characters in (key=lambda) sorting,">>> ('3.Julie', '7')[::-1]
('7', '3.Julie')
"
Python Script greping directories,"if folders:
    print ""has folders!""
"
Python re.findall prints list instead of string,"
address = ('http://www.somesite.com/article.php?page=' +numb)
html = urllib2.urlopen(address).read()
regex = re.findall(r""([a-f\d]{12})"", html)
print ""\n"".join(regex)
"
Compare two nested lists and append a third list based on nested values - Python,"rank_list = []
for m in A:
    for n in A:
        if (n[3] > m[3]) and (n in rank_list):
            # (increase score for m)
    rank_list.append(m)
"
Reset a columns MultiIndex levels,"df.columns = ['_'.join(col) for col in df.columns]
print (df)
           basic_amt_NSW  basic_amt_QLD  basic_amt_VIC  basic_amt_All
All                    1              1              2              4
Full Time              0              1              0              1
Part Time              1              0              2              3

print (df.columns)
Index(['basic_amt_NSW', 'basic_amt_QLD', 'basic_amt_VIC', 'basic_amt_All'], dtype='object')
"
Python: Sorted merge using list comprehension,"a_peek = PeekIterator(a)
b_peek = PeekIterator(b)
merged = [next(a_peek) if a_peek.peek() is not None and
                          (b_peek.peek() is None or a_peek.peek() <= b_peek.peek())
          else next(b_peek)
          for _ in range(len(a) + len(b))]
"
Python : To list files if my keyword contains using regular expression,"[a-zA-Z0-9]
"
"Best practices on saving in a view, based on example code","forms.py
from django.forms import ModelForm

class EventForm(ModelForm):

    def __init__(self, user, **kwargs):
        self.user = user
        super(EventForm, self).__init__(**kwargs)

    class Meta:
        model = Event

    def save(self, commit=True):
        event = super(EventForm, self).save(commit=False)
        event.user = self.user
        if commit:
            event.save()
"
How to expose Python callbacks to Fortran using modules,"subroutine test()

use iso_fortran_env, only stdout => output_unit

!f2py intent(callback) py_func
external py_func
integer py_func
integer y,x
!f2py y = py_func(x)

integer :: a
integer :: b

a = 12
write(stdout, *) a

end subroutine
"
moving integers from one string to another?,"In [208]: import re

In [209]: re.split(r'\D', a, maxsplit=1)[0]
Out[209]: '253'
"
Convert a string list to float32 efficiently,"#allocate memory (np.empty would work too and be marginally faster, 
#                 but probably not worth mentioning).
a=np.zeros((3000,300),dtype=np.float32)  
with open(filename) as f:
    for i,line in enumerate(f):
        a[i,:]=map(np.float32,line.split()) 
"
Python: Extracting bits from a byte,"mask =  0b01111111
byte_from_file = 0b10101010
value = mask & byte_from_file
print bin(value)
>> 0b101010
print value
>> 42
"
Django count specific items of a many-to-one relationship,"{% for post in posts %}
<div>Thumbs up count: {{ post.upvote_count }}</div>
<div>Thumbs down count: {{ post.downvote_count }}</div>
{% endfor %}
"
Python: Determine whether each step in path across n arrays falls below threshold value,"Finding edges from layer 0 to 1 ...
Reachable nodes of next layer: [10]
Finding edges from layer 1 to 2 ...
Reachable nodes of next layer: [13]
True

Finding edges from layer 0 to 1 ...
Reachable nodes of next layer: [10, 13]
Finding edges from layer 1 to 2 ...
Reachable nodes of next layer: [13]
True
"
Can I just get the first item in a Cursor object (pymongo)?,"try:
    record = cursor.next()
except StopIteration:
    print(""Empty cursor!"")
"
How to create a function that outputs a matplotlib figure?,"for ...:
  graphs(...., arg)
plt.show()
"
"Python: Revealing a word for Hangman (Strings, replace, index, and strip)","def hangman(secret_word):
    from string import ascii_lowercase
    print (""Welcome to Hangman!"")
    print (""I am thinking of a word that is {} letters long\n-----------"".format(len(secret_word)))
    guesses = 8
    letters_guessed = []
    missed_l = ''
    correct_l = ''
    secret_word = secret_word.lower()
    while True:
        # if all the letters in secret_word are in correct_l , the user has won 
        if all(x in correct_l for x in secret_word):
            print (""Congratulations, you won!"")
            break
        # if len missed letters is 8, user has used up all guesses so break/end teh game
        elif len(missed_l) == 8:
            print (""Sorry, you ran out of guesses. The word was {}."".format(secret_word))
            break
        print (""You have {} guesses left"".format(guesses))
        print (""Available Letters: {}"".format("" "".join([x for x in ascii_lowercase if x not in letters_guessed])))
        guess = raw_input(""Please guess a letter: "").lower()
        # if guess in letters_guessed  user has already guessed that letter
        if guess in letters_guessed:
            print (""Sorry You've already guessed that letter: {}\n-----------"".format(guess))
        # else if it is in the word, add  guess to correct_l and to letters guessed 
        elif guess in secret_word:
            letters_guessed.append(guess)
            correct_l += guess
            print(""Good guess: {}\n-----------"".format("" "".join([x if x in letters_guessed else ""_"" for x in secret_word])))
        # if users guess is not in the word, minus a  life/guess
        elif guess not in secret_word:
            letters_guessed.append(guess)
            guesses -= 1
            print ("" That letter is not in my word: {}\n-----------"".format("" "".join([x if x in letters_guessed else ""_"" for x in secret_word])))
            missed_l += guess
"
How to log in to a website using installed twill?,">>> import twill.shell
>>> twill.shell.main()

 -= Welcome to twill! =-

current page:  *empty page*
>> ?

Undocumented commands:
======================
add_auth             fa           info             save_html           title
add_extra_header     find         load_cookies     setglobal           url
agent                follow       notfind          setlocal
back                 formaction   redirect_error   show
clear_cookies        formclear    redirect_output  show_cookies
clear_extra_headers  formfile     reload           show_extra_headers
code                 formvalue    reset_browser    showforms
config               fv           reset_error      showhistory
debug                get_browser  reset_output     showlinks
echo                 getinput     run              sleep
exit                 getpassword  runfile          submit
extend_with          go           save_cookies     tidy_ok

current page:  *empty page*
>>"
Handle multiple values in column,"DT2 <- DT[, .(A=toString(a), B=toString(b), C=toString(c)), by=ID]
write.table(DT2, ""dt2.txt"", sep=""\t"", row.names = FALSE)
"
NumPy Matrix Multiplication Efficiency for Matrix With Known Structure,"rowb, colb = B[n,:], np.copy( B[:,n] )
colb[ n ] = 0
"
sorting a list in python,"sorted(words, key=lambda x: 'a'+x if x.startswith('s') else 'b'+x)
"
Pandas: Find max value in column and print its row,"print df
                datetime           xra           xrb
1018 2016-02-21 17:00:00  1.000000e-09  2.380000e-07
1019 2016-02-21 17:00:01  1.000000e-09  2.380000e-07
1020 2016-02-21 17:00:02  1.000000e-09  2.380000e-07
1021 2016-02-21 17:01:00  1.080000e-09  2.370000e-07
1022 2016-02-21 17:02:00  1.000000e-09  2.350000e-07
1023 2016-02-21 17:03:00  1.000000e-09  2.340000e-07
1024 2016-02-21 17:04:00  1.000000e-09  2.330000e-07


print list(df.loc[df['xrb'][::-1].idxmax()])
[Timestamp('2016-02-21 17:00:02'), 1.0000000000000001e-09, 2.3800000000000001e-07]
"
Mean function given a list of graphs,"([1, 2, 3], [4.0, 5.0, 6.0])
"
"Sorting a list from a file, outputting in another file","valuelist=[]
for line_str in read_file:
     for cell in line_str.split("";""):
         valuelist.append(int(cell))
print(max(valuelist))
print(min(valuelist))
"
Jenkins and Python,"E:\>python run.py -t $Test_Name -b -c -no_compile -no_wlf
Number of arguments 7
run.py
-t
$Test_Name
-b
-c
-no_compile
-no_wlf
second method
jenkins.py
-t
$Test_Name
-b
-c
-no_compile
-no_wlf
$Test_Name
"
Pandas(Python) to_clipboard with comma decimal parameter,"df.applymap(lambda x: str(x).replace('.',',')).to_clipboard()
"
search in wildcard folders recursively in python,"fnmatch.filter( glob.glob('/../../nodes/*/views/assets/js/**/*'), '*.js' )
"
Python : Why is it said that variables that are only referenced are implicitly global?,"a = 1

def fn():
   global a  # <<< We're adding this
   print a
   a = 2

fn()
print a

# Prints: 1
# Then, prints: 2 (a changed in the global scope too)
"
how can I use selenium with my normal browser,"from selenium import webdriver
driver = webdriver.Chrome(executable_path='/path/to/executeable/chrome/driver')
"
Python: Compare elements in a list to each other,"Index 0 matched with index 1 for value 15.
Index 2 matched with index 5 for value 19.
Index 2 matched with index 6 for value 19.
Index 2 matched with index 6 for value 20.
Index 5 matched with index 6 for value 19.
"
"Are there other ways to format strings other then comma, percent, plus sign?","str = ""Oh {0}, {0}! wherefore art thou {0}?"".format(""Romeo"")
>>> Oh Romeo, Romeo! wherefore art thou Romeo?
"
count number of ones in a given integer,">>> from collections import Counter
>>> binary = bin(20)[2:]
>>> Counter(binary)
Counter({'0': 3, '1': 2})
"
"Storing and analysing experimental data in efficient way (SQL, PYTHON)","<class 'pandas.core.frame.DataFrame'>
Int64Index: 100000 entries, 0 to 99999
Data columns (total 10 columns):
0    100000 non-null float64
1    100000 non-null float64
2    100000 non-null float64
3    100000 non-null float64
4    100000 non-null float64
5    100000 non-null float64
6    100000 non-null float64
7    100000 non-null float64
8    100000 non-null float64
9    100000 non-null float64
dtypes: float64(10)
memory usage: 8.4 MB
"
How can i access gtk.Entry() in my GUI script from my other script? Python,"with open(""file.txt"", ""r"") as chat:
    data=chat.read().splitlines(True) #split lines in the list
d = str(data[:1]) #take only first line from the list
dat=str(d).strip(""[]"") #remove the brackets ""[]"" that remained when string was extracted from the list
with open(""file.txt"", ""w"") as chat1:
    chat1.writelines(data[1:]) # writes all except the first line
chat.close()
chat1.close()
self.f = open('file.txt', 'rb')
self.response = self.client.put_file(str(dat[:-2]), self.f)  #str(dat[:-2]) -> i wanted to remove the newline char ""\n"" 
"
How to Calculate Dry and Wet Spell in Python?,"# first extract precipitation data for later use
precipitation = [data[i][1] for i in xrange(0, rows)]

# then test the range (i, i+m)
all_dry = all([(data==0) for data in precipitation[i:i+m]])
all_wet = not any([(data==0) for data in precipitation[i:i+m]])
# of course you can also use
all_wet = all([(data>0) for data in precipitation[i:i+m]])
"
"What is a ""Manager"" in django?","MyModel.blue_objects.all()
"
Get last element of type string in a list,"def get_last_of_type(type_, iterable):
    for el in reversed(iterable):
        if isinstance(el, type_):
            return el
    return None
"
python file iteration to change the formatting of output (going from a column to line),"with open('file.txt') as fp:
    text = fp.read()           # read the entire file content into `text`
lines = text.splitlines()      # split the text into a list of lines
output = ','.join(lines)       # use comma to join the lines into a string
print output                   # and print it.
"
Are there any benefits from using a @staticmethod?,">>> Foo.bar()
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
TypeError: unbound method foo() must be called with Foo instance as first argument (got nothing instead)
>>> foo = Foo()
>>> foo.bar()
bar
"
"python Scrapy CrawlSpider: Rule doesn't apply after logged in, only crawled the first page","def parse_links(self, response):
    hxs = Selector(response)
    links = hxs.xpath('//a[contains(@href, ""topic"")]')
    for link in links:
        title = ''.join(link.xpath('./@title').extract())
        url = ''.join(link.xpath('./@href').extract())
        meta={'title':title,}
        yield Request(url, callback = self.parse_posts, meta=meta,)

parse_start_url = parse_links
"
How does the axis parameter from NumPy work?,"e.shape == (3, 2, 2)
"
How to catch any method called on an object in python?,">>> c = CatchAll()
>>> c ** 2
Hooking into __pow__
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
  File ""<stdin>"", line 11, in op_hook
AttributeError: __pow__
>>> c._function
<built-in function pow>
>>> c._params
((2,), {})
"
How do you access pySDL2 SoftwareSpriteRenderSystem Blendmode?,"# Create a solid, quadratic, red texture of 100px in size, using a RGBA color layout.
factory.from_color(0xFF000000, size=(100, 100),
                   masks=(0xFF000000,           # red channel
                          0x00FF0000,           # green channel
                          0x0000FF00,           # blue channel
                          0x000000FF))          # alpha channel
"
Overlapping regex matches,"007 - 011: UAGC
007 - 031: UAGCUAACUCAGGUUACAUGGGGA
007 - 049: UAGCUAACUCAGGUUACAUGGGGAUGACCCCGCGACUUGGAU
007 - 066: UAGCUAACUCAGGUUACAUGGGGAUGACCCCGCGACUUGGAUUAGAGUCUCUUUUGGAA
007 - 072: UAGCUAACUCAGGUUACAUGGGGAUGACCCCGCGACUUGGAUUAGAGUCUCUUUUGGAAUAAGCC
007 - 076: UAGCUAACUCAGGUUACAUGGGGAUGACCCCGCGACUUGGAUUAGAGUCUCUUUUGGAAUAAGCCUGAA
007 - 085: UAGCUAACUCAGGUUACAUGGGGAUGACCCCGCGACUUGGAUUAGAGUCUCUUUUGGAAUAAGCCUGAAUGAUCCGAG
027 - 031: GGGA
027 - 049: GGGAUGACCCCGCGACUUGGAU
027 - 066: GGGAUGACCCCGCGACUUGGAUUAGAGUCUCUUUUGGAA
027 - 072: GGGAUGACCCCGCGACUUGGAUUAGAGUCUCUUUUGGAAUAAGCC
027 - 076: GGGAUGACCCCGCGACUUGGAUUAGAGUCUCUUUUGGAAUAAGCCUGAA
027 - 085: GGGAUGACCCCGCGACUUGGAUUAGAGUCUCUUUUGGAAUAAGCCUGAAUGAUCCGAG
033 - 049: ACCCCGCGACUUGGAU
033 - 066: ACCCCGCGACUUGGAUUAGAGUCUCUUUUGGAA
033 - 072: ACCCCGCGACUUGGAUUAGAGUCUCUUUUGGAAUAAGCC
033 - 076: ACCCCGCGACUUGGAUUAGAGUCUCUUUUGGAAUAAGCCUGAA
033 - 085: ACCCCGCGACUUGGAUUAGAGUCUCUUUUGGAAUAAGCCUGAAUGAUCCGAG
078 - 085: AUCCGAG
"
Trigger inotify events,"def some_inane_os_api(with, lots, of, arguments):
    your_code(just, the, arguments, you need)

def your_code(...)
    ... your code ...
"
Elegant way to slice a list with a condition,"from itertools import groupby

[list(g) for _,g in groupby(numbers, lambda x: x//10)]
Out[3]: [[2, 8], [13, 15], [24, 26]]
"
replace pattern with a sequential number string in python,"import re
import itertools as it

text = ""<h> This is a string. </H><p> This is another part. </P>""

cnt = it.count()
d = {}
def replace(tag, d, cnt):
    if tag not in d:
        d[tag] = '{{{}}}'.format(next(cnt))
    return d[tag]
print re.sub(r""(</?\w+>)"", lambda x: replace(x.group(1), d, cnt), text)
print d
"
Getting AttributeError: sqrt in vq.whiten,"imputed = self.masked.fillna(self.masked.mean())
"
ctypes reimplementation of rshift for c_ulong,">>> a >> 2.0
__coerce__ c_ulong(16L) 2.0
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
TypeError: unsupported operand type(s) for >>: 'c_ulong' and 'float'
"
Turn URL into String (decode URL),"from urllib import unquote
"
Converting EPOC datetime to PST in python/ruby,"Time.at(1410627645).to_datetime.in_time_zone(""Pacific Time (US & Canada)"")
#=> Sat, 13 Sep 2014 10:00:45 PDT -07:00
"
Flexible numeric string parsing in Python,"import locale
locale.setlocale(locale.LC_NUMERIC, 'en_US')
print locale.atof('1,234,456.23')  # Prints 1234456.23
"
UTF-8 percentage encoding and python,"%C3%AE
"
OSX Yosemite Openmdao error during easy_install sphinx - NameError: name 'sys_platform' is not defined,"The OpenMDAO virtual environment has been installed in
 /Users/kmarstel/openmdao-0.10.3.2

From /Users/kmarstel/openmdao-0.10.3.2, type:

. bin/activate

to activate your environment and start using OpenMDAO.

kmarstel$  . bin/activate
(openmdao-0.10.3.2) kmarstel$ 
"
Comparing vectors in an array of vectors,"import numpy as np
import pandas as pd

def unique_set(a):
    return np.vstack(set(map(tuple, a)))

def unique_numpy(a):
    a = np.ascontiguousarray(a)
    view = a.view(np.dtype(('void', a.itemsize * a.shape[1])))
    unique = np.unique(view)
    return unique.view(a.dtype).reshape(-1, a.shape[1])

def unique_pandas(a):
    return pd.DataFrame(a).drop_duplicates().values

a = np.random.randint(0, 5, (100000, 5))

%timeit unique_set(a)
10 loops, best of 3: 183 ms per loop

%timeit unique_numpy(a)
10 loops, best of 3: 43.1 ms per loop

%timeit unique_pandas(a)
100 loops, best of 3: 10.3 ms per loop
"
Scipy: Argrelmax Find Maxmima along Dimension in 3d Array,"In [73]: np.random.seed(12345)

In [74]: data = np.random.randint(0, 10, size=(10, 3, 2))

In [75]: i, j, k = argrelmax(data, axis=0)
"
Iteratively-defined Numpy Array Creation,"#include <stdio.h>
#include <stdlib.h>
#include <sys/resource.h>
#include <time.h>

#define NUMITER 100000000

int main(void)
    {
    double *x, *y;
    double a, b, time_delta;
    int i;
    struct rusage ru0, ru1;

    x = (double *)malloc(NUMITER * sizeof(double));
    y = (double *)malloc(NUMITER * sizeof(double));
    for (i = 0; i < NUMITER; i++)
        x[i] = rand() / (double)(RAND_MAX - 1);

    getrusage(RUSAGE_SELF, &ru0);
    y[0] = x[0];
    a = .99 * y[0];
    for (i = 0; i < NUMITER; i++)
        {
        b = x[i]; 
        if (b > a)
        a = b;
        y[i] = a;
        a *= .99;
        }
    getrusage(RUSAGE_SELF, &ru1);

    time_delta = ru1.ru_utime.tv_sec + ru1.ru_utime.tv_usec * 1e-6 
               - ru0.ru_utime.tv_sec - ru0.ru_utime.tv_usec * 1e-6;
    printf(""Took %.6lf seconds, %.2lf nanoseconds per element"", time_delta, 1e9 * time_delta / NUMITER);

    return (int)y[1234] % 2; // just to make sure the optimizer is not too clever
    }
"
python find a pattern in string and enclose it in braces,"s = re.sub(r""(\d+'h\d+:\d+'h\d+F\d+)"",r'[\1]',s)
"
Python SyntaxError when creating a list using a generator,"def square_less_than(n):
    i = 0
    while True:
       if i*i < n:
          yield i
          i += 1
       else:
          break

print list(square_less_than(10))
"
Python Random Random,"if Airplane == 1:
while ....
"
Compare string of bits with elements of a table python,"map_dict = dict((t[1], t[0]) for t in tabela)
"
weighted counting in python,"def countOf(x,L):
    filteredL = list(filter(lambda value: value[0] == x,L))
    return sum(list(map(lambda value: value[1], filteredL)))
"
Python.el mishandling my M-q indentations on docstrings,"def complex(real=0.0, imag=0.0):
    """"""Form a complex number.

    Keyword arguments:
    real -- the real part (default 0.0)
    imag -- the imaginary part (default 0.0)
    """"""
    if imag == 0.0 and real == 0.0:
        return complex_zero
"
"How to split but ignore separators in quoted strings, in python?","import re
data = """"""part 1;""this is ; part 2;"";'this is ; part 3';part 4;this ""is ; part"" 5""""""
PATTERN = re.compile(r'''((?:[^;""']|""[^""]*""|'[^']*')+)''')
print PATTERN.split(data)[1::2]
"
Wrapping arrays in Boost Python,"#include <string>
#include <typeinfo>
#include <boost/python.hpp>
#include <boost/python/suite/indexing/indexing_suite.hpp>

namespace detail {

template <typename> struct array_trait;

/// @brief Type that proxies to an array.
template <typename T>
class array_proxy
{
public:
  // Types
  typedef T           value_type;
  typedef T*          iterator;
  typedef T&          reference;
  typedef std::size_t size_type;

  /// @brief Empty constructor.
  array_proxy()
    : ptr_(0),
      length_(0)
  {}

  /// @brief Construct with iterators.
  template <typename Iterator>
  array_proxy(Iterator begin, Iterator end)
    : ptr_(&*begin),
      length_(std::distance(begin, end))
  {}

  /// @brief Construct with with start and size.
  array_proxy(reference begin, std::size_t length)
    : ptr_(&begin),
      length_(length)
  {}

  // Iterator support.
  iterator begin()               { return ptr_; }
  iterator end()                 { return ptr_ + length_; }

  // Element access.
  reference operator[](size_t i) { return ptr_[i]; }

  // Capacity.
  size_type size()               { return length_; }

private:
  T* ptr_;
  std::size_t length_;
};

/// @brief Make an array_proxy.
template <typename T>
array_proxy<typename array_trait<T>::element_type>
make_array_proxy(T& array)
{
  return array_proxy<typename array_trait<T>::element_type>(
    array[0],
    array_trait<T>::static_size);
}

/// @brief Policy type for referenced indexing, meeting the DerivedPolicies
///        requirement of boost::python::index_suite.
/// 
/// @note Requires Container to support:
///          - value_type and size_type types,
///          - value_type is default constructable and copyable,
///          - element access via operator[],
///          - Default constructable, iterator constructable,
///          - begin(), end(), and size() member functions
template <typename Container>
class ref_index_suite
  : public boost::python::indexing_suite<Container,
      ref_index_suite<Container> >
{
public:

  typedef typename Container::value_type data_type;
  typedef typename Container::size_type  index_type;
  typedef typename Container::size_type  size_type;

  // Element access and manipulation.

  /// @brief Get element from container.
  static data_type&
  get_item(Container& container, index_type index)
  {
    return container[index];
  }

  /// @brief Set element from container.
  static void
  set_item(Container& container, index_type index, const data_type& value)
  {
    container[index] = value;
  }

  /// @brief Reset index to default value.
  static void
  delete_item(Container& container, index_type index)
  {
    set_item(container, index, data_type());
  };

  // Slice support.

  /// @brief Get slice from container.
  ///
  /// @return Python object containing
  static boost::python::object
  get_slice(Container& container, index_type from, index_type to)
  {
    using boost::python::list;
    if (from > to) return list();

    // Return copy, as container only references its elements.
    list list;
    while (from != to) list.append(container[from++]);
    return list;
  };

  /// @brief Set a slice in container with a given value.
  static void
  set_slice(
    Container& container, index_type from,
    index_type to, const data_type& value
  )
  {
    // If range is invalid, return early.
    if (from > to) return;

    // Populate range with value.
    while (from < to) container[from++] = value;
  }

  /// @brief Set a slice in container with another range.
  template <class Iterator>
  static void
  set_slice(
    Container& container, index_type from,
    index_type to, Iterator first, Iterator last
  )
  {
    // If range is invalid, return early.
    if (from > to) return;

    // Populate range with other range.
    while (from < to) container[from++] = *first++;   
  }

  /// @brief Reset slice to default values.
  static void
  delete_slice(Container& container, index_type from, index_type to)
  {
    set_slice(container, from, to, data_type());
  }

  // Capacity.

  /// @brief Get size of container.
  static std::size_t
  size(Container& container) { return container.size(); }

  /// @brief Check if a value is within the container.
  template <class T>
  static bool
  contains(Container& container, const T& value)
  {
    return std::find(container.begin(), container.end(), value)
        != container.end();
  }

  /// @brief Minimum index supported for container.
  static index_type
  get_min_index(Container& /*container*/)
  {
      return 0;
  }

  /// @brief Maximum index supported for container.
  static index_type
  get_max_index(Container& container)
  {
    return size(container);
  }

  // Misc.

  /// @brief Convert python index (could be negative) to a valid container
  ///        index with proper boundary checks.
  static index_type
  convert_index(Container& container, PyObject* object)
  {
    namespace python = boost::python;
    python::extract<long> py_index(object);

    // If py_index cannot extract a long, then type the type is wrong so
    // set error and return early.
    if (!py_index.check()) 
    {
      PyErr_SetString(PyExc_TypeError, ""Invalid index type"");
      python::throw_error_already_set(); 
      return index_type();
    }

    // Extract index.
    long index = py_index();

    // Adjust negative index.
    if (index < 0)
        index += container.size();

    // Boundary check.
    if (index >= long(container.size()) || index < 0)
    {
      PyErr_SetString(PyExc_IndexError, ""Index out of range"");
      python::throw_error_already_set();
    }

    return index;
  }
};

/// @brief Trait for arrays.
template <typename T>
struct array_trait_impl;

// Specialize for native array.
template <typename T, std::size_t N>
struct array_trait_impl<T[N]>
{
  typedef T element_type;
  enum { static_size = N };
  typedef array_proxy<element_type> proxy_type;
  typedef boost::python::default_call_policies policy;
  typedef boost::mpl::vector<array_proxy<element_type> > signature;
};

// Specialize boost::array to use the native array trait.
template <typename T, std::size_t N>
struct array_trait_impl<boost::array<T, N> >
  : public array_trait_impl<T[N]>
{};

// @brief Specialize for member objects to use and modify non member traits.
template <typename T, typename C>
struct array_trait_impl<T (C::*)>
  : public array_trait_impl<T>
{
  typedef boost::python::with_custodian_and_ward_postcall<
      0, // return object (custodian)
      1  // self or this (ward)
    > policy;

  // Append the class to the signature.
  typedef typename boost::mpl::push_back<
    typename array_trait_impl<T>::signature, C&>::type signature;
};

/// @brief Trait class used to deduce array information, policies, and 
///        signatures
template <typename T>
struct array_trait:
  public array_trait_impl<typename boost::remove_pointer<T>::type>
{
  typedef T native_type;
};

/// @brief Functor used used convert an array to an array_proxy for
///        non-member objects.
template <typename Trait>
struct array_proxy_getter
{
public:
  typedef typename Trait::native_type native_type;
  typedef typename Trait::proxy_type proxy_type;

  /// @brief Constructor.
  array_proxy_getter(native_type array): array_(array) {}

  /// @brief Return an array_proxy for a member array object.
  template <typename C>
  proxy_type operator()(C& c) { return make_array_proxy(c.*array_); }

  /// @brief Return an array_proxy for a non-member array object.
  proxy_type operator()() { return make_array_proxy(*array_); }
private:
  native_type array_;
};

/// @brief Conditionally register a type with Boost.Python.
template <typename Trait>
void register_array_proxy()
{
  typedef typename Trait::element_type element_type;
  typedef typename Trait::proxy_type proxy_type;

  // If type is already registered, then return early.
  namespace python = boost::python;
  bool is_registered = (0 != python::converter::registry::query(
    python::type_id<proxy_type>())->to_python_target_type());
  if (is_registered) return;

  // Otherwise, register the type as an internal type.
  std::string type_name = std::string(""_"") + typeid(element_type).name();
  python::class_<proxy_type>(type_name.c_str(), python::no_init)
    .def(ref_index_suite<proxy_type>());
}

/// @brief Create a callable Boost.Python object that will return an
///        array_proxy type when called.
///
/// @note This function will conditionally register array_proxy types
///       for conversion within Boost.Python.  The array_proxy will
///       extend the life of the object from which it was called.
///       For example, if `foo` is an object, and `vars` is an array,
///       then the object returned from `foo.vars` will extend the life
///       of `foo`.
template <typename Array>
boost::python::object make_array_aux(Array array)
{
  typedef array_trait<Array> trait_type;
  // Register an array proxy.
  register_array_proxy<trait_type>();

  // Create function.
  return boost::python::make_function(
      array_proxy_getter<trait_type>(array),
      typename trait_type::policy(),
      typename trait_type::signature());
}

} // namespace detail

/// @brief Create a callable Boost.Python object from an array.
template <typename T>
boost::python::object make_array(T array)
{ 
  return detail::make_array_aux(array);
}

struct Foo
{
  int vals[3];
  boost::array<std::string, 5> strs;

  Foo()  { std::cout << ""Foo()""  << std::endl; }
  ~Foo() { std::cout << ""~Foo()"" << std::endl; }
};

int more_vals[2];

BOOST_PYTHON_MODULE(example)
{
  namespace python = boost::python;

  python::class_<Foo>(""Foo"")
    .add_property(""vals"", make_array(&Foo::vals))
    .add_property(""strs"", make_array(&Foo::strs))
    ;
  python::def(""more_vals"", make_array(&more_vals));
}
"
Using ranking data in Logistic Regression,"X = np.hstack((X, AllAlexaAndGoogleInfo))
"
SimpleCV Code Completion with Eclipse,"from SimpleCV.Color import Color
"
Generate tailor made thousand delimiter,"'{0:,}'.format(1000000).replace(',', '|')
"
Column filtering in PySpark,"+--+--------------------+
|id|            datetime|
+--+--------------------+
| 1|14-Jul-15 11.34.2...|
| 2|14-Jul-15 11.34.2...|
| 3|14-Jul-15 11.32.1...|
+--+--------------------+
"
How to create generic modelform field validator for inherited model attributes in django?,"pincode = validated_pincode() 
"
random forest with spark: get predicted values and R²,"# Imports
import csv
try:
    from StringIO import StringIO
except ImportError:
    from io import StringIO
from collections import namedtuple
from operator import add, itemgetter
from pyspark import SparkConf, SparkContext
from pyspark.mllib.tree import RandomForest, RandomForestModel
from pyspark.mllib.util import MLUtils
from pyspark.mllib.linalg import SparseVector
from pyspark.mllib.regression import LabeledPoint
import shutil
import numpy

def parse(row):
    """"""
    Parses a row and returns a named tuple.
    """"""
    row[0]  = str(row[0])
    row[1]  = float(row[1])
    row[2]  = float(row[2])
    row[3]  = float(row[3])
    row[4]  = float(row[4])
    return LabeledPoint(row[4], row[:4])    


def split(line):
    """"""
    Operator function for splitting a line with csv module
    """"""
    reader = csv.reader(StringIO(line), delimiter=';')
    return next(reader)

#save csv file on a spark cluster (RDD format)
data = sc.textFile(""datafile"").map(split).map(parse)
"
"Python: Determine if an unsorted list is contained in a 'list of lists', regardless of the order to the elements","def doSomething(myListOfLists, otherInputs):
    s = set(otherInputs)           #create set from otherInputs
    for item in myListOfLists: 
        #remove the common items between `s` and current sublist from `s`.
        s -= s.intersection(item) 
        #if `s` is empty, means all items found. Return True
        if not s:                  
            return True
    return not bool(s)
... 
>>> doSomething([[1, 2, 7],[6, 5, 4], [10, 9, 10]], [7, 6, 8])
False
>>> doSomething([[1, 2, 7],[6, 5, 4], [10, 8, 10]], [7, 6, 8])
True
"
"Making networkx plot where edges only display edited numeric value, not field name","ax.set_title('This is a nice figure')
# or 
plt.title('This is a nice figure')
"
Reading file stops at halfway,"import io
with io.open('d:\\DRA_ACTORDEF_T0.x', 'r', encoding='your_encoding') as f:
    for line in f:
        print line
"
Python list help,"from copy import copy
copy_of_A = copy(A)
"
How to share a variable between 2 threads,"=== pu@pumbair:~/StackOverflow:507 > ./tst.py
setup
4 16 256 65536 4294967296
"
Cython conditional compile based on external value given via setuptools,"...
IF OPENMP:
#Do openmp
ELSE:
#No openmp
...
"
Converting list nested under two dictionaries to DataFrame,"In [99]: [(lesson, month, name, activity, minutes) 
          for lesson, dct in activity_dict.items() 
          for month, vals in dct.items() 
          for name, activity, minutes in vals]
Out[99]: 
[('lesson2', 'april', 'Julie', 'Biking', 20),
 ('lesson2', 'april', 'Chris', 'Baseball', 10),
 ('lesson2', 'february', 'Todd', 'Running', 18),
 ('lesson2', 'february', 'John', 'Studying', 3),
 ('lesson2', 'february', 'Don', 'Soccer', 40),
 ('lesson2', 'march', 'Tom', 'Bobsledding', 10),
 ('lesson2', 'march', 'Sam', 'Yoga', 42),
 ('lesson1', 'january', 'Todd', 'Running', 30),
 ('lesson1', 'january', 'Christy', 'Studying', 25),
 ('lesson1', 'january', 'Alex', 'Soccer', 10),
 ('lesson1', 'february', 'Jim', 'Bobsledding', 5),
 ('lesson1', 'february', 'Frank', 'Jogging', 8)]
"
Subclassing in python of instantiated superclass,"eve = Rectangle(3, 5)
kain = ColoredRectangle(eve, color=""blue"")
abel = ColoredRectangle(eve, color=""red"")
print eve.color, kain.color, abel.color
#red red red
"
Value Error on a script,"usrdata      0x000000013cc80000   0x0000000093300000   2   /dev/block/mmcblk0p7
bmtpool      0x0000000001500000   0x00000000febf00a8   2   /dev/block/mmcblk0
Part_Name:Partition name you should open;
StartAddr:Start Address of partition;
Type:Type of partition(MTD=1,EMMC=2)
MapTo:actual device you operate
Size:size of partition
"
"{% extends ""base.html"" %} and {% block content %} inside if statement (Django app)","{% block content %}
{% endblock %}
"
Accessing Javascript Button with Mechanize,"<form id=""currcalc"" onsubmit=""calculate(); return false;"" action=""#"">
"
make a increaseKey for list in python,"class OffsetDict(dict):
    def __init__(self, lst, offset):
        self.lst = lst
        self.offset = offset
    def __nonzero__(self):
        return bool(self.lst)
    def iteritems(self):
        return enumerate(self.lst, self.offset)

A = [""a"", ""b"", ""c""]
d = OffsetDict(A, 5)
print json.dumps(d)
"
When to use and when not to use Python 3.5 `await` ?,"async def extract_links(url):
    data = await download(url)
    links = parse(data)
    # if search_in_very_big_file() takes much time to process,
    # all your running async funcs (somewhere else in code) will be friezed
    # you need to avoid this situation
    links_found = search_in_very_big_file(links)
"
Determining whether an object is a ctypes array,"_SimpleCData # _type_: 'P' for void *
_Pointer     # _type_: ctypes.c_int
_CFuncPtr    # _flags_, _restype_, _argtypes_, _check_retval_
"
Using regular expression to comma separate a large number in south asian numbering system,"(?<=\d)(?=(\d{2}){0,2}\d{3}(\d{7})*(?!\d))
"
Python regular expression to print out sections of a string,"sections = re.findall(r'{.*?}', testString)
"
How to more efficiently search through an acoustid database with over 30 million rows?,"SELECT fingerprint_id, COUNT(*) AS num_matching_hashes
FROM fingerprint_hash
WHERE hash IN (627833118,627767582,627697982,627624254,627956095,...)
GROUP BY fingerprint_id
"
Python GAE Problems with combining requestHandler and BlobstoreUploadHandler,"class UploadBlobsHandler(blobstore_handlers.BlobstoreUploadHandler):

    def post(self):
        try:
            upload = self.get_uploads()[0]
            logging.info(upload)
            url = images.get_serving_url(upload)
            # Do something with it.
        except:
            self.redirect('/uploadform/?error', abort=True)

        self.redirect('/uploadform/?success&image_url=' + url)
"
SQLAlchemy/WTForms: set default selected value for QuerySelectField,"# Hypothetically, let's say that the current user makes the most sense
# This is just an example, for the sake of the thing
user = Authors.get(current_user.id)
ContentForm.author = QuerySelectField('Author', get_label='name', default=user)
"
"Consolidate .csv File to One Row per Unique Key (Example, Person) in Python","#!/usr/bin/env python
import sys
##Initials,Last,First,ShiftStart,ShiftEnd
s='''BAB,Smith,Bob,10:00a,1:00p
JCJ,Jones,Jill,11:00a,3:00p
JIH,Hernandez,Jose,1:00p,4:00p
BAB,Smith,Bob,1:00p,3:00p
JIH,Hernandez,Jose,5:00p,9:00p
JCJ,Jones,Jill,3:00p,3:30p
JCJ,Jones,Jill,3:30p,5:00p
DJM,Martin,Dominique,8:00a,11:00a'''

db = {}
for line in s.split('\n'):
     Initials,Last,First,ShiftStart,ShiftEnd = line.split(',')
     if Initials in db:
         db[Initials][2].append((ShiftStart,ShiftEnd))
     else:
         db[Initials] = (Last,First,[(ShiftStart,ShiftEnd)])
for Initials,v in db.iteritems():
    Last,First,shifts = v
    sys.stdout.write(Initials + ',')
    sys.stdout.write(Last + ',' + First)
    for shift in shifts:
        ShiftStart,ShiftEnd = shift
        sys.stdout.write(',' + ShiftStart + ',' + ShiftEnd)
    sys.stdout.write('\n')
"
Is there a more pythonic way of writing the following maximum-value function:,">>> def greatest_orig(values):
...     value_generator = (v for k,v in values)
...     max_value = max(value_generator)
...     return (k for k,v in values if v == max_value)
... 
>>> def greatest_max_key(values):
...     max_value = max(values, key=itemgetter(1))[1]
...     return (k for k,v in values if v == max_value)
... 
>>> sample_data = tuple(('id' + str(i), random.randrange(0, 1000)) for i in range(10000))
>>> list(greatest_orig(sample_data)) == list(greatest_max_key(sample_data))
True
>>> %timeit list(greatest_orig(sample_data))
1000 loops, best of 3: 1.67 ms per loop
>>> %timeit list(greatest_max_key(sample_data))
1000 loops, best of 3: 1.74 ms per loop
"
Counting occurrences of words per each item in a list,"$ python
>>> animals = [ 'bird', 'bird', 'cat' ]
>>> set(animals)
set(['bird', 'cat'])
>>> list(set(animals))
['bird', 'cat']
"
How can I treat an inheriting object as a subclass in OpenERP?,"def emit_sound(self, cr, uid, ids, context=None):
    for this in self.browse(cr, uid, ids, context):
       animal_registry = self.pool['animal.%s' % this.type]
       animal_ids = animal_registry.search(cr, uid, 
           [('base_id','=',this.id)], context)
       assert len(animal_ids) == 1, 'Chimera alert! ;-)'
       animal_registry.emit_sound(cr, uid, animal_ids, context)
"
Call python script using node.js child_process,"# python_launched_from_nodejs.py
import sys

data = ""this began life in python""
print(data)
sys.stdout.flush()
"
Howto Remove Garbage Data from String,"import string #doesn't exist on python3.x, use the builtin `str` type instead.
from itertools import takewhile

printable = set(string.printable)  
''.join(takewhile(lambda x: x in printable, s))
"
Appending variable length columns in Pandas dataframe Python,"In [3]: %timeit ( pd.DataFrame({col: pd.Series(range(df[col].iloc[0], df[col].iloc[-1] + 1)) for col in df.columns }) )
1000 loops, best of 3: 1.75 ms per loop

In [4]: %timeit ( pd.DataFrame({col: pd.Series(range(df[col].min(), df[col].max() + 1)) for col in df.columns })  )
The slowest run took 5.50 times longer than the fastest. This could mean that an intermediate result is being cached.
100 loops, best of 3: 2.18 ms per loop
"
Code smell - if/else construct,"def positionExtractor(alist):
    return tuple(alist[0:3])

def velocityExtractor(alist):
    velocity = tuple(alist[3:6])
    return velocity + (np.sqrt(sum(x**2 for x in velocity)),)

def forcesExtractor(alist):
    forces = tuple(alist[6:9])
    return forces + (np.sqrt(sum(x**2 for x in forces)),)
"
Python Group by count,"def consistency(dictionary):

    temp_list_of_values_we_care_about = [(x[0],x[1],x[2]) for x in dictionary.itervalues()]
    temp_dict = {}

    for val in temp_list_of_values_we_care_about:
        if val in temp_dict:
            temp_dict[val] += 1
        else:
            temp_dict[val] = 1

    new_dictionary = {}
    for key in dictionary:

        value = dictionary[key]
        temp = (value[0],value[1],value[2])

        if temp_dict[temp] <=5:
            new_dictionary[key] = value

    return new_dictionary
"
Accessing function attribute created in a decorator outside that decorator,">>> def f(func):
...     return func()
...
>>> def g():
...     return 'sunflower seeds'
...
>>> id(g)
139636515497336
>>> g = f(g)
>>> id(g)
139636515515112
"
How do I insert text as Italic or Bold etc with a python macro in libreoffice writer,"def fs2_Unclear_upper(*args):
    import socket, time
    class FontSlant():
        from com.sun.star.awt.FontSlant import (NONE, ITALIC,)
#get the doc from the scripting context which is made available to all scripts
    desktop = XSCRIPTCONTEXT.getDesktop()
    model = desktop.getCurrentComponent()
    text = model.Text
    tRange = text.End
    cursor = desktop.getCurrentComponent().getCurrentController().getViewCursor()
# your cannot insert simple text and text into a table with the same method
# so we have to know if we are in a table or not.
# oTable and oCurCell will be null if we are not in a table
    oTable = cursor.TextTable
    oCurCell = cursor.Cell
    import os
    from configobj import ConfigObj
    configuration_dir = os.environ[""HOME""]
    config_filename = configuration_dir + ""/fs2.cfg""
    if  os.access(config_filename, os.R_OK):
        pass
    else:
        return None
    cfg = ConfigObj(config_filename)
    #define values to use from the configuration file
    tcp_port = int(cfg[""control""][""TCP_PORT""])
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.settimeout(0.5)
    try:
        sock.connect((""localhost"", tcp_port))
    except:
        return None
    sock.settimeout(0.5)
    try:
        sock.send(bytes('get_time\n', 'UTF-8'))
    except:
        return None
    try:
        time.sleep(0.2)
        s_list = sock.recv(1024).decode('UTF-8')
        s_list = s_list.split(""\n"")
    except:
        return None
    lines_in_response = len(s_list)
    if lines_in_response is None:
        return None
    time_stamp = s_list[0]
    insert_text = ""[Unclear "" + time_stamp + ""]""
    Text_Italic = FontSlant.ITALIC
    Text_None = FontSlant.NONE
    cursor.CharPosture=Text_Italic
    if oCurCell == None: # Are we inserting into a table or not?
        text.insertString(cursor, insert_text, 0)
    else:
        cell = oTable.getCellByName(oCurCell.CellName)
        cell.insertString(cursor, insert_text, False)
    cursor.CharPosture=Text_None
    sock.close()
    return None 
"
Reverse a Python string without omitting start and end slice,"def my_slice(word, step):
    '''slice word with only step'''
    start = len(word)-1 if step < 0 else 0
    stop = -len(word)-1 if step < 0 else len(word)
    return word[start:stop:step]


word = ""hello""
step = -1
my_slice(word, step)
"
How to read UTF file char by char in Python,"import codecs
with codecs.open(""myfile.txt"", ""r"", encoding=""utf-8-sig"") as myfile:
    contents = myfile.read()
    for char in contents:
        # do something with character
"
Moving a sprite to the other side when a sprite moves off screen Pygame,"import sys, pygame, math
from pygame.locals import *
pygame.init()

# Added HEIGHT and WIDTH as fixed variables 

WIDTH = 800
HEIGHT = 600

SCREEN = pygame.display.set_mode((WIDTH, HEIGHT))

car = pygame.transform.scale(pygame.image.load('Car.png').convert_alpha(), (64, 64))
pygame.display.set_caption('Car Game')
pygame.display.set_icon(car)
FPS = pygame.time.Clock()

carX  = 400
carY  = 100
angle = 90
speed = 0

while True:

    if angle == 360: angle = 0
    if  angle == -1: angle = 359

    SCREEN.fill((0,0,0))

    for event in pygame.event.get():
        if event.type == QUIT:
            pygame.quit()
            sys.exit()

    keys = pygame.key.get_pressed()
    if keys[K_a] or keys[K_LEFT]:
        angle += speed
    elif keys[K_d] or keys[K_RIGHT]:
        angle -= speed
    if keys[K_w] or keys[K_UP]:
        speed += 1
    elif keys[K_s] or keys[K_DOWN]:
        speed -= 0.5

    carX += speed*math.cos(math.radians(angle))
    carY -= speed*math.sin(math.radians(angle))
    speed *= 0.95

    rotcar = pygame.transform.rotate(car, angle)
    position = rotcar.get_rect(center = (carX,carY))

    # Basically a copy/paste of the ""draw""-function from the spacegame.zip

    wrap_around = False

    if position[0] <  0 :
        # off screen left
        position.move_ip(WIDTH, 0)
        wrap_around = True

    if position[0]  + rotcar.get_width() > WIDTH:
        # off screen right
        position.move_ip(-WIDTH, 0)
        wrap_around = True

    if position[1]  < 0:
        # off screen top
        position.move_ip(0, HEIGHT) 
        wrap_around = True

    if position[1] + rotcar.get_height() > HEIGHT:
        # off screen bottom
        position.move_ip(0, -HEIGHT) 
        wrap_around = True

    if wrap_around:

        SCREEN.blit(rotcar, position)


    position[0] %= WIDTH
    position[1] %= HEIGHT  
    carX %= WIDTH
    carY %= HEIGHT


    SCREEN.blit(rotcar, position)

    pygame.display.update()
    FPS.tick(24)
"
How Do I Use A Decimal Number In A Django URL Pattern?,"def byvalue(request,value='0.99'):
    try:
        value = float(value)
    except:
        ...
"
How to override Flask-Security default messages?,"SECURITY_MSG_INVALID_PASSWORD = ('Your username and password do not match our records', 'error'),
"
Subsetting a 2D numpy array,"import numpy as np

a = np.arange(100).reshape(10,10)
n1, n2 = np.arange(5), np.arange(5)

# Not what you want
b = a[n1, n2]  # array([ 0, 11, 22, 33, 44])

# What you want, but only for simple sequences
# Note that no copy of *a* is made!! This is a view.
b = a[:5, :5]

# What you want, but probably confusing at first. (Also, makes a copy.)
# np.meshgrid and np.ix_ are basically equivalent to this.
b = a[n1[:,None], n2[None,:]]
"
Add data to a seaborn jointplot,"a=sns.jointplot(x=""volatility"", y=""return"", data=data, size=10)
a.ax_joint.plot([0.2],[0.2],'ro')
"
How to run all tests in a python file from a python script?,"$ python my_test_script.py
"
efficient string comparison in python including numerical evaluation,"file2list=sorted(file2list,key=operator.itemgetter(1,2,3,4,5,6))
for entry1 in file1list:
    for entry2 in file2list:
        d=np.abs(entry1[1:7]-entry2[1:7])
        if(np.all(d < tol)):
            print entry1,entry2
        elif(d[0] > tol):
            break 
"
Selenium WebDriver - Disable Native Events (Enable Synthesized Events),"profile.native_events_enabled = False
"
Add Header section to SOAP request using SOAPpy,"    license_key = Element('LicenseKey', ns=some_namespace).setText('88888-88888-8888-8888-888888888888')
    license_header = Element('LicenseHeader', ns=some_namespace).insert(license_key)

    license_attribute = Attribute(xmlns, ""http://schemas.acme.eu/"")
    license_header.append(license_attribute)
"
Conditional dataframe calculations based on a columns suffix,"In [57]: df
Out[57]:
   JPM_bid,  JPM_ask,  Socgen_bid,  Socgen_ask,  UBS_bid,  UBS_ask
0   1.01556   1.01557      1.01552      1.01559   1.01555  1.01558

In [58]: df.loc[:, df.columns.str.contains('bid')].mean(axis=1)
Out[58]:
0    1.015543
dtype: float64
"
Celery-Supervisor: How to restart a supervisor job to make newly updated celery-tasks working?,"sudo supervisorctl -c sample.conf
supervisor> restart my_worker
my_worker: stopped
my_worker: started
"
Making random phone number xxx-xxx-xxxx,"import random

def phn():
    p=list('0000000000')
    p[0] = str(random.randint(1,9))
    for i in [1,2,6,7,8]:
        p[i] = str(random.randint(0,9))
    for i in [3,4]:
        p[i] = str(random.randint(0,8))
    if p[3]==p[4]==0:
        p[5]=str(random.randint(1,8))
    else:
        p[5]=str(random.randint(0,8))
    n = range(10)
    if p[6]==p[7]==p[8]:
        n = (i for i in n if i!=p[6])
    p[9] = str(random.choice(n))
    p = ''.join(p)
    return p[:3] + '-' + p[3:6] + '-' + p[6:]
"
making multiple pandas data frames using a loop or list comprehension,"injuries = {injury: df[df['Type'] == injury] for injury in df['Type'].unique()}

injuries['BROKEN PELVIS']  # is the same as df_a above
"
How do I show the same matplotlib figure several times in a single IPython notebook?,"In [1]:
myFigure, myAx = plt.subplots()
myAx.plot([1,2,3])
"
Removing from vowels from a string,"''.join([character for character in sentence if character not in vowels]) # returns string without vowels
"
Comparing Two Lists of Tuples Based On Each Tuple's First Value (But Returning ALL Tuple Values),"system_a_devices = {""host1.test.local"": ""Test 1 Group"", ""host5.testing.lan"": ""LAN Test Group"", ""server5.hello.local"": ""Hello Corporation, Inc."", ""desktop1.corp.tld"": ""Corporate TLD, Ltd.""}
system_b_devices = {""desktop1.corp.tld"": ""Corporate TLD, Ltd."", ""host1.test.local"": ""Test One Group"", ""server6.hello.local"": ""Hello Corporation, Inc.""}
"
"Using Python, I want to parse each file in one directory with format YY-MM-DD.CSV but ignore all others","from datetime import datetime

def is_dated_csv(filename):
    """"""
    Return True if filename matches format YY-MM-DD.csv, otherwise False.
    """"""
    date_format = '%y-%m-%d.csv'

    try:
        datetime.strptime(filename, date_format)
        return True
    except ValueError:
        # filename did not match pattern
        pass

    return False

# Tests
print is_dated_csv('15-01-01.CSV') # True
print is_dated_csv('99-12-31.csv') # True
print is_dated_csv('15-13-32.csv') # False
print is_dated_csv('15-02-30.csv') # False
"
How can I eject a CD from MacOS with Python?,"import ctypes, time

# open the CD tray 
ctypes.windll.winmm.mciSendStringW(""set cdaudio door open"", None, 0, None)

# try closing the tray
ctypes.windll.winmm.mciSendStringW(""set cdaudio door closed"", None, 0, None)
"
Set a python variable to a C++ object pointer with boost-python,">>> import example
spam(1): 0x1884d40
spam(2): 0x1831750
spam(3): 0x183bd00
>>> assert(1 == example.spam1.id)
>>> assert(2 == example.spam2.id)
>>> assert(3 == spam3.id)
~spam(1): 0x1884d40
~spam(2): 0x1831750
"
Extract specific bytes from a binary file in Python,"#!/usr/bin/python

import mmap
import os
import struct
import sys

FILE = ""/opt/tmp/random""  # dd if=/dev/random of=/tmp/random bs=1024k count=1024
SIZE = os.stat(FILE).st_size
BYTES = 2
SKIP = 10


def byfile():
    sum = 0
    with open(FILE, ""r"") as fd:
        for offset in range(0, SIZE/BYTES, SKIP*BYTES):
            fd.seek(offset)
            data = fd.read(BYTES)
            sum += struct.unpack('h', data)[0]
    return sum


def bymmap():
    sum = 0
    with open(FILE, ""r"") as fd:
        mm = mmap.mmap(fd.fileno(), 0, prot=mmap.PROT_READ)
        for offset in range(0, SIZE/BYTES, SKIP*BYTES):
            data = mm[offset:offset+BYTES]
            sum += struct.unpack('h', data)[0]
    return sum


if sys.argv[1] == 'mmap':
    print bymmap()

if sys.argv[1] == 'file':
    print byfile()
"
How to read and check stdin/stdout in python?,"$ python hello.py
asfasfasf
asfasfasfasfasf
<TYPE CONTROL-D TO END STREAM>
"
How to make sqlalchemy return float instead of Decimal when reflecting tables?,"<class 'float'>
DOUBLE(asdecimal=False)
"
How to create bullets in pygame?,"for bullet in bullets:
  if bullet[0]<0:
    bullets.remove(bullet)
"
Why am I getting a NullReferenceException when trying to subclass from an ObservableCollection or BindingList?,">>> class BindingListEx(System.ComponentModel.BindingList[str]):
...     pass
... 
>>> 
>>> b = BindingListEx()
>>> b
<BindingListEx object at 0x000000000000002C>
>>> b.Add(3)
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
TypeError: expected str, got int
>>> b.Add(""cow"")
>>> 
"
Making numbered lists in reStructuredText,"#. `question 1`_
#. `question 2`_

.. _question 1:
the answer to question 1
"
Django custom login never authenticates why?,"from django.contrib.auth import get_user_model


class EmailAuthBackend(object):
    """"""
    Email Authentication Backend
    """"""

    def authenticate(self, username=None, password=None):
        """""" Authenticate a user based on email address as the user name. """"""
        try:
            user = get_user_model().objects.get(email=username)
            if user.check_password(password):
                return user
        except get_user_model().DoesNotExist:
            return None 
"
How to scrape the next pages in python using Beautifulsoup,"import re

import requests
from bs4 import BeautifulSoup


with requests.Session() as session:
    # extract the last page
    response = session.get(""http://www.engineering.careers360.com/colleges/list-of-engineering-colleges-in-India?sort_filter=alpha"")    
    soup = BeautifulSoup(response.content, ""html.parser"")
    last_page = int(re.search(""page=(\d+)"", soup.select_one(""li.pager-last"").a[""href""]).group(1))

    # loop over every page
    for page in range(last_page):
        response = session.get(""http://www.engineering.careers360.com/colleges/list-of-engineering-colleges-in-India?sort_filter=alpha&page=%f"" % page)
        soup = BeautifulSoup(response.content, ""html.parser"")

        # print the title of every search result
        for result in soup.select(""li.search-result""):
            title = result.find(""div"", class_=""title"").get_text(strip=True)
            print(title)
"
How can I count unique terms in a plaintext file case-insensitively?,"#! /usr/bin/python2.4
import sys
h = set()
for line in sys.stdin.xreadlines():
  for term in line.split():
    h.add(term)
print len(h)
"
Identify that a string could be a datetime object,"$ pip install fuzzyparsers
"
How to find most frequent values in numpy ndarray?,"arr = np.array([[5, 4, -2, 1, -2, 0, 4, 4, -6, -1],
                [0, 1,  2, 2,  3, 4, 5, 6,  7,  8]])
axis = 1
u, indices = np.unique(arr, return_inverse=True)
u[np.argmax(np.apply_along_axis(np.bincount, axis, indices.reshape(arr.shape),
                                None, np.max(indices) + 1), axis=axis)]
"
How do I invoke a method on a C++ class pointer with swig wrappers?,"%module x

%inline %{

// Define the interface.
struct iExample
{
    virtual int somePureVirtualMethod() = 0;
};

iExample* getMyClassInstance();

%}

// Implementation, not exposed to Python
%{
struct Internal : public iExample
{
    int somePureVirtualMethod() { return 5; }
};
iExample* getMyClassInstance() { return new Internal(); }
%}
"
How can I isolate part of a string in a list of strings and sort the list with it? (in Python),"def grouper(iterable, n, fillvalue=None):
    ""Collect data into fixed-length chunks or blocks""
    # grouper('ABCDEFG', 3, 'x') --> ABC DEF Gxx
    args = [iter(iterable)] * n
    return izip_longest(fillvalue=fillvalue, *arg)
"
How to call python script from CasperJS,"casp.run(function(){});
"
Python: from a text file to dictionary with keys,"d = {}
f = open(""tennis.txt"")
for i, l in enumerate(f):
    # cut the '0b' chars, so you will get your dict keys just like you want
    bin_num = bin(i)[2:]
    # if the key is shorter than 3 chars, add 0 to the beginning
    while len(bin_num) < 3:
        bin_num = '0' + bin_num
    d[bin_num] = l[:-1]

f.close()
for i in sorted(d.items()):
    print i
"
How to represent this as a Network?,"words = ['mention', 'detention', 'attention', 'iteraction', 'interception', 'solution', 'iteraction','reiteration', 'determination', 'tension', 'tentative', 'intention', 'solution', 'tentative', 'concatenation', 'alternative', 'bitter', 'asterisk']

subs = ['ter','tion','ten']
edges = []

for word in words:
    for sub in subs:
        if sub in word:
            edges.append( (word, sub) )

print edges[0:6]

# prints [('mention', 'tion'), ('detention', 'tion'), ('detention', 'ten'), ('attention', 'tion'), ('attention', 'ten'), ('iteraction', 'ter')]
"
Django Simple Captcha image size,"#captcha/views.captcha_image
...
size = font.getsize(text)
size = (size[0] * 2, int(size[1] * 1.2))
...
"
Changing the Digit Color of QLCD Number,"lcd.setSegmentStyle(QtGui.QLCDNumber.Flat)
"
python subprocess calling bash script - need to print the quotes out too,"subprocess.Popen([""/bin/bash"", ""myscript.sh"", ""var=11; ignore all"", path_to_files])
"
Scipy inv(A) vs A.I,"In [60]: x = np.random.random((3,3))

In [62]: y = np.matrix(x)    

In [64]: type(y.I)
Out[64]: <class 'numpy.matrixlib.defmatrix.matrix'>

In [65]: type(np.linalg.inv(x))
Out[65]: <type 'numpy.ndarray'>
"
Is there a python library that allows to easily print ascii-art text?,"import sys

from colorama import init
init(strip=not sys.stdout.isatty()) # strip colors if stdout is redirected
from termcolor import cprint 
from pyfiglet import figlet_format

cprint(figlet_format('missile!', font='starwars'),
       'yellow', 'on_red', attrs=['bold'])
"
Splitting a string by list of indices,"['long ', 'string ', 'that ', 'I want to split up']
"
Write the same nested loop n levels deep,"[(1, 4, 7), (1, 4, 8), (1, 4, 9), (1, 5, 7), (1, 5, 8), (1, 5, 9), (1, 6, 7), (1, 6, 8), (1, 6, 9), (2, 4, 7), (2, 4, 8), (2, 4, 9), (2, 5, 7), (2, 5, 8), (2, 5, 9), (2, 6, 7), (2, 6, 8), (2, 6, 9), (3, 4, 7), (3, 4, 8), (3, 4, 9), (3, 5, 7), (3, 5, 8), (3, 5, 9), (3, 6, 7), (3, 6, 8), (3, 6, 9)]
"
How to find system type using Python?,">>> import platform
>>> platform.architecture()
('64bit', 'WindowsPE')
"
Django restrict pages to certain users,"def get_download_url(user):
    try:
        download = Download.objects.get(user=user)
        return download.download_url
    except Download.DoesNotExist:
        return None
"
Mechanize submit a form that creates a dynamic flie that needs to be downloaded,"br.select_form(predicate=lambda form: form.attrs['id'] == 'id-of-form')
"
Input Defines Multiple Set Names & Content in Python,"Red Bob Sam Luke
Red Rue Amy Lila
"
Comparing elements between elements in two lists of tuples,"In [43]: from operator import itemgetter

In [44]: set(map(itemgetter(0),l1)) & set(map(itemgetter(0),l2))
Out[44]: set(['a', 'b'])
"
fabric cleanup operation with atexit,"fabric$ fab hello -H web01,web02
>[web01] Executing task 'hello'
>[web01] run: hostname
>[web01] out: web01
>[web01] out: 
>[web02] Executing task 'hello'
>[web02] run: hostname
>[web02] out: web02
>[web02] out: 
>
>this is at exit command.
>
>Done.
"
How to return values to korn shell from python?,"
$ ksh
"
Sum Lists' value with corresponding index value in Python,">> a = [[[1,2,3],[4,5,6]],
... [[7,8, 9],[10, 11, 12]],
... [[16, 17, 18],[13, 14, 15]]]

>>> temp_list = list(zip(*b) for b in zip(*a))
>>> result = [[sum(list(a)) for a in b] for b in temp_list]
>>> result
[[24, 27, 30], [27, 30, 33]]
"
Python Tkinter - Find image file path from PhotoImage,"import sys
import Tkinter

def nothing():
    print(""Nothing"")

class Application(Tkinter.Frame):
    def __init__(self, master = None):
        Tkinter.Frame.__init__(self, master)

        self.button = Tkinter.Button(text = ""Button 1"", command = nothing)
        self.button.pack()

        class StdoutRedirector(Tkinter.Text):
            def __init__(self):
                Tkinter.Text.__init__(self)
             def write(self, message):
                 printout.insert(Tkinter.END, message)
        printout = StdoutRedirector()
        printout.pack()
        sys.stdout = printout

root = Tkinter.Tk()
app = Application(root)
app.mainloop()
"
Find float in ndarray,">>> np.tile(2, array.shape)
array([[2, 2], [2, 2]])
"
"Remove duplicate, remove certain letters from line if found","for line in fin.readlines():
    words = line.split()    # list of words
    new_words = []
    unique_words = set()
    for word in words:
        if (word not in unique_words and
                  (not word.isdigit() or int(word) <= 65000)):
            new_words.append(word)
            unique_words.add(word)
    new_line = ' '.join(new_words)
    print new_line
"
Python modify tuple with lambda,"In [23]: d = {(1, 2): False}

In [24]: d[1, 2] = True

In [25]: tuple(d.items())
Out[25]: (((1, 2), True),)
"
"In python, How to use singleton patten?","    from pymongo import MongoClient
    client = MongoClient(""localhost"", 27017)
    db = client.newsdb
    news = db.news
"
numpy mgrid shapely for linestring coordinates,">>> x, y = np.mgrid[:2, :3]
>>> np.vstack((x.ravel(),y.ravel())).T
array([[0, 0],
       [0, 1],
       [0, 2],
       [1, 0],
       [1, 1],
       [1, 2]])
"
Get sums of pairs of elements in a numpy array,"In [11]: timeit t + np.roll(t,-1)
100000 loops, best of 3: 17.2 us per loop

In [12]: timeit t + np.r_[t[1:],t[0]]
10000 loops, best of 3: 35.5 us per loop
"
get specific content from file python,"data = [ map( float, row) for row in csvreader]
"
Loop through netcdf files and run calculations - Python or R,"f = netCDF4.MFDataset('/usgs/data2/rsignell/models/ncep/narr/air.2m.*.nc')
"
Excel diff with python,"
This is a slower but functional solution:
column_a_name = ['Location', 'Building', 'Location']
column_a_data = [['Floor 1', 'Main', 'Sweden'],
                ['Floor 2', 'Main', 'Sweden'],
                ['Floor 3', 'Main', 'Sweden']]

column_b_name = ['Location', 'Building']
column_b_data = [['Sweden', 'Main', 'Floor 1'],
                ['Norway', 'Main', 'Floor 2'],
                ['Sweden', 'Main', 'Floor 3']]

matching_names = []
for pos in range(0, len(column_a_name)):
    try:
        if column_a_name[pos] == column_b_name[pos]:
            matching_names.append((column_a_name[pos], pos))
    except:
        pass # Index out of range, colun length are not the same

missmatching_data = []
for row in range(0, len(column_a_data)):
    rowa = column_a_data[row]
    rowb = column_b_data[row]

    for name, _id in matching_names:
        if rowa[_id] != rowb[_id] and (rowa[_id] not in rowb or rowb[_id] not in rowa):
            missmatching_data.append((row, rowa[_id], rowb[_id]))

print missmatching_data
"
"BeautifulSoup help, how to extract content from not proper tags text in html file?","[u'good1', u'1', u'good2', u'2']
"
Numpy/Python: Array iteration without for-loop,"array([False, False, False, False,  True, False], dtype=bool
"
Ordered dictionary output in python,"key1 value1
key1 value2
key1 value3
key2 value1
key2 value2
"
How to pack my Python Project with the third party modules to run as a single Application on a Windows Platform,"$ pynsist installer.cfg
"
"In Python, how can I create lists that contain a certain index of other lists?",">>> a = [1, 2, 3]
>>> b = [4, 5, 6]
>>> c = [7, 8, 9]
>>> zipped = zip(a, b, c)
>>> zipped
[(1, 4, 7), (2, 5, 8), (3, 6, 9)]
"
how to write regular expression makes sure that there is no digits after,"r'\b[a-z][*]{2}1(?!\d)'
"
Not getting the right result using XPath with python scraper,"response.xpath('//nav[contains(@class, ""subcategorynav"")]//li')
"
Generating raw_inputs based on user input? [Python],">>> Enter Element 1: 3.1415 # hit enter
"
Python: Storing data in a text file and appending particular/individual lines,"newline = (oldline.rstrip()+"" ""+(str(score)))
"
How can I create a list from two dictionaries?,"fu_list = [(k, fus_d.get(k), fus_s.get(k)) for k in fus_d.viewkeys() | fus_s]
"
Indexing column values in pandas,">>> df.loc[df[1] == ""string A""]
      0         1   2
0  2013  string A  13
1  2013  string A  14
4  2013  string A  11

[3 rows x 3 columns]
"
Why _mysql.co that compiled on one Mac doesn't work on another?,"% file /usr/bin/python
/usr/bin/python: Mach-O universal binary with 3 architectures
/usr/bin/python (for architecture x86_64):      Mach-O 64-bit executable x86_64
/usr/bin/python (for architecture i386):        Mach-O executable i386
/usr/bin/python (for architecture ppc7400):     Mach-O executable ppc
"
What's an efficient way to encode a (very long) string from a dictionary? (Python),"codes = {chr(n): '[%d]' % n for n in range(255)}


def encode1(text): 
    return ''.join(codes[c] for c in text)

def encode2(text): 
    import re
    return re.sub(r'.', lambda m: codes[m.group()], text)

def encode3(text): 
    return ''.join(map(codes.get, text))


import timeit

a = 'foobarbaz' * 1000

print timeit.timeit(lambda: encode1(a), number=100)
print timeit.timeit(lambda: encode2(a), number=100)
print timeit.timeit(lambda: encode3(a), number=100)


# 0.113456964493
# 0.445501089096
# 0.0811159610748
"
How can I create the following data type in Python?,"mydata['id']['sub_id'].append('x')
mydata['id']['sub_id_2'].append('x3')
mydata['id2']['sub_id'].append('x')
mydata['id']['sub_id_2'].append('x4')
"
pandas to_csv arguments float_format and decimal not working for index column,"with open('foo.csv', 'w') as f:
    data.to_csv(f, index=True, header=True, decimal=',', sep=' ', float_format='%.3f')
"
How do I select from each column one specific index?,"In [30]:

np.diagonal(x.loc[y.values, y.index])
Out[30]:
array([0, 3, 1], dtype=int64)
"
How to use urllib to download image from web,"wget http://upload.wikimedia.org/wikipedia/en/4/44/Zindagi1976.jpg
"
Repeatedly write to STDIN and read STDOUT of a Subprocess without closing it,"stdin_handle.write(input)
stdout_handle.readline() #gets the processed input
"
May anyone explain to me why the texture doesn't show? [PyOpenGL],"    glEnable(GL_DEPTH_TEST)
    glEnable(GL_TEXTURE_2D)

    glGenTextures(len(self.textures), self.textures)
    self.genTexture('wood1', 'textures/wood1.png')
    #-----------------------------------------------------------------------

    # GLUT initialization --------------------------------------------------
    glutInit(argv)
    glutInitDisplayMode(GLUT_RGB | GLUT_DOUBLE | GLUT_DEPTH)
    glutInitWindowPosition(*self.position)
    glutInitWindowSize(*self.size)
    glutCreateWindow(title)
"
Url mapping in Google App Engine Python in multiple files,"app = webapp2.WSGIApplication([(r'/app1/myview', Handler),(r'/app1/myotherview', AnotherHandler)])
"
Find closer number of a value considering given intervals - Python,"def get_bin(n, step=0.05):
    return step * round(n / step)
"
Python: Use variable as a lookup reference in CSV and return value,"with open('test1.csv') as fin:
    csvin = csv.reader(fin)
    lookup = {row[0]: row for row in csvin}

to_find = 'x'
try:
    print '{} = {[4]}'.format(to_find, lookup[to_find])
except (KeyError, IndexError) as e:
    pass # KeyError = no lookup match, IndexError is that CSV file didn't have 5th column...
"
2D Dictionary or other data structure where order of keys doesn't matter,"In [5]: my_dict = {frozenset(['key1', 'key2']): 'foo'}

In [6]: timeit my_dict[frozenset([""key1"",""key2""])]
1000000 loops, best of 3: 380 ns per loop
"
Filtering python list of duplicated,"{d['url'] for d in store}
"
How to label the x axis in fraction numbers?,"ax.xaxis.set_major_formatter
"
Numpy: outer product of n vectors,"import numpy as np
vs = [np.r_[1,2,3.0],np.r_[4,5.0],np.r_[6,7,8.0]]
shape = map(len, vs)

 # specify the orientation of each vector
newshapes = np.diag(np.array(shape)-1)+1
reshaped = [x.reshape(y) for x,y in zip(vs, newshapes)]

# direct product
A = reduce(lambda a,b: a*b, reshaped, 1)
B = reduce(np.multiply, np.ix_(*vs))

np.all(A==B)
"
Extracting text within em tag in scrapy,"for a in response.css("".result-title a""):
     print("""".join(a.xpath("".//text()"").extract()))
"
Python Pandas: How to groupby and compare columns,"import re
import pandas


df = pandas.DataFrame([['adamant', 'Adamant Home Network', 86], ['adamant', 'ADAMANT, Ltd.', 86],
                       ['adamant bild', ""TOV Adamant-Bild"", 86], ['360works', '360WORKS', 94],
                       ['360works ', ""360works.com "", 94]], columns=['match', 'name', 'group'])


def my_function(group):
    for i, row in group.iterrows():
        if ''.join(re.findall(""[a-zA-Z]+"", row['match'])).lower() not in ''.join(
                re.findall(""[a-zA-Z]+"", row['name'])).lower():
            # parsing the names in each columns and looking for an inclusion
            # if one of the inclusion fails, we return 'FN'
            return 'FN'
    # if all inclusions succeed, we return 'TP'
    return 'TP'


res_series = df.groupby('group').apply(my_function)
res_series.name = 'count'
res_df = res_series.reset_index()
print res_df
"
Custom User's and implementations with forms,"# in file urls.py

from myapp.views import MyRegistrationView
...

urlpatterns = [
    ...
    url(r'^accounts/register/$', MyRegistrationView.as_view(), name=""registration_register""),
    ...
]
"
What is the class of this javascript button for use with selenium?,"size_button = driver.find_element_by_css_selector("".exp-pdp-size-dropdown"")
"
pandas reading dates from csv in yy-mm-dd format,"dateparse = lambda x: d(x) if d(x) < datetime.datetime.now() else d(x) - relativedelta(years=100) 
"
How to check in python if I'm in certain range of times of the day?,"import datetime
import time
timestamp = datetime.datetime.now().time() # Throw away the date information
time.sleep(1)
print (datetime.datetime.now().time() > timestamp) # >>> True (unless you ran this one second before midnight!)

# Or check if a time is between two other times
start = datetime.time(8, 30)
end = datetime.time(15)
print (start <= timestamp <= end) # >>> depends on what time it is
"
Filter sqlalchemy table update with Marshmallow schema,"from marshmallow import Schema, fields, pre_load

class BaseSchema(Schema):
    @pre_load
    def check_update_fields(self, data)
        non_update_fields = set([
            fname, fobj for fname, obj in self.fields
            if fobj.metadata.get('can_update') is False
        ])
        return {
            key: value for key, value in data.items()
            if key not in non_update_fields
        }

class UserSchema(BaseSchema):
    name = fields.Str()
    email = fields.Str(can_update=False)
"
How to count in a row results from text file,">>> count_runs_of([1, 2, 3, 3, 3, 1, 2, 2, 4, 3, 3], 3)
[3, 2]
"
Pandas: complex filtering with apply,"df_sorted = df.sort_index(ascending=False)
df[df_sorted[(pd.rolling_sum((df_sorted==0), window=2) == 2)].first_valid_index()+1:]
"
Formatting datetime variables give missing time values as 00:00:00. Using Python,"df['time'] = df.ix[df['valid_time'],'formatted_dt'].dt.time

                   raw_dt        formatted_dt valid_time      time
0  12/31/2006 11:20:00 PM 2006-12-31 23:20:00       True  23:20:00
1  12/31/2006 11:30:00 PM 2006-12-31 23:30:00       True  23:30:00
...
7   12/31/2006 4:45:00 PM 2006-12-31 16:45:00       True  16:45:00
8  12/31/2006 11:50:00 PM 2006-12-31 23:50:00       True  23:50:00
9              01/01/2007 2007-01-01 00:00:00      False       NaN
"
python can't seem to get a list to return properly,"if blackJoker in hand:
    hand.remove(blackJoker)
    return [hand + [c] for c in cards]
"
"In a list of tuples, return tuple[1] if tuple[0] is a duplicate of another tuple[0] in the list",">>> dups = list(dups.values())
"
Creating Variables Based Off A String,"print(split[0],split[1],split[2])
"
Why do we use classes in Python?,"counter = 0
def increment_counter():
    global counter
    counter += 1
def decrement_counter():
    global counter
    counter -= 1
"
How to run another process in a loop on a different thread,"self.exit = False
self.thread = threading.Thread(target=self.run, args=())
self.thread.setDaemon(True)
self.thread.start()

def run(self):
    while self.is_listening:
        cmd = ['application.exe']
        proc = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
        while proc.poll() is None or not self.exit:
            pass
        data = """"
        while True:
            if self.exit:
                break
            txt = proc.stdout.readline()
            data = txt[5:].strip()
            txt += data
"
Pygame sprites timer,"class Sprite:
    def __init__(self, ...):
        self.timer = pygame.Clock()
        # ...
    # ...
"
Numpy einsum broadcasting,"arr = np.random.random((6,2,3,4,5,6))
result = np.einsum('ijklmi->ijklm', arr)
result2 = np.einsum('i...i->i...', arr)
assert np.allclose(result, result2)
"
How can I explain the function of filter and lambda in a line of code?,"pattern = re.compile(""(?![A-Z]{2}\d{2}\s+[A-Z]{3}$)"")
foreign_numbers = [x for x in number_plates if pattern.match(x)]
"
How do I continue iterating without having to wait output to finish?,"def consumer(q):
    def helper():
        while True:
            items = [(q.get(),) for _ in range(10000)]
            conn.executemany(""INSERT INTO table VALUES (?)"", items)
            conn.commit()
    return helper
"
Tkinter Canvas move item to top level,"canvas.tag_lower(secondRect)
"
Inheritance and classes,"from module import Home


h = Home(3, 3000, 2)
h.show_info()

h2 = Home(2, 4000, 5)
h2.message = ""Second Human habitation: {} bedrooms""

h2.show_info()
"
Comparing 2 txt files and creating a new txt file from what is absent in 1 or the files,"with open('listOfFruits.txt', 'r') as f:
    fruits = set([line.rstrip() for line in f])
with open('allFruitData.txt', 'r') as f:
    data = {}
    for line in f:
        fruit = line.rstrip().split()[2]
        data[fruit] = line

fruits_not_in_file = set(data.keys()) - fruits
with open(outfile, 'w') as f:
    for fruit in fruits_not_in_lile:
        f.write(data[fruit])
"
Import list variable from separate files in python,"mylist = ['this', 'that', 'theother']
"
progress bar properties python2.72 pywinauto,"GetPosition()
GetState()
GetStep()
SetPosition(pos)
StepIt()
"
subset of array in golang,"for _,v := range *G {
    H = append(H,v)
}
"
find and replace within a filename,"for filename in ( f in os.listdir(folder) if os.path.isfile(f) ):
"
Pandas multiindex dataframe set first row in a column to 0,"In [29]: grouped = df.reset_index().groupby('B').first()

In [30]: grouped
Out[30]: 
    index  A         C
B                     
0   26576  0  1.123605
1   38311  0  0.128966
2   45135  0 -0.039886
3   38434  0 -1.284028
4   82088  0 -0.747440
..    ... ..       ...
95  82620  0 -1.197625
96  63278  0 -0.625400
97  23226  0 -0.497609
98  82520  0 -0.828773
99  35902  0 -0.199752

[100 rows x 3 columns]
"
Numpy max slow when applied to list of arrays,"%timeit np.argmax(matrix, axis=0)
%timeit np.argmax(np.vstack(matrix), axis=0)
%timeit argmax_list(matrix)
"
dealing with dimensions in scikit-learn tree.decisiontreeclassifier,"np.hsplit(np.dstack(rgb).flatten(), len(face.flatten()))
"
Is there a way to inhibit rounding in python?,"3.3219280948873623478703194294893901758648313930245806120547563958159347766086252158501397433593701550
"
Extracting a specific PIECE of a line from a textfile(Python),">>> tokens = line.split()
>>> tokens
['MECN3010', 'PREREQ', 'MECN2011', 'COREQ', 'TIMES1', 'TIMES2', 'MO3,', 'MO4,', 'FR5,', 'TH1,', 'TH2']
>>> tokens[2]
'MECN2011'
>>> tokens[5]
'TIMES2'
"
missing dimension in numpy array shape,">>> d = np.zeros((2,2,2,2))
array([[[[ 0.,  0.],
         [ 0.,  0.]],

        [[ 0.,  0.],
         [ 0.,  0.]]],


       [[[ 0.,  0.],
         [ 0.,  0.]],

        [[ 0.,  0.],
         [ 0.,  0.]]]])
>>> d.shape
(2,2,2,2)
>>> d.ndim
4
"
How to use Pandas to keep most recent data from Series with overlapping times,"In [40]: result = cycle_00z

In [41]: result = cycle_02z.combine_first(result)

In [42]: result = cycle_04z.combine_first(result)

In [43]: result
Out[43]: 
2015-01-01 00:00:00    10
2015-01-01 01:00:00    10
2015-01-01 02:00:00    20
2015-01-01 03:00:00    20
2015-01-01 04:00:00    30
2015-01-01 05:00:00    30
2015-01-01 06:00:00    30
2015-01-01 07:00:00    30
Freq: H, dtype: float64
"
How do you scroll a GridLayout inside Kivy ScrollView?,"# main.py

class Controller(FloatLayout):
    layout_content=ObjectProperty(None)

    def __init__(self, **kwargs):
        super(Controller, self).__init__(**kwargs)
        self.layout_content.bind(minimum_height=self.layout_content.setter('height'))
"
Parallel Processing Issue in Python,"parallel --round --pipepart -a Input.txt --fifo python A.py {} -c {#}.csv
"
Clean code for sequence of map/filter/reduce functions,"In [16]: xx = Mylist([1,2,3])

In [17]: xx.map(lambda m: m*2).map(lambda m: m**2)
Out[17]: [4, 16, 36]
"
How to read file capabilities using Python?,">>> import struct
>>> caps = '\x00\x00\x00\x02\x00 \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
>>> struct.unpack(""<IIIII"", caps)
(33554432, 8192, 0, 0, 0)
"
Google App Engine: Storing images in database (Python),"webapp2.Route(r'/file_upload', handler='fileupload.FileUpload')
"
Django sum of row in template for loop,"<span id=""total"">{{ quote.total }}</span>
"
Can't load python extension module that exists,"upper_folder (a folder)
    cutils_ext (folder)
        __init__.py (file)
        cutils_ext.so (obviously file)
"
Django: How to create forms for each element on the page?,"var form = $('.form'); // Your forms selector
form.on('submit', function(e){
    var self = $(this),
        post_id = self.attr('data-post-id');

    $.ajax({
      url: ""/some-backend-url/"",
      method: 'POST',
      data: {
         post_id: post_id,
         text: $('input.text', self).val(),
         title: $('input.title', self).val(),
      },
      dataType: 'json'
    }).done(function(response) {
      // Some callback here.
    });
});
"
Python Pandas - How to flatten a hierarchical index in columns,"df.columns = df.columns.get_level_values(0)
"
Deleting Session Variables Django,"request.session['selected_courses'] = {
   '2': [ {'first_name': 'Jon', 'last_name': 'Kan'}, ... ]
}
"
Reorganizing a Pandas DataFrame,"         Sample    Signal
231   TGBb_0m-1  2.329916
237   TGBb_0m-3  1.836953
225   TGBb_0m-2  1.943295
233  TGBb_15m-1  3.892828
227  TGBb_15m-2  1.713407
238  TGBb_15m-3  2.208754
228  TGBb_30m-2  2.524867
234  TGBb_30m-1  2.380105
239  TGBb_30m-3  1.561843
229  TGBb_45m-2  2.776531
235  TGBb_45m-1  2.667500
240  TGBb_45m-3  2.613384
226   TGBb_5m-2  4.659431
232   TGBb_5m-1  1.916303
236  TGBb_90m-1  2.377786
230  TGBb_90m-2  2.196248
241  TGBb_90m-3  2.081838
"
"SQLALchemy ""after_insert"" doesn't update target object fields"," # Event methods
def __commit_update__(self):

    # create a new db session, which avoids the ResourceClosedError
    session = create_db_session()

    from techmuseum.modules.sensors.models import SoundsRaw
    # Get the SoundsRaw record by uuid (self contains the object being updated, 
    # but we can't just update/commit self -- we'd get a ResourceClosedError)
    sound = session.query(SoundsRaw).filter_by(uuid=self.uuid).first()

    # Extract text from audio file
    audio_text = compute_text_from_audio_file(sound)

    # Update the 'text' field of the sound
    sound.text = audio_text

    # Commit the update to the sound
    session.add(sound)
    session.commit()

def create_db_session():
    # create a new Session
    from sqlalchemy import create_engine
    from sqlalchemy.orm import sessionmaker

    psql_url = app.config['SQLALCHEMY_DATABASE_URI']
    some_engine = create_engine(psql_url)

    # create a configured ""Session"" class
    session = sessionmaker(bind=some_engine)

    return session
"
Output issue calculating moving average,"nan = float('nan')

def calculate(prices, size=2):
    '''Calculates the moving average and generates a signal strategy for buy or sell
       strategy given a list of stock date and price. '''

    averages = [nan]*(size-1) + moving_average(prices, size)
    previous_prices = ([nan] + prices)[:-1]
    previous_averages = ([nan] + averages)[:-1]

    signal = []
    for price, ave, prev_price, prev_ave in zip(
        prices, averages, previous_prices, previous_averages):
        if price > ave and prev_price < prev_ave:
            signal.append('BUY')
        elif price < ave and prev_price > prev_ave:
            signal.append('SELL')
        else:
            signal.append('')
    return averages, signal


def window(seq, n=2):
    """"""
    Returns a sliding window (of width n) over data from the sequence
    s -> (s0,s1,...s[n-1]), (s1,s2,...,sn), ...
    """"""
    for i in xrange(len(seq) - n + 1):
        yield tuple(seq[i:i + n])


def moving_average(data, size):
    return [(sum(grp)/len(grp)) for grp in window(data, n=size)]

def report(*args):
    for row in zip(*args):
        print(''.join(map('{:>10}'.format, row)))

dates = ['2012-10-01',
 '2012-10-02',
 '2012-10-03',
 '2012-10-04',
 '2012-10-05',
 '2012-10-08',
 '2012-10-09',
 '2012-10-10',
 '2012-10-11',
 '2012-10-12',
 '2012-10-15',
 '2012-10-16',
 '2012-10-17',
 '2012-10-18',
 '2012-10-19',
 '2012-10-22',
 '2012-10-23',
 '2012-10-24']

prices = [659.38999999999999,
        661.30999999999995,
        671.45000000000005,
        666.79999999999995,
        652.59000000000003,
        638.16999999999996,
        635.85000000000002,
        640.90999999999997,
        628.10000000000002,
        629.71000000000004,
        634.75999999999999,
        649.78999999999996,
        644.61000000000001,
        632.63999999999999,
        609.84000000000003,
        634.02999999999997,
        613.36000000000001,
        616.83000000000004]

averages, signals = calculate(prices, size=10)
report(dates, prices, averages, signals)
"
"web2py, one to many, not required relationship","Field('user_id', 'reference auth_user', requires=None)
"
How to dynamically update values to arguments in Python loop?,"   field_name 
  /
{i:0>3d}
    \\\\
     \\\`-type (""d"" means integer)
      \\`-width 
       \`-alignment ("">"" means right adjust)
        `-fill character
"
How to find actual unique values in pandas DataFrame that match a regex,"   In [143] df[df.column_a.str.contains(r'\bwar.*')]
   Out [143]
   0     warsaw
   2   warszawa
   4    warsawa
   10  warschau
"
matplotlib axes formatting,"def timerEvent(self, evt):
        # get the cpu percentage usage
        result = self.get_cpu_usage()
        # append new data to the datasets
        self.user.append(result[0])
        #save the current time
        self.timeStamp.append(datetime.now())
        # update lines data using the lists with new data
        self.l_user.set_data(self.timeStamp, self.user)
        #rescale the x axis maintaining a 5 minutes window
        self.ax.set_xlim([datetime.now()-timedelta(seconds=5*60),datetime.now()])
        # force a redraw of the Figure, this might not update the x axis limits??
        self.fig.canvas.draw()
           #else, we increment the counter
        self.cnt += 1
"
upload an image and a label with Flask,"@app.route('/show')
def show_pic():
filename = request.args.get('filename', '')
t = (filename,)
cur = g.db.execute('select label from pics where filename=?', t)
label = cur.fetchone()[0]

return render_template('upload.html', filename=filename, label=label)
"
arrange values in a python 2D array,"for name, values in groupby(data, itemgetter(0)):
    first, second = zip(*values)[1:3]
    print name, max(first), min(second)
"
Pretty-printing of numpy.array,"import numpy as np
x=np.random.random(10)
print(x)
# [ 0.07837821  0.48002108  0.41274116  0.82993414  0.77610352  0.1023732
#   0.51303098  0.4617183   0.33487207  0.71162095]

np.set_printoptions(precision=3)
print(x)
# [ 0.078  0.48   0.413  0.83   0.776  0.102  0.513  0.462  0.335  0.712]
"
Duplicating random visual stimuli in Python/Psychopy,"if r.random() < 0.5:
    drawSet(pics,location)
else:
    drawSet(targetset,location)
"
How to auto insert the current user when creating an object in django admin?,"from myapplication.essay.models import Essay
from django.contrib import admin

class EssayAdmin(admin.ModelAdmin):
    list_display = ('title', 'author')
    fieldsets = [
        (None, { 'fields': [('title','body')] } ),
    ]

    def save_model(self, request, obj, form, change):
        if getattr(obj, 'author', None) is None:
            obj.author = request.user
        obj.save()
"
Parsing for Column Headings in Excel worksheet with Python,"for v in sheet.row_values(i)
if isinstance(v, basestring)
"
Can't get simple loop working right,"testPath = os.path.splitext(files)[0]
"
Python pandas: accumulate data frame rows by condition,"# create some random data
df =pd.DataFrame({'letter': list('qwertyuiopasdfghjklzxcvbnm'),'value': np.random.randint(1,15,26)})
"
how to filter given two datefields if they coincide with a from and to date in a model django,"SampleModel.objects.filter(to_date__gte=date1, from_date__lte=date2)
"
"Why is (numpy.nan, 1) == (numpy.nan, 1)?","for (i = 0; i < vlen && i < wlen; i++) {
    int k = PyObject_RichCompareBool(vt->ob_item[i],
                                     wt->ob_item[i], Py_EQ);
    if (k < 0)
        return NULL;
    if (!k)
        break;
}
"
"Class 'list' does not define '__mod__', so the '%' operator cannot be used","env.hosts = [""{}"".format(server_ip_var)]
"
How do I make a contextmanager with a loop inside?,"before
1
code
after
before
2
code
after
before
3
code
after
"
matplotlib raw string line break in code,">>> ""a"" + ""b""
'ab'
>>> ""a"" ""b""
'ab'
"
Anyway to reset a mocked method to its original state? - Python Mock - mock 1.0b1,"import unittest

from mock import MagicMock
from MyClass import MyClass

class FirstTest(unittest.TestCase):

    def setUp(self):
        self.A = MyClass.A
        MyClass.A = MagicMock(name='mocked A', return_value='CPU')


    def tearDown(self):
        MyClass.A = self.A

    def test_mocked_static_method(self):
        print 'First Test'
        print MyClass.check
        print MyClass.A


class SecondTest(unittest.TestCase):

    def setUp(self):
        MyClass.check = MagicMock(name='mocked check', return_value=object)

    def test_check_mocked_check_method(self):
        print 'Second Test'
        print MyClass.check
        print MyClass.A


if __name__ == '__main__':
    unittest.main()
"
Extrapolate values in Pandas DataFrame,"import pandas as pd
from cStringIO import StringIO
from scipy.optimize import curve_fit

df = pd.read_table(StringIO('''
                neg       neu       pos       avg
    0           NaN       NaN       NaN       NaN
    250    0.508475  0.527027  0.641292  0.558931
    500         NaN       NaN       NaN       NaN
    1000   0.650000  0.571429  0.653983  0.625137
    2000        NaN       NaN       NaN       NaN
    3000   0.619718  0.663158  0.665468  0.649448
    4000        NaN       NaN       NaN       NaN
    6000        NaN       NaN       NaN       NaN
    8000        NaN       NaN       NaN       NaN
    10000       NaN       NaN       NaN       NaN
    20000       NaN       NaN       NaN       NaN
    30000       NaN       NaN       NaN       NaN
    50000       NaN       NaN       NaN       NaN'''), sep='\s+')

# Do the original interpolation
df.interpolate(method='nearest', xis=0, inplace=True)

# Display result
print 'Interpolated data:'
print df
print

# Function to curve fit to the data
def func(x, a, b, c, d):
    return a * (x ** 3) + b * (x ** 2) + c * x + d

# Initial parameter guess, just to kick off the optimization
guess = (0.5, 0.5, 0.5, 0.5)

# Create copy of data to remove NaNs for curve fitting
fit_df = df.dropna()

# Place to store function parameters for each column
col_params = {}

# Curve fit each column
for col in fit_df.columns:
    # Get x & y
    x = fit_df.index.astype(float).values
    y = fit_df[col].values
    # Curve fit column and get curve parameters
    params = curve_fit(func, x, y, guess)
    # Store optimized parameters
    col_params[col] = params[0]

# Extrapolate each column
for col in df.columns:
    # Get the index values for NaNs in the column
    x = df[pd.isnull(df[col])].index.astype(float).values
    # Extrapolate those points with the fitted function
    df[col][x] = func(x, *col_params[col])

# Display result
print 'Extrapolated data:'
print df
print

print 'Data was extrapolated with these column functions:'
for col in col_params:
    print 'f_{}(x) = {:0.3e} x^3 + {:0.3e} x^2 + {:0.4f} x + {:0.4f}'.format(col, *col_params[col])
"
Implementing a full Python Unix-style daemon process,"#!/usr/bin/env python

import sys, os, time, atexit
from signal import SIGTERM

class Daemon:
        """"""
        A generic daemon class.

        Usage: subclass the Daemon class and override the run() method
        """"""
        def __init__(self, pidfile, stdin='/dev/null', stdout='/dev/null', stderr='/dev/null'):
                self.stdin = stdin
                self.stdout = stdout
                self.stderr = stderr
                self.pidfile = pidfile

        def daemonize(self):
                """"""
                do the UNIX double-fork magic, see Stevens' ""Advanced
                Programming in the UNIX Environment"" for details (ISBN 0201563177)
                http://www.erlenstar.demon.co.uk/unix/faq_2.html#SEC16
                """"""
                try:
                        pid = os.fork()
                        if pid > 0:
                                # exit first parent
                                sys.exit(0)
                except OSError, e:
                        sys.stderr.write(""fork #1 failed: %d (%s)\n"" % (e.errno, e.strerror))
                        sys.exit(1)

                # decouple from parent environment
                os.chdir(""/"")
                os.setsid()
                os.umask(0)

                # do second fork
                try:
                        pid = os.fork()
                        if pid > 0:
                                # exit from second parent
                                sys.exit(0)
                except OSError, e:
                        sys.stderr.write(""fork #2 failed: %d (%s)\n"" % (e.errno, e.strerror))
                        sys.exit(1)

                # redirect standard file descriptors
                sys.stdout.flush()
                sys.stderr.flush()
                si = file(self.stdin, 'r')
                so = file(self.stdout, 'a+')
                se = file(self.stderr, 'a+', 0)
                os.dup2(si.fileno(), sys.stdin.fileno())
                os.dup2(so.fileno(), sys.stdout.fileno())
                os.dup2(se.fileno(), sys.stderr.fileno())

                # write pidfile
                atexit.register(self.delpid)
                pid = str(os.getpid())
                file(self.pidfile,'w+').write(""%s\n"" % pid)

        def delpid(self):
                os.remove(self.pidfile)

        def start(self):
                """"""
                Start the daemon
                """"""
                # Check for a pidfile to see if the daemon already runs
                try:
                        pf = file(self.pidfile,'r')
                        pid = int(pf.read().strip())
                        pf.close()
                except IOError:
                        pid = None

                if pid:
                        message = ""pidfile %s already exist. Daemon already running?\n""
                        sys.stderr.write(message % self.pidfile)
                        sys.exit(1)

                # Start the daemon
                self.daemonize()
                self.run()

        def stop(self):
                """"""
                Stop the daemon
                """"""
                # Get the pid from the pidfile
                try:
                        pf = file(self.pidfile,'r')
                        pid = int(pf.read().strip())
                        pf.close()
                except IOError:
                        pid = None

                if not pid:
                        message = ""pidfile %s does not exist. Daemon not running?\n""
                        sys.stderr.write(message % self.pidfile)
                        return # not an error in a restart

                # Try killing the daemon process       
                try:
                        while 1:
                                os.kill(pid, SIGTERM)
                                time.sleep(0.1)
                except OSError, err:
                        err = str(err)
                        if err.find(""No such process"") > 0:
                                if os.path.exists(self.pidfile):
                                        os.remove(self.pidfile)
                        else:
                                print str(err)
                                sys.exit(1)

        def restart(self):
                """"""
                Restart the daemon
                """"""
                self.stop()
                self.start()

        def run(self):
                """"""
                You should override this method when you subclass Daemon. It will be called after the process has been
            daemonized by start() or restart().
                """"""
"
Longest strings from list,"longest_strings = [s for s in stringlist if len(s) == maxlength]
"
How to merge rows in DataFrame according to unique elements and get averages?,"In [48]:

avg = df.groupby(['day','hour'])['price'].mean().reset_index()
avg.rename(columns={'price':'avg_price'},inplace=True)
avg
Out[48]:
       day  hour  avg_price
0   monday     7       13.5
1   monday     8       12.5
2  tuesday     7       13.0
3  tuesday     8       14.0
"
Remove empty 'rows' and 'columns' from 3D numpy pixel array,"In [3]: mask = im == 0

In [4]: mask
Out[4]:
array([[ True,  True,  True,  True,  True,  True],
       [ True,  True, False, False, False,  True],
       [ True, False, False,  True, False,  True],
       [ True,  True,  True, False, False,  True],
       [ True,  True,  True,  True,  True,  True]], dtype=bool)
"
Creating minimal LaTeX syntax from reStructuredText with docutils,"self.context.append('}\n')
"
M2Crypto RSA.sign vs OpenSSL rsautl -sign,"echo -n ""test"" | openssl md5 -sign privkey.pem > sig_openssel
"
How can i get .text section from PE file using pefile,">>> pe.sections[0].get_data()[:10]
'\x81\xec\x90\x00\x00\x00j>\x8dD'
"
Difference between local and global variables in python,"def altera(L1, L2):
    for elemento in L2:
        # Call method on L1 that changes it
        L1.append(elemento)
    # Call method on L2 that changes it
    L2.append(4)
    # Change object pointed to by name L1 -- Lista1
    L1[-1] = 10
    # Change object pointed to by name L2 -- Lista2
    del L2[0]
    return L2[:]

Lista1 = [1,2,3]
Lista2 = [1,2,3]

Lista3 = altera(Lista1, Lista2)

print Lista1
print Lista2
print Lista3
"
App Engine - Python - Open local HTML file from script,"# helloworld.py
import webapp2

class MainPage(webapp2.RequestHandler):

    def get(self):
        self.response.headers['Content-Type'] = 'text/plain'
        self.response.write('Hello, World!')

class GoodbyePage(webapp2.RequestHandler):

    def get(self):
        self.response.headers['Content-Type'] = 'text/plain'
        self.response.write('Goodbye, World.  Time to sleep.')

application = webapp2.WSGIApplication([
    ('/', MainPage),
    ('/goodbye', GoodbyePage),
], debug=True)
"
Python - How to copy content of USB(Flash) to system directory,"#!/bin/bash
python /home/user/path/code_to_copy.py
"
basic python module design question,"BASE = 'http://www.whatever.com'
"
Python ConfigParser: how to work out options set in a specific section (rather than defaults),"[DEFAULT]
name = a
surname = b

[Section 1]
name  = section 1 name
age = 23
#we should get a surname value from defaults

[Section 2]
name = section 2 name
surname = section 2 surname
age = 24
"
sql query in python--debugging appending values,"  if row[0] != checkID:
        if output != """":
            print output, ""this is a test""

            checkID=row[0]
            output=row[0:11]


    else:
        output=output + (row[8:11])
"
Speed up python loop,"mag_list = [value for value in var_s[4::3] if value != 99.]
"
Starting and stopping processes in a cluster,"from fabric.api import env, run, hide # pip install fabric

def all_hosts():
    env.hosts = ['host1', 'host2', 'host3']

def start(daemon):
    run(""twistd --pid %s.pid %s"" % (daemon, daemon))

def stop(daemon):
    run(""kill %s"" % getpid(daemon))

def getpid(daemon):
    with hide('stdout'):
        return run(""cat %s.pid"" % daemon)

def ps(daemon):
    """"""Get process info for the `daemon`.""""""
    run(""ps --pid %s"" % getpid(daemon))
"
Parsing text file in python using pyparsing,"# section defined with nesting
section = ident + nestedExpr()
"
How to parse block data from a text file into an 2D array in Python?,"latitudes = []
counts = []
blocks = []
current_block = []
for line in test:
    print line
    if line.startswith(""latitude""):
        # New block: add the previous one to `blocks` and reset
        blocks.append(current_block)
        current_block = []
        latitudes.append(float(line.split()[-1]))
    elif line.startswith(""number_of_data""):
        # Just append the current count to the list
        counts.append(int(line.split()[-1]))
    else:
        # Update the current block
        current_block += [float(f) for f in line.strip().split()]
# Make sure to add the last block...
blocks.append(current_block)
# And to remove the first (empty) one
blocks.pop(0)
"
sqlalchemy multiple foreignkey,"
class Parent(Base):
    __tablename__ = 'parent'
    id = Column(Integer, primary_key=True)
    children = relationship(""Child"")

class Child(Base):
    __tablename__ = 'child'
    id = Column(Integer, primary_key=True)
    parent_id = Column(Integer, ForeignKey('parent.id'))
"
How to get a faster speed when using multi-threading in python,"current_post.mode == ""Process""  (multiprocessing)  --> 0.2609 seconds
current_post.mode == ""Multiple"" (threading)        --> 0.3947 seconds
current_post.mode == ""Simple""   (serial execution) --> 1.650 seconds
"
How to build a new list from a list in Python?,"class Widget:
    def __init__(self, value):
        self.value = value

a = [Widget(4), Widget(8), Widget(15)]
b = a[0:1]

print a[0] is b[0]
"
Regex expression after quotation on python,">>> tests = [
    '''I'm listening to ""Don't Turn Out The Lights (D.T.O.T.L.)"" by NKOTBSB on #Pandora''',
    '''I'm listening to G.O.D. Remix by Canton Jones on #Pandora''',
    '''I'm listening to ""It's Been Awhile"" by @staindmusic on Pandora #pandora http://pdora.co/R1OdxE''',
    '''I'm listening to ""Everlong"" by @foofighters on #Pandora http://pdora.co/1eANfI0''',
    '''I'm listening to ""El Preso (2000)"" by Fruko Y Sus Tesos on #Pandora http://pdora.co/1GtOHC1'''
    '''I'm listening to ""Cat Daddy"" by Rej3ctz on #Pandora http://pdora.co/1eALNpc''',
    '''I'm listening to ""Space Age Pimpin'"" by 8 Ball & MJG on Pandora #pandora http://pdora.co/1h8swun'''
]
>>> expr = re.compile('to ""?(.*?)""? by (.*?) on #?Pandora')
>>> for s in tests:
        print(expr.search(s).groups())

(""Don't Turn Out The Lights (D.T.O.T.L.)"", 'NKOTBSB')
('G.O.D. Remix', 'Canton Jones')
(""It's Been Awhile"", '@staindmusic')
('Everlong', '@foofighters')
('El Preso (2000)', 'Fruko Y Sus Tesos')
(""Space Age Pimpin'"", '8 Ball & MJG')
"
Converting unicode to Chinese,"
>>> text = u'''我今天的<em class=""hot"">心情</em>不好。<br/> I'm feeling blue today.'''
>>> print u''.join(c for c in text if unicodedata.name(c).startswith('CJK'))
我今天的心情不好
"
How to choose value from an option list using PyQt4.QtWebKit,"doc = webview.page().mainFrame().documentElement()
select = doc.findFirst('select[name=""birthday_m""]')
"
Combine two columns to a datetime in pandas,"print (np.array(df.year.astype(str),dtype='datetime64[Y]') 
       + np.array(df.qtr*3,dtype='timedelta64[M]'))

['1990-10' '1991-01' '1991-04' '1991-07' '1991-10']
"
file.write only performed upon exit of an interactive python session?,"In [18]: with open('outfile','w') as out:
   ....:     out.write(""test"")
   ....:        
In [19]: !ls -l outfile
-rw-rw-r-- 1 padraic padraic 4 Jun 10 22:43 outfile
"
Python inherited base class variables,"class Base(object):
    __model__ = None
    def __init__(self):
        self.headers = []

    def add_header(self, *args):
        for h in args:
            self.headers.append(h)

    def set_header_values(self):
        for h in self.headers:
            setattr(self, h, getattr(self.__model__, h))


class ChildOne(Base):
    def __init__(self, model):
        super(ChildOne, self).__init__()
        self.__model__ = model


class ChildTwo(Base):
    def __init__(self, model):
        super(ChildTwo, self).__init__()
        self.__model__ = model


class Model(object):
    foo = 'bar'

m = Model()
a = ChildOne(m)
b = ChildTwo(m)
a.add_header('tralala')
print a.headers
print b.headers 
"
string.template with arrays as placeholders,"info = {'id': 'my_id'}
output = """"""<div class=""form-group"" id=""{id}_container"">"""""".format(**info)
"
List index out of range even though I'm asking for [0]?,"import random

def logic(start, limit):
    while True:
        guess = random.randint(start, limit)
        print 'Is your number %i?' % guess
        answer = raw_input('Too high (h), too low (l) or true (t)?\n')
        if answer.lower() == 'h':
            limit = guess - 1
            if limit < start:
                print ""I give up, I've run out of options""
                return
        elif answer.lower() == 'l':
            start = guess + 1
            if start > limit:
                print ""I give up, I've run out of options""
                return
        elif answer.lower() == 't':
            return 'Your number was %i' % guess
"
Matplotlib logarithmic scale with zero value,"import matplotlib.pyplot as plt
import numpy as np
import matplotlib.ticker as ticker

fig, ax = plt.subplots()
x = [0, 10, 100, 1000]
y = [100, 20, 10, 50]
x = np.asarray(x) + 1 
y = np.asarray(y)
ax.plot(x, y)
ax.set_xscale('log')
ax.set_xlim(x.min(), x.max())
ax.xaxis.set_major_formatter(ticker.FuncFormatter(lambda x, pos: '{0:g}'.format(x-1)))
ax.xaxis.set_major_locator(ticker.FixedLocator(x))
plt.show()
"
Calculator 7 Segment Display w/ Width,"class SSDigit(object):
    """"""A 7-segment digit""""""
    def __init__(self):
        self.lines= []

ssdig0= SSDigit()
ssdig1.lines.append(""     "")
ssdig0.lines.append(""  -  "")
ssdig0.lines.append("" | | "")
ssdig0.lines.append(""     "")
ssdig0.lines.append("" | | "")
ssdig0.lines.append(""  -  "")
ssdig1.lines.append(""     "")

ssdig1= SSDigit()
ssdig1.lines.append(""     "")
ssdig1.lines.append(""     "")
ssdig1.lines.append(""   | "")
ssdig1.lines.append(""     "")
ssdig1.lines.append(""   | "")
ssdig1.lines.append(""     "")
ssdig1.lines.append(""     "")

.....

class LineType(object):
    """"""Each of the 2 line types (1 horizontal segment or 2 vertical),
       with their possible representations and segment positions""""""
    def __init__(self):
        self.valueForRepr= {}
        self.segmentPos= []

class Line(object):
    """"""Each of the 5 lines a SSDigit has, with its LineType""""""
    def __init__(self):
        self.type= None

digits= [ ssdig0, ssdig1, ssdig2, ssdig3, ssdig4, ssdig5, ssdig6, ssdig7, ssdig8, ssdig9 ]

linetype1= LineType()
linetype1.valueForRepr[""     ""]= [0]
linetype1.valueForRepr[""  -  ""]= [1]
linetype1.segmentPos= [3]

linetype2= LineType()
linetype2.valueForRepr[""     ""]= [0,0]
linetype2.valueForRepr[""   | ""]= [0,1]
linetype2.valueForRepr["" |   ""]= [1,0]
linetype2.valueForRepr["" | | ""]= [1,1]
linetype2.segmentPos= [2,4]

typeforline= [ linetype1, linetype2, linetype1, linetype2, linetype1 ]

# Validate error-prone typing !!!
for digit in digits :
    for linenum, linetype in enumerate(typeforline) :
        if digit.lines[linenum] not in linetype.valueForRepr :
            print(""Error in digit {:d}, line {:d}"".format(digit,linenum))

def printNumber(num):
    num= str(num)
    for linenum, linetype in enumerate(typeforline) :
        line= """"
        for d in num :
            line+= digits[int(d)].lines[linenum]
        print( line )

printNumber(3475649560458)
"
python decorator for field,"class GroupedAttribute(object):
    def __init__(self, group, obj):
        self.group = group
        self.obj = obj
    def __get__(self, obj, owner):
        return self.obj
    def __set__(self, obj, value):
        self.obj = value

class AttributeGroup(object):
    def __call__(self, obj):
        return GroupedAttribute(self, obj)
    def __get__(self, obj, owner):
        return BoundAttributeGroup(self, obj, owner)

class BoundAttributeGroup(object):
    def __init__(self, group, obj, owner):
        self.group = group
        self.obj = obj
        self.owner = owner
    def __dir__(self):
        items = dir(self.owner if self.obj is None else self.obj)
        return [item for item in items if
                getattr(self.owner.__dict__.get(item, None),
                        'group', None) is self.group]
"
Jumbled out put of RFID Tags,"import threading,time,serial

#subclass threading.Thread
class RFIDSerialThread(threading.Thread):
    SLEEP_TIME = 0.001 #setup sleep time (update speed)
    #constructor with 3 parameters: serial port, baud and a label for this reader so it's easy to spot
    def __init__(self,port,baud,name): 
        threading.Thread.__init__(self) #initialize this instance as a thread
        self.isAlive = False #keep track if the thread needs to run(is setup and able to go) or not
        self.name = name     #potentially handy for debugging
        self.data = """"       #a placeholder for the data read via serial
        self.station = None  #the serial object property/variable
        try:
            self.station = serial.Serial(port,baud,timeout=0) #attempt to initialize serial
            self.isAlive = True #and flag the thread as running
        except Exception,e: 
            print name + "" is Down"",e #in case of errors print the message, including the station/serial port

    def run(self): #this gets executed when the thread is started
        while self.isAlive:
            if self.station != None:    self.data = self.station.read(12) #read serial data
            time.sleep(RFIDSerialThread.SLEEP_TIME)

if __name__ == '__main__':
    #initialize the two readers
    station1 = RFIDSerialThread('/dev/ttyUSB0',9600,""station #1"")
    station2 = RFIDSerialThread('/dev/ttyUSB1',9600,""station #2"")
    #start the threads
    station1.start()
    station2.start()

    while True:#continously print the data (if any)
        if len(station1.data) > 0:  print station1.name,station1.data
        if len(station2.data) > 0:  print station2.name,station2.data
"
How do I create a list from a column of a file?,"hello,hi,bye
wow,nice,good
....
"
How to print an object in Python,"class Detail:
    def __str__(self):
        return ""string shown to users (on str and print)""
    def __repr__(self):
        return ""string shown to developers (at REPL)""
"
multiple iteration through python dictionary,"results = [item['green'] for item in D['b']]
# ['second', 'fourth']
"
decision trees from features of multiple datatypes,"from sklearn.preprocessing import LabelBinarizer
from sklearn.tree import DecisionTreeClassifier
import numpy as np
"
django object get two fields into a list from a model,"PagerDuty.objects.create(
    user=User.objects.get(username='bob'),  # or create a new user
    mobile='...',
    # policy=PagerDutyPolicy.objects.get(policy_name='Team 1')  # or..
    policy=PagerDutyPolicy.objects.get(id=232)
)
"
A copy of a list is altered on operations on the original list,"bak.append(x[:])
"
How to extract start and end sites based on capital letter in a sequence?,"[('BEST1_HUMAN', '150', 'GGAAAggccc'), ('4F2_HUMAN', '365', 'gggacCTACA')]
"
Edge detection of histogram - python,">>> a=range(1000)
>>> n,b,p=plt.hist(a)
>>> p[0]
<matplotlib.patches.Rectangle object at 0x026E1070>
>>> p[0].get_height()
100
>>> p[0].set_height(19)
>>> plt.show()
>>> n_adjusted #your new n
>>> for i1, i2 in zip(p, n_adjusted):
        i1.set_height(i2)
"
python head and tail in one line,">>> head, *tail = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55]
>>> head
1
>>> tail
[1, 2, 3, 5, 8, 13, 21, 34, 55]
"
Split the result of 'counter',"In [5]: [list(item) for item in cnt.iteritems()]
Out[5]: [[1, 868], [2, 1462], [3, 1575], [4, 1161], [5, 1159], [6, 1359]]
"
extracting hashtags out of Twitter trending topics data with Python Tweepy,"In [180]:

[x for x in temp[0]['trends'] if x['name'].find('#') ==0]
Out[180]:
[{'name': '#FETUSONEDIRECTIONDAY',
  'promoted_content': None,
  'query': '%23FETUSONEDIRECTIONDAY',
  'url': 'http://twitter.com/search?q=%23FETUSONEDIRECTIONDAY'},
 {'name': '#PrayForSouthKorea',
  'promoted_content': None,
  'query': '%23PrayForSouthKorea',
  'url': 'http://twitter.com/search?q=%23PrayForSouthKorea'},
 {'name': '#GaraGaraRP',
  'promoted_content': None,
  'query': '%23GaraGaraRP',
  'url': 'http://twitter.com/search?q=%23GaraGaraRP'},
 {'name': '#إسم_أمي_بجوالي',
  'promoted_content': None,
  'query': '%23%D8%A5%D8%B3%D9%85_%D8%A3%D9%85%D9%8A_%D8%A8%D8%AC%D9%88%D8%A7%D9%84%D9%8A',
  'url': 'http://twitter.com/search?q=%23%D8%A5%D8%B3%D9%85_%D8%A3%D9%85%D9%8A_%D8%A8%D8%AC%D9%88%D8%A7%D9%84%D9%8A'},
 {'name': '#KadınlarKamyonŞoförüOlursa',
  'promoted_content': None,
  'query': '%23Kad%C4%B1nlarKamyon%C5%9Eof%C3%B6r%C3%BCOlursa',
  'url': 'http://twitter.com/search?q=%23Kad%C4%B1nlarKamyon%C5%9Eof%C3%B6r%C3%BCOlursa'}]
"
Spearman rank correlation in Python with ties,">>> scipy.stats.pearsonr([1, 2, 2], [2, 1, 3])
(0.0, 1.0)
>>> scipy.stats.pearsonr([1, 2.5, 2.5], [2, 1, 3])
(0.0, 1.0)
"
Is it better to use globals or pass in arguments to map functions?,"parsed_data = course_data.map(parse_requests_for_map)
"
Append only numbers to a list from a mixed file,"total_us = []

with open('somefile.txt') as f:
    for line in f:
        if line.strip():
            bits = line.split('\t')
            total_us.append(bits[0])

print(total_us)
"
Creating new text files with names from an array in Python,"for file in macTable:
    open(file, 'w')
"
Sum a nested list of a nested list of a nested list of integers,">>> lis = [1, [1, [2, [3]]]]
>>> sum(flatten(lis))
7
>>> lis = [1, [1, 2, 3]]
>>> sum(flatten(lis))
7
>>> lis = [1, [1, [2, 3]]]
>>> sum(flatten(lis))
7
"
Perfect regex for extracting url with re.findall(),"http[s]?:\/\/(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+
"
element wise matrix multiplication python,"for matrix in ttranspose:
    Q_by_transpose_ind = np.matmul(ttranspose, Qmatrix)
    Q_by_transpose.append(Q_by_transpose_ind)
"
sort string by number inside,"sorted(l, key=lambda x: int(re.sub('\D', '', x)))
"
Cannot forward an email with attachments using imap and smtplib,"server.sendmail(from_address, to_addresses, message.mail.as_string())
"
reshape an array of images,"images.transpose([2,0,1])  # instead of the default [2,1,0]
"
Python - packing/unpacking by letters,"regex = re.compile(r'(.)\1+')

def replacer(match):
    return match.group(1) + str(len(match.group(0)))

regex.sub(replacer, 'aaabbkka')
#=> 'a3b2k2a'
"
How to compare 2 txt files in Python,"with open('temp.log') as temp:
    temp.write('Temporary logging.')

# equal to:

temp = open('temp.log')
temp.write('Temporary logging.')
temp.close()
"
HTML/Javascript/CSS GUI for the development of desktop applications with python?,"function showMore() {
  document.getElementById(""more-text"").hidden = false;
}
"
Working in Pandas with variable names with a common suffix,"print df.columns.str[0].unique()
['a' 'b' 'c']
"
Regular Expressions: Match up to a word or a maximum number of words,"luna park
capital city of
moon
"
Access Request Parameters in invoked script of Python CGIHTTPServer,"('QUERY_STRING', 'cpus=128&cpumillis=60') 
"
"Is there an ""enhanced"" numpy/scipy dot method?",">>> c = NP.ones((4, 3))
>>> c.flags
      C_CONTIGUOUS : True          # refers to C-contiguous order
      F_CONTIGUOUS : False         # fortran-contiguous
      OWNDATA : True
      MASKNA : False
      OWNMASKNA : False
      WRITEABLE : True
      ALIGNED : True
      UPDATEIFCOPY : False
"
How to change the pixel color of a PhotoImage python,"self.button = Button(self, text=""Change Colors"", command=self.changeColor(self._image))
"
How to determine which instance of an operator is being called?,"if type(y) is type(x):
    return x.__mul__(y)
elif type(y) is a subclass of type(x):
    try y.__rmul__(x)
    otherwise x.__mul__(y)
else:
    try x.__mul__(y)
    otherwise y.__rmul__(x)
"
How to create lambda's from Python/C,"  1           0 LOAD_CONST               0 (None)
              3 RETURN_VALUE        
"
Converting numpy array to categories,"sd = arr.std()
m = arr.mean()
>>> pd.cut(arr, [m - sd* 10000, m - sd * 2, m - sd, m + sd, m + sd *2, m + sd* 10000])
[(0.204, 0.785], (0.204, 0.785], (0.785, 1.0764], (0.785, 1.0764], (0.204, 0.785], ..., (0.204, 0.785], (0.204, 0.785], (-0.0875, 0.204], (0.204, 0.785], (0.785, 1.0764]]
Length: 100
Categories (5, object): [(-2909.105, -0.0875] < (-0.0875, 0.204] < (0.204, 0.785] < (0.785, 1.0764] < (1.0764, 2910.0944]]
"
How to print iterations per second?,"#!/usr/bin/env python3

import time
import datetime as dt

start_time = dt.datetime.today().timestamp()
i = 0
while(True):
    time.sleep(0.1)
    time_diff = dt.datetime.today().timestamp() - start_time
    i += 1
    print(i / time_diff)
"
multiplying numbers in a string,"163125187
"
Creating flask form with selects from more than one table,"{% from ""macros.html"" import render_field %}
<form method=post action=""/"">
    {{registration_form.hidden_tag()}}
  <dl>
    {{ render_field(registration_form.first_name_field) }}
    {{ render_field(registration_form.last_name_field) }}
    {{ render_field(registration_form.address_line_one_field) }}
    {{ render_field(registration_form.address_line_two_field) }}
    {{ render_field(registration_form.city_field) }}
    {{ render_field(registration_form.state_select_field) }}
    {{ render_field(registration_form.country_select_field) }}
  </dl>
  <p><input type=submit value=Register>
</form>
"
How to extract chunks from BIO chunked sentences? - python,"In [2]: l = [('The', 'B-NP'), ('Mitsubishi', 'I-NP'), ('Electric', 'I-NP'), ('Company', 'I-NP'), ('Managing', 'B-NP'),
   ...:                ('Director', 'I-NP'), ('ate', 'B-VP'), ('ramen', 'B-NP')]

In [3]: list(extract_chunks(l, ""NP""))
Out[3]: 
[('The Mitsubishi Electric Company', '0-1-2-3'),
 ('Managing Director', '4-5'),
 ('ramen', '7')]

In [4]: l = [('What', 'B-NP'), ('is', 'B-VP'), ('the', 'B-NP'), ('airspeed', 'I-NP'), ('of', 'B-PP'), ('an', 'B-NP'), ('unladen', 'I-NP'), ('swallow', 'I-NP'), ('?', 'O')]

In [5]: list(extract_chunks(l, ""NP""))
Out[5]: [('What', '0'), ('the airspeed', '2-3'), ('an unladen swallow', '5-6-7')]
"
Play music with PyGame without display,"import mp3play

sound = mp3play.load('sound.mp3')
sound.play()
"
Counting the number of concurrent entities in a panel data set in pandas,"import pandas as pd
from StringIO import StringIO
from pandas.tseries.offsets import DateOffset

str = '''patient_id   visit_date
01           2014-08-10
01           2014-08-12
01           2014-08-13
02           2014-08-12
02           2014-08-15
03           2014-08-13
03           2014-08-15
03           2014-08-16
'''
df = pd.read_csv(StringIO(str), delim_whitespace=True)

df['visit_date'] = pd.to_datetime(df['visit_date'], format='%Y-%m-%d')
df = df.set_index('visit_date', drop=True)

# function to fill in the gaps for each patient
def fill_gaps(group):
    return group.asfreq(DateOffset(days=1))

filled_df = df.groupby('patient_id').apply(fill_gaps)
"
if typeA in [typeB.typeA for typeB in typeBlist]: ... accessing typeB within the if clause?,"lookup = dict((typeB.typeA,typeB) for typeB in typeBlist)
"
Select day of month as start of date range using Pandas,"df[(df['days']>=from_day) & (df['days'] < from_day + plus_days)].data
"
Continue printed text to next line in Python,"label4Text.set(""0.0.0.0\nThis subnet mask is non-routable\nas there is no network portion"")
"
"in python, how to match Strings based on Regular Expression and get the non-matching parts as a list?",">>> re.split('\d{4}-\d{2}-\d{2}', s)
('abcde', '.log')
"
What Is The Cleanest Way to Call A Python Function From C++ with a SWIG Wrapped Object,"#ifndef OBJWITHPYCALLBACK_H
#define OBJWITHPYCALLBACK_H

class Callback;

class ObjWithPyCallback 
{
   public:

      ObjWithPyCallback();
      ~ObjWithPyCallback();
      void setCallback(Callback &callback);
      void call();

   private:

      Callback* callback_;
};

#endif
"
Python: how to avoid writing numerous if/elifs in a function?,"import collections

level = collections.namedtuple(""level"",[""sale"",""xcost"",""ycost""])

levels_dict = {4 :level(sale4, cost1, cost2),
               5 :level(sale5, cost2, cost3)}
"
pandas: apply function to DataFrame that can return multiple rows,"In [25]: df.groupby('class', group_keys=False).apply(f)
Out[25]: 
  class
0     A
0     C
1     C
"
merging n sorted lists of tuples in python,"[(i,k) for i,j in INPUT for k in j]
"
How do I find every element that is in both of two other lists?,"def commonElements(a1, a2):
    return tuple(sorted(set(a1).intersection(set(a2))))
"
"Python Dictionary, make range associated with its values and return them","In [36]: W(od)
0.13237220509287917 0.25 0.25
Out[36]: 'A'

In [37]: W(od)
0.22239648741773488 0.25 0.25
Out[37]: 'A'

In [38]: W(od)
0.2798873944681526 0.25 0.25
0.2798873944681526 0.25 0.5
Out[38]: 'C'

In [39]: W(od)
0.05933372630532163 0.25 0.25
Out[39]: 'A'

In [40]: W(od)
0.776438095223963 0.25 0.25
0.776438095223963 0.25 0.5
0.776438095223963 0.25 0.75
0.776438095223963 0.25 1.0
Out[40]: 'T'
"
Solving a mathematical equation recursively in Python,"import math
a_lambda = 1.0
rho = 0.8
c = 1.0
b = rho * c / a_lambda
p0 = (1 - (a_lambda*b))
p1 = (1-(a_lambda*b))*(math.exp(a_lambda*b) - 1)
p_dict = {0: p0, 1: p1}

def a(n):
    return math.exp(-a_lambda*b) * ((a_lambda*b)**n) / math.factorial(n)

def get_nth_p(n, p_dict):
    # return pre-calculated value if p(n) is already known
    if n in p_dict:
        return p_dict[n]

    # Calculate p(n) using modified formula
    p_n = ((get_nth_p(n-1, p_dict)
            - (get_nth_p(0, p_dict) + get_nth_p(1, p_dict)) * a(n - 1)
            - sum(get_nth_p(j, p_dict) * a(n + 1 - j) for j in xrange(2, n)))
          / a(0))

    # Save computed value into the dict
    p_dict[n] = p_n
    return p_n

get_nth_p(6, p_dict)
print p_dict
"
How to Capture Video Stream with OpenCV (Python),"ffmpeg -i mmst://194.90.203.111/cam2 http://localhost:8090/cam2.ffm
"
How to add a matrix to itself in an iterative way?,"l = [5, 6, 7, 8]
for source, dest in zip(l, l[1:]):
    print('Source = {}'.format(source))
    print('Destination = {}'.format(dest))
"
Remove items from list if they are within a given range,"def removeCloseItems(items, howFar):
    if items:
        lastItem = items[0]
        yield items[0]
        for currentItem in items[1:]:
            lastItem = currentItem
            if ((currentItem - lastItem) > howFar):
                yield currentItem
"
bs4: search for special characters like 'ä',">>> from bs4 import BeautifulSoup
>>> soup = BeautifulSoup('''\
...  <td>
...      <a href=""/gy/area/name/1208.html"">täkäen</a>
... ''')
>>> soup
<html><body><td>
<a href=""/gy/area/name/1208.html"">täkäen</a></td></body></html>
>>> soup.findAll(text=u'täkäen')
[u't\xe4k\xe4en']
"
How segment image in python?,"import numpy as np
import cv2

im0 = cv2.imread('objects/pix0.png',0)
im1 = cv2.imread('objects/pix1.png',0)
im2 = cv2.imread('objects/pix2.png',0)
im3 = cv2.imread('objects/pix3.png',0)
im4 = cv2.imread('objects/pix4.png',0)
im5 = cv2.imread('objects/pix5.png',0)

h0, w0 = im0.shape[:2]
h1, w1 = im1.shape[:2]
h2, w2 = im2.shape[:2]
h3, w3 = im3.shape[:2]
h4, w4 = im4.shape[:2]
h5, w5 = im5.shape[:2]
maxh=max(h0,h1,h2,h3,h4,h5)

#add 50 for space between the objects

new = np.zeros((maxh, w0+w1+w2+w3+w4+w5+50),np.uint8)
new=(255-new)
new[maxh-h0:, :w0] = im0
new[maxh-h1:, w0+10:w0+w1+10] = im1
new[maxh-h2:, w0+w1+20:w0+w1+w2+20] = im2
new[maxh-h3:, w0+w1+w2+30:w0+w1+w2+w3+30] = im3
new[maxh-h4:, w0+w1+w2+w3+40:w0+w1+w2+w3+w4+40] = im4
new[maxh-h5:, w0+w1+w2+w3+w4+50:] = im5
gray = cv2.cvtColor(new, cv2.COLOR_GRAY2BGR)


cv2.imshow('norm',gray)
cv2.imwrite('objects/new_image.jpg',gray)
key = cv2.waitKey(0)
"
How to change value of existing item's string in wxPython ObjectListView list_ctrl,"# OLVcheckboxes.py

import wx
from ObjectListView import ObjectListView, ColumnDefn

########################################################################
class Results(object):
    """"""""""""

    #----------------------------------------------------------------------
    def __init__(self, tin, zip_code, plus4, name, address):
        """"""Constructor""""""
        self.tin = tin
        self.zip_code = zip_code
        self.plus4 = plus4
        self.name = name
        self.address = address


########################################################################
class ProvPanel(wx.Panel):
    """"""""""""

    #----------------------------------------------------------------------
    def __init__(self, parent):
        """"""Constructor""""""
        wx.Panel.__init__(self, parent=parent)

        mainSizer = wx.BoxSizer(wx.VERTICAL)

        self.columns = {0: 'tin',
                        1: 'zip_code',
                        2: 'plus4',
                        3: 'name',
                        4: 'address'}

        self.test_data = [Results(""123456789"", ""50158"", ""0065"", ""Patti Jones"",
                                  ""111 Centennial Drive""),
                          Results(""978561236"", ""90056"", ""7890"", ""Brian Wilson"",
                                  ""555 Torque Maui""),
                          Results(""456897852"", ""70014"", ""6545"", ""Mike Love"",
                                  ""304 Cali Bvld"")
                          ]
        self.resultsOlv = ObjectListView(self, style=wx.LC_REPORT|wx.SUNKEN_BORDER)
        self.resultsOlv.cellEditMode = ObjectListView.CELLEDIT_SINGLECLICK

        self.setResults()

        self.column_cbo = wx.ComboBox(self, value='tin',
                                      choices=self.columns.values())
        modify_btn = wx.Button(self, label='Modify Column 1 Cells')
        modify_btn.Bind(wx.EVT_BUTTON, self.onModify)

        mainSizer.Add(self.resultsOlv, 1, wx.EXPAND|wx.ALL, 5)
        mainSizer.Add(self.column_cbo, 0, wx.CENTER|wx.ALL, 5)
        mainSizer.Add(modify_btn, 0, wx.CENTER|wx.ALL, 5)
        self.SetSizer(mainSizer)

    #----------------------------------------------------------------------
    def onModify(self, event):
        """"""
        Modify cells
        """"""
        objects = self.resultsOlv.GetObjects()
        column = self.column_cbo.GetValue()
        for obj in objects:
            value = 'Row #%s' % self.resultsOlv.GetIndexOf(obj)
            setattr(obj, column, value)
            self.resultsOlv.RefreshObject(obj)

    #----------------------------------------------------------------------
    def setResults(self):
        """"""""""""
        self.resultsOlv.SetColumns([
            ColumnDefn(""TIN"", ""left"", 100, ""tin""),
            ColumnDefn(""Zip"", ""left"", 75, ""zip_code""),
            ColumnDefn(""+4"", ""left"", 50, ""plus4""),
            ColumnDefn(""Name"", ""left"", 150, ""name""),
            ColumnDefn(""Address"", ""left"", 200, ""address"")
        ])
        self.resultsOlv.CreateCheckStateColumn()
        self.resultsOlv.SetObjects(self.test_data)


########################################################################
class ProvFrame(wx.Frame):
    """"""""""""

    #----------------------------------------------------------------------
    def __init__(self):
        """"""Constructor""""""
        title = ""OLV Checkbox Tutorial""
        wx.Frame.__init__(self, parent=None, title=title, size=(1024, 768))
        panel = ProvPanel(self)


#----------------------------------------------------------------------
if __name__ == ""__main__"":
    app = wx.App(False)
    frame = ProvFrame()
    frame.Show()
    app.MainLoop()
"
Pandas Grouping and Reducing DataFrame,"{'a2': {'1': (('y', 'z', 'z'), (0, 2, 4)), '2': (('z',), (0,))}}
"
i cant use the equals or the enter key on my keyboard to get an answer for anything,"try:
    # for Python2
    from Tkinter import *
except ImportError:
    # for Python3
    from tkinter import *


class GUI(Frame):

    # Create and return a packed frame.
    def frame(self, side): 
        w = Frame(self)
        w.pack(side=side, expand=YES, fill=BOTH)
        return w

    # Create and return a button.
    def button(self, root, side, text, command=None): 
        w = Button(root, text=text, command=command) 
        w.pack(side=side, expand=YES, fill=BOTH)
        return w

    def hello(self):
        self.display.set('hello')

    def keyPressed(self,event):
        #test to see whether enetr is pressed
        if event.keysym == 'Return':
            self.hello()
    def __init__(self):
        Frame.__init__(self)
        self.option_add('*Font', 'Verdana 12 bold')
        self.pack(expand=YES, fill=BOTH)
        self.master.title('Simple GUI')

        # The StringVar() object holds the value of the Entry.
        self.display = StringVar()
        e = Entry(self, relief=SUNKEN, textvariable=self.display)
        e.pack(side=TOP, expand=YES, fill=BOTH)


        # Clear button.
        clearF = self.frame(BOTTOM)
        self.hello_button = self.button(clearF, LEFT, 'Hello', self.hello)
        #bind keypresses
        self.bind_all('<Key>', self.keyPressed)


if __name__ == '__main__':
 GUI().mainloop()
"
Executing a function in reverse in Python,"def f():
    call_some_function_A()
    if whatever:
        call_some_function_B()
        call_some_function_C()
    call_some_function_D()
"
Reading from a file directly into a 2D list python,"'5'
"
How to find the most recently modified folder in a directory of directories (python)?,"try:
    most_recent = max(list_user_files(join(ROOT, userdir)), key=itemgetter(1))
except ValueError as e:
    print '***DEBUG***', list(list_user_files(join(ROOT, userdir)))
"
undestanding csv module delimiter,"ifile = open('example.csv', 'r')
reader = csv.reader(ifile, delimiter = ';')
print reader.next()
"
Python Lists input- Integers and Strings,"1
hello
4.5
3
boo
>>> the_list
[1, 'hello', '4.5', 3, 'boo']
"
Computing pseudo inverse of a matrix using sympy,">>> M = sy.Matrix(3, 2, [1,2,3,4,5,6])

>>> N = (M.H * M) ** -1 * M.H

>>> N.evalf(4)
[-1.333, -0.3333,  0.6667]
[ 1.083,  0.3333, -0.4167]
>>> N * M
[1, 0]
[0, 1]
"
Finding partial subsets python,">>> len(a & b)
3
"
Finding superstrings in a set of strings in python,"
strings = [
    '24', '277', '277 24', '139 24', '139 277 24', '139 277', '139', '136 24',
    '136 277 24', '136 277', '136', '136 139 24', '136 139 277 24', '136 139 277',
    '136 139', '246']

def find_supersets(strings):
    superstrings = set()
    set_to_string = dict(zip([frozenset(s.split()) for s in strings], strings))
    for s in set_to_string.keys():
        for sup in superstrings.copy():
            if s <= sup:
                # print('{s!r} <= {sup!r}'.format(s = s, sup = sup))
                break
            elif sup < s:
                # print('{sup!r} <= {s!r}'.format(s = s, sup = sup))
                superstrings.remove(sup)
        else:
            superstrings.add(s)
    return [set_to_string[sup] for sup in superstrings]

print(find_supersets(strings))
"
My Visual Basic scripts Open instead of running,"subprocess.call(""cmd /c wscript MyScript.vbs"")
"
How do I create a radial cluster like the following code-example in Python?,"""""""All visualization functionality is collected here.""""""
from pylab import plot

# ToDo: create proper documentation
def simple_link(t, ndx, level):
    """"""Simple_link is just a minimal example to demonstrate what can be
    achieved when it's called from _grouper.tree.traverse for each link.
    - t, tree instance
    - ndx, a pair of (from, to) indicies
    - level, of from, i.e. root is in level 0
    """"""
    plot(t.points[0, ndx], t.points[1, ndx])
    if 0== level:
        plot(t.points[0, ndx[0]], t.points[1, ndx[0]], 's')
    if t.is_leaf(ndx[1]):
        plot(t.points[0, ndx[1]], t.points[1, ndx[1]], 'o')

# ToDO: implement more suitable link visualizers
# No doubt, this will the part to burn most of the dev. resources

if __name__ == '__main__':
    # ToDO: implement tests
    pass
"
How to tell if a list inside a dict is empty,"movietimes = {""Times"":{""ONE"":[2],""TWO"":[]}}

for val in movietimes[""Times""].itervalues():
   if not any(x for x in val):
        # you have empty list
"
What is the right way to organize python unittests into suites?,"result = unittest.TextTestRunner(verbosity=2).run(suite)
"
Decorator to tag functions as callable,"foo3() -> @selector.tag('a') -> foo3()
foo3() -> @selector.tag('b') -> do_nothing

foo3() -> @selector.tag('b') -> do_nothing
do_nothing -> @selector.tag('a') -> do_nothing
"
How to order these lines for a highscore table in Python,"print ''.join(sorted(open('infile'), key=lambda l: -int(ast.literal_eval(l)[1]))),
"
python: write input to file and save it,"$ ./record-workout saved-workouts.csv
"
Hashing a tuple in Python where order matters?,">>> hash((1,2))
1299869600
>>> hash((2,1))
1499606158
"
Python sql query insert data in columns,"fields = query_data.keys()
fields_string = ', '.join(fields)
"
Saving dict with nested class instances in Python 2.7,"import pickle
kQuestion = 'question'
kGuess = 'guess'
questfile = 'questfile.txt'
nodes = []
....
"
String manipulation in for loops,">>> for char in word:
...     if char in vowels:
...         print(4 * char, end='')
...     else:
...         print(char, end='')
...
"
How to get the result in single List?,">>> def fareEstimator(ride_time, ride_distance, cost_per_minute, cost_per_mile):
...     return [round(ride_time * cpm + ride_distance * cpmile, 1)
...             for cpm, cpmile in zip(cost_per_minute, cost_per_mile)]
...
>>> fareEstimator(30, 7, [0.2, 0.35, 0.4, 0.45], [1.1, 1.8, 2.3, 3.5])
[13.7, 23.1, 28.1, 38.0]
"
compare elements of two lists,"import itertools as it
import operator as op

a = [3, 4, 6, 7, 8, 9]
b = [1, 2, 5, 10]
srcs = [a, b]
dsts = [[], []]

for which, elems in it.groupby(sorted((x, i) for i in (0,1) for x in srcs[i]), key=op.itemgetter(1)):
    dsts[which].append(next(elems)[0])
a, b = dsts
"
Replace `\n` in html page with space in python LXML,"from lxml import etree 
tree = etree.parse('some.xml') 
root = tree.getroot()
# Get the whole XML content as  string
xml_in_str = etree.tostring(root)

# Replace all \n with space
new_xml_data = xml_in_str.replace(r'\n', ' ')

# Do the processing with the new_xml_data string which is formatted

# Maybe also write to a new XML file, without the \n
with open('newxml.xml', 'w') as f:
    f.write(new_xml_data)
"
Python - Easiest way to get ordered key/value pairs from dictionary?,"age_range, freq = zip(*sorted(age_freq.items()))
"
AppEngine id/key/from_path is quite confusing what should I use,"class User(db.Model):
    name = db.StringProperty()
    # etc.

def AddUser(webapp2.RequestHandler):
    def get(self):
        newUser = User()
        newUser.name = self.request.get('name')
        # etc. assign all model properties
        newUser.put()
        # now, newUser.Key().id() contains the auto-assigned numeric id.
        # we can pass this value to our template and get it back via
        # a form paramter for subsequent operations.

def ShowUser(webapp2.RequestHandler):
    def get(self):
        user_to_show_id = self.request.get('id')
        user_to_show = User.get_by_id(user_to_show_id)
        if user_to_show is not None:
            # populate the template parameters with the users's data
            # and render the template
        else:
            # The requested user does not exist, so
            # render an error message/page.
"
python subprocess module: looping over stdout of child process,"data_stream = Popen(mycmd, stdin=PIPE, stdout=PIPE)
data_stream.stdin.write(""do something\n"")
for line in data_stream:
  ...  # BAD!
"
Why does this iteration didn't return anything out?,"True
"
py.test - How to inherit other tests,"import hello_world
import print_text
"
Does Python have an ordered set?,"@staticmethod
def union(*sets):
    union = OrderedSet()
    union.union(*sets)
    return union

def union(self, *sets):
    for set in sets:
        self |= set
"
Efficiently extract blocks of text from a space-indent structured file,"data = """"""
   SP : STRUCT  
    Spare : STRUCT  //Spare
     Val : INT  := 100; 
     UpLim : INT  := 100;   
     LoLim : INT ;  
     Def : INT  := 100; 
     Prot : INT  := 2;  
    END_STRUCT ;    
   END_STRUCT ; 
""""""

print parse(data)
# {'SP': {'Spare': {'LoLim': 0, 'Prot': 2, 'Def': 100, 'UpLim': 100, 'Val': 100}}}
"
Stanford Universal Dependencies on Python NLTK,">>> import json, jsonrpclib
>>> from pprint import pprint
>>>
>>> server = jsonrpclib.Server(""http://localhost:8080"")
>>>
>>> pprint(json.loads(server.parse('John loves Mary.')))  # doctest: +SKIP
{u'sentences': [{u'dependencies': [[u'root', u'ROOT', u'0', u'loves', u'2'],
                                   [u'nsubj',
                                    u'loves',
                                    u'2',
                                    u'John',
                                    u'1'],
                                   [u'dobj', u'loves', u'2', u'Mary', u'3'],
                                   [u'punct', u'loves', u'2', u'.', u'4']],
                 u'parsetree': [],
                 u'text': u'John loves Mary.',
                 u'words': [[u'John',
                             {u'CharacterOffsetBegin': u'0',
                              u'CharacterOffsetEnd': u'4',
                              u'Lemma': u'John',
                              u'PartOfSpeech': u'NNP'}],
                            [u'loves',
                             {u'CharacterOffsetBegin': u'5',
                              u'CharacterOffsetEnd': u'10',
                              u'Lemma': u'love',
                              u'PartOfSpeech': u'VBZ'}],
                            [u'Mary',
                             {u'CharacterOffsetBegin': u'11',
                              u'CharacterOffsetEnd': u'15',
                              u'Lemma': u'Mary',
                              u'PartOfSpeech': u'NNP'}],
                            [u'.',
                             {u'CharacterOffsetBegin': u'15',
                              u'CharacterOffsetEnd': u'16',
                              u'Lemma': u'.',
                              u'PartOfSpeech': u'.'}]]}]}
"
Get root's attributes - elementtree,"for name, value in root.attrib.items():
    print '{0}=""{1}""'.format(name, value)
"
How to add property to a python class dynamically?,">>> class Foo(object):
...     def bar(self):
...         pass
... 
>>> Foo().bar
<bound method Foo.bar of <__main__.Foo object at 0x7f2a439d5dd0>>
>>> Foo().bar.__get__
<method-wrapper '__get__' of instancemethod object at 0x7f2a43a8a5a0>
"
Optimise two SQL queries and a list comprehension,"SELECT P.id, (TP.id IS NOT NULL) AS done
FROM myapp_place P
LEFT OUTER JOIN myapp_team_places TP
ON P.id = TP.place_id AND TP.team_id = %s
"
How to Extend Large Class Methods?,"def __init__(self, thing_args, ex_arg1, ex_arg2):
    super().__init__(*thing_args)
    # ...
"
Why does s[len(s)-1:-1:-1] not work?,"s[start:stop:step]
"
How to count number of unique strings in two columns?,"In [129]: s.value_counts()
Out[129]: 
Ernst    2
Jim      2
Bill     1
Doug     1
Jake     1
Peter    1
dtype: int64
"
SQLIte3 querying a database,"SELECT name, pars FROM players WHERE pars >= 0 ORDER BY pars DESC LIMIT 1
"
How to store bash shell script in the JSON document effectively for Python script,"'""a \\""$b\\"" c""'
"
Is there a simple way to increment a datetime object one month in Python?,"use_date = use_date+relativedelta(months=+1)
use_date = use_date+relativedelta(day=31)
"
(Linux) Determine Percentage of Different Colors in Image,"identify image.jpg
image.jpg JPEG GIF 480x640 480x640+0+0 8-bit sRGB 256c 99.7KB 0.000u 0:00.000
"
Cython: how to make an python object as a property of cython class,"class X(object):
    def __init__(self):
        self.i = 1
"
"Python setdefault not lvalue, any work-arounds?","histogram = dict(Counter(args))
"
Retrieve the ranking of elements in various list to compute the weighted average of their ranking scores Python,"4.0
7.0
"
Access np.array in ctypes struct,"class Test(C.Structure):
    _fields_ = [(""x"", C.POINTER(C.c_double)),
                (""y"", C.POINTER(C.c_int))]

test = Test()
print test.x
# outputs: <__main__.LP_c_double object at 0x1014aa320>

print test.y
# outputs: <__main__.LP_c_int object at 0x101429320>

print test.x[0]
# raises ValueError: NULL pointer access

print test.y[0]
# raises ValueError: NULL pointer access
"
"How to determine if character is uppercase, lowercase, digit, or non-alphanumeric without string methods","for ch in character:
    if ch in lowerLetters:
        lowerCount += 1
    elif ch in upperLetters:
        upperCount += 1
    elif ch in digits:
        digitCount += 1
    else:
        nonAlphaCount += 1
"
How to extract numerical data from a text file,"for line in data.readlines():
    new_data.append(int(line.strip()))
"
Find common substring between two strings,"def longestSubstringFinder(string1, string2):
    answer = """"
    len1, len2 = len(string1), len(string2)
    for i in range(len1):
        match = """"
        for j in range(len2):
            if (i + j < len1 and string1[i + j] == string2[j]):
                match += string2[j]
            else:
                if (len(match) > len(answer)): answer = match
                match = """"
    return answer

print longestSubstringFinder(""apple pie available"", ""apple pies"")
print longestSubstringFinder(""apples"", ""appleses"")
print longestSubstringFinder(""bapples"", ""cappleses"")
"
How to check if a value exists in a dictionary (python),">>> T(lambda : 'four' in d.itervalues()).repeat()
[0.41178202629089355, 0.3959040641784668, 0.3970959186553955]
>>> T(lambda : 'four' in d.values()).repeat()
[0.4631338119506836, 0.43541407585144043, 0.4359898567199707]
>>> T(lambda : 'four' in d.viewvalues()).repeat()
[0.43414998054504395, 0.4213531017303467, 0.41684913635253906]
"
"python RE: Non greedy matches, repitition and grouping","r""start_of_line:(?:[^\n]+|\n(?!start_of_line:))*""
"
Python: convert 2 lists to dict and repeat the keys with each set of data,">>> list_keys = ['fname','lname','dob']
>>> list_data = [['bob','smith','12121950'],['john','jones','10101940']]
>>> [dict(zip(list_keys, data)) for data in list_data]
[{'lname': 'smith', 'dob': '12121950', 'fname': 'bob'}, {'lname': 'jones', 'dob': '10101940', 'fname': 'john'}]
"
Is there any better method to manage place in Tkinter in Python?,"toolbar = tk.Frame(root)
save_button = tk.Button(toolbar, ...)

toolbar.pack(side=""top"", fill=""x"")
save_button.pack(side=""left"")
"
List with hex escaped values to readable string in Python,">>> print lst[0].decode('utf8')
<option value=""284"">     Historia </option>
>>> print lst[1].decode('utf8')
<option value=""393"">     Hälsa & skönhet </option>
"
Complication using log-probabilities - Naive Bayes text classifier,"S = log( sum { i=1..n | exp( L[i])})
"
why am I getting a 'closed file' message when I run my python script?,"import mechanize, fileinput

urls = open('F:\Python\url_list2.txt')
content = [x.strip() for x in urls.readlines()]
print content
"
Converting a Django binary field to an array,"32 bit encoding | 32 bit number of elemnets (n) | n * encoding size 
"
How can I test this script that accesses urls through several different proxy servers?,"http://api.exip.org/?call=ip
"
Is it possible to read FTP files without writing them using Python?,"#!/usr/bin/env python
from ftplib import FTP

def writeFunc(s):
  print ""Read: "" + s

ftp = FTP('ftp.kernel.org') 
ftp.login()
ftp.retrbinary('RETR /pub/README_ABOUT_BZ2_FILES', writeFunc)
"
Read a text file into python by splitting the file into list items according to a set of characters,"in_file = open(fileName, 'r')
file = in_file.readlines()

new_list = [''.join(file[i*4:(i+1)*4]) for i in range(int(len(file)/4))]
list_no_n = [item.replace('\n','') for item in new_list]

print new_list
print list_no_n
"
Group binary bits together,"L = [0b1000,0b1100,0b1111,0b1001, 0b0000]
bits = 4  # total bits
next_bit = bits*len(L)-1  # next position to be calculated
res = 0

for i in range(bits-1,-1,-1):  # iterate 3,2,1,0 (bits backwards)
    for x in L:                # iterate through every integer in L
        res = res | (((x&1<<i)>>i)<<next_bit)  # say what? o.O
        next_bit-=1            # set next_bit to the next position to be calculated

 >>> bin(res)
'0b11110011000010000110'
"
How to convert rows values in dataframe to columns labels in Python after groupby?,"In [171]: df.pivot(index='Schoolname', columns='Attribute', values='Value')
Out[171]:
Attribute   Cleanliness  Money  Safe
Schoolname
abc-School         4.50   4.90  4.40
lmn-School         3.89   4.65  2.34
xyz-School         2.34   4.65  3.44
"
creating xml tree from a textfile with Python,"with open(""xmlbasic.txt"") as lines_file:
    lines = lines_file.read()

import xml.etree.ElementTree as ET

root = ET.Element('root')

for line in lines:
    head, subhead, tail = line.split("":"")

    head_branch = root.find(head)
    if not head_branch:
        head_branch = ET.SubElement(root, head)

    subhead_branch = head_branch.find(subhead)
    if not subhead_branch:
        subhead_branch = ET.SubElement(branch1, subhead)

    subhead_branch.text = tail

tree = ET.ElementTree(root)
ET.dump(tree)
"
How can I detect last digits in python string,".*?      # Matches anything (non-greedy) 
([0-9]*) # Upto a zero or more digits digit (captured)
$        # Followed by the end-of-string identifier 
"
Array division- translating from MATLAB to Python,"c = numpy.linalg.lstsq(b.T, a.T)[0].T
"
Making PostgreSQL respect the order of the inputted parameters?,"select
    a.*
from
    artists a,
    rankings r
where
    a.id = r.artist_id
order by
    r.score desc;
"
Removing current element from a list,">>> a = [1,2,3]
>>> b = a  

>>> print a    
[1,2,3]

>>> print b 
[1,2,3]

>>> b.append(4)

>>> print a 
[1,2,3,4]

>>> print b  
[1,2,3,4]
"
Python decorators just syntactic sugar?,"def enforce(requirements):
    def wrapper(func):
        @wraps(func)
        def wrapped(self, *args, **kwargs):
            return func(self, *args, **kwargs)
        while requirements:
            func = requirements.pop()(func)
        return wrapped
    return wrapper

class FooBar(object):
    @enforce([reguires_foo, requires_bar])
    def do_something_to_foo_and_bar(self):
        pass
"
Is there an include file for class statements in python?,"import cgi
import os

from google.appengine.ext.webapp import template
from google.appengine.api import users
from google.appengine.ext import webapp
from google.appengine.ext.webapp.util import run_wsgi_app
from google.appengine.ext import db
from google.appengine.api import memcache
from google.appengine.api import urlfetch
from google.appengine.datastore import entity_pb
"
Efficient large file hash over network using Python,"s = f.read()
hashlib.sha1(s).hexdigest()
"
"auto run python result in ""EOF when reading a line ""","print(42)
"
Pandas: How to iterate over level one and randomly select from level 2 then add subselection to dataframe,"In [147]: spec_df[cols]
Out[147]: 
      baz foo bar
        A   B   D
        2   3   3
baz C   8   9   5
    D   7   0   8
qux C   2   6   3
    D   9   6   8
    C   9   4   1
"
"Python Pandas - Compare 2 dataframes, multiple parameters","print df
   Name  Chr  Position  Value Sample
0    P1    1       105      1     S1
4    P2    1        60      5     S2
7    P5    2       220      1     S1
8    P6    2       240      1     S1
10   P5    2       220      4     S2

#if you need reset index
print df.reset_index(drop=True)
  Name  Chr  Position  Value Sample
0   P1    1       105      1     S1
1   P2    1        60      5     S2
2   P5    2       220      1     S1
3   P6    2       240      1     S1
4   P5    2       220      4     S2
"
search for before and after values in a long sorted list,"#!/usr/bin/env python

import bisect

def find_lt(a, x):
    'Find rightmost value less than x'
    i = bisect.bisect_left(a, x)
    if i:
        return a[i-1]
    raise ValueError

def find_gt(a, x):
    'Find leftmost value greater than x'
    i = bisect.bisect_right(a, x)
    if i != len(a):
        return a[i]
    raise ValueError

# First create a test-list (49996 items)
i=1.0
R=[1.0]
D={}
while i < 10000:
    i+=0.2
    i=round(i,2)
    D[i]=True
    R.append(i)

# Locate a value, in this case 100.3 which is not in the list
x=100.3
if D.has_key(x):
    print ""found"", x
else:
    print find_lt(R, x)
    print find_gt(R, x)
"
Map reduce problem in python,"pal_count = dict()
for x in word_list:                     # same loop
    if x == x[::-1]                     # is this a palindrome?
        if x in pal_count:              # have we seen before?
            pal_count[x] += 1
        else:                           # this one is new!
            pal_count.setdefault(x, 1)
"
Is it possible to embed python without the standard library?,"int main(int argc, char *argv[]) {

  /* Setup */
  Py_NoSiteFlag = 1; // <--- This
  Py_SetProgramName(argv[0]);
  Py_Initialize();

  /* Run the 'main' module */
  int rtn = Py_Main(argc, argv);
  Py_Finalize();

  return rtn;
}
"
Python Docx Carriage Return,"<w:body>
    <w:p w:rsidR=""00BE37B0"" w:rsidRDefault=""00CF2350"">
        <w:r>
            <w:t>One</w:t>
        </w:r>
    </w:p>
    <w:p w:rsidR=""00CF2350"" w:rsidRDefault=""00CF2350"">
        <w:r>
            <w:t>Two</w:t>
        </w:r>
    </w:p>
    <w:p w:rsidR=""00CF2350"" w:rsidRDefault=""00CF2350"">
        <w:r>
            <w:t>Three</w:t>
        </w:r>
    </w:p>
    <w:sectPr w:rsidR=""00CF2350"" w:rsidSect=""001077CC"">
        <w:pgSz w:w=""11906"" w:h=""16838""/>
        <w:pgMar w:top=""1440"" w:right=""1440"" w:bottom=""1440"" w:left=""1440"" w:header=""708"" w:footer=""708"" w:gutter=""0""/>
        <w:cols w:space=""708""/>
        <w:docGrid w:linePitch=""360""/>
    </w:sectPr>
</w:body>
"
How to turn Numpy array to set efficiently?,"In [29]: l=np.random.random_integers(low=1,high=15000,size=(3000,30000))

In [30]: timeit map(np.unique,l)
1 loops, best of 3: 5.43 s per loop

In [31]: timeit [np.unique(ll) for ll in l]
1 loops, best of 3: 5.42 s per loop
"
Modify an array by merging some rows,"[[ 387.  287.  399.  267.]
 [ 420.  143.  430.  134.]
 [ 370.   31.  411.   15.]
 [  75.  318.  102.  295.]
 [ 246.  122.  316.   73.]
 [ 556.  333.  568.  308.]
 [  57.  199.   99.  180.]]
"
What happens to imports when a new process is spawned?,"myHat='green'
def fooBar():
    return myHat
"
Add calculated row to pandas DataFrame,"gmeans['Type'] = 'GeoM'

newdata = pandas.concat([data, gmeans.reset_index()], axis=0)
"
i want to classify data by distance from centroids in python,"import pickle
with open('kmeans.dat', 'w') as f:
    pickle.dump(kmeans, f)
"
Load Custom Dataset (which is like 20 news group set) in Scikit for Classification of text documents,"In [1]: from sklearn.datasets import load_files

In [2]: from sklearn.cross_validation import train_test_split

In [3]: bunch = load_files('./Topics')

In [4]: X_train, X_test, y_train, y_test = train_test_split(bunch.data, bunch.target, test_size=.4)

# Then proceed to train your model and validate.
"
Writing and image attachment to datastore as an avatar: Is it possible?,"class EmailMessageModel(db.Model):
....various stuff...
  sender = db.StringProperty()
  date = db.DateTimeProperty()
  message = db.TextProperty()
  attachmentNames = db.StringListProperty()
  attachmentContents = db.ListProperty(db.Blob)
"
why web.py template could not display <br>?,"The following will not be html escaped.
$:form.render()
"
How to write Strategy Pattern in Python differently than example in Wikipedia?,"class StrategyExample:
    def __init__(self, func=None):
        if func:
             self.execute = func

    def execute(self):
        print(""Original execution"")

def executeReplacement1():
    print(""Strategy 1"")

def executeReplacement2():
    print(""Strategy 2"")

if __name__ == ""__main__"":
    strat0 = StrategyExample()
    strat1 = StrategyExample(executeReplacement1)
    strat2 = StrategyExample(executeReplacement2)

    strat0.execute()
    strat1.execute()
    strat2.execute()
"
How to massage numpy function arguments,"import numpy as np

for method_name, method in np.random.__dict__.items():
    try:
        docstring_lines = method.__doc__.split('\n')
    except (AttributeError,):
        continue
    if len(docstring_lines) == 0:
        continue
    for line in docstring_lines:
        if method_name in line:
            print(line.strip())
            break
"
Sqlalchemy mass deletion orm creation,"DELETE FROM access_string_details WHERE access_string_details.menu_id IN (SELECT redirector.menu_id AS redirector_menu_id 
FROM redirector 
WHERE redirector.service = :service_1)
"
Python - Why cmp( ) is useful?,"def cmp_to_symbol(val, other_val):
    '''returns the symbol representing the relationship between two values'''
    return '=><'[cmp(val, other_val)]

>>> cmp_to_symbol(0, 1)
'<'
>>> cmp_to_symbol(1, 1)
'='
>>> cmp_to_symbol(1, 0)
'>'
"
how to transform element then insert into numpy array,"np.c_[a[:,:1], b, a[:,2:]]
"
How to post a file to django WITHOUT using html form,">>> url = '/your/recieving/end'
>>> files = {'report.xls': open('report.xls', 'rb')}

>>> r = requests.post(url, files=files)
>>> r.text # response json
"
Want to use form and styling option together,"<form name=""main"" method=""post"" class=""login""> 
$if not form.valid: 
    <p class=""wrong"">Login incorrect.</p>
$:form.render()
</form> 
"
heap sort in Python for advice,"[0, 1, 2]
"
Pandas cumulative function of series with dates and NaT,"0    2008-11-30
1    2008-11-30
2    2008-11-30
3    2008-11-30
4    2008-10-31
5    2008-10-31
6    2008-09-30
7    2008-09-30
8           NaT
9    2008-09-30
10   2008-09-30
dtype: datetime64[ns]
"
create row of date while creating superuser,"class Location(models.Model):
    class Title:
        CLASSROOM = 'classroom'
        PLAYGROUND = 'playground'
        STAFF_ROOM = 'staff_room'

    TITLE_CHOICES = (
        (Title.CLASSROOM, 'Classroom'),
        (Title.PLAYGROUND, 'Playground'),
        (Title.STAFF_ROOM, 'Staff Room'),
    )

    user = models.ForeignKey(User,null=True)
    title = models.CharField('Incident Type', max_length=200,choices=TITLE_CHOICES,default=Title.CLASSROOM)
    parent_location_id = models.CharField('Parent Location', max_length=100, null=True, blank=True)
    is_active = models.BooleanField('Is Active', default=True)
"
Do something for every instance of a class,"class Car: # class names are generally capitalized so that you can tell they're not local variable names.
    def __init__(self, tires, color, age):
        self.tires = tires
        self.color = color
        self.age = age

    def paint(self): # We make paint() a method of car
        print(""So you want to paint your car?"")
        color = input(""What color will it be? "")
        self.color = color   
"
"python, detecting elements have been removed/added/changed positions in a list",">>> import difflib
>>> Org = ['AMEND', 'ASTRT', 'ETIME', 'OBJ', 'ast', 'bias', 'chip', 'cold']
>>> mod = ['AMEND', 'ASTRT', 'OBJ', 'ast', 'bias', 'chip', 'cold', 'flat', 'deb']
>>> list(difflib.ndiff(Org, mod))
['  AMEND', '  ASTRT', '- ETIME', '  OBJ', '  ast', '  bias', '  chip', '  cold', '+ flat', '+ deb']
"
Logger.info never outputs,"[loggers]
keys=root

[handlers]
keys=stream

[formatters]
keys=formatter

[logger_root]
level=INFO
handlers=stream

[handler_stream]
class=StreamHandler
level=INFO
formatter=formatter
args=(sys.stderr,)

[formatter_formatter]
format=%(asctime)s - %(name)s - %(levelname)s - %(message)s
"
numpy save 2d array to text file,"np.set_printoptions(threshold=np.inf, linewidth=np.inf)  # turn off summarization, line-wrapping
with open(path, 'w') as f:
    f.write(np.array2string(x, separator=', '))
"
Returning the value of an index in a python list based on other values,"cdefghijklmnopqrstuvwxyzab
"
What caused my ANN to take drastically less time to run?,"for row in xrange(rows - 2):
    self.neurons.append([Neuron(parents=self.neurons[-1] + [self.bias]) for output in xrange(hidden)])
"
"Python--Need to Read and find data, and copy a file to another location (beginner)","filename = raw_input(""Please enter your filename:\n"")
openedFile = open(filename, ""rb"")
startAddress = raw_input(""From the EEPROM file, enter 'Start Address':\n"")
endAddress = raw_input(""From the EEPROM file, enter 'End Address':\n"")
"
Python - Group arrays by limiting number of elements in sub array,"[[('Mon', [1, 2, 4])],
 [('Mon', [32, 23]), ('Tue', [1])],
 [('Tue', [7]), ('Wed', [11, 9])],
 [('Wed', [6, 4, 32])],
 [('Wed', [1]), ('Thu', [8]), ('Fri', [344])],
 [('Fri', [3, 2, 0])]]

[[('Mon', [1, 2, 4, 32, 23]), ('Tue', [1, 7]), ('Wed', [11, 9, 6])],
 [('Wed', [4, 32, 1]), ('Thu', [8]), ('Fri', [344, 3, 2, 0])]]
"
Replacing a RegEx with a string of characters with the same length,"In [1]: import re

In [2]: def repl(m):
   ...:     return '#' * len(m.group())
   ...: 

In [3]: re.sub(r'<[^<>]*?>', repl,
   ...:     '<o:LastSaved>2013-01-21T21:15:00Z</o:LastSaved>')
Out[3]: '#############2013-01-21T21:15:00Z##############'
"
sorting the list in Python without .sorted(),"l = ['a1', 'b1', 'c1', 'd1', 'a2', 'b2', 'c2', 'd2']
numbersPerLetter = 2
lsorted = []
for i in range(len(l) / numbersPerLetter):
   lsorted.extend([l[x+i] for x in range(0, len(l), len(l) / numbersPerLetter)])
print(lsorted)
"
how to properly use {% include %} tag to render a template (like partials) in django?,"<div class=""container subcategory_list"">
    <div class=""col-md-3"">
        {% for subcategory in object_list %}
            <p><a href=""{% url 'categories:subcategory' subcategory.id %}"">{{ subcategory.title }}</a></p>

        {% endfor %}
    </div>
    <div class=""col-md-9"" id=""subcategory_detail"">
        {% include 'categories/subcategory_detail.html' %}
    </div>
</div>
"
storing chr(3) to variable in python output showing junk values,"a=chr(3)
print repr(a)
"
dowpdown shold display the selected value upon submission of form,"<form method=POST ...>
</form>
"
python panda to calculate rolling means,"Demonstration
np.random.seed([3,1415])
s = pd.Series(np.random.randn(100) / 100, name='price').add(1.001).cumprod()

bollinger_bands(s).plot()
"
Python lambda expression compose iterator script,"def compose1(fnlist):
    if not fnlist:
        return lambda x: x

    # compose 1 function of x from two others
    def compose2fns(fn1, fn2):
        return lambda x : fn1(fn2(x))
    # or if you really love lambdas
    # compose2fns = lambda fn1,fn2: lambda x: fn1(fn2(x))

    # use reduce to cumulatively apply compose2fns to the functions
    # in the given list
    return reduce(compose2fns, fnlist)
"
Is there a __enter__ and __exit__ equivalent for all functions in a class?,"stefanos-imac:python borini$ python decorator.py 
pre transaction
hello
post transaction
instantiating
doing foo
pre transaction
doing bar 5
post transaction
"
Python: How to generate a full rank square binary matrix in which each row only has 3 bits 1,"row = ([ 1, 1, 1 ] + [ 0 ] * (m - 3)) * 2
A = [ row[i:m + i] for i in range(m, 0, -1) ]
"
Extracting data from generator object,"for line in t:
    print line
"
How to send signals from a backgrounded process using pexpect,"(expecttest.py > /dev/null 2>&1 &)
"
Printing X-type pattern in Python 2.7,"print X
#['*............*', ' **........**', '  ***....***', '   ********', '   ********', '  ***....***', ' **........**', '*............*']
"
How to wrap python instance methods at runtime,">>> a = MyClass()
>>> a = prova.DBLogWrapper(a, ['hello'])
>>> a.hello()
A
('__main__.MyClass.hello', datetime.datetime(2013, 1, 17, 20, 48, 26, 478023), datetime.datetime(2013, 1, 17, 20, 48, 26, 478071)) {'info': {'args': (), 'trace': ['  File ""<stdin>"", line 1, in <module>\n', '  File ""prova.py"", line 31, in timed_method\n    trace = traceback.format_stack()\n'], 'kwargs': {}}}
>>> a.goodbye()
B
"
Map string values in a Pandas Dataframe with integers,"temp_df = pd.DataFrame({'Request': df.Request.unique(), 'Request_id':range(len(df.Request.unique()))})
"
Python pandas dataframe: interpolation using dataframe data without updating it. Just get the interpolated value.,"In [70]:
start = df.index.get_slice_bound('2011-06-10', side='right', kind=None)

df.reindex(pd.date_range(df.index[start-1], df.index[start])).interpolate().loc['2011-06-10']['Serie2']
Out[70]:
192.66666666666666
"
Reorder Columns by String Variable,"$ cat input.csv | ./reorder
"
Finding trigrams for entire corpus with NLTK,"fdist = nltk.FreqDist()  # Empty distribution

for filename in speeches.fileids():
    fdist.update(nltk.trigrams(speeches.words(filename)))
"
Remove common elements of hostnames (shorten hostnames) - DRY,"def shorten_hostnames(machines):
    keys, values = zip(*machines.items())
    values = [v.split('.') for v in values]
    for i, s in ((-1, slice(-1)), (0, slice(1, None))):
        while all(values):
            if not len(set(v[i] for v in values)) == 1:
                break
            if any(len(v) <= 1 for v in values):
                break
            values = [v[s] for v in values]
    return {k: '.'.join(v) for k, v in zip(keys, values)}
"
Identify the file extension of a URL,"from urlparse import urlparse
from os.path import splitext

def get_ext(url):
    """"""Return the filename extension from url, or ''.""""""
    parsed = urlparse(url)
    root, ext = splitext(parsed.path)
    return ext  # or ext[1:] if you don't want the leading '.'
"
Python social auth partial pipeline resume after form submit button,"@partial
def twitter_email(backend, user, response, is_new=None,  *args, **kwargs):
     ...
     submit_social_data = backend.strategy.session.get('submit_social_data', None)
     if is_new and not submit_social_data:
                return redirect('redirect_url')
"
How do I serialize a tree class object structure with python json?,"    @staticmethod
    def from_dict(dict_):
        """""" Recursively (re)construct TreeNode-based tree from dictionary. """"""
        root = TreeNode(dict_['name'], dict_['children'])
        root.children = list(map(TreeNode.from_dict, root.children))
        return root

if __name__ == '__main__':
    import json

    tree = TreeNode('Parent')
    tree.children.append(TreeNode('Child 1'))
    child2 = TreeNode('Child 2')
    tree.children.append(child2)
    child2.children.append(TreeNode('Grand Kid'))
    child2.children[0].children.append(TreeNode('Great Grand Kid'))

    json_str = json.dumps(tree, sort_keys=True, indent=2)
    print(json_str)

    print()
    pyobj = TreeNode.from_dict(json.loads(json_str))  # reconstitute
    print('pyobj class: {}'.format(pyobj.__class__.__name__))  # -> TreeNode
    print(json.dumps(pyobj, sort_keys=True, indent=2))
"
Passing data from Django to D3,"<!DOCTYPE html>
<meta charset=""utf-8"">
<style>

body {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {
  display: none;
}

.line {
  fill: none;
  stroke: steelblue;
  stroke-width: 1.5px;
}

</style>
<body>
<script src=""http://d3js.org/d3.v3.js""></script>
<script>

var margin = {top: 20, right: 20, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var parseDate = d3.time.format(""%Y-%m-%d"").parse; // for dates like ""2014-01-01""
//var parseDate = d3.time.format(""%Y-%m-%dT00:00:00Z"").parse;  // for dates like ""2014-01-01T00:00:00Z""

var x = d3.time.scale()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient(""bottom"");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient(""left"");

var line = d3.svg.line()
    .x(function(d) { return x(d.month); })
    .y(function(d) { return y(d.count_items); });

var svg = d3.select(""body"").append(""svg"")
    .attr(""width"", width + margin.left + margin.right)
    .attr(""height"", height + margin.top + margin.bottom)
  .append(""g"")
    .attr(""transform"", ""translate("" + margin.left + "","" + margin.top + "")"");

d3.json(""{% url ""play_count_by_month"" %}"", function(error, data) {
  data.forEach(function(d) {
    d.month = parseDate(d.month);
    d.count_items = +d.count_items;
  });

  x.domain(d3.extent(data, function(d) { return d.month; }));
  y.domain(d3.extent(data, function(d) { return d.count_items; }));

  svg.append(""g"")
      .attr(""class"", ""x axis"")
      .attr(""transform"", ""translate(0,"" + height + "")"")
      .call(xAxis);

  svg.append(""g"")
      .attr(""class"", ""y axis"")
      .call(yAxis)
    .append(""text"")
      .attr(""transform"", ""rotate(-90)"")
      .attr(""y"", 6)
      .attr(""dy"", "".71em"")
      .style(""text-anchor"", ""end"")
      .text(""Play count"");

  svg.append(""path"")
      .datum(data)
      .attr(""class"", ""line"")
      .attr(""d"", line);
});

</script>
</body>
</html>
"
Script to Shutdown Ubuntu,"ssh root@<vm-client-ip> ""shutdown -h now""
"
Python: Iterate over a sub-2d (nested) array to calculate its sum,"rgb = numpy.sum(np_pix)
"
pythonic way to replace special char at beginning or at the end of string,">>> str1 = '- 36 x 45 x 2.75-size-'
>>> str1.lstrip(' -')
'36 x 45 x 2.75-size-'
"
"PyQt4 - closing a dialog window, exec_() not working","class MyDialog(QtGui.QDialog):
    def __init__(self, parent=None):
        super(MyDialog, self).__init__(parent)
        self.ui = Ui_Dialog()
        self.ui.setupUi(self)
        # use new style signals
        self.ui.buttonBox.accepted.connect(self.accept)
        self.ui.buttonBox.rejected.connect(self.reject)
"
count file wise as well as datewise in Map reduce Python,"import sys
from itertools import groupby
for k, g in groupby(sys.stdin, key=lambda x:x.split()[0]):
    ...
"
"Creating an empty Pandas DataFrame, then filling it?","df_ = pd.DataFrame(index=index, columns=columns)
df_ = df_.fillna(0) # with 0s rather than NaNs
"
Format float with padding and justification,">>> print '|{:16s}|\n|{:16s}|'.format(format(1, '6.3f'), format(10, '6.3f'))
| 1.000          |
|10.000          |
"
Call python script from c++ without loading the file each time,"// Load the function 
PyObject *pName     = PyUnicode_FromString(""multiply"");
PyObject *pModule   = PyImport_Import(pName);
PyObject *pFunction = PyObject_GetAttrString(pModule, ""do_multiply"")
"
Python Class Desgin,"import math
epsilon = 0.000001

class Point:
    def __init__(self, x, y):
        self._x = x
        self._y = y
    def dist_to_point(self, other):
        'Compute the Euclidean distance between two Point objects'
        delta_x = self._x - other._x
        delta_y = self._y - other._y
        return (delta_x ** 2 + delta_y ** 2) ** 0.5
"
Finding all properties for a schema-less vertex class,"import pyorient


db_name = 'TestDatabaseName'

print(""Connecting to the server..."")
client = pyorient.OrientDB(""localhost"", 2424)
session_id = client.connect(""root"", ""root"")
print(""OK - sessionID: "", session_id, ""\n"")

if client.db_exists(db_name, pyorient.STORAGE_TYPE_PLOCAL):
    client.db_open(db_name, ""root"", ""root"")
    functionCall = client.command(""SELECT myFunction() UNWIND myFunction"")
    for idx, val in enumerate(functionCall):
        print(""Field name:  "" + val.myFunction)

client.db_close()
"
How to check the type of a many-to-many-field in django?,"if isinstance(field, ManyToManyField):
    pass // stuff
"
"Is it possible to call a function, process some of its conditionals, break out, call it again and have it pickup where it left off?","def foo(x):
    if x == 6:
        print 'six'
    elif x == 3:
        print 'three'
    yield
    if x > 4:
        print 'greater than four'
    else:
        print 'not greater than four'
    yield
"
"Regex: Matching a string starting with anything, then a hyphen","str = u""BBC \xe2 abc - Here is the text""
m = re.search(ur'^(.*? [-\xe2] )?(.*)', str, re.UNICODE)

# or equivalent
# m = re.match(ur'(.*? [-\xe2] )?(.*)', str, re.UNICODE)

# You don't really need re.UNICODE, but if you want to use unicode
# characters, it's better you conside à to be a letter :-) , so re.UNICODE

# group(1) contains the part before the hypen
if m.group(1) is not None:
    print m.group(1)

# group(2) contains the part after the hypen or all the string 
# if there is no hypen
print m.group(2)
"
Turning list into dict,"for link, title, date in zip(items['link'], items['title'], items['date']):
"
Numbers in a Matrix,"print '=' * 30 + "" Out "" + ""="" * 30

# Remove first and last rows.
del sub[0]
sub.pop()

# reverse values in lists
temp_sub = [l[::-1] for l in sub]
# reverse lists in matrix.
temp_sub.reverse()

# Add them and Print.
pprint([head] + sub + temp_sub + [tail])
"
"Python, Math, and Latex: Display + Compute?","In [1]: '{:+d}'.format(1)
Out[1]: '+1'

In [2]: '{:+d}'.format(-1)
Out[2]: '-1'
"
How do I split a csv field that has quotations into two fields?,"last_name, other_names, plcass, sex, age
"
python: dispatch method with string input,"func_name_dict = {'meth1':meth1,
                  'meth2':meth2,
                  ...}
"
Check if input is either digits or period,"parts = s.split(',')
result = []
for part in parts:
    if not is_numeric(part):
        result = []
        break
    else:
        result.append(float(part))
"
Python: How to get multiple entries from listbox?,"for i in sel_list[0]:
    print opt_list[int(i)]
"
Divide an image into 5x5 blocks in python and compute histogram for each block,"import numpy as numpy

grey_levels = 256
# Generate a test image
test_image = numpy.random.randint(0,grey_levels, size=(11,11))

# Define the window size
windowsize_r = 5
windowsize_c = 5

# Crop out the window and calculate the histogram
for r in range(0,test_image.shape[0] - windowsize_r, windowsize_r):
    for c in range(0,test_image.shape[1] - windowsize_c, windowsize_c):
        window = test_image[r:r+windowsize_r,c:c+windowsize_c]
        hist = numpy.histogram(window,bins=grey_levels)
"
Dropping rows fast from a multi-indexed data frame conditional on the level 1 index,"In [213]: df.query('date < date_threshold')
Out[213]: 
                    date   userid  watchers  date_threshold
repositoryid                                               
5910995       1348293168  1449180         1      1348293300
5911012       1348292421  2627657         1      1348292500
5911046       1367171000  1219404         1      1368722900
5911046       1368722792  1892225         2      1368722900
5911088       1348302179  1521780         1      1348303100
"
Regex one-liner for matching only what comes after a certain word?,">>> s ='some text here, songs: song1, song2, song3, fro: othenkl'
>>> re.search(r'(?<=songs:)(.+),', s,flags=re.I).group(1).split(',')
[' song1', ' song2', ' song3']
"
Custom comparison functions for built-in types in Python,"class WrappedThingy(object):
    def __init__(self, thingy):
        self.thingy = thingy
    def __eq__(self, other):
        return self.thingy.notkey == other.thingy.notkey
    def __hash__(self):
        return hash(self.thingy.notkey)
"
How to create a dictionary with columns given as keys and values," edges = open('romEdges.txt')
 dict = {line[:1]:line[1:].split()[0] for line in edges}
 print dict
 edges.close()
"
Python: Finding user id and moving directories (Windows),"import ctypes
from ctypes import wintypes

__all__ = ['get_known_folder_path', 'FOLDERID']

ole32 = ctypes.OleDLL('ole32')
shell32 = ctypes.OleDLL('shell32')

class GUID(ctypes.Structure):
    _fields_ = (('Data1', ctypes.c_ulong),
                ('Data2', ctypes.c_ushort),
                ('Data3', ctypes.c_ushort),
                ('Data4', ctypes.c_char * 8))
    def __init__(self, guid_string):
        ole32.IIDFromString(guid_string, ctypes.byref(self))

IID = GUID
LPIID = ctypes.POINTER(IID)
LPCOLESTR = wintypes.LPCWSTR
ole32.IIDFromString.argtypes = (LPCOLESTR,
                                LPIID)

ole32.CoTaskMemFree.restype = None
ole32.CoTaskMemFree.argtypes = (wintypes.LPVOID,)

REFKNOWNFOLDERID = LPIID
shell32.SHGetKnownFolderPath.argtypes = (REFKNOWNFOLDERID,
                                         wintypes.DWORD,
                                         wintypes.HANDLE,
                                         ctypes.POINTER(wintypes.LPWSTR))

def get_known_folder_path(folder_id):
    pszPath = wintypes.LPWSTR()
    shell32.SHGetKnownFolderPath(ctypes.byref(folder_id),
                                 0, None, ctypes.byref(pszPath))
    folder_path = pszPath.value
    ole32.CoTaskMemFree(pszPath)
    return folder_path

# KNOWNFOLDERID
# https://msdn.microsoft.com/en-us/library/dd378457

# fixed
FOLDERID_Windows         = GUID('{F38BF404-1D43-42F2-9305-67DE0B28FC23}')
FOLDERID_System          = GUID('{1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}')
FOLDERID_SystemX86       = GUID('{D65231B0-B2F1-4857-A4CE-A8E7C6EA7D27}')
FOLDERID_Fonts           = GUID('{FD228CB7-AE11-4AE3-864C-16F3910AB8FE}')
FOLDERID_ResourceDir     = GUID('{8AD10C31-2ADB-4296-A8F7-E4701232C972}')
FOLDERID_UserProfiles    = GUID('{0762D272-C50A-4BB0-A382-697DCD729B80}')
FOLDERID_Profile         = GUID('{5E6C858F-0E22-4760-9AFE-EA3317B67173}')
FOLDERID_Public          = GUID('{DFDF76A2-C82A-4D63-906A-5644AC457385}')
FOLDERID_ProgramData     = GUID('{62AB5D82-FDC1-4DC3-A9DD-070D1D495D97}')
FOLDERID_ProgramFiles    = GUID('{905e63b6-c1bf-494e-b29c-65b732d3d21a}')
FOLDERID_ProgramFilesX64 = GUID('{6D809377-6AF0-444b-8957-A3773F02200E}')
FOLDERID_ProgramFilesX86 = GUID('{7C5A40EF-A0FB-4BFC-874A-C0F2E0B9FA8E}')
FOLDERID_ProgramFilesCommon    = GUID('{F7F1ED05-9F6D-47A2-AAAE-29D317C6F066}')
FOLDERID_ProgramFilesCommonX64 = GUID('{6365D5A7-0F0D-45E5-87F6-0DA56B6A4F7D}')
FOLDERID_ProgramFilesCommonX86 = GUID('{DE974D24-D9C6-4D3E-BF91-F4455120B917}')

# common
FOLDERID_PublicDesktop   = GUID('{C4AA340D-F20F-4863-AFEF-F87EF2E6BA25}')
FOLDERID_PublicDocuments = GUID('{ED4824AF-DCE4-45A8-81E2-FC7965083634}')
FOLDERID_PublicDownloads = GUID('{3D644C9B-1FB8-4f30-9B45-F670235F79C0}')
FOLDERID_PublicMusic     = GUID('{3214FAB5-9757-4298-BB61-92A9DEAA44FF}')
FOLDERID_PublicPictures  = GUID('{B6EBFB86-6907-413C-9AF7-4FC2ABF07CC5}')
FOLDERID_PublicVideos    = GUID('{2400183A-6185-49FB-A2D8-4A392A602BA3}')
FOLDERID_CommonStartMenu = GUID('{A4115719-D62E-491D-AA7C-E74B8BE3B067}')
FOLDERID_CommonPrograms  = GUID('{0139D44E-6AFE-49F2-8690-3DAFCAE6FFB8}')
FOLDERID_CommonStartup   = GUID('{82A5EA35-D9CD-47C5-9629-E15D2F714E6E}')
FOLDERID_CommonTemplates = GUID('{B94237E7-57AC-4347-9151-B08C6C32D1F7}')

# peruser
FOLDERID_Desktop         = GUID('{B4BFCC3A-DB2C-424C-B029-7FE99A87C641}')
FOLDERID_Documents       = GUID('{FDD39AD0-238F-46AF-ADB4-6C85480369C7}')
FOLDERID_Downloads       = GUID('{374DE290-123F-4565-9164-39C4925E467B}')
FOLDERID_Music           = GUID('{4BD8D571-6D19-48D3-BE97-422220080E43}')
FOLDERID_Pictures        = GUID('{33E28130-4E1E-4676-835A-98395C3BC3BB}')
FOLDERID_Videos          = GUID('{18989B1D-99B5-455B-841C-AB7C74E4DDFC}')
FOLDERID_LocalAppData    = GUID('{F1B32785-6FBA-4FCF-9D55-7B8E7F157091}')
FOLDERID_LocalAppDataLow = GUID('{A520A1A4-1780-4FF6-BD18-167343C5AF16}')
FOLDERID_RoamingAppData  = GUID('{3EB685DB-65F9-4CF6-A03A-E3EF65729F3D}')
FOLDERID_StartMenu       = GUID('{625B53C3-AB48-4EC1-BA1F-A1EF4146FC19}')
FOLDERID_Programs        = GUID('{A77F5D77-2E2B-44C3-A6A2-ABA601054A51}')
FOLDERID_Startup         = GUID('{B97D20BB-F46A-4C97-BA10-5E3608430854}')
FOLDERID_Templates       = GUID('{A63293E8-664E-48DB-A079-DF759E0509F7}')
FOLDERID_UserProgramFiles = GUID('{5CD7AEE2-2219-4A67-B85D-6C9CE15660CB}')

class SimpleNamespace(object):
    def __init__(self, **kwds):
        vars(self).update(kwds)
    def __dir__(self):
        return [x for x in sorted(vars(self)) if not x.startswith('__')]

FOLDERID = SimpleNamespace(
    # fixed
    Windows = FOLDERID_Windows,
    System = FOLDERID_System,
    SystemX86 = FOLDERID_SystemX86,
    Fonts = FOLDERID_Fonts,
    ResourceDir = FOLDERID_ResourceDir,
    UserProfiles = FOLDERID_UserProfiles,
    Profile = FOLDERID_Profile,
    Public = FOLDERID_Public,
    ProgramData = FOLDERID_ProgramData,
    ProgramFiles = FOLDERID_ProgramFiles,
    ProgramFilesX64 = FOLDERID_ProgramFilesX64,
    ProgramFilesX86 = FOLDERID_ProgramFilesX86,
    ProgramFilesCommon = FOLDERID_ProgramFilesCommon,
    ProgramFilesCommonX64 = FOLDERID_ProgramFilesCommonX64,
    ProgramFilesCommonX86 = FOLDERID_ProgramFilesCommonX86,
    # common
    PublicDesktop=FOLDERID_PublicDesktop,
    PublicDocuments=FOLDERID_PublicDocuments,
    PublicDownloads=FOLDERID_PublicDownloads,
    PublicMusic=FOLDERID_PublicMusic,
    PublicPictures=FOLDERID_PublicPictures,
    PublicVideos=FOLDERID_PublicVideos,
    CommonStartMenu=FOLDERID_CommonStartMenu,
    CommonPrograms=FOLDERID_CommonPrograms,
    CommonStartup=FOLDERID_CommonStartup,
    CommonTemplates=FOLDERID_CommonTemplates,
    # user
    Desktop=FOLDERID_Desktop,
    Documents=FOLDERID_Documents,
    Downloads=FOLDERID_Downloads,
    Music=FOLDERID_Music,
    Pictures=FOLDERID_Pictures,
    Videos=FOLDERID_Videos,
    LocalAppData=FOLDERID_LocalAppData,
    LocalAppDataLow=FOLDERID_LocalAppDataLow,
    RoamingAppData=FOLDERID_RoamingAppData,
    StartMenu=FOLDERID_StartMenu,
    Programs=FOLDERID_Programs,
    Startup=FOLDERID_Startup,
    Templates=FOLDERID_Templates,
    UserProgramFiles=FOLDERID_UserProgramFiles,
)

if __name__ == '__main__':
    for fid in dir(FOLDERID):
        print(""%s = %s"" % (fid, get_known_folder_path(getattr(FOLDERID, fid))))
"
Sorting a list and dict keys,"import re
photos.sort(key = lambda x : int(re.findall('\d+', x)[0]))
"
In Python what is a global statement?,"myvariable = 5
def func():
    print myvariable  #prints 5

def func2():
    x = 3
    def func3():
        print x  #will print 3 because it picks it up from `func2`'s scope

    func3()
"
How to sort object attributes,"finger_lengths, finger_names = zip(*sorted(zip(finger_lengths, finger_names)))
"
Pandas/Statsmodel OLS predicting future values,"X = sm.add_constant(X)
"
Sorting an Array Alongside a 2d Array,">>> x=np.random.random((10,2))
>>> x
array([[ 0.72789275,  0.29404982],
       [ 0.05149693,  0.24411234],
       [ 0.34863983,  0.58950756],
       [ 0.81916424,  0.32032827],
       [ 0.52958012,  0.00417253],
       [ 0.41587698,  0.32733306],
       [ 0.79918377,  0.18465189],
       [ 0.678948  ,  0.55039723],
       [ 0.8287709 ,  0.54735691],
       [ 0.74044999,  0.70688683]])
>>> idx = np.argsort(x[:,0])
>>> idx
array([1, 2, 5, 4, 7, 0, 9, 6, 3, 8])
>>> xsorted = x[idx,:]
>>> xsorted
array([[ 0.05149693,  0.24411234],
       [ 0.34863983,  0.58950756],
       [ 0.41587698,  0.32733306],
       [ 0.52958012,  0.00417253],
       [ 0.678948  ,  0.55039723],
       [ 0.72789275,  0.29404982],
       [ 0.74044999,  0.70688683],
       [ 0.79918377,  0.18465189],
       [ 0.81916424,  0.32032827],
       [ 0.8287709 ,  0.54735691]])
"
How to write a Python UDF for User Defined Aggregate Function in Hive,"add file script.py;
"
Pass Variables within Python Class,"if re.match(""[0-9a-fA-F]\{2\}([.-: ][0-9a-fA-F]\{2\}){0}$"".format(x), self.input_value):
"
Python - modelling probability,"p = 0.40

def generate():
    return random.random() >= p
"
How to plot a PMF of a sample?,">>> pmf.plot(kind='bar')
"
Unicode Web Scraping,"d2=item.find(""div"",{""class"":""panel-body standard-p""})
d3=d2.text
print d3
p_id = re.findall(r'[0-9]{9}',d3)
idICareAbout = p_id[0]
"
Python Integer for loop 200 to 205,"success_codes = range(200, 300)
retry_code    = range(400, 405) + range(500, 504)
fail_codes    = range(504, 507)
"
Best Way of redirecting output to a VTE terminal,"#Uncomment the next line to get the print() function of python 3
#from __future__ import print_function
import os
import subprocess
from subprocess import Popen
command = ""echo \""something\""""
env = os.environ.copy()
try:
    po = Popen(command, shell=True, stdout=subprocess.PIPE, stdin=subprocess.PIPE,
        universal_newlines=True, env=env)
    po.wait()
    output, error_output = po.communicate()

    if po.returncode:
        print(error_output)
    else:
        print(output)

except OSError as e:
    print('Execution failed:', e, file=sys.stderr)
"
How to build a QGroupBox with a button in the title?,"class ButtonGroupBox(QtGui.QWidget):

    def __init__(self, parent=None):
        super(ButtonGroupBox, self).__init__(parent=parent)

        self.layout = QtGui.QVBoxLayout(self)
        self.layout.setContentsMargins(0,24,0,0)
        self.groupBox = QtGui.QGroupBox(self)
        self.button = QtGui.QPushButton(""FOO"", parent=self)
        self.layout.addWidget(self.groupBox)

        self.button.move(0, -4) 
"
searching web-client for python that can handle frames,"driver.switch_to.default_content()
"
Are haskell type declarations used the same way as python class/function documentation?,"*Main> readAndShowAsInt ""2""
""2""
"
Output Tweepy TwitterStreamer to .csv from Python 2.7,"class StdOutListener(StreamListener):        
        """""" A listener handles tweets are the received from the stream.
        This is a basic listener that just prints received tweets to stdout.

        """"""        
    def on_status(self, data):            
        try:                
            print '%s , %s , %s , %s' % (data.text,\ <-- change to data.csv?               
            data.author.screen_name,data.created_at,data.source)
            with open(""data.csv"", 'a+') as f:
                f.write(""{text},{name},{created},{source}\n""
                        .format(text=str(data.text), 
                                name=str(data.author.screen_name), 
                                created=str(data.created_at), 
                                source=str(data.source)))               
            return True            
        except Exception, e:                
            print >> sys.stderr, 'Encountered Exception:', e                
            pass        

    def on_error(self, status):            
        return True
"
Pyside - Select all text when QLineEdit gets focus,"import sys
from PySide.QtGui import QLineEdit, QApplication, QVBoxLayout, QWidget
class MyLineEdit(QLineEdit):
    def __init__(self, parent=None):
        super(MyLineEdit, self).__init__(parent)

    def mousePressEvent(self, e):
        self.selectAll()      

app = QApplication(sys.argv)
top = QWidget()
layout = QVBoxLayout()
layout.addWidget(MyLineEdit())
layout.addWidget(MyLineEdit())
top.setLayout(layout)
top.show()
app.exec_()
"
Dynamically import a callable given the full module path?,"def import_path(name):
    modname, _, attr = name.rpartition('.')
    if not modname:
        # name was just a single module name
        return __import__(attr)
    m = __import__(modname, fromlist=[attr])
    return getattr(m, attr)
"
Replace % followed by a number in a string,">>> s.replace(""%0"", ""something"")
'Hello %length there something man'
"
Way to alter behavior based on caller using property getter without reflection or making caller a member in Python,"# page.py
class Page(object):
    # ...
    def something(self):
        import session
        self.other_session = session.Session()
"
"PyQt: How to determine, which mouse button is pressed and over which QTableView's cell at the same time?","    index = tableview.indexAt(event.pos())
"
Add axis to colorbar in python matplotlib,"import numpy as np
import matplotlib.pyplot as plt

npoints = 1000
x, y = np.random.normal(10, 2, (2, npoints))

fig, ax = plt.subplots()
artist = ax.hexbin(x, y, gridsize=20, cmap='gray_r', edgecolor='white')

cax = fig.add_axes([0.8, 0.15, 0.05, 0.3])
cbar = fig.colorbar(artist, cax=cax)

ax.spines['right'].set(visible=False)
ax.spines['top'].set(visible=False)
ax.tick_params(top=False, right=False)

cbar.set_ticks([5, 10, 15])
cbar.ax.set_title('Bin Counts', ha='left', x=0)
cbar.ax.tick_params(axis='y', color='white', left=True, right=True,
                    length=5, width=1.5)
cbar.outline.remove()

plt.show()
"
pymong group and count,"col.aggregate([
{$match: {""date"": {$gte:start, $lt: end}}},
{$group:{""_id"":{""pack"":""$pack"",""version"":""$version"",""prg"":""$prg""},
         ""count"":{$sum:1},""rec"":{$push:""$$ROOT""}}},
{$unwind:""$rec""},
{$project:{""pack"":""$_id.pack"",""version"":""$_id.version"",
           ""prg_detail"":{""name"":""$_id.prg"",""count"":""$count""},""rec"":1}},
{$group:{""_id"":{""pack"":""$pack"",
                ""version"":""$version""},
         ""progs"":{$addToSet:""$prg_detail""},
         ""hits"":{$sum:1},
         ""users"":{$addToSet:""$rec.uid""}}}])
"
How should I get a list of duplicate sublists in a list?,"from collections import Counter
a = [[1, 2], [1, 2], [2, 2], [3, 2], [4, 2], [5, 2], [5, 2]]


cn = Counter(map(tuple,a))

print([sub for sub in a if cn[tuple(sub)] > 1])
"
Strip URL - Python,">>> domain = 'http://www.example.com/'
>>> '.'.join(domain.replace('http://','').split('/')[0].split('.')[-2:])
"
How would I implement a dict with Abstract Base Classes in Python?,">>> d = D((e, i) for i, e in enumerate('abc'))
>>> d
<__main__.D object at 0x7f75eb242e50>, D({'b': 1, 'c': 2, 'a': 0})
>>> d.a
0
>>> d.get('b')
1
>>> d.setdefault('d', []).append(3)
>>> d.foo = 'bar'
>>> print(d)
{'b': 1, 'c': 2, 'a': 0, 'foo': 'bar', 'd': [3]}
"
"malformed start tag error - Python, BeautifulSoup, and Sipie - Ubuntu 10.04","sudo easy_install bs4
sudo apt-get install python-html5lib
"
Regular expression in python re.findall(),"(<(?:abc|ghj)>.*?<\*>)
"
Constructing an if statement from the client data in python,"def my_eval(condition1, lo, condition2)
    return {
      'and': condition1 and condition2,
      'or': condition1 or condition2
           }[lo]
"
how to create columns out of a multi-index in a pandas dataframe?,"df = df.reset_index()
"
Exception handling when using Python's subprocess.Popen,"def __enter__(self):
    return self

def __exit__(self, type, value, traceback):
    if self.stdout:
        self.stdout.close()
    if self.stderr:
        self.stderr.close()
    if self.stdin:
        self.stdin.close()
    # Wait for the process to terminate, to avoid zombies.
    self.wait()
"
"How do I do this type of 2D ""fancy"" indexing without python loops?","array([[ 40.,  31.,  42.,  23.,  34.,  25.,   6.,  37.,  18.,   9.],
   [ 40.,  21.,  12.,  43.,   4.,  25.,  46.,  17.,  38.,  29.]])
"
Overloaded or rewritten str() function in Python,"del str
"
Matching between two ! in a file in python,">>> m = re.search('^!.*^!', text, re.MULTILINE | re.DOTALL)
>>> m.group(0)
'!\n vserver XXXX\n virtual XX.xx.XX.XX tcp 389\n owner LDAP\n serverfarm XXX\n idle 5\n persistent rebalance\n inservice\n!'
"
Set Parameters of Screenshot taken by Python,"from PyQt4 import QtCore, QtGui, QtWebKit

class WebPage(QtWebKit.QWebPage):
    def __init__(self):
        QtWebKit.QWebPage.__init__(self)
        self.mainFrame().setScrollBarPolicy(
            QtCore.Qt.Horizontal, QtCore.Qt.ScrollBarAlwaysOff)
        self.mainFrame().setScrollBarPolicy(
            QtCore.Qt.Vertical, QtCore.Qt.ScrollBarAlwaysOff)
        self.mainFrame().loadFinished.connect(self.handleLoadFinished)
        printer = QtGui.QPrinter()
        printer.setPaperSize(QtGui.QPrinter.A4)
        self.setViewportSize(printer.paperSize(
            QtGui.QPrinter.DevicePixel).toSize())

    def capture(self, url):
        self._url = QtCore.QUrl(url)
        QtCore.QTimer.singleShot(0, self.handleLoad)

    def handleLoad(self):
        self.mainFrame().load(self._url)

    def handleLoadFinished(self):
        image = QtGui.QImage(self.viewportSize(),
                             QtGui.QImage.Format_ARGB32)
        painter = QtGui.QPainter(image)
        self.mainFrame().render(painter)
        painter.end()
        output = QtCore.QFile()
        output.open(1, QtCore.QIODevice.WriteOnly)
        image.save(output, 'PNG')
        sys.exit(0)

if __name__ == '__main__':

    import sys, signal
    app = QtGui.QApplication(sys.argv)
    signal.signal(signal.SIGINT, signal.SIG_DFL)
    page = WebPage()
    page.capture(sys.argv[1])
    sys.exit(app.exec_())
"
Pass url params from flask to angular,"@app.route('/api/search')
def search():
    res = querydb(request.args)
    return jsonify(res)


@app.route('/')
def index():
    return render_template('index.html')
"
"Django + Jquery, expanding AJAX div","from django.conf.urls.defaults import *
urlpatterns = patterns('django.views.generic.simple',
    (r'^$',                    'direct_to_template', {'template': 'page.html'}),
    (r'^external/content/a/$', 'direct_to_template', {'template': 'a.html'}),
    (r'^external/content/b/$', 'direct_to_template', {'template': 'b.html'}),
)
"
Beautiful Soup (Python),">>> for para in soup.find_all('p'):
...     if para.strong is not None:
...         print para.strong.get_text()
...         lines = filter(None, (t.strip() for t in para.find_all(text=True)))[1:]
...         print '\n'.join(lines)
...         print
... 
CLOSED:
-- Haveli, Cambridge (Inman Square), MA
-- Ma Soba, Boston (Beacon Hill), MA
-- Milestone, Wellesley, MA
-- Scosso, Peabody, MA
-- Sonny Noto's, East Boston, MA
-- Viva Mexican Grill, Wayland, MA

OPEN:
-- The Abbey, Cambridge, MA
-- The Bancroft, Burlington, MA
-- Beantown Pho and Grill, Boston (Back Bay), MA
-- The Briar Rose, Hyde Park, MA
-- Caffe Nero, Boston, MA
-- Cheeburger Cheeburger, Swampscott, MA
"
How do I print colored output to the terminal in Python?,"import sys
from colors import *

sys.stdout.write(RED)
print ""All following prints rendered in red, until changed""

sys.stdout.write(REVERSE + CYAN)
print ""From now on change to cyan, in reverse mode""
print ""NOTE: 'CYAN + REVERSE' wouldn't work""

sys.stdout.write(RESET)
print ""'REVERSE' and similar modes need be reset explicitly""
print ""For color alone this is not needed; just change to new color""
print ""All normal prints after 'RESET' above.""
"
Placing variables inside a python list comprehension,"clips = [
ImageClip(os.path.join(folder,pic))
         .resize(width=w*9.3/16)
         .set_start(start)
         .set_end(stop)
         .set_pos(lambda t:(max((402), (int(w-3*w*t))), ""center""))

    for start, stop, pic in 
    (
        itertools.count(1, step=2),
        itertools.count(3, step=2),
        enumerate(picfiles)
    )
]
"
NumPy: using loadtxt or genfromtxt to read a ragged structure,"[(9998, 1, 1, 128, (10097, 10098, 10199, 10198, 20298, 20299, 20400, 20399))
 (9999, 1, 1, 128, (10098, 10099, 10200, 10199, 20299, 20300, 20401, 20400))
 (10000, 1, 1, 128, (10099, 10100, 10201, 10200, 20300, 20301, 20402, 20401))
 (10001, 1, 2, 44, (2071, 2172, 12373, 12272))
 (10002, 1, 2, 44, (2172, 2273, 12474, 1237))]
"
Pygame enemy display random when player moves by keyboard,"import pygame
import random

#----------------------------------------------------------------------

class Enemy():

    def __init__(self, image, x=0, y=0):

        self.image = pygame.image.load(image).convert()
        self.image.set_colorkey( (255,255,255) )

        self.rect = self.image.get_rect()

        self.rect.centerx = x
        self.rect.centery = y

    #------------

    def draw(self, screen):
        screen.blit(self.image, self.rect)

    #------------

    def update(self):
        # here change randomly positon
        self.rect.topleft = random.randint(60, 220+1), random.randint(0, 475+1)

#----------------------------------------------------------------------
"
Matplotlib artist to stay same size when zoomed in but ALSO move with panning?,"import matplotlib.pyplot as plt
import matplotlib.patches as mpatches
import matplotlib.path as mpath
import matplotlib.transforms as mtrans

import numpy as np


class FixedPointOffsetTransform(mtrans.Transform):
    """"""
    Always returns the same transformed point plus
    the given point in device coordinates as an offset.
    """"""
    def __init__(self, trans, fixed_point):
        mtrans.Transform.__init__(self)
        self.input_dims = self.output_dims = 2
        self.trans = trans
        self.fixed_point = np.array(fixed_point).reshape(1, 2)

    def transform(self, values):
        fp = self.trans.transform(self.fixed_point)
        values = np.array(values)
        if values.ndim == 1:
            return fp.flatten() + values
        else:
            return fp + values


plt.scatter([3.1, 3.2, 3.4, 5], [2, 2, 2, 6])

ax = plt.gca()
fixed_pt_trans = FixedPointOffsetTransform(ax.transData, (0, 2))

xdata_yfixed = mtrans.blended_transform_factory(ax.transData, fixed_pt_trans)


x = [3.075, 3.425] # x range of box (in data coords)
height = 20 # of box in device coords (pixels)
path = mpath.Path([[x[0], -height], [x[1], -height],
                   [x[1], height],  [x[0], height],
                   [x[0], -height]])
patch = mpatches.PathPatch(path, transform=xdata_yfixed,
                           facecolor='red', edgecolor='black',
                           alpha=0.4, zorder=0)
ax.add_patch(patch)

plt.show()
"
What django resolve_variable do? (template.Variable),"@register.tag
def my_tag(parser, token):
    # This version uses a regular expression to parse tag contents.
    try:
        # Splitting by None == splitting by spaces.
        tag_name, var_name = token.contents.split(None, 1)
    except ValueError:
        raise template.TemplateSyntaxError, ""%r tag requires arguments"" % token.contents.split()[0]
    #this will ""bind"" the variable in the template to the actual_var object
    actual_var = template.Variable(var_name)
    return MyNode(template_variable)


class MyNode(template.Node):
    def __init__(self, actual_var):
        self.actual_var = actual_var

    def render(self, context):
        actual_var_value = self.actual_var.resolve(context)
        #do something with it
        return result
"
How do I get python to tell me which of the following variables makes my if-statement valid?,"if A[x] == ""TRUE"":
    # A is true
elif B[x] == ""TRUE"":
    # B is true
elif C[x] == ""TRUE"":
    # C is true
elif D[x] == ""TRUE"":
    # D is true
else:
    # neither is true
"
Using datetime module to set time intervals,"from datetime import datetime, timedelta

from delorean import stops
import delorean

start = datetime.today()
stop = datetime.today() + timedelta(7)

for day in stops(freq=delorean.DAILY, start=start, stop=stop):
    start = day.naive().replace(hour=8, minute=0)
    stop = day.naive().replace(hour=12, minute=0)

    for t in stops(freq=delorean.MINUTELY, interval=30, start=start, stop=stop):
        print t.datetime.strftime(""%A %H:%M"")
"
How and when to appropriately use weakref in Python,"self.children = {}
"
"In Python, is there a way to call a method on every item of an iterable?","def do_all(iterable, func):
    dispose(itertools.imap(func, iterable))
"
How to compare IPV6 addresses in python,"import socket

def is_valid_ipv6_address(address):
try:
    socket.inet_pton(socket.AF_INET6, address)
except socket.error:  # not a valid address
    return False
return True
"
How to check to see if the contents in file A exist in the contents files in a directory,"#!/usr/bin/env python
import os
import re
import sys

def files_with_matched_lines(topdir, matched):
    for root, dirs, files in os.walk(topdir, topdown=True):
        dirs[:] = [d for d in dirs if not d.startswith('.')] # skip ""hidden"" dirs
        for filename in files:
            if filename.endswith("".txt""):
                path = os.path.join(root, filename)
                try:
                    with open(path) as file:
                        for line in file:
                            if matched(line):
                                yield path
                                break
                except EnvironmentError as e:
                    print >>sys.stderr, e

with open('/path/list') as file:
    hosts = file.read().splitlines()
matched = re.compile(r""\b(?:%s)\b"" % ""|"".join(map(re.escape, hosts))).search
for path in files_with_matched_lines(""/path/somefolder/"", matched):
    print path
"
Finding words that are the reverse of each other in a file,">>> list = [1,2,3]
>>> it3 = iter(list)
>>> it4 = iter(list)
>>> id(it3)
3078746156L
>>> id(it4)
3078746188L
>>> id(list)
3078731244L
"
efficiently dstack arrays from dictionary python,">>> import timeit
>>> timeit.Timer('p1 = np.dstack((PARTS[k].partposit for k in sorted(PARTS.keys())))', ""from __main__ import np, PARTS"").timeit(number = 1)
2.1245520114898682
"
How do I import and change a value from one script to another in python?,"from threading import Lock

_balance_lock = Lock()

class BalanceStale(Exception):
    pass

def set_balance_if_known_value_is_still_current(old_value, new_value):
    with _balance_lock:
        if _balance != old_value:
            raise BalanceStale('{} != {}'.format(_balance, old_value))
        else:
            _balance = new_value
"
Export & Map CSV output to MySQL table using Python,"$ python csv2sql.py data.csv 
insert into mytable
    values (20140422105054,""172.16.10.76"",41065,""172.16.10.65"",5001,6,""0.0-20.0"",73138176,29215083);
insert into mytable
    values (20140422105054,""172.16.10.76"",5001,""172.16.10.65"",56254,4,""0.0-20.0"",46350336,18502933);
insert into mytable
    values (20140422105100,""172.16.10.76"",54550,""172.16.10.50"",5001,8,""0.0-20.0"",67895296,27129408);
insert into mytable
    values (20140422105100,""172.16.10.76"",5001,""172.16.10.50"",58447,5,""0.0-20.1"",50937856,20292796);
insert into mytable
    values (20140422105553,""172.16.10.76"",5001,""172.16.10.65"",47382,7,""0.0-20.1"",51118080,20358083);
insert into mytable
    values (20140422105553,""172.16.10.76"",41067,""172.16.10.65"",5001,5,""0.0-20.1"",76677120,30524007);
insert into mytable
    values (20140422105600,""172.16.10.76"",5001,""172.16.10.50"",40734,4,""0.0-20.0"",57606144,23001066);
insert into mytable
    values (20140422105600,""172.16.10.76"",54552,""172.16.10.50"",5001,8,""0.0-20.0"",70123520,28019115);
insert into mytable
    values (20140422110053,""172.16.10.76"",41070,""172.16.10.65"",5001,5,""0.0-20.1"",63438848,25284066);
insert into mytable
    values (20140422110053,""172.16.10.76"",5001,""172.16.10.65"",46462,6,""0.0-20.1"",11321344,4497094);
"
python decorator parameter using variable from function its wrapping,"@cache_w_keyfunc(lambda foo, bar: (bar,))
def my_function(foo, bar):
    pass

@cache_w_keyfunc(lambda user, foo, bar: (foo, bar))
def another_function(user, foo, bar):
    pass
"
SQLalchemy Joined Inheritance Query Based on Mixin Column,"from sqlalchemy import *
from sqlalchemy.orm import *
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy import inspect

Base = declarative_base()

class BaseClass(Base):
    __tablename__ = 'base'

    id = Column(Integer, primary_key=True)
    type = Column(String)
    a = Column(Integer)
    b = Column(Integer)
    __mapper_args__ = {""polymorphic_on"": type}

class Mixin(object):
    c = Column(Integer)

class ItemA(BaseClass):
    __tablename__ = 'a'
    id = Column(ForeignKey('base.id'), primary_key=True)
    d = Column(Integer)
    __mapper_args__ = {""polymorphic_identity"": 'a'}

class ItemB(Mixin, BaseClass):
    __tablename__ = 'b'
    id = Column(ForeignKey('base.id'), primary_key=True)
    __mapper_args__ = {""polymorphic_identity"": 'b'}

class ItemC(Mixin, BaseClass):
    __tablename__ = 'c'
    id = Column(ForeignKey('base.id'), primary_key=True)
    e = Column(Integer)
    __mapper_args__ = {""polymorphic_identity"": 'c'}

e = create_engine(""sqlite://"", echo=True)
Base.metadata.create_all(e)

def magic_w_poly(base):
    insp = inspect(base)

    w_poly = []
    crit = []

    for mapper in insp.self_and_descendants:
        if ""c"" in mapper.c:
            w_poly.append(mapper)
            crit.append(mapper.c.c)
    w_col_c = with_polymorphic(base, w_poly)

    def comparator(value):
        return or_(
                    crit_elem == value
                    for crit_elem in crit
                )

    return w_col_c, comparator

s = Session(e)

w_col, comp = magic_w_poly(BaseClass)

print s.query(w_col).filter(comp(35))
"
relation between two columns Python,">>> result.groupby(['Items'])['Total'].sum().to_frame()

       Total
Items       
1         20
2         60
3         60
"
Is a specific timezone using DST right now?,"from pytz import timezone
from datetime import datetime

zonename = ""Pacific/Wallis""
now = datetime.now(tz=timezone(zonename))
dst_timedelta = now.dst()
### dst_timedelta is offset to the winter time, 
### thus timedelta(0) for winter time and timedelta(0, 3600) for DST; 
### it returns None if timezone is not set

print ""DST"" if dst_timedelta else ""no DST""
"
Contracting elements from two different lists,"import itertools

l1 = 'AB'
l2 = 'CDE'

n = min(len(l1),len(l2))
print('; '.join(
    ','.join(a+b for a,b in zip(s1,s2))
    for s1,s2 in itertools.product(
        itertools.permutations(l1,n),
        itertools.combinations(l2,n),
    )
))
"
How to make a snapshot of a specific huge PyQt window?,"pix=widget.grab()
pix.save(""save.png"")
"
Test an object is a subclass of the type of another instance,">>> class Item:
...     def __init__(self,a):
...         self.a=a
... 
>>> class Sub(Item):
...     def __init__(self,a,b):
...         self.b=b
...         Item.__init__(self,a)
... 
>>> class SubSub(Sub):
...     def __init__(self,a,b,c):
...        self.c=c
...        Sub.__init__(self,a,b)
... 
>>> obj1=Item(1)
>>> obj2=Sub(1,2)
>>> obj3=SubSub(1,2,3)
>>> isinstance(obj2, type(obj1))
True
>>> issubclass(type(obj2), Item)
True
"
How can I start a graphical widget without control flow getting stuck in its main loop in python?,"def main(): #This is the self.osc.main() function
    while True: #run forever
        doSomething()

def main(): #This is the self.main() function
    while True: #also run forever
        doSomethingElse()
"
How to extract a number from a request.path in Django,"object_id = int([i for i in str(request.path).split('/') if i][-1])
print(object_id)
"
python with statement and 2 for loops,"with open(fname) as f:
    for line in f:
        line_count += 1
    f.seek(0)
    for line in f:
        line_processed += 1
"
Nested while loop with trailer values,"nextcustomer = ""yes""    
while nextcustomer != ""no"":
    amtgiven = 0
    change = 0
    quantity = 0
    foodprice = 0
    totalprice = 0
    billtax = 0
    finalbill = 0
    itemnum = 0
"
how do i find and replace items in a text file in pyscripter?,"import ast
import json

with open('file.txt') as f:
    lines = f.read().split('\n')
contents = [ast.literal_eval(line) for line in lines]

# ...and now choose from above how you'd like to write it back to the file
"
Constraining the least squares fitting in python,"A = U + 1j*V
"
Python Challenge Lvl 3 Explaination (warning spoilers!),"pat = re.compile('''
    [^A-Z]    # any character except a capital letter
    [A-Z]{3}  # three capital letters
    (         # the beginning of a capturing group
    [a-z]     # one lowercase letter 
    )         # the end of the group
    [A-Z]{3}  # three capital letters
    [^A-Z]    # any character except a capital letter
    ''', re.VERBOSE)
"
Pyqt Mouse MouseButtonDblClick event,"from PyQt4 import QtCore, QtGui

class ClickHandler():
    def __init__(self, time):
        self.timer = QtCore.QTimer()
        self.timer.setInterval(time)
        self.timer.setSingleShot(True)
        self.timer.timeout.connect(self.timeout)
        self.click_count = 0

    def timeout(self):
        if self.click_count == 1:
            print('Single click')
        elif self.click_count > 1:
            print('Double click')    
        self.click_count = 0

    def __call__(self):
        self.click_count += 1
        if not self.timer.isActive():
            self.timer.start()


class MyDialog(QtGui.QDialog):
    def __init__(self, parent=None):
        super(MyDialog, self).__init__(parent)

        self.button1 = QtGui.QPushButton(""Button 1"")
        hbox = QtGui.QHBoxLayout()
        hbox.addWidget(self.button1)
        self.setLayout(hbox)

        self.click_handler = ClickHandler(300)
        self.button1.clicked.connect(self.click_handler)

if __name__ == '__main__':
    import sys
    app = QtGui.QApplication(sys.argv)
    w = MyDialog()
    w.show()
    sys.exit(app.exec_())
"
Flattening shallow list with pandas,"join = lambda list_of_lists: (val for sublist in list_of_lists for val in sublist if isinstance(sublist, list))
"
How to print to Python terminal with Boost::Python,"#include <iostream>

using namespace std;

void say_hello(const char* name) {
    cout << ""Hello "" <<  name << ""!\n"";
}

#include <boost/python/module.hpp>
#include <boost/python/def.hpp>
using namespace boost::python;

BOOST_PYTHON_MODULE(hello)
{
    def(""say_hello"", say_hello);
}
"
How to get urllib2 response in json,">>> response = urllib2.urlopen('http://api.icndb.com/jokes/random')
>>> response.headers.type
'application/json'
>>>
"
How to convert dictionary of indices to list of keys?,"m = {}
i = 0
d_keys = d.keys()
max_value = 0
while i < len(d):
    d_i = d[d_keys[i]]
    j = 0
    while j < len(d_i):
        d_i_j = d_i[j]
        if max_value < d_i_j:
            max_value = d_i_j
        m[d_i_j] = d_keys[i]
        j += 1
    i += 1

l = []
i = 1
while i <= max_value:
    l.append(m.get(i))
    i += 1
"
BS4 How to get text without using .text?,"In [4]: a = soup.select_one(""div.address > a"")
In [5]: a.br.replace_with("" "")

In [6]: a.get_text().strip()
Out[6]: u'59 Some Street City, Zone 1'
"
Python: Shortest way to extract and count elements from an array of String?,"from collections import Counter
x = ['ab', 'ab', 'ac']
counts = Counter(x)
"
Access invoice header data (invoice_id) from invoice line tree,"<record model=""ir.ui.view"" id=""view_custom_account_invoice_form_inherited"">
    <field name=""name"">account.invoice.form</field>
    <field name=""model"">account.invoice</field>
    <field name=""type"">form</field>
    <field name=""inherit_id"" ref=""account.invoice_form"" />
    <field name=""arch"" type=""xml"">
        <xpath expr=""//field[@name='invoice_line']"" position=""attributes"">
            <attribute name=""context"">{'type': type, 'custom_field_id': custom_field_id}</attribute>
        </xpath>
    </field>
</record>
"
Create adjacency matrix in python from csv dataset,"{1: {1}, 2: {2, 3}, 3: {2, 3}}
"
Python Rock Paper Scissors function,"while gaming == 1:
    game()
"
Why is my method using lookup table so slow compared to brute force method?,"if not d_value[number] in d_value:
"
Get to a dictionary format (by just saving non-zero values and indices) from a sparse matrixin in python,"0:1.5 3:71.9
1:10.0 3:2.0
6:11.0
"
pyGtk: Image prevents window resize,"#!/usr/bin/env python
from gi.repository import Gtk, GdkPixbuf, GLib
import sys

class ImageWindow(Gtk.Window):
    def __init__(self, image_data):
        Gtk.Window.__init__(self, title=""image test"")
        self.connect('delete-event', Gtk.main_quit)

        self.image = Gtk.Image()
        scrolled_window = Gtk.ScrolledWindow()
        scrolled_window.add(self.image)
        self.add(scrolled_window)

        if len(image_data) == 0:
            return

        self.loader = GdkPixbuf.PixbufLoader()
        self.loader.write(image_data)
        self.loader.close()
        self.pixbuf = self.loader.get_pixbuf()
        self.image.set_from_pixbuf(self.pixbuf)

        width = self.pixbuf.get_width()
        height = self.pixbuf.get_height()
        self.dimension = float(width) / height
        self.set_default_size(width, height)
        self.connect('check-resize', self.on_resize)

    def on_resize(self, window):
        width, height = self.get_size()
        if float(width) / height > self.dimension:
            self.pixbuf = self.pixbuf.scale_simple(
                self.dimension * height,
                height,
                GdkPixbuf.InterpType.NEAREST
            )
        else:
            self.pixbuf = self.pixbuf.scale_simple(
                width,
                width / self.dimension,
                GdkPixbuf.InterpType.NEAREST
            )
        GLib.idle_add(self.image.set_from_pixbuf, self.pixbuf)

win = ImageWindow(sys.stdin.read())
win.show_all()
Gtk.main()
"
Three tiers of equality comparison in Python,"class Foo:
    def __init__(self, x):
        self.x = x
    def __hash__(self):
        return self.x**2
    def __eq__(self, o):
        return o.x == self.x
"
taking symbol in sum [sympy],">>> from sympy import sum, var, solve
>>> x = var('x')
>>> f = lambda N: sum(n**2, (n, 1, N))
>>> n = var(""n"")
>>> f(x)
x/6 + x**2/2 + x**3/3
"
How to make a nested dictionary from a list's items?,"from operator import itemgetter
from itertools import groupby
getter, d = itemgetter(0, 4, 5), {}
for key, grp in groupby(sorted(a, key=lambda x: x[3]), key=lambda x: x[3]):
    for item in grp:
        d.setdefault(item[1], {}).setdefault(
            item[2], {})[item[3]] = list(getter(item))
print d
"
Disable a Tkinter button when variables are at 0,"def craftPick(self):
    self.stone -= 1
    self.wood -= 1
    self.pickaxe += 1
    if self.stone < 1 and self.wood < 1:
        self.CraftPickaxe.config(state=DISABLED)
    elif self.stone > 0 and self.wood > 0:
        self.CraftPickaxe.config(state=NORMAL)
"
Counting vowels using nested loop in python,"def get_list_of_vowel_count(name_list):
    vowels = ""aeiouAEIOU""
    for name in name_list:
        yield sum([name.count(vowel) for vowel in vowels])
"
Random sampling and Pandas dataframes,"final_df = raw_df.copy()
final_df['ID1'] = final_df['ID1'].map(id2)
final_df = final_df.rename(columns={'ID1': 'ID2'})
"
python if statement always,"if mv in ['n', 'N']:
    Me.Position.Y += 10
"
"Combining two lists and removing duplicates, without removing duplicates in original list","first_list = [1, 2, 2, 5]
second_list = [2, 5, 7, 9]

in_first = set(first_list)
in_second = set(second_list)

in_second_but_not_in_first = in_second - in_first

result = first_list + list(in_second_but_not_in_first)
print result  # Prints [1, 2, 2, 5, 9, 7]
"
Compare values from two different dictionaries in Python?,"(k for k in set(sourceDict).intersection(targetDict) if sourceDict[key] != targetDict[key])
"
In Ruby or Python can the very concept of Class be rewritten?,"my_poodle = Poodle.new
my_poodle.is_a?(FurCoat) #=> false

# now define a wear method on my_poodle
def my_poodle.wear; end
my_poodle.is_a?(FurCoat) #=> true
"
How to manually position one subplot graph in matplotlib.pyplot,"import matplotlib.gridspec as gridspec
import matplotlib.pyplot as plt

gs = gridspec.GridSpec(4, 4)
m = 0

for i in range(0, 4, 2):
  for j in range(0, 4, 2):
    if m < 3:
      ax = plt.subplot(gs[i:i+2, j:j+2])
      ax.plot(range(0, 10), range(0, 10))
      m+=1
    else:
      ax = plt.subplot(gs[i:i+2, 1:3])
      ax.plot(range(0, 10), range(0, 10))

plt.show()
"
pass two arguments into translate(),"0123456789!""#$%&'()*+,-./:;<=>?@[\]^_`{|}~
"
How to call a class's method in python?,"x.GET(sys.argv[1], sys.argv[2])
"
How to share a list between two files,"import pscript2

print sample_list
"
Obtain frequencies in each bin for histogram2d,"In [45]: np.histogram2d(x, y, bins=2)
Out[45]: 
(array([[ 1.,  1.],
       [ 2.,  1.]]),
 array([-0.3,  0. ,  0.3]),
 array([-0.4 , -0.05,  0.3 ]))
"
Changing hostname in a url,"parsed._replace(netloc=""{}:{}"".format(parsed.hostname, parsed.port))
"
How to write the grammar for this in pyparsing: match a set of words but not containing a given pattern,"text = """"""\
12 items - Ironing Service    11 Mar 2009 to 10 Apr 2009
Washing service (3 Shirt)  23 Mar 2009""""""

# using tok_period as defined in the OP

# parse each line separately
for tx in text.splitlines():
    print SkipTo(tok_period).parseString(tx)[0]

# or have pyparsing search through the whole input string using searchString
for [[td,_]] in SkipTo(tok_period,include=True).searchString(text):
    print td
"
Django filter queryset __in for *every* item in list,"class Photo(models.Model):
    tags = models.ManyToManyField('Tag')

class Tag(models.Model):
    name = models.CharField(max_length=50)

    def __unicode__(self):
        return self.name

In [2]: t1 = Tag.objects.create(name='holiday')
In [3]: t2 = Tag.objects.create(name='summer')
In [4]: p = Photo.objects.create()
In [5]: p.tags.add(t1)
In [6]: p.tags.add(t2)
In [7]: p.tags.all()
Out[7]: [<Tag: holiday>, <Tag: summer>]
"
Adding dynamic fields to Django models,"for p in Purchase.objects.filter(ticker=ticker).get_with_todays_price(100):
  print p
  print p.gain
"
Unconventional vector multiplication with numpy,"[ 16 -60 -32  24]
"
Python use array axis to select slice,"def get_slice_along_first_dim(array_with_arbitrary_dimensions, idx):
    return array_with_arbitrary_dimensions[idx, ...]

def get_slice_along_last_dim(array_with_arbitrary_dimensions, idx):
    return array_with_arbitrary_dimensions[..., idx]
"
What config file format to use for user-friendly strings of arbitrary bytes?,"magic_id_str = 'x100\x88\xce\xcf\xcfOrCAD '
magic_id = binascii.a2b_qp(magic_id_str)
"
Put the result of simple tag into a variable,"@register.assignment_tag
def get_current_time(format_string):
    return datetime.datetime.now().strftime(format_string)
"
Elegant setup of Python logging in Django,"logger = logging.getLogger(__name__)
logger.addHandler(someutils.null_handler)
"
python pandas date_range when importing with read_csv,"df = pd.read_csv(file_name, sep=',\s+', header=None)
"
Python code for calculating number of an alphabet,">>> c = 'F'
>>> ord(lower(c)) - ord('a') + 1
6
"
Pandas DataFrame group by value and get column & row indexes,"[[3,0], [3,1]]
"
xgettext from a csv file,"def extract_csv(fileobj, keywords, comment_tags, options):
    """"""Extract messages from XXX files.
    :param fileobj: the file-like object the messages should be extracted
                    from
    :param keywords: a list of keywords (i.e. function names) that should
                     be recognized as translation functions
    :param comment_tags: a list of translator tags to search for and
                         include in the results
    :param options: a dictionary of additional options (optional)
    :return: an iterator over ``(lineno, funcname, message, comments)``
             tuples
    :rtype: ``iterator``
    """"""
    import csv

    reader = csv.reader(fileobj, delimiter=',', quotechar='""')
    for row in reader:
        if row and row[0] != '':
            yield (lineno, ',', row[0], 'No comment')
"
Duplicating Values based on Series input,"In [42]:
df.reindex(s)

Out[42]:
  cola colb colc
1               
1    A    T    F
2    B    F    F
4    C    T    T
4    C    T    T
4    C    T    T
"
Django: How to load a script for every page?,"<html>
    <!-- base.html -->
    ......
    {% block content %}
    {% endblock %}
    <!-- You include your js/css here -->
    <script type=""text/javascipt"" src=""{{ STATIC_URL }}jquery.js"">
    <link rel=""stylesheet"" type=""text/css"" href=""mystyle.css"">
</html>
"
python xlsxwriter worksheet object reuse,"import xlsxwriter

workbook = xlsxwriter.Workbook('test.xlsx')

workbook.add_worksheet()
workbook.add_worksheet()
workbook.add_worksheet()
workbook.add_worksheet()

for worksheet in workbook.worksheets():
    worksheet.write('A1', 'Hello')

workbook.close()
"
Create dictionary where keys from the list and value is common,"d = dict.fromkeys(doc_uid,project_name)
"
python capitalize nested list with strings and integers,"In [54]: L = [['loraine','jessica'],'philip',['dave', 'jones'], 8, 7]

In [55]: capitalizeNested(L)

In [56]: L
Out[56]: [['Loraine', 'Jessica'], 'Philip', ['Dave', 'Jones'], 8, 7]
"
Remove NaN row from X array and also the corresponding row in Y,">>> x = np.random.rand(4, 5)
>>> x[[0, 2], [1, 4]] = np.nan
>>> x
array([[ 0.37499461,         nan,  0.51254549,  0.5253203 ,  0.3955948 ],
       [ 0.73817831,  0.70381481,  0.45222295,  0.68540433,  0.76113544],
       [ 0.1651173 ,  0.41594257,  0.66327842,  0.86836192,         nan],
       [ 0.70538764,  0.31702821,  0.04876226,  0.53867849,  0.58784935]])
>>> x[~np.isnan(x)]  # 1D array with NaNs removed
array([ 0.37499461,  0.51254549,  0.5253203 ,  0.3955948 ,  0.73817831,
        0.70381481,  0.45222295,  0.68540433,  0.76113544,  0.1651173 ,
        0.41594257,  0.66327842,  0.86836192,  0.70538764,  0.31702821,
        0.04876226,  0.53867849,  0.58784935])
>>> x[~np.any(np.isnan(x), axis=1)]  # 2D array with rows with NaN removed
array([[ 0.73817831,  0.70381481,  0.45222295,  0.68540433,  0.76113544],
       [ 0.70538764,  0.31702821,  0.04876226,  0.53867849,  0.58784935]]
"
Python regexp everything between parenthesis on multiple lines,"m = re.findall(r'(?s)_\((.*?)\)', content)
"
Python Lists and Equality,">>> a.append
<built-in method append of list object at 0x7f7c7c97d560>
>>> b.append
<built-in method append of list object at 0x7f7c7c97d908>
"
For-Loop: How to 'take one off' every time you pass over?,"What is your begin station?Station A
What is your end station?Station B
Station B
Station C
Station D

Station C
Station D

Station D
"
Python Regex starting with hashtag,"test_str = ""some string\n# <init> (Lorg/cyanogenmod/audiofx/ActivityMusic;)V\n         , 0 iput-object v1, v0, Lorg/cyanogenmod/audiofx/ActivityMusic$11;->this$0 Lorg/cyanogenmod/audiofx/ActivityMusic;\n         , 4 invoke-direct v0, Ljava/lang/Object;-><init>()V\n         , a return-void\n# <init> (Lorg/cyanogenmod/audiofx/ActivityMusic;)V ""
ss = test_str.split('\n')
for s in ss:
    if s.strip()[0] == ""#"":
        print s
        break
"
Rename line by line a file,"def renameLineByLine():
    new_lines = []
    path = '/opt/AutoPrivilege/client/photos/'
    with open('/opt/data/photos.txt', 'r') as fin, \ 
        open('/opt/data/photos_new.txt', 'w') as fout:
        for line in fin:
            if len(line) != 1:
                newname, file, checksum, no1, no2 = line.split()
                fout.write("" "".join([
                    ""{}4615_{}_hd.jpg"".format(no1, no2),
                    path + file, checksum, '\n'])
                )
            else:
                fout.write('\n')
"
Using the .split() function based on conditions?,"pat = re.compile(r'.(?=[A-Z])')
"
Pandas dataframe hide index functionality?,"df.to_latex(index=False)
"
"How to implement compound configuration variables, or ""module level properties?""","class DatabaseConfig(Configuration):
    MYSQL_DB = 'DEFAULT'
    MYSQL_USER = os.environ.get('MYSQL_USER')
    MYSQL_PASS = os.environ.get('MYSQL_PASS')
    MYSQL_HOST = os.environ.get('MYSQL_HOST', 'localhost')
    MYSQL_PORT = os.environ.get('MYSQL_PORT', 3306)

    def MYSQL_URI(self):
        return 'mysql://{user}:{password}@{server}:{port}'.format(
            user=self.MYSQL_USER,
            password=self.MYSQL_PASS,
            server=self.MYSQL_HOST,
            port=self.MYSQL_PORT )

    def SQLALCHEMY_DATABASE_URI(self):
        return str(self.MYSQL_URI) + '/' + self.MYSQL_DB

DatabaseConfig()
"
How do I retain row-and-column arrangement while performing regular expression manipulations in Python,"0.98,1.0,97.92
12.0,3.0,97.9
0.0,0.0,9.92
"
Extract nested data in BS4,"Runtime: 02:39
"
MySQL and PYTHON. How to query an WHERE 'column' IN tuple,"statement = ""SELECT * FROM table WHERE column IN ({0})"".format(
    ', '.join(['%s'] * len(filterList)))
cursor.execute(statement, filterList)
"
Reshaping Arrays in Numpy with variables,"In [86]: a
Out[86]: 
array([[ 0,  1,  2,  3],
       [ 4,  5,  6,  7],
       [ 8,  9, 10, 11]])

In [91]: a = np.resize(a, (5,4)); print a
[[ 0  1  2  3]
 [ 4  5  6  7]
 [ 8  9 10 11]
 [ 0  1  2  3]
 [ 4  5  6  7]]
"
How can I manipulate the CDF of a sample such that it matches that of a different sample?,"distA = stats.gamma(*stats.gamma.fit(A))
distB = stats.gamma(*stats.gamma.fit(B))
"
Python: How to continue a nested for loop?,"def recurseDict(nested_dict):
    output = []

    for key, value in nested_dict.iteritems():
        if isinstance(value,dict):
            output = output + recurseDict(value)
        else:
            # Do whatever you want here, I'll just add the values to a list
            output.append(nested_dict[key])
    return output
"
Possible to add numpy arrays to python sets?,"CPU times: user 161 ms, sys: 2 ms, total: 163 ms
Wall time: 167 ms
"
Mixing Python and Bash in iPython,"!cd {x[-1]}
"
Read console output of another program in Python,"#!/usr/bin/env python
import os
import sys
from subprocess import Popen, PIPE, STDOUT

script_path = os.path.join(get_script_dir(), 'parent.py')
p = Popen([sys.executable, '-u', script_path],
          stdout=PIPE, stderr=STDOUT, bufsize=1)
with p.stdout:
    for line in iter(p.stdout.readline, b''):
        print line,
p.wait()
"
partial_fit Sklearn's MLPClassifier,"self.label_binarizer_.fit(y)
"
List minimum in Python with None?,">>> L = [None, 1, 2]
>>> min(x for x in L if x is not None)
1
"
python: Sorting a list of lists over a range of elements,"array[np.lexsort(array[:,1:].T)]
"
How to split string on '/' delimiter but prevent splitting when '/ '  occurs just after ' \ ',"
(?<!...)
"
How to inherit a thread class with infinite loop,"Outputting: processed stream data
Outputting: processed stream data
Outputting: processed stream data
Outputting: processed stream data
"
Research a string with a variable number in python,"Group 0===:
1 PLY=  1
-----------------------
 Code 1425                                    
    GP= 1  4.324E-03 -1.350E-03 -2.974E-03  3.084E-04  0.000E+00  0.000E+00
    GP= 2  1.435E-03 -3.529E-04 -1.082E-03  1.183E-04  0.000E+00  0.000E+00
    GP= 3  7.742E-03 -3.542E-03 -4.200E-03  4.714E-04  0.000E+00  0.000E+00
    GP= 4  4.842E-03 -2.378E-03 -2.463E-03  3.040E-04  0.000E+00  0.000E+00


Group 1===:
2 PLY=  22
-----------------------
 Code 1426                                 
    GP= 5  4.324E-03 -1.350E-03 -2.974E-03  3.084E-04  0.000E+00  0.000E+00
    GP= 6  1.435E-03 -3.529E-04 -1.082E-03  1.183E-04  0.000E+00  0.000E+00
    GP= 7  7.742E-03 -3.542E-03 -4.200E-03  4.714E-04  0.000E+00  0.000E+00
    GP= 8  4.842E-03 -2.378E-03 -2.463E-03  3.040E-04  0.000E+00  0.000E+00  
"
How to vectorize a data frame with several text columns in scikit learn without losing track of the origin columns,"catA_US   catA_CA ... cat_B_chiquita_banana   cat_B_morningstar_tomato ... catC_China ...
1         0           1                       0                            1   
...
"
How to check if an IP is contained in a network with python?,"Using ipaddr
>>> import ipaddr
>>> ipaddr.IPAddress('10.40.0.1') in ipaddr.IPNetwork('10.40.0.0/24')
True
>>> ipaddr.IPAddress('10.40.2.1') in ipaddr.IPNetwork('10.40.0.0/24')
False
"
Appending Quotations in Text File to Each line,"with open(""file"") as i: # open file for reading, i = input file 
  with open(""temp"", ""w"") as o: # open temp file in write mode, o = output 
     for l in i: # read line by line  
         o.write(""'%s',text\n"" % l[:-1]) # concate ' and text 
          #       ^  ^ added `'` for each line  
os.remove(""file"") # delete old file. Note:this is not needed in postfix system 
os.rename(""temp"", ""file"")  # rename file
"
Dividing a string by type of data inside each line of file in python,"Putting it together
def parsa_lista(file_to_read):
    converted = []
    for line in file_to_read:
        vals = line.split()
        datum = int(vals[0]), vals[1], float(vals[2])
        converted.append(datum)
    return converted
"
Matplotlib: Adjust legend location/position,"# Define inverse transform, transforms display coordinates (pixels) to axes coordinates
inv = ax[1].transAxes.inverted()
# Inverse transform two points on the display and find the relative distance
pad_axes = inv.transform((pad_pixels, 0)) - inv.transform((0,0))  
pad_xaxis = pad_axes[0]
"
Wrapping/unwrapping a vector along array diagonals,">>> a = np.array([2,3,4,5,6,7])
>>> b = np.zeros((4, 4), dtype=a.dtype)
>>> b[my_triu_indices(4, 1)] = a
>>> b
array([[0, 2, 5, 7],
       [0, 0, 3, 6],
       [0, 0, 0, 4],
       [0, 0, 0, 0]])
>>> b[my_triu_indices(4, 1)]
array([2, 3, 4, 5, 6, 7])
"
Retreiving data from a nested deep.copy dictionary made by list comprehension in Python,"for row in range(HEIGHT):
    for col in range(WIDTH):
        if keygrid[row][col] in stockgrid[row][col]:
           stockgrid[row][col][keygrid[row][col]]+=1
"
Time complexity of a huge list in python 2.7,"""pc 10 appears 4 times. First on row 4, last on row 101""
""pc 8 appears 3 times. First on row 3, last on row 13""
"
Unpivot/Flatten pandas pivot table into one level index,"import io
import StringIO     # for Python 2.X
import pandas as pd

data = """"""\
      id1        id2           type       number
0     IE345      E90              I           38
1     IE345      E92              E           26
2     IE345      E93              E           21
3     IE345      E95              R            9
4     IE346      E94              I           41
7     IE346      BLK              E            1
""""""

#loads = pd.read_csv(io.StringIO(data), sep='\s+', index_col=0)  # for Python 3.X
loads = pd.read_csv(StringIO.StringIO(data), sep='\s+', index_col=0)  # for Python 2.X

# **** interesting part starts here ****

# save all unique types, we will use it later
types = loads.type.unique()

df = pd.pivot_table(loads, values=['number'], 
                       index = ['id1', 'id2'], 
                       columns=['type'], margins=True, 
                       aggfunc='sum', fill_value=0) \
       .reset_index()

# reset column names
df.columns = [c[1] if c[1] else c[0] for c in df.columns.tolist()]

df['max'] = df[types].idxmax(axis=1)
"
"Difference between numpy.array shape (R, 1) and (R,)",">>> c = a.reshape((3, 4), order='F')
"
"Pandas, How to subtract first row value from all values in a Series?","In [5]:
import io
import pandas as pd
t=""""""2015-10-01 5000
2015-10-02 5005
2015-10-03 5012""""""
s = pd.read_csv(io.StringIO(t), index_col=[0], parse_dates=[0], header=None, delim_whitespace=True, squeeze=True)
s

Out[5]:
0
2015-10-01    5000
2015-10-02    5005
2015-10-03    5012
Name: 1, dtype: int64

In [6]:    
s - s.iloc[0]

Out[6]:
0
2015-10-01     0
2015-10-02     5
2015-10-03    12
Name: 1, dtype: int64
"
Test if function or method is normal or asynchronous,"inspect.ismodule(object)
inspect.isclass(object)
inspect.ismethod(object)
inspect.isfunction(object)
"
Can I add parameters to a python property to reduce code duplication?,"class Vector(object):
    def __init__(self, x=0, y=0, z=0):
        self.x = x
        self.y = y
        self.z = z
    x = JonProperty('_x')
    y = JonProperty('_y')
    z = JonProperty('_z')
"
Include package in Spark local mode," spark.driver.extraClassPath /Volumes/work/bigdata/CHD5.4/spark-1.4.0-bin-hadoop2.6/lib/spark-csv_2.11-1.1.0.jar:/Volumes/work/bigdata/CHD5.4/spark-1.4.0-bin-hadoop2.6/lib/commons-csv-1.1.jar
"
"python, Storing and Reading varying dictionary size information in a csv file","import csv

with open(""file.csv"",""r"") as f:
    spamreader = csv.reader(f,delimiter="";"")
    for row in spamreader:
        for value in range(len(row)):
            query,result = value.strip('(').strip(')').split("","")
            if query != ""time"":
                # process it
                # query = 'QX'
                # result = 'N'
            else:
                # query = 'time'
                # result = 'date'
"
What would be the appropiate design for storing content in multiple languages in Google App Engine?,"class Translation (ndb.Expando):
    """""" string_id: language, parent: question.key""""""
    answers = ndb.LocalStructuredProperty(Answer, repeated = True) #Defined because GenericProperty doesn't support storing an entity.

class Answer (ndb.Model):
    text = ndb.StringProperty()
    is_correct = ndb.BooleanProperty(required = True, default = False)
    times_picked = ndb.IntegerProperty(default = 0)

class Question (ndb.Model):
    text = ndb.StringProperty()
    answers = ndb.LocalStructuredProperty(Answer, repeated = True)
    times_used = ndb.IntegerProperty(default = 0)
"
Insert a Pixmap created in another class,"class MyImage(QWidget):

    def __init__(self):
        super(MyImage, self).__init__(parent = None)
        self.mainLayout = QtGui.QHBoxLayout()
        self.setLayout(self.mainLayout)
        self.setPicture()

    def setPicture(self):
        picPath = os.getcwd() + ""/someFolder/image.jpg""
        print(picPath) # Check if the path to your picture is correct.
        picMap = QtGui.QPixmap(picPath)

        picLabel = QtGui.QLabel(parent = None)
        picLabel.setGeometry(10,10,800,600)
        picLabel.setPixmap(picMap.scaled(780,580,QtCore.Qt.KeepAspectRatio))
        self.mainLayout.addWidget(picLabel)
"
Modify all rows in table,"UPDATE companies 
SET ico = REPLACE(ico, ' ', '');
"
django: disable tinymce for one certain field,"three = models.TextField(widget=form.Textarea(attrs={""class"": ""mceNoEditor""}))
"
"Convert rgb color to english color name, like 'green'",">>> name_to_rgb('navy')
(0, 0, 128)
"
Outcome of Function - Python,">>> list_to_add_to = []
>>> def add_to_list(a_list):
...     a_list.append('test')
...
>>> print(list_to_add_to)
[]
>>> add_to_list(list_to_add_to)
>>> print(list_to_add_to)
['test']
"
Socket resolve DNS with specific DNS server,"sudo apt-get install python-dnspython
"
Loading a file into a numpy array with python,"1   2   3   4
7   8   9   10  11  12
13  14  15
"
How to tell if non-scalar key exists in Python dictionary,"if (""x"",""y"",""z"") in aarr:
"
How do I make one python dictionary to csv with headers?,"data = []
for line in infile:
    row = {}
    row['time'] = ...
    row['type'] = ...
    ...
    ...
    data.append(row)
"
Can I restore a function whose closure contains cycles in Python?,"lhash = hash(litem)
if lhash in lfunctionHashes:
    lmarshalledClosureValues.append([lhash, None])
else:
    lfunctionHashes.add(lhash)
    lmarshalledClosureValues.append([lhash, marshal.dumps(litem.func_code), MarshalClosureValues(litem.func_closure, lfullIndex), litem.__module__])
"
How to find a point (if any) on quadratic Bezier with a given tangent direction?,"a*(-b) + b*(a) = 0
"
Get list of all paginated URL's from links in txt file in python requests,"return list(set(links))
"
How to print list of list into one single list in python without using any for or while loop?,">>> timeit.timeit(""sum(myList[0], [])"", 'from __main__ import myList')
1.2761731147766113
>>> timeit.timeit(""reduce(add, myList[0])"", 'from __main__ import myList; from operator import add')
1.0545191764831543
>>> timeit.timeit(""reduce(lambda a, b: a.extend(b) or a, myList[0], [])"", 'from __main__ import myList')
2.225532054901123
>>> timeit.timeit(""list(chain.from_iterable(myList[0]))"", 'from __main__ import myList; from itertools import chain')
2.0208170413970947
"
several replacements in single regular expression,"import re
line='0.2741564350068515+2.6100840481550604*^-10*I\n'
print(""({})"".format(re.sub(r""(\*\^)|([.]?\*I)"", lambda m: ""e"" if m.group(1) else ""j"", line.strip())))
# => (0.2741564350068515+2.6100840481550604e-10j)
"
Implementing XorShift the same in Java and Python,"int seed = 0;
for (int i = 0; i < 10; i++) {
    seed = seed * 1664525 + 1013904223;
    System.out.println(seed & 0xFFFFFFFFL);
}
"
Fetch the exact time a video was uploaded,"import datetime
import time

feed = client.YouTubeQuery(query)
for entry in feed.entry:
    _tmp = time.strptime(entry.published.text, '%Y-%m-%dT%H:%M:%S.000Z')
    ptime = datetime.datetime(*_tmp[:6])
    print ptime
    print ptime.time()
"
What should I do with the docstring of a decorated function if the decorator changes the API?,"def file_aware(docstring, mode):
    def deco(func):
        @functools.wraps(func)
        def wrapped(f, *args, **kwargs):
            if isinstance(f, str):
                file_obj = open(f, mode)
            else:
                file_obj = f
            return func(file_obj, *args, **kwargs)
        wrapped.__doc__ = docstring
        return wrapped
    return deco
"
Simple wxPython post event from Process,"wx.PostEvent(self.wxWindow, evt)
"
How do I make the ball bounce off the paddle?,"self.hitPaddle = false
"
average number of characters per word in a list,"average = sum(len(word.strip(string.punctuation)) for sentence in text for word in sentence.split()) / sum(len(sentence.split()) for sentence in text)
"
Index a numpy array with another array,">>> A.__getitem__((3, 1))
8
"
Testing for an empty iterator in a Python for... loop,"def my_func(choice_pattern, input):
    # Search in input for some things to choose from.
    choice_iterator = choice_pattern.finditer(input, re.M)
    if not choice_iterator:
        print ""No choices. Exiting...""
        sys.exit()

    # Show choices to the user. For each one, ask user for a yes/no response. If
    # choice accepted, return a result. Otherwise show user next choice. If no
    # choices accepted by user, quit.
    for choice in choice_iterator:
        print choice
        # get_yes_no_answer() returns True or False depending on user response.
        if get_yes_no_answer():
            return choice
    # Loop exited without matches.
    print ""No matches. Exiting...""
    sys.exit()
"
vectorizing a for loop in python,"nLTest, items = ['asda','asda','test','ada','test','yuil','test'], {}
for idx, item in enumerate(nLTest):
    nLTest[idx] += str(items.setdefault(item, 0) or """")
    items[item] += 1
print nLTest
"
Issue with creating variables on the go in a class in python,"for count,pos in enumerate(coords,1):
    setattr(self, ""x%s"" % count, pos)
"
How to add first name and last name to Django-registeration-redux registeration form?,"firstname = models.CharField(max_length=255)
lastname = models.CharField(max_length=255)
"
Python Regex expression for parsing HTML document,"<td.*?<a.*? title\s*=\s*""([^""]+).*?</td> 
"
python dictionary values sorting,"ranks1 = dict(map(reversed, enumerate(sorted(dict1, key=dict1.get))))
ranks2 = dict(map(reversed, enumerate(sorted(dict2, key=dict2.get))))
diffs = dict((k, ranks2[k] - ranks1[k]) for k in dict1)
"
creating dynamic nested dictionary,"abc/pqr/lmn/xyz:pass
abc/pqr/lmn/bcd:pass
abc/pqr/lmn/xyz:fail
abc/pqr/lmn/xyz:pass
"
Combine Python dictionaries that have the same Key name,"    clientlist = dict([(k, [clientList[k], recordlist[k]]) for k in clientList])
"
Syntax in sorting code Python,"def top_k(students, k):
    toptobottom = sorted(students, key = lambda x: x[2], reverse = True)
    takeout= toptobottom[:k+1]
    result = []
    for takethat in takeout:
        if takethat[2] == 21:
            result.append(takethat)  # I indented this
            result.sort( key= lambda x: x[0])
        elif takethat[2] ==15:
            result.append(takethat)
    return result
"
Placing of modulo operation in code,"real    0m3.607s
user    0m3.594s
sys     0m0.011s
"
Convert Java byte array to Python byte array,"data = [1,2,-3,-143, ...]
binData = ''.join(map(lambda x: chr(x % 256), data))
"
how to get the cpu usage of past 10 minutes in python,"import psutil as PSUTIL 
    with open('/yourpath/yourfile.txt', ""a"") as myfile:
       myfile.write(str(PSUTIL.cpu_percent(interval=1))+""%""'\n')
"
"Why am I getting a None value, and why is the number still being printed in Python?","result=''
...
result += '' #whatever
...
return result
"
Finding how many of a certain character in each element in a list,">>> vals = [i.count(' ') for i in lst] 
>>> lst[vals.index(max(vals))]
'this is one more sentence'
"
how to parse a boolean argument in a script?,"def ParseBoolean (b):
    # ...
    if len(b) < 1:
        raise ValueError ('Cannot parse empty string into boolean.')
    b = b[0].lower()
    if b == 't' or b == 'y' or b == '1':
        return True
    if b == 'f' or b == 'n' or b == '0':
        return False
    raise ValueError ('Cannot parse string into boolean.')
"
forcing genfromtxt output to no-vector,"import numpy as np
from StringIO import StringIO

def make_data(rows, cols) :
    data = ((str(k + cols * j) for k in xrange(cols)) for j in xrange(rows))
    data = '\n'.join(map(lambda x: ' '.join(x), data))
    return StringIO(data)

def read_data(f, rows, cols, nbcols) :
    a = np.zeros((rows, (cols + nbcols - 1) // nbcols, nbcols))
    a[...] = np.genfromtxt(f, usecols=range(nbcols)).reshape(-1, 1, nbcols)
    return a.reshape(rows, -1)[:, :cols]

>>> read_data(make_data(3, 6), 3, 6, 2)
array([[  0.,   1.,   0.,   1.,   0.,   1.],
       [  6.,   7.,   6.,   7.,   6.,   7.],
       [ 12.,  13.,  12.,  13.,  12.,  13.]])
>>> read_data(make_data(3, 6), 3, 6, 1)
array([[  0.,   0.,   0.,   0.,   0.,   0.],
       [  6.,   6.,   6.,   6.,   6.,   6.],
       [ 12.,  12.,  12.,  12.,  12.,  12.]])
>>> read_data(make_data(3, 6), 3, 6, 4)
array([[  0.,   1.,   2.,   3.,   0.,   1.],
       [  6.,   7.,   8.,   9.,   6.,   7.],
       [ 12.,  13.,  14.,  15.,  12.,  13.]])
"
retrieve non built-in functions in python,">>> def hello():
...     print(""hi"")
... 
>>> import types
>>> type(hello) is types.BuiltinFunctionType
False
>>> type(hello) is types.FunctionType
True
"
How to find maximum number from csv-read data in Python 2.7?,"import csv

maximum_value = None
with open(""vic_visitors.csv"", 'rb') as visitors:
    reader = csv.DictReader(visitors)
    for row in reader:
        count, year = max((int(row[year]), year) for year in reader.fieldnames[1:])  # skip the first column
        if not maximum_value or count > maximum_value[0]:
            maximum_value = (count, row[reader.fieldnames[0]], year)

print ""The greatest visitornumber was {} in {} in the year {}."".format(
    *maximum_value)
"
How to run python and java jar in single bash script?,"python tweet.py | python translate.py | java -jar TextClean.jar > cleansed.csv
"
What is the most pythonic way to sort dates sequences?,"from itertools import groupby
from pprint import pprint

def month_number(date):
    month, year = date.split('/')
    return int(year) * 12 + int(month)

L = [[date for _, date in run]
     for _, run in groupby(enumerate(sorted(months, key=month_number)),
                           key=lambda (i, date): (i - month_number(date)))]
pprint(L)
"
How to assign multiple values to one variable,"enemy1 = dict(name = ""gargoyle"",
              strength = 30,
              armour = 25,
              health = 50)
"
Generating all unique pair permutations," round 1     round 2       # pairs are those numbers that sit
----------  ---------      # on top of each other
0 1 2 3     0 7 1 2
7 6 5 4     6 5 4 3
"
How to pass a javascript array to a python script using flask [using flask example],"$.getJSON($SCRIPT_ROOT + '/_array2python', {
        wordlist: JSON.stringify(list)
    }, function(data){
        console.log(data.result)
        $( ""#result"" ).text(data.result);
    });
"
Django order_by last week days,"import datetime
from django.db.models import Count

from_date = datetime.datetime.now() - datetime.timedelta(days=7)

click_info.objects.filter(hash='<value>', created_at__range=[from_date, datetime.datetime.now()])
    .extra({'date_created' : ""date(created_at)""})
    .values('date_created')
    .annotate(created_count=Count('id'))
"
Improve efficiency in Python matching,"with open('to_output.tmp','a') as to_output:
    for a in App:
        # ... do your reading thing into the sets ...

        if row_id in cells and (row_id in biochemicals or row_id in enzymes):
            to_output.write('%s,' % row_id)
            cells.remove(row_id)
            biochemicals.remove(row_id)
            enzymes.remove(row_id)
"
Make histogram in python with list,"import csv
import matplotlib.pyplot as plt

path = []

with open('paths_finished.tsv','r') as tsv:
    paths = [line.strip().split('\n') for line in tsv]
    newPath = paths[16:]
    counter = 0

items = []
for k in range(0,len(newPath)):
    path = newPath[counter][0].count(';')
    counter +=1
    items.append(path)
    print path

print items


path2 = list(set(items)) ## gets the unique values in the list

histo = []

for i in path2:
    histo.append(items.count(i)) ## add the number of occurances to the histo list

plt.bar(path2, histo)
plt.suptitle('Title', fontsize=14)
plt.xlabel('Number', fontsize=12)
plt.ylabel('Freq', fontsize=12)
plt.show()
"
Django attribute is not up to date,"vTest = self.state 
"
Extracting just Month and Year from Pandas Datetime column (Python),"import calendar
import datetime
df['AdjustedDateToEndOfMonth'] = df['ArrivalDate'].map(
    lambda x: datetime.datetime(
        x.year,
        x.month,
        max(calendar.monthcalendar(x.year, x.month)[-1][:5])
    )
)
"
"If everything is an object, why can't I add attributes to some?",">>> def foo(): pass
...
>>> foo.__dict__
{}
>>> foo.bar = 'baz'
"
Optimize search to find next matching value in a list,"values = [1,2,3,1,2,3,4]

from collections import defaultdict

def get_matches(x):
    my_dict = defaultdict(list)
    for ind, ele in enumerate(x):
        my_dict[ele].append(ind)
    return my_dict
"
How to find all neighbors of a given point in a delaunay triangulation using scipy.spatial.Delaunay?,"import numpy as np
import itertools as it
from matplotlib import pyplot as plt
import scipy as sp

inputs = list(it.product([0,1,2],[0,1,2]))
i = 0
lattice = range(0,len(inputs))
for pair in inputs:
    lattice[i] = mksite(pair[0], pair[1])
    i = i +1
"
django user queries to get data from database,"urlpatterns = patterns('',
    url(r'^faculty/(?P<slug>\w+)/$', FacultyDetail.as_view()),
)
"
How to replace node values in XML with Python,"#!/usr/bin/env python
import sys
from lxml import etree

def process(fname):
    f = open(fname)
    tree = etree.parse(f)
    root = tree.getroot()
    old = [112.907, 158.96, -54.7539, -10.1357]
    new = [1,2,3,4]
    d = dict(zip(old,new))
    nodes = root.findall('.//gco:Decimal', root.nsmap)
    for node in nodes:
        node.text = str(d[float(node.text)])
    f.close()
    return etree.tostring(root, pretty_print=True)

def main():
    fname = sys.argv[1]
    text = process(fname)
    outfile = open('out.xml', 'w+')
    outfile.write(text)
    outfile.close()

if __name__ == '__main__':
    main()
"
"Applying the @staticmethod, python3","a = UserInput.create_new_user(""foo"", ""whatever"", ""is"", ""needed"", ""here"")
"
Input not read in Python for Linux,"aQueue: a
bcdefgQueue: b
Queue: c
Queue: d
Queue: e
Queue: f
Queue: g
^CTraceback (most recent call last):
  File ""getch.py"", line 24, in <module>
    ch = getch()
  File ""getch.py"", line 16, in getch
    ch=sys.stdin.read(1)
KeyboardInterrupt
"
Issue with Python implementation of assignment chaining,"result = Element(element, None)
self.tail = result
self.tail.next = result
"
Python enum34 like interface for boost python enum,"PyObject *enum_type = reinterpret_cast<PyObject *>(testEnum.ptr());

// get the metatype and make a copy
PyTypeObject *pto = reinterpret_cast<PyTypeObject *>(enum_type->ob_type);
PyTypeObject *new_pto = new PyTypeObject();
memcpy(new_pto, pto, sizeof(PyTypeObject)); 

// define a new mapping method
PyMappingMethods *mapping = new PyMappingMethods();
mapping->mp_subscript = convertEnum,

// replace the old mapping method and overwrite the meta type in the enum
new_pto->tp_as_mapping = mapping;
enum_type->ob_type = new_pto;
"
Creating a class signal with pyqt4,"class CustomWidget(QtGui.QWidget):

    # No argument signal
    custom_signal = QtCore.pyqtSignal()

    # Signal with int argument and a custom name
    custom_signal_int = QtCore.pyqtSignal(int, name='integerSignal')

    def atSomePointEvent(self, event):
        value = event.someValue()
        if isinstance(value, int):
            self.custom_signal_int.emit(value)
        else:
            self.custom_signal.emit()
"
"Python, Regular Expression Postcode search","['PA23 6NH', 'PA2 6NH', 'PA2Q 6NH']
['PA23 6NH', 'PA2 6NH', 'PA2Q 6NH']
"
Python logging in multiple modules,"import LoggingTools
if __name__ == '__main__':
    # Configure logger
    LoggingTools.initLogger(logging.DEBUG)
    #LoggingTools.initLogger(logging.INFO)
"
Determine if PyObject* is PyLongDoubleScalarObject (numpy),"if (PyObject_TypeCheck(obj, typeobject)) {
     /* obj matches the given type */
}
"
call __str__ inside a class? python 3.X,"print(self.__str__())
"
I can't get my class to work in pygame,"def move(x, y):
    # Should be in charge of moving the character and changing sprite

def update(direction):
    # Should be in charge of animation updates etc.

def get_image():
    # should return the current active frame/image (since you're working with animations)
"
Python - Uniquely determining which text file an element originated from,"[9, 4] == array
#>>> array([[ True,  True],
#>>>        [False, False],
#>>>        [False, False]], dtype=bool)
"
Cumulative addition/multiplication in NumPy,"In [301]: # Inputs
     ...: a = np.array([1, 2, 4, 6, 7, 8, 9, 11])
     ...: b = np.array([0.01, 0.2, 0.03, 0.1, 0.1, 0.6, 0.5, 0.9])
     ...: 

In [302]: original_approach(a,b)
Out[302]: 
[1,
 2.0099999999999998,
 4.4020000000000001,
 6.1320600000000001,
 7.6132059999999999,
 8.7613205999999995,
 14.256792359999999,
 18.128396179999999]

In [303]: vectorized_approach(a,b)
Out[303]: 
array([  1.        ,   2.01      ,   4.402     ,   6.13206   ,
         7.613206  ,   8.7613206 ,  14.25679236,  18.12839618])
"
Locating an element in Selenium with a custom value,"element[attribute(*|^|$|~)='value']
"
Python Caesar Cipher Using Ord and Chr,"new_strs = []
for character in phrase:
    x = ord(character)
    x = x + shift
    new_strs.append(chr(x))   #store the new shifted character to the list
    #use this if you want z to shift to 'a'
    #new_strs.append(chr(x if 97 <= x <= 122 else 96 + x % 122))
print """".join(new_strs)       #print the new string
"
Printing a string and executing functions inside a class [Python],"left is green
left is red
left was green for 5 seconds.
"
How to pass an array from python to shell script and execute it?,"subprocess.call(['./arraytest'] + [str(s) for s in HSPACE], shell=False)
"
Python-Unable to convert a list to string,"a = ['Hello', 'and', 'welcome']
print( ' '.join(a) ) # Prints: Hello and welcome
"
Python generator for paged API resource,"def get_all_people(name):
    page = 0
    has_more = 1
    while has_more:
        for person in get_people_page(name, page):
            yield person
        page += 1
        has_more = # calculate has more by whether you have a next link
                   # or whether the results set is empty
                   # or whether you get an error
"
Comprehensions in Python and Javascript are only very basic?,"var nums = [1, 2, 3, 21, 22, 30];
var s = eval('[[i,j] for each (i in nums) for each (j in [3,4]) if (i%2 == 0)]');
s.toSource();
[[2, 3], [2, 4], [22, 3], [22, 4], [30, 3], [30, 4]]
"
Equality in Pandas DataFrames - Column Order Matters?,"def my_equal(a, b):
    from pandas.util.testing import assert_frame_equal
    try:
        assert_frame_equal(df1.sort(axis=1), df2.sort(axis=1), check_names=True)
        return True
    except (AssertionError, ValueError, TypeError):  perhaps something else?
        return False
"
"trouble with nltk python NaiveBayesClassifier, I keep getting same probabilities inputs correct?","'drama'
'mystery'
'horror'
'psychological'
'fantasy',
'romance', 
'adventure',
'science fiction'
"
Biopython: extract sequences not covered by any SeqFeatures,"non_covered = [(0, 100), (600, 700), (900, 1000)]
"
Python: pick appropriate datatype size (int) automatically,"def type_chooser(N):
  import numpy as np
  for dtype in [np.uint8, np.uint16, np.uint32, np.uint64]:
    if N <= dtype(-1):
      return dtype
  raise StandardError('{} is really big!'.format(N))
"
Python Tk display and edit a file,"#!/usr/bin/env python
# -*- coding: utf-8 -*-


from ScrolledText import *
import tkFileDialog
import tkMessageBox
from Tkinter import Tk, Text, BOTH, W, N, E, S, Menu
from ttk import Frame, Button, Label, Style


class Example(Frame):

    def __init__(self, parent):
        Frame.__init__(self, parent)
        self.parent = parent
        self.initUI()

    def initUI(self):
        self.parent.title(""Grades"")
        self.style = Style()
        self.style.theme_use(""default"")
        self.pack(fill=BOTH, expand=1)

        self.columnconfigure(1, weight=1)
        self.columnconfigure(3, pad=7)
        self.rowconfigure(3, weight=1)
        self.rowconfigure(5, pad=7)

        lbl = Label(self, text=""Grades:"")
        lbl.grid(sticky=W, pady=4, padx=5)

        lbl = Label(self, text=""Average\n Grade:"")
        lbl.grid(row=3, column=3, pady=5)

        self.textPad = ScrolledText(self)
        self.textPad.grid(row=1, column=0, columnspan=2, rowspan=4, padx=5, sticky=E+W+S+N)

        abtn = Button(self, text=""Save"",command=self.save_command)
        abtn.grid(row=1, column=3)

        cbtn = Button(self, text=""Close"", command=self.onExit)
        cbtn.grid(row=2, column=3, pady=4)

        hbtn = Button(self, text=""Help"", command=self.about_command)
        hbtn.grid(row=5, column=0, padx=5)

        obtn = Button(self, text=""OK"")
        obtn.grid(row=5, column=3)        

        menubar = Menu(self.parent)
        self.parent.config(menu=menubar)

        fileMenu = Menu(menubar)       

        submenu = Menu(fileMenu)
        submenu.add_command(label=""Student"")
        submenu.add_command(label=""New Student"")

        fileMenu.add_cascade(label='Import', menu=submenu, underline=0)
        fileMenu.add_command(label=""Open..."", command=self.open_command)
        fileMenu.add_separator()
        fileMenu.add_command(label=""Exit"", underline=0, command=self.onExit)

        menubar.add_cascade(label=""File"", underline=0, menu=fileMenu)        

    def onExit(self):
        self.parent.destroy()

    def about_command(self):
        label = tkMessageBox.showinfo(""About"", ""Grade keeping\n program by Starwarsfan2099"")

    def save_command(self):
        file = tkFileDialog.asksaveasfile(mode='w')
        if file != None:
        # slice off the last character from get, as an extra return is added
            data = self.textPad.get('1.0', 'end-1c')
            file.write(data)
            file.close()

    def open_command(self):
            file = tkFileDialog.askopenfile(mode='rb',title='Select a file')
            if file != None:
                contents = file.read()
                self.textPad.insert('1.0', contents)
                file.close()


def main():
    root = Tk()
    root.geometry(""350x300+300+300"")
    app = Example(root)
    root.mainloop()


if __name__ == '__main__':
    main()  
"
Remove a value from a set with a function decorator,">>> factors(10)
{1, 2, 5}
"
how to change a node value in python,"from xml.etree import ElementTree as et
xmlstr=""""""\
<?xml version=""1.0""?>
<area>
  <media>
    <options>
         <name>Jaipur</name>
    </options>
 </media>
</area>""""""
doc=et.fromstring(xmlstr)
doc.find('.//name').text='Mumbai'
print et.tostring(doc)
"
Python Pandas Dataframe to Nested Tuples,">>> df
   a  b  c
0  1  2  3
1  4  5  6
2  6  7  8
"
javascript locals()?,"window[""foo""]
"
Restore __builtins__ to default,"__builtins__ = some_python_module.__builtins__
"
Drop Duplicate in market data,">>> df
   Bid  Ask
1  1.0  1.5
2  1.0  1.5
3  1.0  1.5
4  1.5  2.0
5  1.5  2.0
6  2.0  2.5
7  2.0  2.5
8  2.0  3.0
>>> df[(df != df.shift()).any(axis=1)]
   Bid  Ask
1  1.0  1.5
4  1.5  2.0
6  2.0  2.5
8  2.0  3.0
"
Copy a function in python,"def collatz(n, iterations = None):
    if iterations is None:
        iterations = []
    # Stuff
    elif n % 2 == 0:
        even = n / 2
        collatz(even, iterations)
    else:
        odd = (3 * n) + 1
        collatz(odd, iterations)
"
Python: How to do extra stuff when a specific attribute of an object is accessed?,"class Foo(object):
    _a = 2

    @property
    def a(self):
        Foo._a += 1
        return Foo._a - 1

    b = 2
"
Finding a string in a list and returning a secondary value with python,"value = data.get(target, 'Target not found')
"
Estimating the Posterior Predictive in Regression,"import numpy as np
import pymc as pm
import matplotlib.pyplot as plt 
from pymc import glm 

## Make some data
x = np.array(range(0,50))
y = np.random.uniform(low=0.0, high=40.0, size=50)
y = 2*x+y
## plt.scatter(x,y)

data = dict(x=x, y=y)
with pm.Model() as model:
    # specify glm and pass in data. The resulting linear model, its likelihood and 
    # and all its parameters are automatically added to our model.
    pm.glm.glm('y ~ x', data)
    step = pm.NUTS() # Instantiate MCMC sampling algorithm
    trace = pm.sample(2000, step)


##fig = pm.traceplot(trace, lines={'alpha': 1, 'beta': 2, 'sigma': .5});## traces
fig = plt.figure()
ax = fig.add_subplot(111)
plt.scatter(x, y, label='data')
glm.plot_posterior_predictive(trace, samples=50, eval=x,
                              label='posterior predictive regression lines')
"
Finding the difference between two numpy structured arrays,">>> u, counts = np.unique(x, return_counts=True)
"
Python-daemon doesn't kill its kids,"def parentIsAlive(self):
    try:
        # try to call Parent
        os.kill(self.parentPID, 0)
    except OSError:
        # *beeep* oh no! The phone's disconnected!
        return False
    else:
        # *ring* Hi mom!
        return True
"
How to read aloud Python List Comprehensions?,"[(x, y) for x in [1,2,3] for y in [3,1,4] if x != y]
"
"What mode must I specify to argparse.FileType to append, keeping - as a default","    if string == '-':
        if 'r' in self._mode:
            return _sys.stdin
        elif 'w' in self._mode:
            return _sys.stdout
        else:
            msg = _('argument ""-"" with mode %r') % self._mode
            raise ValueError(msg)
"
Better way of writing this regex in Python,"date ([a-z]{3} \d{2}) at (\d{2}) ([PA]M)
"
Python - convert from hex integer to hex string,">>> testNum = 0xa1b2c3
>>> hex(testNum)
    '0xa1b2c3'
>>> test = hex(testNum)
>>> isinstance(test, str)
    True
"
How to Print next year from current year in Python,">>> print today.replace(year=today.year + 1)
2013-06-26
"
Getting two largest numbers from three numbers without using conditional statement or loop in python 3.5,"def function1(a, b, c):
    s = sorted((a, b, c), reverse=True)
    return s[0] + s[1]
"
Find intersection of large number of lists in python,"with open(""abc.txt"") as f:
    lines=(map(int,x.split()) for x in f)
    for x in combinations(lines,2):
        print x,'-->',reduce(set.intersection,imap(set,x))
   ....:         
([1, 2, 3], [2, 3, 4]) --> set([2, 3])
([1, 2, 3], [3, 4, 5]) --> set([3])
([2, 3, 4], [3, 4, 5]) --> set([3, 4])
"
scipy.sparse default value,"x = A.tocoo()
x.data = np.log(x.data)
A = x.todok()
"
Make one list from two list applying constraint,"for sublist in C for i in sublist yield i
|-> yield i for sublist in C for i in sublist
    |-> i for sublist in C for i in sublist
"
Python RQ queueing with JavaScript,"> new Buffer('\x80\x85', 'binary')
<Buffer 80 85>
"
password generator using Python,"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!""#$%&'()*+,-./:;<=>?@[\]^_`{|}~0123456789
"
graph from weighted edge list from a database,"G.add_weighted_edges_from(cur)
"
Simple Python headache with number comparison,"with open('text.txt', 'r') as handle:
    numbers = []

    for line in handle:
        field = line.split()[0]

        try:
            numbers.append(float(field))  # Or `int()`
        except ValueError:
            print field, ""isn't a number""
            continue

    highest = max(numbers)
"
xpath selecting elements and iterating over the tag,"site.select('.//*[contains(@class, ""summary"")]/p//text()').extract()
"
np.where() not returning expected indices in numpy python,"np.where(np.diff(mock_data != 0))[0][1::2] + 1
# array([398, 688, 736], dtype=int64)
"
Pandas sparse dataframe larger on disk than dense version,"In [2]: from numpy import *

In [3]: test = pd.DataFrame(ones((4000,4)))

In [4]: test.ix[:,:] = nan

In [5]: test.ix[0,0] = 47

In [6]: test.to_hdf('test3', 'df')

In [7]: test.to_sparse(fill_value=nan).to_hdf('test4', 'df')

In [8]: test.to_pickle('test5')

In [9]: test.to_sparse(fill_value=nan).to_pickle('test6')

In [11]: !ls -sh test3 test4 test5 test6
164K test3  148K test4  160K test5   36K test6
"
python: iterate using a class method,">>> # dummy information, this makes three Crack objects
...
>>> z1_values = [3.0, 1.1, 0.2]
>>> z2_values = [0.01, 0.02, 0.03]
>>> coeff_values = [[1.1,1.0],
...                 [2.2,2.0],
...                 [3.3,3.0]]
"
Turbomail Integration with Pyramid,"from pyramid.renderers import render

opts = {} # a dictionary of globals to send to your template
body = render('email.mako', opts, request)
"
Manually giving the twisted (web) network stack a packet to process?,"from twisted.web import server
from twisted.web.resource import Resource
from twisted.internet import reactor
from twisted.internet.protocol import Protocol, ClientFactory

class SomeWebThing(Resource):
    def render_GET(self, request):
        return ""hello\n""

class SomeClient(Protocol):
    def dataReceived(self, data):
        p = self.factory.site.buildProtocol(self.transport.addr)
        p.transport = self.transport
        p.dataReceived(data)

class SomeClientFactory(ClientFactory):
    protocol = SomeClient
    def __init__(self, site):
        self.site = site

if __name__ == '__main__':
    root = Resource()
    root.putChild('thing', SomeWebThing())
    site = server.Site(root)
    reactor.listenTCP(8000, site)

    factory = SomeClientFactory(site)
    reactor.connectTCP('localhost', 9000, factory)

    reactor.run()
"
stripping index values in pandas,"<index> <value>
"
How to sort a Series or DataFrame by a given index order?,">>> sr.loc[['c','d','a','b']]
c    3
d    4
a    1
b    2
dtype: int64
"
Python dictionary keys to csv file with column match,"    row = []
    for col in columns:
        row.append(data.get(col, None)) 
    w.writerow(row)
"
Parsing integers from an alphanumeric string in Python,"In [67]: strs=""PRODUCTNAME600COUPON50""

In [68]: re.findall(r'\d+',strs)
Out[68]: ['600', '50']
"
Python - Enforce non-occurence of bool in list,"In [18]: any(x is True or x is False for x in [True, 2])
Out[18]: True
"
Removing a list of characters in string,">>> chars_to_remove = ['.', '!', '?']
>>> subj = 'A.B!C?'
>>> subj.translate(None, ''.join(chars_to_remove))
'ABC'
"
Encompass the output of a for loop into a variable in python,"body=[]
for item in parsed:
    body.append(item['resource']['caseNumber'], \
        item['resource']['subject'], \
        item['resource']['status'], \
        item['resource']['severity'] )
"
Numpy indexing multidimensional arrays with array and slice,"In [234]: np.broadcast_arrays(i, [1,2])
Out[234]: 
[array([[0, 2],
        [1, 4]]), 
 array([[1, 2],
        [1, 2]])]
"
Pass arguments to executable in Python,"import subprocess
subprocess.Popen([r'C:\test\sample.exe', '-color'])
"
Print first element or 2nd element from text file,"with open('file.txt') as fp:
    first, second = zip(*[line.rstrip().split(',') for line in fp])
    print first
    print second
"
Optimize this loop with numpy,"sigma1 = sigma.copy()
sigma2 = sigma.copy()
sigma3 = sigma.copy()
r1 = r.copy()
r2 = r.copy()
r3 = r.copy()

initial(n, a, b, c, eps, sigma1, r1)   
normal(n, a, b, c, eps, sigma2, r2)       
function(n, a, b, c, eps, sigma3, r3)
np.testing.assert_array_almost_equal(sigma1, sigma2)
np.testing.assert_array_almost_equal(sigma1, sigma3)
np.testing.assert_array_almost_equal(r1, r2)
np.testing.assert_array_almost_equal(r1, r3)
"
Optimizing implementation of a rotating mask in numpy/scipy,"    windows_shape += w
"
How to import classes defined in __init__.py,"from lib.settings import Values
from lib import Helper
"
Django remove image based on id,"import os


# Project root is intended to be used when building paths,
# e.g. ``os.path.join(PROJECT_ROOT, 'relative/path')``.
PROJECT_ROOT = os.path.abspath(os.path.dirname(__name__))

# Absolute path to the directory that will hold uploaded files.
MEDIA_ROOT = os.path.join(PROJECT_ROOT, 'uploads/')
"
Python C-ext namespace mixed with regular python submodules?,">> import facs
>> dir (facs)
['__builtins__', '__doc__', '__file__', '__name__', '__package__', '__path__']
"
Not getting the proper output with re.findall,"df_input['Color'] = resultless
"
Split array byte string in Python,"sample = '\xf0\x9f\x98\x84 \xf0\x9f\x98\x83 \xf0\x9f\x98\x80 \xf0\x9f\x98\x8a \xe2\x98\xba \xf0\x9f\x98\x89 \xf0\x9f\x98\x8d \xf0\x9f\x98\x98 \xf0\x9f\x98\x9a \xf0\x9f\x98\x97 \xf0\x9f\x98\x99 \xf0\x9f\x98\x9c \xf0\x9f\x98\x9d \xf0\x9f\x98\x9b \xf0\x9f\x98\x81 \xf0\x9f\x98\x82 \xf0\x9f\x98\x85 \xf0\x9f\x98\x86 \xf0\x9f\x98\x8b \xf0\x9f\x98\x8e \xf0\x9f\x98\xac \xf0\x9f\x98\x87'
parts = sample.split()
"
"Converting an imperative algorithm that ""grows"" a table into pure functions","f T -> T'
"
beautiful soup extracting parent/sibling tr table class,">>> for date_row in soup.select('table tbody.body tr.date'):
...     print('Found a date row', date_row)
...     for elem in date_row.next_siblings:
...         if not elem.name:
...             # NavigableString (text) element between rows
...             continue
...         if 'right' not in elem.get('class', []):
...             # all done, found a row that doesn't have class=""right""
...             break
...         print('Right row grouped with the date', elem)
...     print()
... 
Found a date row <tr class=""date"">..</tr>
Right row grouped with the date <tr class=""right"">..</tr>
Right row grouped with the date <tr class=""right"">..</tr>
Right row grouped with the date <tr class=""right"">..</tr>

Found a date row <tr class=""date"">..</tr>
Right row grouped with the date <tr class=""right"">..</tr>
Right row grouped with the date <tr class=""right"">..</tr>
Right row grouped with the date <tr class=""right"">..</tr>
"
Confused by lexical closure in list comprehension,">>> L=[1, 2, 3]
>>> def fgen():
...     local_n = global_n
...     def f():
...         return local_n * local_n
...     return f
>>> a, b, c = [fgen() for global_n in L]
>>> a()
1
>>> b()
4
>>> c()
9
"
Django (django-rest-framework) looking for a best practice to find out wether request.user exists in blog.likes,"class BlogPostSerializer(serializer.ModelSerializer):
    # ...
    like_by_request_user = BlogPostLikesSerializer(source='get_last_like', required=False)
"
Django: get the path to the current django app,"MY_APP_LOG_DIRECTORY = ""path/to/logs""
"
foreach group of elements in html page?,"sometext
- link1 ...
- link2 ...
- link3 ...
sometext2
- link4 ...
- link5 ...
"
"function and classes, usage of __str__","[Item{Name:""Hat"",Price:150,Quantity:100,Code:223},Item{Name:""Shirt"",Price:450,Quantity:10,Code:225}]
"
How to sort a list of objects based on different object values in python?,">>> sorted(sampleObjects, key=lambda obj: obj.value1)
[C, D, A, B]
>>> sorted(sampleObjects, key=lambda obj: obj.value2)
[A, C, D, B]
"
How to capitalize the first letter of each word in a string (Python)?,">>> ""they're bill's friends from the UK"".title()
""They'Re Bill'S Friends From The Uk""
"
Shared variable in python's multiprocessing,"def foo(data, name=''):
    print type(data), data.value, name
    for j in range(1000):
        data.value += 1
"
Python subprocess arbitrarily split output between files,"import sys
sys.stdout.write('stdout line 1')
sys.stderr.write('stderr line 2')
"
"matplotlib event.mouseevent.key gets ""stuck""","FigureCanvasBase:key_press_event: SETTING KEY TO control
FigureCanvasWx:onLeftButtonDown: Ctrl down is ""True""
FigureCanvasBase:button_press_event: KEY IS control
Artist:Pick:MPL MouseEvent: xy=(494,238) xydata=(3.00403225806,1.984375) button=1 dblclick=False inaxes=Axes(0.125,0.1;0.775x0.8) control
FigureCanvasBase:pick_event: CREATED PICK EVENT <matplotlib.backend_bases.PickEvent object at 0xaf631ec> control
control True
"
How to submit a javascript variable to the server side,"<form action=""#"">
  <div>
    <input type=""hidden"" name=""datatosendback"" id=""datatosendback"">
  </div>
</form>
"
Loop with 3 or 2 items to unpack in Python,"for choice in self.choices:
    value, label = choice[:2]
    try:
        other = choice[2]
    except IndexError:
        other = None
    yield (value, label, other, selected)
"
PANDAS - Plotting specific rows and changing order of columns,"df1['Red Amber Yellow White'.split()].plot(kind='bar')
# equivalently:  df1[['Red', 'Amber', 'Yellow', 'White']].plot(kind='bar')
"
How to tell when a method is called for first time of many,"firstRun=True
def writeFile(number):
    global firstRun
    if firstRun:
        print('number')
        firstRun=False
    print(str(number))

for i in range(10):
    writeFile(i)
"
"In Python, how would you write a regex that matches the following?","import re
my_regex = re.compile(r'@\S+')
"
SWIG Python Structure Array,"int bar()[4] {
  static int data[4];
  return data;
}
"
Function python list (zip),">>> def zipp (a,b):
...    return [[x,y] for x, y in zip(a, b)]

>>> zipp(a, b)
[[[1, 2, 3], 'Python'], [[4, 5, 6], 'Java']]
"
Why does recursive sequence not work correctly?,">>> 1/1
1
>>> 1/2
0
>>> 1.0/2
0.5
"
Difference between .string and .text BeautifulSoup,"some text
None
more text
None
"
how to import data from SQLITE to excel using xlsxwriter in python,"import sqlite3
from xlsxwriter.workbook import Workbook
workbook = Workbook('output2.xlsx')
worksheet = workbook.add_worksheet()

conn=sqlite3.connect('test.sqlite')
c=conn.cursor()
c.execute(""select * from abc"")
mysel=c.execute(""select * from abc "")
for i, row in enumerate(mysel):
    print row
    worksheet.write(i, 0, row[0])
    worksheet.write(i, 1, row[1])
workbook.close()
"
Why doesn't [].extend(list1) create an identical list to list1?,"lst = ['a', 'b', 'c']
cplst = []
cplst.extend(lst)
cplst == lst
"
Applying different commands at different location,"commands = (['cmd1', 'arg1'], ['cmd2', 'arg2'], ...)
for path, command in izip(paths, commands):
      os.chdir(path)
      subprocess.call(command)
"
cmap to rgba in Matplotlib,"import numpy as np
import seaborn
import matplotlib.pyplot as plt
from matplotlib.colors import ListedColormap

chisq = np.random.chisquare(4, 8)
chisq -= chisq.min()
chisq /= chisq.max()

cmap = ListedColormap(seaborn.color_palette(""GnBu_d""))
errorbar_colors = cmap(chisq)

heights = np.random.randn(8)
sem = .4

for i, (height, color) in enumerate(zip(heights, errorbar_colors)):
    plt.plot([i, i], [height - sem, height + sem], c=color, lw=3)
plt.plot(heights, marker=""o"", ms=12, color="".3"")
"
Consuming Django Rest Api in the same project,"http://192.168.0.1:8000/your-endpoint
"
How to call mocked method in Python mock,"original_foo = f.foo
with patch.object(f, 'foo') as mock_foo:
    def side_effect(a):
        print ""mock foo"", a
        return original_foo(a*2)
    mock_foo.side_effect = side_effect

    f.foo(2)
"
Moving row values between columns based on other column values in a Pandas DataFrame,"mask = (df['ORG1'] != 'A')&(df[orgi] == 'A')
"
Seaborn tsplot change labels on x-axis,"sns.tsplot(sines, time=np.linspace(-15, 15, sines.shape[1]))
"
Why Scrapy cannot find href here?,"import scrapy

class MySpider(scrapy.Spider):
    name = ""deez""
    start_urls = [""http://www.deezer.com/profile/154723101""]

    def start_requests(self):
        for url in self.start_urls:
            yield scrapy.Request(url, self.parse, meta={
                'splash': {
                    'endpoint': 'render.html',
                    'args': {'wait': 1}
                }
            })

    def parse(self, response):
        print(response.xpath(""//li[@class='evt-click']"").extract())
"
Simple example of how to use ast.NodeVisitor?,"Module
AugAssign
Subscript
Name
Load
Index
Name
Load
Store
Add
Subscript
Name
Load
Index
Tuple
Name
Load
Name
Load
Load
Load
"
"String comparison: Actual newline is never recognized as ""\n""",">>> char = ""\n""
>>> char == ""\n""
True
>>> char is ""\n""
False
>>> a = char
>>> a is char
True
>>> id(a)
139751408202160
>>> id(char)
139751408202160  # char and a have the same id, thus `a == char` is True
>>> id(""\n"")
139751346017264  # ""\n"" has a different id, so `char is ""\n""` is False
"
python yahoo finance format,"rows = ['Date,Open,High,Low,Close,Volume,Adj Close', '2012-11-30,691.31,699.22,685.69,698.37,3163600,698.37', '2012-11-29,687.78,693.90,682.00,691.89,2776500,691.89','2012-11-28,668.01,684.91,663.89,683.67,3042000,683.67', '2012-11-27,660.17,675.00,658.00,670.71,2508700,670.71']

def format_rows(rows, gap):
    split_rows = [row.split(',') for row in rows]
    # Splits each row up, by comma
    column_lengths = [max(col_len) for col_len in zip(*[map(len, row) for row in split_rows])]
    # Finds the maximum size of each column

    for row in split_rows:
        col_lengths = zip(row, column_lengths)
        print ''.join(col.ljust(col_length + gap, ' ') for (col, col_length) in col_lengths)
        # Prints out the data, making sure there's a minimum of ""gap"" spaces 
        # between each column
"
Selecting csv row with the highest column value among rows with the same value of another column in python,"import pandas as pd

df = pd.DataFrame({'document_number': {0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 2, 6: 2, 7: 2, 8: 2, 9: 2, 10: 2}, 
                   'probability': {0: '0,113', 1: '0,2', 2: '0,156', 3: '0,065', 4: '0,463', 5: '0,44', 6: '0,207', 7: '0,103', 8: '0,126', 9: '0,015', 10: '0,106'}, 
                   'topic_number': {0: 1, 1: 4, 2: 7, 3: 17, 4: 18, 5: 1, 6: 6, 7: 14, 8: 16, 9: 17, 10: 18}}, 
                    columns = ['document_number','topic_number','probability'])

print (df)
    document_number  topic_number probability
0                 1             1       0,113
1                 1             4         0,2
2                 1             7       0,156
3                 1            17       0,065
4                 1            18       0,463
5                 2             1        0,44
6                 2             6       0,207
7                 2            14       0,103
8                 2            16       0,126
9                 2            17       0,015
10                2            18       0,106
"
Converting nested python lists to database,"2083,$1000 / month,500,gym hardwood floor,,
1096,$1200 / month,700,,true,
76,$1100 / month,,,true,true
"
Python concatenate recursively strings in files,"import itertools

file1Input = [line.strip() for line in open('file1.txt').xreadlines()];
file2Input = [line.strip() for line in open('file2.txt').xreadlines()];


output = [x[0] + x[1] for x  in itertools.product(*[file1Input, file2Input])]
print(output)
"
How to link instance attributes to a numpy array?,"class Super1(object):
    def __init__(self, value1):
        self._value1 = value1

    @property
    def value1(self):
        return self._value1[0]

    @value1.setter
    def value1(self, value):
        self._value1[0] = value
"
Count rows that match string and numeric with pandas,"df[[""SAMPLE"",""T"",""G"",""C"",""-""]].groupby(""SAMPLE"").agg(sum).astype(int)

        T  G  C  -
SAMPLE            
1       0  1  0  0
2       0  0  0  0
3       0  0  0  0
4       0  0  0  0
5       0  0  0  0
8       0  1  0  0
9       0  0  0  0
10      0  0  0  0
11      0  0  0  0
"
Pass one element of tuple as argument along with other arguments,"other_function(name, phone, some_function(""abcd"")[0], age)
"
Dictionary that counts occurrences of its items,"from collections import Counter

counted=Counter(iterable)
"
Adding a constant tuple value to a list of tuples,">>>> l = [(1,2), (3,4)]
>>>> for i, e in enumerate(l):
....     l[i] = (e[0]+xk, e[1]+yk)
"
How to updating dict items inside a list of dicts,"orig_list = [
   { 'cpu': 4, 'mem': '4', 'name': 'server1', 'drives': '4', 'nics': '1' },
   { 'cpu': 1, 'mem': '2', 'name': 'server2', 'drives': '2', 'nics': '2' },
   { 'cpu': 2, 'mem': '8', 'name': 'server3', 'drives': '1', 'nics': '1' }
   ]

print orig_list

for item in orig_list :
    if item['cpu'] < 4:
        item['cpu'] = 4

print orig_list
"
Django Query using .order_by() and .latest(),"SELECT ""app_mymodel"".""id"", ""app_mymodel"".""creation_date"" FROM 
""app_mymodel"" ORDER BY ""app_mymodel"".""creation_date"" DESC LIMIT 1
"
How to add two offset in python?,"naive_datetime = dt.datetime(*naive_timetuple[:6])
print(naive_datetime)
# 1969-12-31 19:00:00

localized_datetime = eastern.localize(naive_datetime)
print(localized_datetime)
# 1969-12-31 19:00:00-05:00
"
Caesar Cipher validation,"def getMessage():
    while True:
        message = input('Enter your message: ')
        if message.isalpha():
            return message
        print(""Invalid input, text must contain alphabetic characters only."")
"
ipython notebook pandas max allowable columns,"with pd.option_context('display.max_columns', None):
    display(data)
"
python remove phone numbers from string,"awk -f a.awk foo.txt
"
How to print string array in reverse order in python,"mystring = ""192.168.1.1""
print '.'.join(mystring.split('.')[::-1])
"
value <= maximum,"a = maximum ^ ((a ^ maximum) & -(a < maximum))
"
Efficient summed Area Table Calculation with Numpy,"import numpy as np
import time

A = np.random.randint(0, 10, (3200, 1400))

t = time.time()
S = A.cumsum(axis=0).cumsum(axis=1)
print np.round_(time.time() - t, 3), 'sec elapsed'
"
"Python Combinatorics, part 2","for combo in get_combos(b):
  print ""Combo:""
  for branch in combo:
    print ""  %r"" % (branch,)
"
Should I use a class? (Python),"class quad:
    def __init__(self, a, b, c):
        self.a = a
        self.b = b
        self.c = c

    def __call__(x):
        return self.a * x**2 + self.b * x + self.c

q = quad(p, q, r)
q(x)
"
python map vs itertools.map: Make the iterator version behave like the former,"for i in range(3):
    f(i)
"
Python pack / unpack converts to Objective C,"NSMutableArray * bytes = [NSMutableArray arrayWithCapacity:4];
for (NSNumber *value in timeOuts) // Take out numbers
{
…
}
"
Scipy Handling of Large COO matrix,"import numpy as np
from scipy import sparse

x = sparse.rand(10000, 10000, format='coo')
"
Array within an array?,">>> array=[['a1','a2','a3','a4'],['b1','b2','b3','b4'],['c1','c2','c3','c4']]
>>> array[1]
['b1', 'b2', 'b3', 'b4']
>>> array[1][0]
'b1'
>>>
"
Check for multiple maximum dictionary values and output the keys accordingly,">> final_vals
>> {5: [""right"", ""front""],
    4: [""left""],
    1: [""back""]}
"
Pandas Dataframe count availability of string in a list,"In [1]: len(frame[frame.a.isin(mylist)])/float(len(mylist)) * 100
Out[1]: 66.66666666666666
"
Mocking print but allow using it in tests,"def print_something():
    print(""print something"")
"
How to return the native object value when not accessed as a list,"if Options.list().opt[0] is None:

if Options.list().opt != ""some value"":

if Options.list().opt == 1:
"
Python - how to store lines of numerical values?,"line = ""4 0 2837 9323 ...""
line = [(int(n), dict()) for n in line.split()]
"
How extract all values for one set of key,"keys = ['a1', 'a2']
values = map(operator.itemgetter(*keys), dictionary.itervalues())
dict(zip(keys, zip(*values)))

OUTPUT:
{'a1': ('1', 'x'), 'a2': ('2', 'y')}
"
django models sum of classes fiels,"ZoneSubStage.objects.filter(substage__stage=stage_instance).aggregate(Sum('value'))
# This will return {'value__sum': 90}
"
[Openerp]How to make SQL Query with another database user from python code?,"conn = psycopg1.connect(database=cr.dbname,  user=dbuser,  password=dbpass)
cur = conn.cursor()
"
Django: How to sum downvote and upvote elements of a model in models.py and not in views.py?,"class NewLink(models.Model):
    upvote = models.IntegerField(default=0)
    downvote =  models.IntegerField(default=0)
    @property
    def votetotal(self):
        return self.upvote + self.downvote
"
Python 2 and 3 compatible way of hiding a decorator from stacktrace,">>> f()
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
  File ""<string>"", line 12, in __call__
  File ""<stdin>"", line 3, in f
ValueError: Oi!
"
Correlate a single time series with a large number of time series,"import numpy as np

# Rowwise mean of input arrays & subtract from input arrays themeselves
A_mA = A - A.mean(1)[:,None]
B_mB = B - B.mean()

# Sum of squares across rows
ssA = (A_mA**2).sum(1)
ssB = (B_mB**2).sum()

# Finally get corr coeff
out = np.dot(A_mA,B_mB.T).ravel()/np.sqrt(ssA*ssB)
# OR out = np.einsum('ij,j->i',A_mA,B_mB)/np.sqrt(ssA*ssB)
"
Move 3D plot to avoid clipping by margins,"    # look into the middle of the new coordinates
    try:
        R = np.array(self.pbaspect)/2
    except AttributeError:
        R = np.array([0.5, 0.5, 0.5])
"
Extraxt & save all text() with Scrapy,"scrapy runspider spider.py
"
Algorithm to invert strings of algebraic expressions in Python,"def inverse(string, left_string=None):
    from sympy import solve, Symbol, sympify
    string = '-' + string
    e = sympify(string.replace('=','+'))
    if left_string:
        ans = left_string + ' = ' + str(solve(e, sympify(left_string))[0])
    else:
        left = sympify(string.split('=')[0].strip().replace('-',''))
        symbols = e.free_symbols
        symbols.remove( left )
        right = list(symbols)[0]
        ans = str(right) + ' = ' + str(solve(e, right)[0])
    return ans
"
How to call a distant shell script from a python file?,"subprocess.call([""my_shell_script.sh"",my_argument])
"
Check if a https webpage exists in python,"import urllib2, base64

request = urllib2.Request(yoururl)
authstring = base64.encodestring('{}:{}'.format('someusername', 'somepassword')).strip()
request.add_header(""Authorization"", ""Basic {}"".format(authstring))   
response = urllib2.urlopen(request)

if not 200 <= response.getcode() < 400:
    # error response, raise an exception here?

content = response.read()
try:
    text = content.decode(response.info().getparam('charset', 'utf8'))
except UnicodeDecodeError:
    text = content.decode('ascii', 'replace')
"
Open URL and place it to a string,"lines = []
for line in filehandle:
    lines.append(line)
"
How to vectorize bigrams with the hashing-trick in scikit-learn?,"[u'acuerdo', u'aj', u'ajudou', u'al', u'alex', u'algo', u'alpsk\xfdmi', u'alpy', u'andaba', u'andrea', u'ao', u'apresenta', u'as', u'bien', u'bl\xedzko', u'buscando', u'come\xe7o', u'como', u'con', u'conseguido', u'da', u'de', u'decepcionantes', u'deti', u'dificuldades', u'dif\xedcil', u'distancia', u'do', u'doprinese', u'druh', u'd\xe1', u'ela', u'encontrar', u'enfrentar', u'es', u'est\xe1', u'eulex', u'excusa', u'fama', u'foi', u'for\xe7as', u'furiosa', u'golf', u'golfistami', u'golfov\xfdch', u'guasch', u'ha', u'hotelmi', u'hra\u0165', u'ide', u'ihr\xedsk', u'incident', u'intranspon\xedveis', u'in\xedcio', u'in\xfd', u'ispit', u'istragu', u'izbijanju', u'ja\u010danju', u'je', u'jedan', u'jo\u0161', u'kapaciteta', u'kde', u'kombin\xe1cie', u'komplex', u'kon\u010diarmi', u'kosova', u'la', u'lado', u'lequio', u'lete', u'llevar', u'lo', u'longo', u'ly\u017eova\u0165', u'mais', u'man\u017eelky', u'mas', u'me', u'mesmo', u'meu', u'minha', u'misije', u'mo\u017enos\u0165ami', u'muy', u'm\xe1s', u'm\xe3e', u'na', u'nada', u'nad\u0161en\xfdmi', u'nasilja', u'negativas', u'nie', u'nieko\u013ek\xfdch', u'no', u'obaviti', u'obe\u0107ao', u'para', u'parecem', u'parecer', u'pod', u'pone', u'pon\xfakaj\xfa', u'por', u'potrebuj\xfa', u'po\u0161to', u'prava', u'predstavlja', u'pri', u'prova\xe7\xf5es', u'pro\u0161losedmi\u010dnom', u'punham', u'qual', u'qualquer', u'que', u'quem', u'rak\xfaske', u'relaci\xf3n', u'rezortov', u'sa', u'sebe', u'sempre', u'situa\xe7\xf5es', u'sjeveru', u'spojen\xfdch', u'suplantar', u's\xfa', u'taj', u'tak', u'talianske', u'teve', u'tive', u'todas', u'tr\xe1venia', u'una', u've\u013ek\xfd', u'vida', u'visto', u'vladavine', u'vo', u'vo\u013en\xe9ho', u'vysok\xfdmi', u'vy\u017eitia', u'v\xe4\u010d\u0161ine', u'v\u017edy', u'ya', u'zauj\xedmav\xe9', u'zime', u'\u0107e', u'\u010dasu', u'\u010di', u'\u010fal\u0161\xedmi', u'\u0161vaj\u010diarske']
"
dictionary help for python writing a code,"['albert', 'Tim', 'john']
"
Recommended Compiler Parse Tree Data Structure,">>> import ast
>>> help(ast)
Help on module ast:

NAME
    ast

FILE
    /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/ast.py

MODULE DOCS
    http://docs.python.org/library/ast

DESCRIPTION
    ast
    ~~~

    The `ast` module helps Python applications to process trees of the Python
    abstract syntax grammar.  The abstract syntax itself might change with
    each Python release; this module helps to find out programmatically what
    the current grammar looks like and allows modifications of it.

    An abstract syntax tree can be generated by passing `ast.PyCF_ONLY_AST` as
    a flag to the `compile()` builtin function or by using the `parse()`
    function from this module.  The result will be a tree of objects whose
    classes all inherit from `ast.AST`.
    …
"
Calculating cumulative returns with pandas dataframe,"print df
     Poloniex_DOGE_BTC  Poloniex_XMR_BTC  Daily_rets  perc_ret
172           0.006085         -0.000839    0.003309         0
173           0.006229          0.002111    0.005135         0
174           0.000000         -0.001651    0.004203         0
175           0.000000          0.007743    0.005313         0
176           0.000000         -0.001013   -0.003466         0
177           0.000000         -0.000550    0.000772         0
178           0.000000         -0.009864    0.001764         0

print df['Daily_rets']
172    0.003309
173    0.005135
174    0.004203
175    0.005313
176   -0.003466
177    0.000772
178    0.001764
Name: Daily_rets, dtype: float64

print df['perc_ret'].shift(1)
172   NaN
173     0
174     0
175     0
176     0
177     0
178     0
Name: perc_ret, dtype: float64
"
Python program to find fibonacci series. More Pythonic way,"def fibo(a=-1,b=1,upto=4000000):
    while a+b<upto:
        a,b = b,a+b
        yield b
"
Python list Merging,"all_compare_tables = []
for Book in rootNode.getBooks():
    CompareTables=[]
    CompareTables.append(Book.getName())
    for Table in Book.getTables():
        CompareTables.append(Table.getName())
    all_compare_tables.append(CompareTables)

print all_compare_tables[0]
print all_compare_tables[1]

# better yet, loop:

for compare_tables in all_compare_tables:
    print compare_tables
"
What is the Pythonic way to apply a function to multi-index multi-columns dataFrame?,"def do_regression(y):
    X=np.array(range(len(y))).reshape(len(y),1)
    regr.fit(X,y)
    return regr.predict(X)

df_regressed = df2.groupby(level=[0,1]).transform(do_regression)

print df_regressed.head()

                       A         B
X 1 1997-01-31  0.779476 -1.222119
    1997-02-28  0.727184 -1.138630
    1997-03-31  0.674892 -1.055142
    1997-04-30  0.622601 -0.971653
    1997-05-31  0.570309 -0.888164
"
What is the most pythonic way to iterate over OrderedDict,"
>>> d = {'a': 'b'}
>>> for i, (key, value) in enumerate(d.iteritems()):
...     print i, key, value
... 
0 a b
"
give parameters to function and load the function the right way,"if __name__ == ""__main__"":
    main(sys.argv[2:])
"
How can I create a list in Python?,"L=list()
"
How can I append whole columns to a table (list of lists) in python?,"def transpose(lists):
   if not lists: return []
   return map(lambda *row: list(row), *lists)
"
How to change the pinax(0.9a2) template?,"# Additional directories which hold static files
STATICFILES_DIRS = [
    os.path.join(PROJECT_ROOT, ""static""),
]
"
python set comprehension made out of different lists,">>> expected = {
...     'l1': ['abc', 'def', 'ghi', 'jkl'],
...     'l2': ['abc', 'ghi', 'jkl', 'mno']
... }
>>> set(f for files in expected.itervalues() for f in files)
set(['jkl', 'abc', 'ghi', 'def', 'mno'])
"
sorting list of objects python,"def __lt__(self, other):
    return cmp(self.number, other.number)
"
Assign value to an individual cell in a two dimensional python array,"q = [[None]*5]*4
"
How to obtain the client IP address in Autobahn Wamp Protocol?,"    factory.dispatch(""http://domain.com/topic"", ""payload"", [], None)
"
Python define dynamic functions,">>> def make_func(value_to_print):
    def _function():
        print value_to_print
    return _function

>>> f1 = make_func(1)
>>> f1()
1
>>> f2 = make_func(2)
>>> f2()
2
>>> 
"
mkvtoolnix bulk remove audio tracks,"Result=(""'MKVMerge' --ui-language en --identify-verbose 'MKVVideo'"" | getline Line);
"
is there a binary OR operator in python that works on arrays?,"import operator
c = list(map(operator.or_, a, b))
"
Scaping a table using mechanize & beautiful when some rows contain additional formatting,"{u'Lg': u'NBA', u'FT': u'1.5', u'3P': u'0.1', u'TOV': u'1.8', u'2PA': u'5.4', u'Tm': u'BOS', u'FG': u'2.4', u'3PA': u'0.4', u'DRB': u'2.8', u'2P': u'2.3', u'AST': u'3.8', u'Season': u'2006-07', u'FT%': u'.647', u'PF': u'2.3', u'PTS': u'6.4', u'FGA': u'5.8', u'GS': u'25', u'G': u'78', u'STL': u'1.6', u'Age': u'20', u'TRB': u'3.7', u'FTA': u'2.4', u'BLK': u'0.1', u'FG%': u'.418', u'Pos': u'PG', u'2P%': u'.432', u'MP': u'23.5', u'ORB': u'0.9', u'3P%': u'.207'}
{u'Lg': u'NBA', u'FT': u'1.4', u'3P': u'0.1', u'TOV': u'1.9', u'2PA': u'9.0', u'Tm': u'BOS', u'FG': u'4.6', u'3PA': u'0.2', u'DRB': u'3.2', u'2P': u'4.5', u'AST': u'5.1', u'Season': u'2007-08', u'FT%': u'.611', u'PF': u'2.4', u'PTS': u'10.6', u'FGA': u'9.3', u'GS': u'77', u'G': u'77', u'STL': u'1.7', u'Age': u'21', u'TRB': u'4.2', u'FTA': u'2.3', u'BLK': u'0.2', u'FG%': u'.492', u'Pos': u'PG', u'2P%': u'.499', u'MP': u'29.9', u'ORB': u'1.0', u'3P%': u'.263'}
{u'Lg': u'NBA', u'FT': u'2.2', u'3P': u'0.2', u'TOV': u'2.6', u'2PA': u'8.9', u'Tm': u'BOS', u'FG': u'4.8', u'3PA': u'0.6', u'DRB': u'4.0', u'2P': u'4.6', u'AST': u'8.2', u'Season': u'2008-09', u'FT%': u'.642', u'PF': u'2.4', u'PTS': u'11.9', u'FGA': u'9.5', u'GS': u'80', u'G': u'80', u'STL': u'1.9', u'Age': u'22', u'TRB': u'5.2', u'FTA': u'3.4', u'BLK': u'0.1', u'FG%': u'.505', u'Pos': u'PG', u'2P%': u'.518', u'MP': u'33.0', u'ORB': u'1.3', u'3P%': u'.313'}
{u'Lg': u'NBA', u'FT': u'2.2', u'3P': u'0.2', u'TOV': u'3.0', u'2PA': u'10.2', u'Tm': u'BOS', u'FG': u'5.7', u'3PA': u'1.0', u'DRB': u'3.2', u'2P': u'5.5', u'AST': u'9.8', u'Season': u'2009-10\xa0\u2605', u'FT%': u'.621', u'PF': u'2.4', u'PTS': u'13.7', u'FGA': u'11.2', u'GS': u'81', u'G': u'81', u'STL': u'2.3', u'Age': u'23', u'TRB': u'4.4', u'FTA': u'3.5', u'BLK': u'0.1', u'FG%': u'.508', u'Pos': u'PG', u'2P%': u'.536', u'MP': u'36.6', u'ORB': u'1.2', u'3P%': u'.213'}
{u'Lg': u'NBA', u'FT': u'1.1', u'3P': u'0.1', u'TOV': u'3.4', u'2PA': u'9.2', u'Tm': u'BOS', u'FG': u'4.7', u'3PA': u'0.6', u'DRB': u'3.1', u'2P': u'4.5', u'AST': u'11.2', u'Season': u'2010-11\xa0\u2605', u'FT%': u'.568', u'PF': u'1.8', u'PTS': u'10.6', u'FGA': u'9.9', u'GS': u'68', u'G': u'68', u'STL': u'2.3', u'Age': u'24', u'TRB': u'4.4', u'FTA': u'1.9', u'BLK': u'0.2', u'FG%': u'.475', u'Pos': u'PG', u'2P%': u'.491', u'MP': u'37.2', u'ORB': u'1.3', u'3P%': u'.233'}
...
"
Reduce a key-value pair into a key-list pair with Apache Spark,"file = spark.textFile(""hdfs://..."")
counts = file.flatMap(lambda line: line.split("" "")) \
         .map(lambda actor: (actor.split("","")[0], actor)) \ 

         # transform each value into a list
         .map(lambda nameTuple: (nameTuple[0], [ nameTuple[1] ])) \

         # combine lists: ([1,2,3] + [4,5]) becomes [1,2,3,4,5]
         .reduceByKey(lambda a, b: a + b)
"
How can i access element value in SOAP response with lxml objectify,"
>>> obj.body[""{}createsessionresponse""].createsessionreturn
'59C3F170141E9CF6F5BF98FB39B0237B'
>>> type(obj.body[""{}createsessionresponse""].createsessionreturn)
<type 'lxml.objectify.StringElement'>
>>> obj.body[""{}createsessionresponse""].createsessionreturn.text
'59C3F170141E9CF6F5BF98FB39B0237B'
>>> type(obj.body[""{}createsessionresponse""].createsessionreturn.text)
<type 'str'>
>>> 
"
Built-in sorted() function in Python,"sorted(data, key=lambda elem: elem[3])
"
Taking two lists and comparing for similarities,"sq = [['welcome'], ['we', 'are'], ['the', 'champions']]
sl = [['we', 'are', 'rainbow', 'while', 'to', 'and', 'do', 'welcome', 'while', 'cant', 'did'], ['are', 'time', 'to', 'do', 'the', 'champions', 'while', 'am']]
_flat = sum(sq, [])
test = [[1 if item in _flat else 0 for item in nl] for nl in sl]
"
Django Formset: Passing a parameter in each form instance,"HourFormSet = modelformset_factory(Hour, extra=5, exclude=('user',))
"
Forcing a thread to block all other threads from executing,"if (_Py_atomic_load_relaxed(&gil_drop_request))
    ...
"
NumPy - Set values in structured array based on other values in structured array,">>> a[""y""][a[""x""]<0] = ""hello""
>>> print a[""y""]
[['' 'hello' 'hello' 'hello' 'hello' '' '' 'hello' 'hello' '']
 ['' 'hello' 'hello' 'hello' '' 'hello' '' '' 'hello' '']
 ['' 'hello' 'hello' 'hello' 'hello' 'hello' 'hello' '' '' 'hello']
 ['hello' 'hello' 'hello' '' '' '' 'hello' '' 'hello' '']
 ['' '' '' 'hello' '' 'hello' '' '' '' 'hello']
 ['hello' '' 'hello' 'hello' '' '' '' '' 'hello' 'hello']
 ['hello' 'hello' 'hello' '' '' 'hello' '' 'hello' 'hello' '']
 ['' 'hello' '' 'hello' 'hello' 'hello' 'hello' '' '' '']
 ['' '' '' '' 'hello' '' 'hello' 'hello' 'hello' '']
 ['' '' 'hello' '' '' '' 'hello' 'hello' '' 'hello']]
"
Create Contour Plot from Pandas Groupby Dataframe,"hdf = aggdf.groupby(['a','b']).size()
hdf
"
Converting a unicode string to see unicode code points,">>> su = u'""/\""'
>>> len(su)
3
"
retrieve value in a column corresponding to the first occurrence of an element in another column in pandas - python,"df
Out[23]: 
   a         b
0  x  0.564161
1  x -1.153969
2  y  1.498050
3  y  0.067259
4  y -0.345102
5  z  0.080116
6  y  0.255031
7  y  0.345250
"
Sum while in Python?,">>> sum_func(lambda x: -x*2, lambda x: x > -10)  # -1*2 + -2*2 + -3*2 + -4*2
-20
"
Python Pandas operate on row,"In [34]: df['logSales'] = np.log(df['Sales'])

In [35]: df
Out[35]: 
   Store  Dept        Date  Sales              id  logSales
0      1     1  2010-02-05    245  1_1_2010-02-05  5.501258
1      1     1  2010-02-12    449  1_1_2010-02-12  6.107023
2      1     1  2010-02-19    455  1_1_2010-02-19  6.120297
3      1     1  2010-02-26    154  1_1_2010-02-26  5.036953
4      1     1  2010-03-05     29  1_1_2010-03-05  3.367296
5      1     1  2010-03-12    239  1_1_2010-03-12  5.476464
6      1     1  2010-03-19    264  1_1_2010-03-19  5.575949
"
Flask Blueprint Initialization - Initializing some global variables,"from .custom import MyBlueprint

admin = MyBlueprint('admin', __name__, url_prefix='/admin')
admin.set_data({'color': '#a569bd', 'enabled': true})

# all the blueprint's routes
...
"
Remove all trailing zeroes in Python list,"  2           0 LOAD_FAST                0 (mylist)
              3 LOAD_CONST               2 (-1)
              6 DELETE_SUBSCR
              7 LOAD_CONST               0 (None)
             10 RETURN_VALUE
"
Sorting data from a table,"newTable = [] 
Intr = ''

    #Added something like
    #http://www.saltycrane.com/blog/2007/12/how-to-sort-table-by-columns-in-python/
        #import operator
       #fetch_lines = sorted(fetch_lines, key=operator.itemgetter(col))

#Sort table so looks like this

    # ID     ORDER PRODUCT                    QTY     CAT
   # 12815  4419  ""# Cortar em dois""         1.0       7
   # 12813  4419  ""---- servir depois ----""  1.0       7
   # 12811  4419  ""Crudo GR""                 1.0       1
   # 12812  4419  ""Salame e Grana GR""        1.0       1
   # 12814  4419  ""Nutella Ban GR""           1.0       3


for i,line in enumerate(fetch_lines):
    if line[2].startswith('#') or line[2].startswith('----'): 
        # Within this if statement you can make adjustment to text item
        if line[2].startswith('#')
           Intr =  Intr + "" Cortar em dois""
        if line[2].startswith('----')
           Intr =  '!SERVIR DEPOIS!' + Intr
    if i == len(fetch_lines) -1:
        newTable.append([line[0], ....., Intr ,  ...])
    if i < len(fetch_lines)
        newTable.append([line[0], ....., '',  ...])
print table


   #Then sort by first column  so table look right 
           #table = sorted( newTable, key=operator.itemgetter(col))

#ID     ORDER PRODUCT              INSTR                              QTY     
#12811  4419  ""Crudo GR""                                               1.0       
#12812  4419  ""Salame e Grana GR""                                    1.0       
#12814  4419  ""Nutella Ban GR""     ""!SERVIR DEPOIS! Cortar em dois""          1.0   
"
Help using *args in tuple matching Python function,"yield dict1[item1][item1_pos], dict2[item2][item2_pos]
"
What is the pythonic way to instantiate a program based on a class,"class MyClass(object):
    def __init__(self):
        self.get_config()
        self.validate_config()
    def get_config(self):
        self.message = ""hello""
    def validate_config(self):
        # I'm not claiming this is good practice, just
        # an example of multiple methods that share state
        if not self.message:
            raise Exception()
    def hello(self):
        print(self.message)

def main():
    MyClass().hello()

if __name__ == ""__main__"":
    main()
"
order of parameters of function call of python,"def foo(**kwargs):
    print kwargs

params = {'arg1':1, 'arg2':2}

foo(**params)         # Version 1
foo(arg1=3,arg2=4)    # Version 2
"
getting value of the maximum key in dictionary (python),"$ python -m timeit -s 'd={x:str(x) for x in range(10000)}' 'max(d)'
1000 loops, best of 3: 377 usec per loop
$ python -m timeit -s 'd={x:str(x) for x in range(10000)}' 'max(d.keys())'
1000 loops, best of 3: 476 usec per loop
"
Python - How to read lines of lists in a text file directly into lists in python,">>> ast.literal_eval('[0.1,0.1,0.2,0.3]\n')
[0.1, 0.1, 0.2, 0.3]
"
python delete specific line and re-assign the line number," if i > n:
        f.write(d[i].replace(d[i].split("","")[0],str(i -1)))
"
Python sets are not json serializable,"from json import dumps, loads, JSONEncoder, JSONDecoder
import pickle

class PythonObjectEncoder(JSONEncoder):
    def default(self, obj):
        if isinstance(obj, (list, dict, str, unicode, int, float, bool, type(None))):
            return JSONEncoder.default(self, obj)
        return {'_python_object': pickle.dumps(obj)}

def as_python_object(dct):
    if '_python_object' in dct:
        return pickle.loads(str(dct['_python_object']))
    return dct
"
Resize fields in Django Admin,"class YourModelAdmin(admin.ModelAdmin):
    formfield_overrides = {
        models.CharField: {'widget': TextInput(attrs={'size':'20'})},
        models.TextField: {'widget': Textarea(attrs={'rows':4, 'cols':40})},
    }

admin.site.register(YourModel, YourModelAdmin)
"
Testing for functions called from a list in python,"def foo():
    print ""foo""

def bar():
    print ""bar""

first = foo

print (first == bar) # prints ""False""
print (first == foo) # prints ""True""
"
Python Numpy recarray sort bidirectional,"In [6]: a[np.lexsort((a['y'], -a['x']))]
Out[6]: 
array([(4, 0.0), (4, 9.0), (1, 0.0), (1, 9.0)], 
      dtype=[('x', '<i8'), ('y', '<f8')])
"
When function can only be called once,"result = filter(None,map(funct,filter(None,args)))
"
Python pandas change duplicate timestamp to unique,"In [69]: df = DataFrame(dict(time = x))

In [70]: df
Out[70]: 
                 time
0 2013-01-01 09:01:00
1 2013-01-01 09:01:00
2 2013-01-01 09:01:01
3 2013-01-01 09:01:01
4 2013-01-01 09:01:02
5 2013-01-01 09:01:02
6 2013-01-01 09:01:03
7 2013-01-01 09:01:03
8 2013-01-01 09:01:04
9 2013-01-01 09:01:04
"
check if json parent value is empty,"There is Scarf
There is NO Scarf
"
"Slicing through a grid in a spiral motion, returning xMin, xMax, yMin, yMax for each slice",">>> m = [[1, 2, 3, 4], 
...      [5, 6, 7, 8], 
...      [9, 10, 11, 12], 
...      [13, 14, 15, 16]]
>>> list(spiral(m))
[6, 7, 11, 10, 1, 2, 3, 4, 8, 12, 16, 15, 14, 13, 9, 5]
"
Run text() of Xpath in selenium,"driver.get(""http://www.hotleathers.com/Front-Printed-T-Shirts-C1232.aspx?s=OrderBy%20ASC&&v=all"")

returnText = []
returnText = self.driver.execute_script(""var iterator = document.evaluate(\""//span[@class='tableNode']/text()[preceding-sibling::br and following-sibling::br]\"", document, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null ); var arrayXpath = new Array();  var thisNode = iterator.iterateNext(); while (thisNode) {arrayXpath.push(thisNode.textContent);  thisNode = iterator.iterateNext(); }    return arrayXpath;"")

for item in returnText:
    print item
"
How can I set and retain attributes on characters in a Python 2 string?,"class Mine(unicode):
    #
    def __init__(self, *args, **kwargs):
        super(Mine, self).__init__(*args, **kwargs)
    #
    def __setattr__(self, attr, value):
        try:
            super(Mine, self).__setattr__(attr, value)
        except AttributeError:
            self.__dict__[attr] = value
    #
    def __getattr__(self, attr):
        try:
            super(Mine, self).__getattr__(attr)
        except AttributeError:
            try:
                return self.__dict__[attr]
            except KeyError:
                raise AttributeError

    def __getitem__(self, item):
        obj = Mine(super(Mine, self).__getitem__(item))
        obj.__dict__ = self.__dict__
        return obj
"
Wrapping arrays in Boost Python,"struct Foo
{
  int vals[3];
  boost::array<std::string, 5> strs;

  Foo()  { std::cout << ""Foo()""  << std::endl; }
  ~Foo() { std::cout << ""~Foo()"" << std::endl; }
};

int more_vals[2];
"
Difference between normal looping of list and using slice?,"filter(lambda x: x >= 0, list2)
"
Generating dictionary of lists in a loop (3.2.3),"from collections import defaultdict
d=defaultdict(list)

for elem in xmlTree.iter():
  # skipping root element
  if elem.tag == xmlTree.getroot().tag:
    continue
  # this is supposed to be my temporary list
  for child in elem:
      d[elem.tag].append(child.tag)
print(tableWColumns)
"
App engine tasks are not executed in defined target,"APP = webapp2.WSGIApplication([
    ('/.*', MainHandler)
], debug=True)
"
Trying to check a condition for every element in a list of integers,"def factorall(x):
    return all(not x % num for num in nums)
"
How to read mp4 video to be processed by scikit-image?,"try:
    for num, image in enumerate(vid.iter_data()):
        if num % int(vid._meta['fps']):
            continue
        else:
            fig = pylab.figure()
            pylab.imshow(image)
            timestamp = float(num)/ vid.get_meta_data()['fps']
            print(timestamp)
            fig.suptitle('image #{}, timestamp={}'.format(num, timestamp), fontsize=20)
            pylab.show()
except RuntimeError:
    print('something went wrong')
"
Getting method parameter names in python,"aMethod.func_code.co_varnames
"
How to iterate over columns of a matrix?,"for i in a.transpose():
"
OrderedDict won't sort within a class,"def __init__(self):
    items = sorted(self._registry.items() + [(self._num, self)]) #collect items
    self._registry.clear() #clean the dict
    self._registry.update(items) #now update it
"
"merge number by using ""-"" (python)",">>> ints_to_ranges(['1', '2', '3', '5', '7', '8'])
'1-3,5,7-8'
>>> ints_to_ranges(['0', '2', '3', '4', '5', '7', '8'])
'0,2-5,7-8'
"
Adding items to wxpython combobox...?,"self.TeamList = myComboBox(self.myvbfrm,(200,20),(100,50))
self.TeamList.Bind(wx.EVT_TEXT, self.onUpdate)
self.EmpList = myComboBox(self.myvbfrm,(200,50),(100,50))
"
Is this code simplified? Should I use more functions?,"for i, student in enumerate(student_list):
    print_gender(student)
"
Python string.strip stripping too many characters,">>> table_name, extension = os.path.splitext(""movies.csv"")
>>> table_name
'movies'
>>> extension
'.csv'
"
Is there a python builtin for merging dicts where I can pass the function to run when there's key conflicts?,">>> la = {'a':[1,2,3],'b':[4,5,6]}
>>> na = {'a':[7,8,9],'b':[1,2,3]}
>>> for k, v in na.items():
...     la.setdefault(k, []).extend(v)
...
>>> la
{'a': [1, 2, 3, 7, 8, 9], 'b': [4, 5, 6, 1, 2, 3]}
"
Python formatting lists of lists,"print(""Guesses"", ""Clues"", sep='\t')
for guess, clue in zip(Guesses, Clues):
    print(' '.join(guess), ' '.join(clue), sep='\t')
"
Code not working properly,">>> bool(""e"")
True
>>> 
"
How are numeric and string variables determined in SPSS?,"namedTuple(1.0, u'm  ', 11654150400.0, 15.0, 3.0, 57000.0, 27000.0, 98.0, 144.0, 0.0)
namedTuple(2.0, u'm  ', 11852956800.0, 16.0, 1.0, 40200.0, 18750.0, 98.0, 36.0, 0.0)
namedTuple(3.0, u'f  ', 10943337600.0, 12.0, 1.0, 21450.0, 12000.0, 98.0, 381.0, 0.0)
namedTuple(4.0, u'f  ', 11502518400.0, 8.0, 1.0, 21900.0, 13200.0, 98.0, 190.0, 0.0)
namedTuple(5.0, u'm  ', 11749363200.0, 15.0, 1.0, 45000.0, 21000.0, 98.0, 138.0, 0.0)
namedTuple(6.0, u'm  ', 11860819200.0, 15.0, 1.0, 32100.0, 13500.0, 98.0, 67.0, 0.0)
namedTuple(7.0, u'm  ', 11787552000.0, 15.0, 1.0, 36000.0, 18750.0, 98.0, 114.0, 0.0)
namedTuple(8.0, u'f  ', 12103948800.0, 12.0, 1.0, 21900.0, 9750.0, 98.0, 0.0, 0.0)
namedTuple(9.0, u'f  ', 11463897600.0, 15.0, 1.0, 27900.0, 12750.0, 98.0, 115.0, 0.0)
namedTuple(10.0, u'f  ', 11465712000.0, 12.0, 1.0, 24000.0, 13500.0, 98.0, 244.0, 0.0)
namedTuple(11.0, u'f  ', 11591424000.0, 16.0, 1.0, 30300.0, 16500.0, 98.0, 143.0, 0.0)
namedTuple(12.0, u'm  ', 12094012800.0, 8.0, 1.0, 28350.0, 12000.0, 98.0, 26.0, 1.0)
namedTuple(13.0, u'm  ', 11920867200.0, 15.0, 1.0, 27750.0, 14250.0, 98.0, 34.0, 1.0)
namedTuple(14.0, u'f  ', 11561529600.0, 15.0, 1.0, 35100.0, 16800.0, 98.0, 137.0, 1.0)
namedTuple(15.0, u'm  ', 11987654400.0, 12.0, 1.0, 27300.0, 13500.0, 97.0, 66.0, 0.0)
...
...
"
In Python can you do prototyping of string functions like in JavaScript,"FooClass.method = my_method
foo_instance.method = my_method
"
Form an unordered list with regex,">>> htmlize(string)
'This is some normal text\n<ul>\n<li>Bullet 1</li>\n<li>Bullet 2</li>\n<li>Bullet 3</li>\n
<li>Bullet 4</li>\n\n</ul>This is other text at the end'
>>> htmlize(string2)
'<ul>\n<li>Bullet 1</li>\n<li>Bullet 2</li>\n<li>Bullet 3</li>\n<li>Bullet 4</li>\n</ul>'
"
Graph databases and RDF triplestores: storage of graph data in python,"
1 <- 2 -> 3
3 <- 4 -> 5
"
Retrieving arguments from HTTP_REFERER string,"import urlparse

parsed = urlparse.parse_qs(referer_url)
print parsed['start'][0]
"
Python efficiency query,"def check(s):
    # split into individual strings
    spl = s.split() 
    # make sure  format is #### #### #### ####
    if len(spl) != 4 or not all(len(x) == 4 for x in spl): 
        return False
    a = s.replace("" "","""")
    elif len(s) != 19 or not all(x.isdigit() for x in a):
        return False
    lister_sum = sum(int(i) for i in a)
    return lister_sum % 10 == 0
"
Match longest substring in Python,"import re

# normally, read your input directly from file, but this allows us to test:
input = """"""The pons also contains the sleep paralysis center of the brain as well as generating the dreams of REM sleep.
The optic tract is a part of the visual system in the brain.
The inferior frontal gyrus is a gyrus of the frontal lobe of the human brain.
The prefrontal cortex (PFC) is the anterior part of the frontallobes of the brain, lying in front of the motor and premotor areas.
There are three possible ways to define the prefrontal cortex as the granular frontal cortex as that part of the frontal cortex whose electrical stimulation does not evoke movements.
This allowed the establishment of homologies despite the lack of a granular frontal cortex in nonprimates.
Modern  tracing studies have shown that projections of the mediodorsal nucleus of the thalamus are not restricted to the granular frontal cortex in primates.
"""""".split('\n')

patterns = [
    ('(dreams of REM (Geo)? sleep)', '(sleep paralysis)'),
    ('(frontal lobe)',            '(inferior frontal gyrus)'),
    ('(prefrontal cortex)',       '(frontallobes of (leftside )?(the )?brain)'),
    ('(modern tract)',            '(probably mediodorsal nucleus)') ]

# Compile the patterns as regexes
patterns = [ (re.compile(dstr),re.compile(rstr)) for (dstr,rstr) in patterns ]

def longest(t):
    """"""Get the longest from a tuple of strings.""""""
    l = list(t) # tuples can't be sorted (immutable), so convert to list...
    l.sort(key=len,reverse=True)
    return l[0]

def custommatch(line):
    for (d,r) in patterns:
        # If got full match to both (d,r), return it immediately...
        (dm,rm) = (d.findall(line), r.findall(line))
        # Slight design problem: we get tuples like: [('frontallobes of the brain', '', 'the ')]
        #... so return the longest match strings for each of dm,rm
        if dm and rm: # must match both dom & rang
            return [longest(dm), longest(rm)]
        # else score any partial matches to (d,r) - how exactly?
        # TBD...
    else:
        # We got here because we only have partial matches (or none)
        # TBD: return the 'highest-scoring' partial match
        return ('TBD... partial match')

for line in input:
    print custommatch(line)
"
Apps in Kivy: get values in kv file,"     height: '50sp'}
"
How can I duplicate this simple matlab plot functionality with mathplotlib?,"import matplotlib.pyplot as plt
import numpy as np

arr=np.genfromtxt('foo.csv',delimiter=',')
plt.plot(arr[:,0],arr[:,1],'b-')
plt.show()
"
Using a global flag for python RegExp compile,"from contextlib import contextmanager

@contextmanager
def flag_regexen(flag):
    import re
    re.my_compile = re.compile
    re.compile = lambda pattern, flags: re.my_compile(pattern, flags | flag)
    yield
    re.compile = re.my_compile
"
Get weekday/day-of-week for Datetime column of DataFrame,"In [2]:

df['weekday'] = df['Timestamp'].dt.dayofweek
df
Out[2]:
            Timestamp  Value  weekday
0 2012-06-01 00:00:00    100        4
1 2012-06-01 00:15:00    150        4
2 2012-06-01 00:30:00    120        4
3 2012-06-01 01:00:00    220        4
4 2012-06-01 01:15:00     80        4
"
change column values in CSV using python,"In [43]: df
Out[43]:
  Name  Age  Babys
0  Avi   25      3
1  Dav   24      3
2  Ela   30      2
3  Ron   40      2
4  Shi   33      2
5  Leb   22      2
6  Moe   11      2
"
Python 3: Checking next value of an iterator without iterating,"def pairwise(iterable):
     ""s -> (s0,s1), (s1,s2), (s2, s3), ...""
    a, b = tee(iterable)
    next(b, None)
    return izip(a, b)
"
How to add a new column to a CSV file using Python?,"import csv

with open('C:/test/test.csv','r') as csvinput:
    with open('C:/test/output.csv', 'w') as csvoutput:
        writer = csv.writer(csvoutput, lineterminator='\n')
        reader = csv.reader(csvinput)

        all = []
        row = next(reader)
        row.append('Berry')
        all.append(row)

        for row in reader:
            row.append(row[0])
            all.append(row)

        writer.writerows(all)
"
"How to specify python regular expression that starts with ""testing"" without declaring the content variable?","name = ""testing_kip-win332""

if name.startswith(""testing""):
    print (""Uninstalling"" + product.Name + ""..."")
    result = product.Uninstall()
"
How to clone or copy a list in Python?,"original: ['foo', 5, 'baz']
slice: ['foo', 5]
list(): ['foo', 5]
copy: ['foo', 5]
deepcopy: ['foo', 1]
"
python - 2 math questions,"def A(dx, dy):
  return math.atan2(dy, dx) * 180 / math.pi
"
Joining Subsequent List Elements - Python,"from itertools import groupby

a = ['AA', 'BB', 'C', 'D']
res = [''.join((str(z) for z in y)) for x, y in groupby(a, key = lambda x: len(x) == 2)]
"
How to determine if a decimal fraction can be represented exactly as Python float?,"def can_be_represented(num, den):
    f = Fraction(num, den)
    return f.denominator & (f.denominator - 1) == 0
"
How do I Pythonically print a list with formatting?,"nums = [1, 2, 3, 4, 5, 6]
ltrs = ['B', 'J', 'C', 'A', 'J', 'X']

print ' '.join('%s %s' % (num, ltr) for num, ltr in zip(nums, ltrs)
"
Python looping over dictionary to substitute keys with the values from another dictionary,"In [1]: items = {'apple': 42, 'orange': 17}

In [2]: new_keys = {'apple': 'banana', 'orange': 'tangerine'}

In [3]: def convert(items, ID):
            ...

In [13]: convert(items, new_keys)
Out[13]: {'banana': 42, 'tangerine': 17} # Updated dict returned

In [14]: items
Out[14]: {'apple': 42, 'orange': 17} # Original dict stays untouched
"
Check md5sum of all files in a directory in python,"cmd= 'md5sum ' + path
"
List of distinct XML element names using BeautifulSoup,"from xml.etree.ElementTree import fromstring, ElementTree

data = """"""<?xml version=""1.0"" encoding=""UTF-8""?>
<note>
    <to> Tove</to>
    <from>Jani</from>
    <heading>Reminder</heading>
    <body>Don't forget me this weekend!</body>
</note>
""""""

tree = ElementTree(fromstring(data))
print [item.tag for item in tree.getiterator()]
"
How can I check numbered lists that matches current n value?,"r = [['X', 'O', 'O'],
     ['X', 'X', 'O'],
     ['X', '.', 'O']]
"
Combining 2 lists in strange way,"[[1.0, 100.0, 20.0], [2.0, 100.0, 20.0], [3.0, 100.0, 0.0], [4.0, 100.0], [5.0, 100.0]]
"
Can API hooking in python be OS agnostic?,"def Process(records, per_record_hook=None):
    ""adds all records to XYZ system""
    for record in records:
        if per_record_hook:
            per_record_hook(record)
        XYZ.append(record)

def print_record(record):
    ""print a '.' for each record (primitive counter)""
    print '.'
"
Django how to get haystack working with django-hvad,"class PostSearchForm(SearchForm):
    lan = forms.CharField(required=False)

    def search(self):
        sqs = super(PostSearchForm, self).search()
        if not self.is_valid():
            return self.no_query_found()
        if self.cleaned_data.get('lan'):
            sqs = sqs.filter(lan=self.cleaned_data['lan'])
        return sqs
"
Call GUID function more than once in print formatting in python,">>>(uuid.uuid4for for _ in range(2))
<generator object <genexpr> at 0x10e4d1620>
"
How do I multiply integers within a nested list?,"product_of([1, 2, [3, 4], 5, [6, [7, 8]]])    # => 40320
"
Web scraping multiple pages with Beautiful Soup,"import requests
from bs4 import BeautifulSoup

url = ""https://www.crowdcube.com/investments?sort_by=0&q=&hof=1&i1=0&i2=0&i3=0&i4=0&sort_by=7""


def parse(so):
    return {'title': soup.title.text, 'description': so.find(""div"", {""class"": ""pitch-tabs""}).p.text,
            'target': so.find(""div"",{""class"":""cc-pitch__stats clearfix""}).dd.text,
            'raised': so.find(""div"", {""class"": ""cc-pitch__raised""}).b.text,
            'category': "" "".join(so.find(""li"",{""class"":""sectors""}).span.text.split()),
            ""title"": so.title.text}


req = requests.get(url)

soup = BeautifulSoup(req.content)

links = {h.a[""href""] for h in soup.find_all(""h2"", {""class"": ""pitch__title""})}

for link in links:
    print(link)
    soup = BeautifulSoup(requests.get(link).content)
    print(parse(soup))
"
I need some help drawing coloured squares in a certain order with pygame for python 3.2,"for row in range(rows):
    if row % 2 == 0:
        row_colours = colours[row*rows:(row+1)*rows]
    else 
        row_colours = colours[(row+1)*rows:row*rows:-1]
    for col in range(cols):
        # row_colours[col] contains the colour you want
"
Order a sentence alphabetically and count the number of times each words appears and print in a table,"sentence = thestring.split("" "")
from collections import Counter
for fruit, num in sorted(Counter(sentence).items()):
    print ""{:10}|{:5}"".format(fruit.ljust(10, "".""), str(num).rjust(5, "".""))
"
python - identify characters from numbers in csv file,"['blpcfgokakmgnkcojhhkbfbldkacnbeo', '695108']
['pjkljhegncpnkpknbcohdijeoejaedia', '678425']
['apdfllckaahabafndbhieahigkjlhalf', '651374']
...
"
Python SNMP GetBulk - Multiple OIDs,"errorIndication, errorStatus, errorIndex, \
varBindTable = cmdgen.CommandGenerator().bulkCmd(
            cmdgen.CommunityData('test-agent', 'public'),
            cmdgen.UdpTransportTarget(('localhost', 161)),
            0,
            25,
            (1,3,6,1,2,1,4,20), # ipAddrTable
            (1,3,6,1,2,1,4,21), # ipRouteTable
        )
"
Python 3: test command line arguments,"#! /usr/bin/python3.2

import sys

if __name__ == '__main__':
    if len (sys.argv) < 4:
        print ( ['Usage: myscript [Dir] [Old] [New]',
            'Please enter Old and New',
            'Please enter New'] [len (sys.argv) - 1] )
"
What is a maximum number of arguments in a Python function?,">>> exec 'f(' + ','.join(str(i) for i in range(5000)) + ')'

Traceback (most recent call last):
  File ""<pyshell#63>"", line 1, in <module>
    exec 'f(' + ','.join(str(i) for i in range(5000)) + ')'
  File ""<string>"", line 1
SyntaxError: more than 255 arguments (<string>, line 1)
"
Spatial index/query (finding k nearest points),"> db.places.find({loc: { $near: {long: -90, lat: 50}}}).limit(6)
{""name"" : ""WI"", ""loc"" : { ""long"" : -89.6385, ""lat"" : 44.2563 } }
{""name"" : ""MN"", ""loc"" : { ""long"" : -93.9196, ""lat"" : 45.7326 } }
{""name"" : ""MI"", ""loc"" : { ""long"" : -84.5603, ""lat"" : 43.3504 } }
{""name"" : ""IA"", ""loc"" : { ""long"" : -93.214, ""lat"" : 42.0046 } }
{""name"" : ""IL"", ""loc"" : { ""long"" : -89.0022, ""lat"" : 40.3363 } }
{""name"" : ""ND"", ""loc"" : { ""long"" : -99.793, ""lat"" : 47.5362 } }
"
How to get a reference of the list inside the list comprehension in Python,"In [95]: def g(f,arg):
    x = f(tempval[0],arg)
    tempval[0]=x
    return x
In [96]: tempval=[5]
In [97]: [g(f,arg) for f,arg in [(add,4),(mul,2)]]
Out[97]: [9, 18]
"
Cython fast conversion of binary string to int array,"import numpy
import random
import struct

data = struct.pack('i'*100, *[random.randint(0, 1000000) for _ in range(100)])

numpy.fromstring(data, dtype=""int32"")
#>>> array([642029, 967046, 599565, ...etc], dtype=int32)
"
Parsing METAR webpage in python,"<p><hr/><br/><code>KBOS 140154Z 15006KT 8SM -RA OVC034 23/22 A2994</code><br/><br/>
"
"python struct ""unpack requires a bytes object of length 8"" while converting binay to float","bf = bytes(bf, 'UTF-8')
"
"Extract two dates, result in seconds (pandas)","In [5]: import pandas as pd

In [6]: a = pd.to_timedelta('0 days 00:43:00.000000000',unit='s')

In [7]: a
Out[7]: Timedelta('0 days 00:43:00')

In [8]: a.total_seconds()
Out[8]: 2580.0
"
PySide: how to clean `QLineEdit` field with a button click?,"for field in fields:
    return field.clear()
"
how to do asynchronous writes to redis in tornado,"class MyRedisWrapper(object):
    @gen.engine
    def set(self, key, value):
        yield tornado.gen.Task(t.set, key, value)

r = MyRedisWrapper()

class MyHandler(tornado.web.RequestHandler):
    def get(self):
        r.set('key', 'value') #It will work, but not sure about efficiency.
"
Comparing date object in a Couplet between two dates,"assert clans.is_functional(data_clan)

def record_in_range(rel):
    date_value = rel('col2').value  # .value extracts the raw literal from the Atom
    return date(2014, 1, 1) < date_value < date(2016, 1, 1)
"
Wrapping C code with SWIG that uses static global variables,"/* test.cpp */
#include ""test.h""
float g_float = 4.0;
float getMe() {
  return g_float;
}   
"
Getting Input from Radiobutton,"self.typeFrame = tk.Frame(self.frame)
self.typeChoice = tk.StringVar(self.typeFrame)
self.typeChoice.set(None)
"
Python threading vs. multiprocessing in Linux,"import thread
import time

def dummy():
    time.sleep(1)

def main():
    for i in range(100):
        tid = thread.start_new_thread(dummy, ())
        #print 'created new thread %d' % tid

if __name__ == '__main__':
    main()
"
Pandas time to hour conversion using Lambda,"def time_slot_convert(time):
    return (time.minute + 1)

df['time_slot']=df.apply(lambda row: time_slot_convert(pd.to_datetime(row['time'])),axis=1)
print df
     site_number       date              time  Class  Speed_KPH  time_slot
no.                                                                       
0             11 2016-02-27  00:00:13.0000000  Short         43          1
1             11 2016-02-27  00:02:15.0000000  Short         45          3
2             11 2016-02-27  00:00:28.0000000  Short         31          1
3             11 2016-02-27  00:03:28.0000000  Short         31          4
"
Storing dynamic form in a model,"f = type(forms.Form)('MyForm', forms.Form, d)
"
python - parameters declaration ordering,"p_script = argv 
p_user_name = argv
p_id = argv
"
"Pass a type object (class, not an instance) from python to c++","#include <boost/python.hpp>

/// @brief boost::python::object that refers to a type.
struct type_object: 
  public boost::python::object
{
  /// @brief If the object is a type, then refer to it.  Otherwise,
  ///        refer to the instance's type.
  explicit
  type_object(boost::python::object object):
    boost::python::object(get_type(object))
  {}

  /// @brief Type identity check.  Returns true if this is the object returned
  ///        returned from type() when passed an instance of an object created
  ///        from a C++ object with type T.
  template <typename T>
  bool is() const
  {
    // Perform an identity check that registartion for type T and type_object
    // are the same Python type object.
    return get_class_object<T>() == static_cast<void*>(ptr());
  }

  /// @brief Type identity check.  Returns true if this is the object is a
  ///        subclass of the type returned returned from type() when passed
  ///        an instance of an object created from a C++ object with type T.
  template <typename T>
  bool is_subclass() const
  {
    return PyType_IsSubtype(reinterpret_cast<PyTypeObject*>(ptr()),
                            get_class_object<T>());
  }

private:

  /// @brief Get a type object from the given borrowed PyObject.
  static boost::python::object get_type(boost::python::object object)
  {
    return PyType_Check(object.ptr())
      ? object 
      : object.attr(""__class__"");
  }

  /// @brief Get the Python class object for C++ type T.
  template <typename T>
  static PyTypeObject* get_class_object()
  {
    namespace python = boost::python;
    // Locate registration based on the C++ type.
    const python::converter::registration* registration =
          python::converter::registry::query(python::type_id<T>());

    // If registration exists, then return the class object.  Otherwise,
    // return NULL.
    return (registration) ? registration->get_class_object()
                          : NULL;
  }
};

/// @brief Enable automatic conversions to type_object.
struct enable_type_object
{
  enable_type_object()
  {
    boost::python::converter::registry::push_back(
      &convertible,
      &construct,
      boost::python::type_id<type_object>());
  }

  static void* convertible(PyObject* object)
  {
    return (PyType_Check(object) || Py_TYPE(object)) ? object : NULL;
  }

  static void construct(
    PyObject* object,
    boost::python::converter::rvalue_from_python_stage1_data* data)
  {
    // Obtain a handle to the memory block that the converter has allocated
    // for the C++ type.
    namespace python = boost::python;
    typedef python::converter::rvalue_from_python_storage<type_object>
                                                                 storage_type;
    void* storage = reinterpret_cast<storage_type*>(data)->storage.bytes;

    // Construct the type object within the storage.  Object is a borrowed 
    // reference, so create a handle indicting it is borrowed for proper
    // reference counting.
    python::handle<> handle(python::borrowed(object));
    new (storage) type_object(python::object(handle));

    // Set convertible to indicate success. 
    data->convertible = storage;
  }
};

// Mockup types.
struct A {};
struct B: public A {};
struct C {};

/// Mockup function that receives an object's type.
int func(type_object type)
{
  if (type.is<A>()) return 0;
  if (type.is<B>()) return 1;
  return -1;
}

/// Mockup function that returns true if the provided object type is a
/// subclass of A.
bool isSubclassA(type_object type)
{
  return type.is_subclass<A>();
}

BOOST_PYTHON_MODULE(example)
{
  namespace python = boost::python;

  // Enable receiving type_object as arguments.
  enable_type_object();

  python::class_<A>(""A"");
  python::class_<B, python::bases<A> >(""B"");
  python::class_<C>(""C"");

  python::def(""func"", &func);
  python::def(""isSubclassA"", &isSubclassA);
}
"
How to schedule a task using python," cmd='SCHTASKS /Create /SC ""%s"" /MO ""%s"" /D ""%s"" /TN ""%s"" /TR ""%s"" /SD ""%s"" /ST ""%s""'%(""DAILY"",""2"",""MON"",""calc"",""C:\Windows\System32\calc.exe"",""10/07/2013"",""11.47"")
 proc=subprocess.Popen(cmd,shell=True,stdout=subprocess.PIPE,stderr=subprocess.PIPE)
"
Use a Variable in a Function Without Passing as an Argument,"def f():
    global foo
    print(foo)
    foo += 1

foo = 23
f()
print(foo)
"
Reusing a list in a new function,"func_2(myList)
*do some stuff to the list*
"
Python multiprocessing text extraction performance issue vs Perl equivalent,"import glob, sys, re

def natural_sort_key(s, _nsre=re.compile('([0-9]+)')):
    return [int(text) if text.isdigit() else text.lower()
            for text in re.split(_nsre, s)]

for file in sorted(glob.iglob(sys.argv[1] + '/*.xml'), key=natural_sort_key):
    with open(file) as x:
        f = x.read()
"
Use string format create a 2D list,">>> '{:10}'.format('test')
'test      '
"
Need character-by-character keyboard input that interacts well with paste and ANSI escape sequences,"IOError: [Errno 35] Resource temporarily unavailable
"
Rotating images using PHP and jQuery the fast way,"rotate? yes -> exec python script // even though you already have the output file
"
generating permutations with repetitions in python,"import itertools
x = [1, 2, 3, 4, 5, 6]
[p for p in itertools.product(x, repeat=2)]
[(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (1, 6), (2, 1), (2, 2), (2, 3), 
 (2, 4), (2, 5), (2, 6), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (3, 6), 
 (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (4, 6), (5, 1), (5, 2), (5, 3), 
 (5, 4), (5, 5), (5, 6), (6, 1), (6, 2), (6, 3), (6, 4), (6, 5), (6, 6)]
"
Finding connectedness from a list of nodes and a list of edges,"import matplotlib.pyplot as plt

for road in atlas:
    path = [nodesdict[i] for i in road]
    lons, lats = zip(*path)
    plt.plot(lons, lats)

plt.grid()
plt.axis('equal')
plt.show()
"
Storing text mining data,"create table DocumentView (
    DocumentViewId int identity(1,1), -- SQL Server for auto increment column
    DocumentId int,
    ViewedAt datetime,
    viewedBy int, -- some sort of user id
    CreatedBy varchar(255) default system_user,
    CreatedAt datetime default getdate()
"
How should I debug Trac plugins?,"import os
import trac.web.main

os.environ['TRAC_ENV'] = '/path/to/your/trac/env'

application = trac.web.main.dispatch_request

from flup.server.fcgi import WSGIServer
server = WSGIServer(application, bindAddress=(""127.0.0.1"", 9000), )
server.run()
"
Get tz offset from sting,">>> from datetime import datetime
>>> dt = datetime.strptime(""2013-12-02 22:00:00"", ""%Y-%m-%d %H:%M:%S"")
>>> dt = dt.replace(tzinfo=FixedOffset(-8*60, ""GMT+0800""))
>>> dt.isoformat()
'2013-12-02T22:00:00-08:00'
"
how to return a value from button_press_event matplotlib?,"N = mutable_object['key']
"
how can I get href links from html code,"from BeautifulSoup import BeautifulSoup
import urllib2
import re

html_page = urllib2.urlopen(""http://www.yourwebsite.com"")
soup = BeautifulSoup(html_page)
for link in soup.findAll('a'):
    print link.get('href')
"
Running .exe files with user arguments in python,"out, err = p.communicate('104\nq\n')
"
Pass <input> value to Django view,"<form method=""get"" action=""{% url 'foo' %}"">
    <input id=""myinput"" type=""text"" name=""search_query"">

    ...

</form>
"
"name of column, that contains the max value","In [232]:
df.apply( lambda x: x == x.max(), axis=1)

Out[232]:
   Alice Eleonora   Mike  Helen
0  False    False   True  False
1   True    False  False  False
2  False     True  False  False
3  False    False  False   True
"
"What specific issue try zope folks to solve with TAL, TALES & METAL","<ul>
{% for customer in customers %}
  <li>
    <a href=""{{ customer.url }}"">
      {{ customer.name }}
    </a>
  </li>
{% endfor %}
</ul>
"
How do you set the results_directory in SST Python,"import unittest
from sst.actions import *
from sst import cases, config

#config.results_directory = ""C:\Users\{me}\Desktop\Python-pip-SST\results""

go_to('https://www.google.com/')
assert_title_contains('Google')
#Main page is displayed
take_screenshot(filename='home_page.png',add_timestamp=True)
"
Why can I not paste the output of Pythons REPL without manual-editing?,"Trying:
    class eg(object):
        def __init__(self, name):
                self.name = name
        def hi(self):
                print ""Hi %s"" % (self.name)
Expecting nothing
ok
Trying:
    greeter = eg(""Bob"")
Expecting nothing
ok
Trying:
    greeter.hi()
Expecting:
    Hi Bob
ok
1 items passed all tests:
   3 tests in doctest.txt
3 tests in 1 items.
3 passed and 0 failed.
Test passed.
"
addition of int and str,"((' ' * 70) - sub) + 'Allen'
"
PyQt - Centering Widget in resizable GridLayout,"password_layout = QtGui.QGridLayout()
# Set the stretch
password_layout.setColumnStretch(0, 1)
password_layout.setColumnStretch(3, 1)
password_layout.setRowStretch(0, 1)
password_layout.setRowStretch(3, 1)
# Add widgets
password_layout.addWidget(username_label, 1, 1)
password_layout.addWidget(password_label, 2, 1)
password_layout.addWidget(_username, 1, 2)
password_layout.addWidget(_password, 2, 2)
"
How to strip all whitespace from string,"$ python -m timeit '"""".join("" \t foo \n bar "".split())'
1000000 loops, best of 3: 1.38 usec per loop
$ python -m timeit -s 'import re' 're.sub(r""\s+"", """", "" \t foo \n bar "")'
100000 loops, best of 3: 15.6 usec per loop
"
How to determine if a timezone specific date in the past is daylight saving or not in python?,"def is_summer_time(aware_dt):
    assert aware_dt.tzinfo is not None
    assert aware_dt.tzinfo.utcoffset(aware_dt) is not None
    return bool(aware_dt.dst())
"
How to remove the punctuation in the middle of a word or numbers?,">>> import re
>>> [ re.sub(r'[{}]+'.format(punctuation),'',x ) for x in lis]
['helllo', 'intro']
>>> re.sub(r'[{}]+'.format(punctuation),'', strs)
'5678'
"
Python: Best way to check if list is empty without not?,"if list3:
    # list has elements
else:
    # list is empty
"
"Python ""Multi-Level Decorator"" - how does this work?","import random

def funcdec(func):
    state = random.random()    
    def wrapper(*args, **kwargs):
        return func(state, *args, **kwargs)
    return wrapper
"
Average of a groupby or a groupby of an average on a dataframe with duplicated indexes,"dd.groupby( dd.index.month ).mean()
"
Running Java Application using Popen,"Popen(""curl www.vit.org/downloads/doc/tariff.doc | java -jar tika-app-1.3.jar --text >out_txt.txt"", shell=True)
"
How to get a function's attributes when passing it as a parameter,"source
from functools import partial

def do_something(foo, bar):
    """"""this function raises an Exception""""""
    print foo,bar
    raise Exception('uhoh')

def evaluate(fcall, testname):
    ""print message if func call throws exception""
    try:
        fcall()
    except Exception:
        funct = fcall.func
        print (""Error in ""+ testname+ "" "" 
               + funct.__name__ 
               + "" "" + funct.__doc__
               )

def evaluate2(testname, funct, *args, **kwargs):
    ""print message if func call throws exception""
    try:
        funct(*args, **kwargs)
    except Exception:
        print (""Error in ""+ testname+ "" "" 
               + funct.__name__ 
               + "" "" + funct.__doc__
               )

evaluate(partial(do_something, foo='beer'), 'mytest')
evaluate2('mytest2', do_something, 'tasty', foo='beer')
"
Is there an fmod in theano?,"theano.tensor.switch(cyclic_linear_activation < 0.0, 
                     (cyclic_linear_activation % 1.0) + 1.0,
                     cyclic_linear_activation )
"
Pandas: how to concisely detrend subset of columns,"In [83]: df.info()
<class 'pandas.core.frame.DataFrame'>
Int64Index: 433 entries, 0 to 432
Data columns (total 80 columns):
col-0     433 non-null float64
col-1     433 non-null float64
col-2     433 non-null float64
...          
dtypes: float64(80)
memory usage: 274.0 KB
"
Can matplotlib pick_event return array indeces rather than values or pixels?,"x = linspace(0,1,100)
y = cos(x*8*pi)   # your array

fig = plt.figure()
ax = fig.add_subplot(111)
line, = ax.plot(x, y, 'b',picker=10)

def onpick(event):

    if event.artist!=line:  #check that you clicked on the object you wanted
        return True     
    if not len(event.ind):  #check the index is valid
        return True
    ind = event.ind[0]

    ax.plot(x[ind],y[ind],'ro')

    fig.canvas.draw() 
    return True

fig.canvas.mpl_connect('pick_event', onpick)
fig.show()
"
"Find same elements in a list, and then change these elemens to tuple (f.e. 2 to (2,1))",">>> from collections import Counter
>>> counters = defaultdict(lambda: count(1))
>>> tally = Counter(inputlist)
>>> [(n, next(counters[n])) if tally[n] > 1 else n for n in inputlist]
[(1, 1), (2, 1), 4, 3, (2, 2), (1, 2)]
"
Display multiple mpld3 exports on a single HTML page,"import json

# ... create matplotlib figure

json01 = json.dumps(mpld3.fig_to_dict(fig))
"
Function returns None after recursion,">>> def getDisplayDimensions(width,FormatX,FormatY):
...     Format = float(FormatX)/FormatY
...     if FormatX < FormatY:
...         return ""illegal format.""
...     for height in range(1,int(width)+1):
...         if float(width)/height == float(Format):
...             return width,height
...             break
...         elif height == width:
...             return getDisplayDimensions(float(width)-1,FormatX,FormatY)
... 
>>> print getDisplayDimensions(801,16,9)
(800.0, 450)
"
How to plot graph involving complex numbers?,"[  1.00000000e-02   4.64158883e-02   2.15443469e-01   1.00000000e+00
   4.64158883e+00   2.15443469e+01   1.00000000e+02   4.64158883e+02
   2.15443469e+03   1.00000000e+04]
"
How to view file handling functions documentation using help function in Python 3?,">>> import io
>>> help(io.FileIO.seek)
"
Create binary PBM/PGM/PPM,"import struct
def create_pbm(size,lst):
    out = ['P4\n'+' '.join(map(str,size))+'\n'] #header
    for j in xrange(0,len(lst),size[1]):
        #single row of data
        row = lst[j:j+size[1]]
        #padded string which can be turned into a number with `int`
        s = ''.join(map(str,row))+'0000000'
        #Turn the string into a number and pack it (into unsigned int) using struct. 
        vals = [struct.pack('B',int(s[i*8:(i+1)*8],2)) for i in xrange(size[0]//8+1) ]
        out.append(''.join(vals))
    return ''.join(out)

a = [1]*25 #flat black image.
print repr(create_pbm((5,5),a))
"
read a table according to a certain number of characters,"9P/Tempel 1

27P/Crommelin

126P/IRAS

177P/Barnard

P/2008 A3 (SOHO)

P/2008 Y11 (SOHO)

C/1991 L3 Levy
"
"Parse HTML, set datas to variables","import re

html = ... # your html goes here

telephone = re.search('Tel: ([+\d\s]+)', html).groups()[0]
fax = re.search('Fax: ([+\d\s]+)', html).groups()[0]
paragraphs = [line for line in html.split('\n') if line.startswith('<p>')]
address = '\n'.join([p.replace('<p>', '').replace('</p>', '')
                     for p in paragraphs[0:2]])

print(telephone)
print(fax)
print(address)
"
Replace fullwidth punctuation characters with normal width equivalents,"perl -CSAD -i.orig -Mcharnames=:full -pe 'tr[\N{FULLWIDTH COLON}][:]' file1
"
Python script with arguments for command line Blender,"> blender -b ""demo.blend"" -P script.py -- 50
"
MD5 Python Implementation,"def XX(func, a, b, c, d, x, s, ac):
    res=0
    res=res+a+func(b,c,d)
    res+=x
    res+=ac
    res=res & 0xffffffff
    res=rol(res,s)
    res=res & 0xffffffff
    res+=b
    return res & 0xffffffff
"
python - divide world into bins,"    print '... or get only ones in a specific region'
    subset =  [b for b in ball_collection if b[0][0] == 1]

    for b in subset:
        print 'ball region: {r}   with coords: {c}'.format(r=b[0], c=b[1])


main()
"
Change Marker Style/Color in Python Probplot,"ax.get_lines()[0].set_marker('p')
"
Iterate over a list of tuples,"from operator import itemgetter

map(itemgetter(1), my_list)
"
Can I add arguments to python code when I submit spark job?,"#import sys
print sys.argv
"
Applying math.ceil to an array in python,"In [53]: a2 = np.indices((3,3)) * 0.9

In [54]: a2
Out[54]:
array([[[ 0. ,  0. ,  0. ],
        [ 0.9,  0.9,  0.9],
        [ 1.8,  1.8,  1.8]],

       [[ 0. ,  0.9,  1.8],
        [ 0. ,  0.9,  1.8],
        [ 0. ,  0.9,  1.8]]])

In [55]: np.ceil(a2)
Out[55]:
array([[[ 0.,  0.,  0.],
        [ 1.,  1.,  1.],
        [ 2.,  2.,  2.]],

       [[ 0.,  1.,  2.],
        [ 0.,  1.,  2.],
        [ 0.,  1.,  2.]]])
"
Replace the content in between using python regex,"In [1]: s='[text], text, {text}, itextm'
In [2]: import re
In [3]: re.sub(r'([[{])[^\]}]*',r'\1replaced',s)
Out[3]: '[replaced], text, {replaced}, itextm'
"
Extract section names and starting pages from a text file,"pages = re.compile(r'[\n\f](\d+)\n.*?(?=[\n\f](\d+)\n)', flags = re.DOTALL | re.MULTILINE)
"
How to offset random sine angles as a whole?,"sin(radians(12))
sin(radians(33))
# etc
"
How to associate elements in a set with multiple dict entries,"data = {}
for file in files:
    for key, value in get_data(file):
        if get_component(file) not in data:
            data[get_component(file)] = {}
        data[get_component(file)][key] = value
"
How to write PIL image filter for plain pgm format?,"def pgm2pil(fname):
    #
    # This method returns a PIL.Image.  Use pbm2numpy function above as a
    # guide.  If it can't load the image, it returns None.
    #
    pass

def wrapper(fname):
    pgm = pgm2pil(fname)

    if pgm is not None:
        return pgm
    return PIL.Image.open(fname)

#
# This is the line that ""adds"" the wrapper
#
PIL.Image.open = wrapper
"
mapping to the max a variable number of lists,"from itertools import izip_longest

d={1: [0, 1, 0, 0, 3, 0],
 2: [1, 0, 0, 0, 0, 4, 5],
 3: [0, 5, 6, 0, 1, 1]}

# there are other variations like
# [max(column) for column in izip_longest(*d.itervalues())]
print map(max, izip_longest(*d.values()))
# [1, 5, 6, 0, 3, 4, 5]
"
Python: XY density plot,"x = np.random.random(1000)
y = np.random.random(1000)
nx, ny = 7, 7
H, _, _ = np.histogram2d(x, y, bins=(nx,ny), normed=True)
pylab.imshow(H, interpolation='nearest')
pylab.colorbar()
pylab.show()
"
wxPython: Event method in different module,"class MyFrame(wx.Frame, BehaviorPack):
    def __init__(self, *args, **kargs):
        ..........
"
Creating a tree from self referential tables in SQLalchemy,"from sqlalchemy.ext.declarative import declarative_base
Base = declarative_base(metadata=metadata)

class TreeNode(Base):

    __tablename__ = 'tree'

    id = Column(Integer, primary_key=True)
    parent_id = Column(Integer, ForeignKey('tree.id'))
    name = Column(String(50), nullable=False)

    children = relationship('TreeNode',

                        # cascade deletions
                        cascade=""all"",

                        # many to one + adjacency list - remote_side
                        # is required to reference the 'remote' 
                        # column in the join condition.
                        backref=backref(""parent"", remote_side='TreeNode.id'),

                        # children will be represented as a dictionary
                        # on the ""name"" attribute.
                        collection_class=attribute_mapped_collection('name'),
                    ) 

    def __init__(self, name, parent=None):
        self.name = name
        self.parent = parent

    def append(self, nodename):
        self.children[nodename] = TreeNode(nodename, parent=self)

    def __repr__(self):
        return ""TreeNode(name=%r, id=%r, parent_id=%r)"" % (
                    self.name,
                    self.id,
                    self.parent_id
                )    
"
How to modify a Python JSON objects array,"sp_sample = ([{""t"":1434946093036,""v"":54.0},{""t"":1434946095013,""v"":53.0},{""t"":1434946096823,""v"":52.0}],)

for d in sp_sample[0]:    # N.B. access first item of tuple
    d['v'] *= 100
>>> print(sp_sample)
[{'t': 1434946093036, 'v': 5400.0}, {'t': 1434946095013, 'v': 5300.0}, {'t': 1434946096823, 'v': 5200.0}]
"
How to groupby or exclude based on value counts?,"def f(x):
    print(x == 'Manual').all()

print df.groupby(""Team"")['Method'].apply(f)
True
False
False
"
How Can I Hide *Only* the Button (Not Entire Element) for the Input Type File in a Django Form?,"#upload-file-container{
    position: relative;
    cursor: pointer;
}

#upload-file-container input{
    position: relative;
    left: 150px; /* Maybe you need to adjust this */
    top: 5px;
}

#upload-file-container .upload-file-wrapper{
    position: absolute;
    left: 0;
    top: -1px;
    background-color: lightgray;
    border: 1px solid gray;
    padding: 5px 0 6px;
    width: 250px;
    text-align: center;
}
"
Run sudo apt-get install without internet connection,"sudo apt-get clean 
"
Sort a list using selection sort,">>> a=[1,2]
>>> b=[1,1]
>>> a<b
False
>>> a=[1,2]
>>> b=[1,3]
>>> a<b
True
>>> a=[1,2]
>>> b=[2,1]
>>> a<b
True
"
Summing timeseries data in a python dict,"key:'04:21', value:'78'
key:'04:20', value:'109'
"
Evaluation of symbolic Differentiation with Sympy in Python,"from pylab import *
from sympy import *
"
Merge list of dict into one dict in python,"defaultdict(<type 'dict'>, {'GE': {'Intial0': 11.861, 'Final0': 12.9835}, 'US': {'Intial0': 12.515, 'Final0': 81.159}})
"
Efficient unordered substing matching,"r'\b[submarine]+\b'
"
Is it possible to print the decision tree in scikit-learn?,">>> from sklearn.datasets import load_iris
>>> from sklearn import tree
>>>
>>> clf = tree.DecisionTreeClassifier()
>>> iris = load_iris()
>>>
>>> clf = clf.fit(iris.data, iris.target)
>>> tree.export_graphviz(clf,
...     out_file='tree.dot')    
"
Random function with break command in Python,"import random
def three_random_square_average():
    z = 0 # initialize your answer
    while(z <= 0.5625): # While the answer is less or equal than 0.5625...
        # Generate three random numbers:
        a, b, c = random.random(), random.random(), random.random()
        # Assign the square of the average to your answer variable
        z = square_of_average(a, b, c)
    # When the loop exits, return the answer
    return z
"
Check to ensure a string does not contain multiple values,">>> import re
>>> re.compile('jpg|png|gif').search('testpng.txt')
<_sre.SRE_Match object at 0xb74a46e8>
>>> re.compile('jpg|png|gif').search('testpg.txt')
"
Craps simulator Python,"class CrapsGame(object):
    def __init__(self):
        self.dice = pairOfDice()
        self.point = None
    def rolldice(self):
        self.dice.toss()
    def playagain(self):
        if input(""Roll again? (y/n): "").lower() == 'y':
            return True
        return False
    def score(self):
        result = self.dice.getTotal()
        if self.point:
            if result == 7:
                self.point = None
                # lose
            elif result == self.point:
                self.point = None
                # win
            else:
                # keep going
        else:
            if result in [7, 11]: # win
            elif result in [2,3,12]: # lose
            else:
                self.point = result
    def run(self):
        while True:
            self.rolldice()
            self.score()
            if not self.playagain():
                return

if __name__ == ""__main__"":
    game = CrapsGame()
    game.run()
"
Simultaneous line-by-line reading of n-number of files in python,"[[150.0, 26.0], [6.0, 8.0], [14.0, 10.0]]
[[160.0, 27.0], [7.0, 9.0], [16.0, 11.0]]
[[170.0, 28.0], [8.0, 10.0], [18.0, 12.0]
...
"
How to change the format of subparser with argparse,"formatter = argparse.HelpFormatter(`prog`, max_help_position=40)
"
request.user as a choice in select widget in Django,"class MyCreateView(CreateView):
    form_class = MyModelForm
    ...

    def get_form(self, form_class):
        return self.form_class(self.request.user, **self.get_form_kwargs())

    ...
"
MySQL database updates to the round decimal,"    update = 'UPDATE Testing SET number = %s where id = %s'
    cursor.execute(update, [5.5, 1])
"
Why isn't my solution to Project Euler 9 working?,"a = [i for i in range(10)]
"
python scrapy extract data from website,"Best Babies Laughing Video Compilation 2012 [HD] - Guardalo
[u'Best Babies Laughing Video Compilation 2012 [HD]', u""Ciao a tutti amici di guardalo,quello che propongo oggi \xe8 un video sui neonati buffi con risate travolgenti, facce molto buffe,iniziamo con una coppia di gemellini che se la ridono fra loro,per passare subito con una biondina che si squaqqera dalle risate al suono dello strappo della carta ed \xe8 solo l'inizio."", u'\r\nBuone risate a tutti', u'Elia ride', u'Funny Triplet Babies Laughing Compilation 2014 [NEW HD]', u'Real Talent Little girl Singing Listen by Beyonce .', u'Bimbo Napoletano alle Prese con il Distributore di Benzina', u'Telecamera nascosta al figlio guardate che fa,video bambini divertenti,video bambini divertentissimi']
http://static.guardalo.org/video_image/pre-roll-guardalo.mp4
L49VXZwfup8
"
Remove Outliers from dataset,"In [7]: clf.predict(X)

Out[7]:
array([ 1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, -1,
    1, -1,  1,  1, -1,  1, -1,  1, -1, -1,  1,  1,  1,  1,  1,  1, -1,
    1,  1, -1, -1, -1, -1, -1, -1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
   -1,  1, -1, -1, -1, -1, -1,  1, -1,  1,  1,  1,  1])
"
Make scatter plot from set of points in tuples,"plt.scatter(*zip(*a))
"
How to get the time difference in minutes in python for time expressed in this format?,"TimeStart = datetime.datetime.strptime(TimeStart, '%Y-%m-%d %H:%M:%S')
"
Python Xpath to find text() that contains @domain,">>> import re
>>> re.findall(r'[\w\.]+@domain\.[\w\.]+', 'this is our info: info@domain.co.uk')
['info@domain.co.uk']
"
Stripping punctuation from a list of lists of words,"[[u'i', u'am', u'going', u'home.', u'i', u'will', u'see,', u'if', u'i', u'can', u'do', u'that!', u'i', u'will', u'see?']]
"
Retrieve indices of NaN values in a pandas dataframe,"In [11]: df_null = df.isnull().unstack()

In [12]: t = df_null[df_null]

In [13]: t
Out[13]:
A  3    True
B  3    True
C  1    True
D  0    True
   1    True
dtype: bool
"
Referencing ids within screenmanager object,"sm=Builder.load_file(..)

class my12App(App):
    def build(self):
        return sm

    def on_start(self):
        self.root.get_screen('main').ids.MyTitle.text = 'changed'
"
Opening and searching dBase III (DBF) databases in Python,"import dbf

some_table = dbf.Table('/path/to/table.dbf')  # table is closed
some_table.open()
index = some_table.create_index(record_indexer)
.
.
.
records = index.search(match=(some_value,))   # returns a dbf.List of matching records
"
Unicode character render,"prop = font_manager.FontProperties(fname=path)
mpl.rcParams['font.family'] = prop.get_name()
"
More efficient way to look up dictionary values whose keys start with same prefix,"result = [d[key] for key in d if key.startswith(query)]
"
Simple function calling doesn't work in Robot Framework,"def myAdding(x, y):
     z = int(x) + int(y)
     return z
"
Pandas Dataframe display on a webpage,"{% extends ""base.html"" %}
{% block content %}
<h1>{{name}}</h1>
{{data | safe}}
{% endblock %}
"
How to match a new line character in Python raw string,">>> import re
>>> s = """"""cat
... dog""""""
>>> 
>>> re.match(r'cat\ndog',s,re.M)
<_sre.SRE_Match object at 0xcb7c8>
"
Get Index of 2D array in Python,"Example
In [28]: nrows = 2 ; ncols = 4

In [29]: icol, irow = np.meshgrid(range(ncols),range(nrows))

In [30]: def a(r,c): return 100*r+c

In [31]: a(irow, icol)
Out[31]: 
array([[  0,   1,   2,   3],
       [100, 101, 102, 103]])

In [32]: 
"
Omit one column in Google Chart,"

google.load(""visualization"", ""1"", {packages:[""corechart""]});
google.setOnLoadCallback(drawChart);

function drawChart() {
    var data = google.visualization.arrayToDataTable([
        ['Time', 'Col 1', 'Col 2', 'Col 3'],
        ['2016-01-05 12:45:05', 1.187, 20.375, 45.375],
        ['2016-01-05 13:00:04', 1.687, 21.437, 43.937],
        ['2016-01-05 13:15:04', 2.062, 22.062, 43.25],
    ]);

    var dataView1 = new google.visualization.DataView(data);
    dataView1.hideColumns([1]);
    var dataView2 = new google.visualization.DataView(dataView1);

    var options = {
        animation: {
            startup: true,
            duration: 1500,
            easing: 'out'
        },
        title: 'Temperature',
        showAxisLines: true,
        hAxis: {
            title: '',
            slantedText:true,
            slantedTextAngle:90,
            textStyle: {fontSize: '12'}
        },
        vAxis: {
            title: '',
            textStyle: {fontSize: '12'}
        },
        series: {
            0: { color: '#333333' },
            1: { color: '#75baff' },
            2: { color: '#eba314' },
        }
    };

    var chart = new google.visualization.AreaChart(document.getElementById('chart_div'));
    chart.draw(dataView2, options);
}"
"Using an xml ""map"" to import data to MySQL via python?","from lxml import objectify
table = objectify.fromstring(xml_source)
print ""table name:"", table.attrib['name']
for col in table.column:
    print ""column name:"", col.attrib['name']
    print ""source type:"", col.source.attrib['type']
    print ""source col:"",  col.source.text
"
Javascript to Django views.py?,"def index(request):
    if request.is_ajax():
        #do something
        request_data = request.POST
        return HttpResponse(""OK"")
"
Infinite loop while iterating dictionary Python,"def update_some(convert_dict, in_dict):
    in_dict_update = in_dict.copy()
    skipped_values = {}
    for k,v in convert_dict.items():
        try:
            return_value = eval(v, None, in_dict_update)
        except NameError:
            skipped_values[k] = v
        else:
            in_dict_update[k] = return_value
    if skipped_values:
        in_dict_update = update_some(skipped_values, in_dict_update)
    return in_dict_update
"
Check for invariant columns in a numpy array,"In [30]: a == a[0]
Out[30]: 
array([[ True,  True,  True,  True,  True,  True,  True,  True,  True],
       [ True, False,  True,  True,  True,  True, False, False, False],
       [False, False, False,  True, False,  True,  True,  True, False]], dtype=bool)
"
How can I print a float with thousands separators?,">>> import locale
>>> locale.setlocale(locale.LC_ALL, 'German')
'German_Germany.1252'
>>> print(locale.format('%.2f', 32757121.33, True))
32.757.121,33
"
How do I change strings based on some rules?,">>> re.sub('([a-zA-Z])([A-Z])([a-z])', r'\1_\2\3', 'ABThingThing')
'AB_Thing_Thing'
"
Python csv processing,"In [8]: 'Ruby,440,Cooper,493'.split(',')
Out[8]: ['Ruby', '440', 'Cooper', '493']
"
Persistent where clause SQLAlchemy,"session.some_arbitrarily_filtered_query(MyTable).all()
"
How to change the color of ttk button,">>> rgb = (183, 247, 49)
>>> '#{:02x}{:02x}{:02x}'.format(*rgb)
'#b7f731'
>>>
"
FORTRAN77 function returns an array,"      subroutine GENEEC3 (APPRAT,APPNUM,APSPAC,KOC, results)

      implicit none
      REAL, dimension(3), intent(out) ::  results
      real, intent(in) :: apprat, appnum, apspac, koc
      real apptot, tdegf, kd


C    
      APPTOT=APPRAT*APPNUM
      TDEGF = APPNUM * APSPAC
      KD = 0.0116 * KOC
C
      results(1)=APPTOT
      results(2)=KD
      results(3)=TDEGF
      END subroutine GENEEC3
"
"latest django and mongo engine, do you need to edit settings.py to install it?","from mongoengine import connect
import sys

if not (len(sys.argv) > 1 and sys.argv[1] == 'test'):
    # Don't run this if we're running in unit tests. The test runner will spin
    # up the appropriate databases and spin them down appropriately.
    for db_name in MONGO_DBS:
        db_meta = MONGO_DBS[db_name]
        if db_meta['enabled'] and 'alias' in db_meta:
            connect(db_meta['name'], alias=db_meta['alias'], host=db_meta['host'], port=db_meta['port'],
                lazy_connect=db_meta.get('lazy', True))
"
Neuro Network on MNIST--Result is not expected,"import pickle, gzip
import numpy as np

#from deeplearning.net
# Load the dataset
f = gzip.open('mnist.pkl.gz', 'rb')
train_set, valid_set, test_set = pickle.load(f, encoding='latin1')
f.close()





#sigmoid function
def nonlin(x, deriv=False):
    if (deriv ==True):
        return 1-x*x
    return np.tanh(x)

#seed random numbers to make calculation
#deterministic (just a good practice)

np.random.seed(1)

def make_proper_pairs_from_set(data_set):
    data_set_x, data_set_y = data_set

    data_set_y = np.eye(10)[:, data_set_y].T

    return data_set_x, data_set_y


train_x, train_y = make_proper_pairs_from_set(train_set)
train_x = train_x
train_y = train_y

test_x, test_y = make_proper_pairs_from_set(test_set)

print(len(train_y))

#train_set's dimension for the pixels are 50000(samples) x 784 (28x28 for each sample)
#therefore the coefficients should be 784x50000 to make the hidden layer 50k x 50k

# changed to 200 hidden neurons, should be plenty
syn0 = (2*np.random.random((785,200)) - 1) / 10
syn1 = (2*np.random.random((201,10)) - 1) / 10

velocities0 = np.zeros(syn0.shape)
velocities1 = np.zeros(syn1.shape)

alpha = 0.01
beta = 0.0001
momentum = 0.99

m = len(train_x) # number of training samples

# moved the forward propagation to a function and added bias neurons
def forward_prop(set_x, m):

    l0 = np.c_[np.ones((m, 1)), set_x]

    l1 = nonlin(np.dot(l0, syn0))
    l1 = np.c_[np.ones((m, 1)), l1]

    l2 = nonlin(np.dot(l1, syn1))


    return l0, l1, l2, l2.argmax(axis=1)

num_epochs = 100
for i in range(num_epochs):
    # forward propagation

    l0, l1, l2, _ = forward_prop(train_x, m)

    # calculate error
    l2_error = l2 - train_y


    print(""Error "" + str(i) + "": "" + str(np.mean(np.abs(l2_error))))
    # apply sigmoid to the error 
    l2_delta = l2_error * nonlin(l2,deriv=True)

    l1_error = l2_delta.dot(syn1.T)
    l1_delta = l1_error * nonlin(l1,deriv=True)
    l1_delta = l1_delta[:, 1:]

    # update weights
    # divide gradients by the number of samples
    grad0 = l0.T.dot(l1_delta) / m
    grad1 = l1.T.dot(l2_delta) / m

    v0 = velocities0
    v1 = velocities1

    velocities0 = velocities0 * momentum - alpha * grad0
    velocities1 = velocities1 * momentum - alpha * grad1


    # divide regularization by number of samples
    # because L2 regularization reduces to this
    syn1 += -v1 * momentum + (1 + momentum) * velocities1 - alpha * beta * syn1 / m
    syn0 += -v0 * momentum + (1 + momentum) * velocities0 - alpha * beta * syn0 / m



# find accuracy on test set

predictions = []
corrects = []
for i in range(len(test_x)): # you can eliminate this loop too with a bit of work, but this part is very fast anyway
    _, _, _, rez = forward_prop([test_x[i, :]], 1)

    predictions.append(rez[0])
    corrects.append(test_y[i].argmax())

predictions = np.array(predictions)
corrects = np.array(corrects)

print(np.sum(predictions == corrects) / len(test_x))
"
Avoid exec in instance variable definition,"for var in varnames:
    frame = tk.Frame(...)
    self.entries[var] = ttk.Entry(frame, ...)
"
Extracting data with irregular pattern - Python Xpath,"AFC East Buffalo Bills ['EJ Manuel', 'Tyrod Taylor', 'Anthony Dixon', 'Jerome Felton', 'Mike Gillislee', 'LeSean McCoy', 'Karlos Williams', 'Leonard Hankerson', 'Marcus Easley', 'Marquise Goodwin', 'Percy Harvin', 'Dez Lewis', 'Walt Powell', 'Greg Salas', 'Sammy Watkins', 'Robert Woods', 'Charles Clay', 'Chris Gragg', ""Nick O'Leary"", 'Tyson Chandler', 'Ryan Groy', 'Seantrel Henderson', 'Cyrus Kouandjio', 'John Miller', 'Kraig Urbik', 'Eric Wood', 'T. J. Barnes', 'Marcell Dareus', 'Lavar Edwards', 'IK Enemkpali', 'Jerry Hughes', 'Kyle Williams', 'Mario Williams', 'Jerel Worthy', 'Jarius Wynn', 'Preston Brown', 'Randell Johnson', 'Manny Lawson', 'Kevin Reddick', 'Tony Steward', 'A. J. Tarpley', 'Max Valles', 'Mario Butler', 'Ronald Darby', 'Stephon Gilmore', 'Corey Graham', 'Leodis McKelvin', 'Jonathan Meeks', 'Merrill Noel', 'Nickell Robey', 'Sammy Seamster', 'Cam Thomas', 'Aaron Williams', 'Duke Williams', 'Dan Carpenter', 'Jordan Gay', 'Garrison Sanborn', 'Colton Schmidt', 'Blake Annen', 'Jarrett Boykin', 'Jonathan Dowling', 'Greg Little', 'Jacob Maxwell', 'Ronald Patrick', 'Cedric Reed', 'Cyril Richardson', 'Phillip Thomas', 'James Wilder, Jr.', 'Nigel Bradham', 'Ron Brooks', 'Alex Carrington', 'Cordy Glenn', 'Leonard Hankerson', 'Richie Incognito', 'Josh Johnson', 'Corbin Bryant', 'Stefan Charles', 'MarQueis Gray', 'Chris Hogan', 'Jordan Mills', 'Ty Powell', 'Bacarri Rambo', 'Cierre Wood']
AFC East Miami Dolphins ['Zac Dysert', 'Ryan Tannehill', 'Logan Thomas', 'Jay Ajayi', 'Jahwan Edwards', 'Damien Williams', 'Tyler Davis', 'Robert Herron', 'Greg Jennings', 'Jarvis Landry', 'DeVante Parker', 'Kenny Stills', 'Jordan Cameron', 'Dominique Jones', 'Dion Sims', 'Branden Albert', 'Jamil Douglas', ""Ja'Wuan James"", 'Vinston Painter', 'Mike Pouncey', 'Anthony Steen', 'Dallas Thomas', 'Billy Turner', 'Deandre Coleman', 'Quinton Coples', 'Terrence Fede', 'Dion Jordan', 'Earl Mitchell', 'Damontre Moore', 'Jordan Phillips', 'Ndamukong Suh', 'Charles Tuaau', 'Robert Thomas', 'Cameron Wake', 'Julius Warmsley', 'Jordan Williams', 'Neville Hewitt', 'Mike Hull', 'Jelani Jenkins', 'Terrell Manning', 'Chris McCain', 'Koa Misi', 'Zach Vigil', 'Walt Aikens', 'Damarr Aultman', 'Brent Grimes', 'Reshad Jones', 'Tony Lippett', 'Bobby McCain', 'Brice McCain', 'Tyler Patmon', 'Dax Swanson', 'Jamar Taylor', 'Matt Darr', 'John Denney', 'Andrew Franks', 'Louis Delmas', 'James-Michael Johnson', 'Rishard Matthews', 'Jacques McClendon', 'Lamar Miller', 'Matt Moore', 'Spencer Paysinger', 'Derrick Shelby', 'Kelvin Sheppard', 'Shelley Smith', 'Olivier Vernon', 'Michael Thomas', 'Brandon Williams', 'Shamiel Gary', 'Matt Hazel', 'Ulrick John', 'Jake Stoneburner']
AFC East New England Patriots ['Tom Brady', 'Jimmy Garoppolo', 'Brandon Bolden', 'Steven Jackson', 'James White', 'Danny Amendola', 'Julian Edelman', 'Brandon LaFell', 'Keshawn Martin', 'Matthew Slater', 'Scott Chandler', 'Rob Gronkowski', 'Michael Williams', 'Marcus Cannon', 'Cameron Fleming', 'Josh Kline', 'Bryan Stork', 'Sebastian Vollmer', 'LaAdrian Waddle', 'Alan Branch', 'Akiem Hicks', 'Chandler Jones', ""Ishmaa'ily Kitchen"", 'Rob Ninkovich', 'Jabaal Sheard', 'Sealver Siliga', 'Jon Bostic', 'Jamie Collins', 'Darius Fleming', 'Jonathan Freeny', ""Dont'a Hightower"", 'Dekoda Watson', 'Malcolm Butler', 'Patrick Chung', 'Nate Ebner', 'Duron Harmon', 'Leonard Johnson', 'Devin McCourty', 'Logan Ryan', 'Tavon Wilson', 'Ryan Allen', 'Stephen Gostkowski', 'LeGarrette Blount', 'Tarell Brown', 'James Develin', 'Aaron Dobson', 'Dominique Easley', 'Dane Fletcher', 'Tyler Gaffney', 'Brandon Gibson', 'Rufus Johnson', 'Chris Jones', 'Dion Lewis', 'Eric Martin', 'Jerod Mayo', 'Nate Solder', 'Brian Tyms', 'Ryan Wendell', 'Montee Ball', 'Chris Barker', 'Rashaan Melvin', 'Keavon Milton', 'Brock Vereen']
...
AFC West San Diego Chargers ['Kellen Clemens', 'Philip Rivers', 'Donald Brown', 'David Johnson', 'Danny Woodhead', 'Vincent Brown', 'Malcom Floyd', 'Javontee Herndon', 'Dontrelle Inman', 'Stevie Johnson', 'Asante Cleveland', 'Antonio Gates', 'Sean McGrath', 'John Phillips', 'Joe Barksdale', 'King Dunlap', 'Orlando Franklin', 'D. J. Fluker', 'Chris Hairston', 'Jeff Linkenbach', 'Trevor Robinson', 'J. D. Walton', 'Kenny Wiggins', 'Ryan Carrethers', 'Ricardo Mathews', 'Kendall Reyes', 'Damion Square', 'Jeremiah Attaochu', 'Donald Butler', 'Kavell Conner', 'Melvin Ingram', 'Cordarro Law', 'Joe Mays', 'Dexter McCoil', ""Manti Te'o"", 'Jahleel Addae', 'Matt Daniels', 'Greg Ducre', 'Adrian Phillips', 'Patrick Robinson', 'Brandian Ross', 'Jason Verrett', 'Steve Williams', 'Mike Scifres', 'Mike Windt', 'Keenan Allen', 'Chi Chi Ariguzo', 'Brandon Flowers', 'Ladarius Green', 'Sean Lissemore', 'Corey Liuget', 'Branden Oliver', 'Tenny Palepoi', 'Darrell Stuckey', 'Johnnie Troutman', 'Chris Watt', 'Eric Weddle', 'Tourek Williams', 'Alex Bayer', 'Isaiah Burse', 'Richard Crawford', 'Ben Gardner', 'Michael Huey', 'Keith Lewis', 'Chuka Ndulue', 'Tim Semisch', 'Brad Sorensen', 'Craig Watts']
"
attibutes of subclassed classes in registry of subclassed classes,"import inspect
class SomethingMeta(type):
    def __init__(cls, name, bases, dct):
        if not hasattr(cls, 'registry'):
            cls.registry = {}
        else:
            interface_id = name.lower()
            attrs, varargs, varkw, defaults = inspect.getargspec(cls.__init__)
            cls.registry[interface_id] = [a for a in attrs 
                                          if a not in ('self', None)]

        super(SomethingMeta, cls).__init__(name, bases, dct)

class Something(object):
    __metaclass__ = SomethingMeta

class SomethingA(Something):
    def __init__(self, x, y, *args, **kw):
        self.x = x
        self.y = y

class SomethingB(Something):
    def __init__(self, z=0):
        self.z = z

print(Something.registry)
"
get_dummies for Pandas column containing list,"df.join(* steps 1 and 2 code *).drop('Fruit', axis=1).rename(columns={'Fruit1': 'Fruit'})
"
switching keys and values in a dictionary in python,"my_dict2 = dict((y,x) for x,y in my_dict.iteritems())
"
"in python, how do I check to see if keys in a dictionary all have the same value x?","testval = 1
all(val==testval for val in d.values())   # -> True
"
Quit Less with Pexpect,"~/tmp/reader$ cat a.py
#!/usr/bin/env python
import pexpect

try:
    open('status.txt', 'w')
    child = pexpect.spawn('/bin/sh ""./b.sh""', timeout=10)
    child.send('q')
    child.expect(pexpect.EOF)
except Exception,e:
    print 'exception'
print open('status.txt').read()


~/tmp/reader$ cat text.txt
iamtext

~/tmp/reader$ cat b.sh
#!/bin/sh
less text.txt
echo 'all done'
sleep 3
date > status.txt
"
Pythonian structure?,"import data
import model

directory = data.load_data()
threshold, fft_size = 10, 1000

data.prescreen_fn(directory, threshold)
data.plot_prescreen_hits(directory)
data.extract_features(directory, fft_size)
model.generate_train_test(directory)
model.SVM_train_test(directory)
"
Changing values in list: Python,"['a', 'b', 'c', 'b', 'c', 'a', 'b', 'b']
"
How can I get the IP address of eth0 in Python?,"ni.interfaces()
"
GroupBy and Sum in SQLAlchemy?,"session.query(
    Expense.date,
    func.sum(Expense.value).label('total')
).join(Expense.cost_center
).filter(CostCenter.id.in_([2, 3])
).group_by(Expense.date
).all()
"
How to calculate longitude using PyEphem,">>> sun.compute('2011/05/04', '2011/05/04')
>>> Ecliptic(sun).lon
43:12:29.0
"
How to use Python requests to fake a browser visit?,">>> from fake_useragent import UserAgent
>>> ua = UserAgent()
>>> ua.chrome
u'Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1667.0 Safari/537.36'
>>> ua.random
u'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.67 Safari/537.36'
"
How to sort files starting with _ in python,"words = [""_weight.txt"",""color.txt"",""_height.txt""]

print(sorted(words, key=lambda x: x.lstrip(""_"")))
['color.txt', '_height.txt', '_weight.txt']
"
Check if a string contains at least one of the strings in a list,"# Please do not name a list ""list"" -- it overrides the built-in
lst = [""a"", ""b"", ""c""]
if any(s in line for s in lst):
    # Do stuff
"
set Tkinter label widget below entry widget,"Root.option_add(""*Entry.Width"", 5) #10 is default
"
How can the user communicate with my python script using the shell?,"name = raw_input('What is your name?')
"
How to query a contact for its PubSub using Python's xmpp?,"<presence from='romeo@example.net/home'>
  <c xmlns='http://jabber.org/protocol/caps' 
     hash='sha-1'
     node='http://example.com/MYBOT'
     ver='/FpawanrJ31ymsv4ApCMGcyJmUk='/>
</presence>
"
Binding Flask AutoIndex to a different URL other than http://localhost?,"from bp import auto_bp
app.register_blueprint(auto_bp, url_prefix='/list')
"
Control running Python Process (multiprocessing),"# file foo.py

from multiprocessing import Value, Process
import time

__all__ = ['start', 'stop', 'pause', 'resume']

_statement = None
_process = None

def _target(run_statement):
    """""" Target of the foo's process """"""
    while True:
        if run_statement.value:
            print ""I'm running !""
            time.sleep(1)

def start():
    global _process, _statement
    _statement = Value(""i"", 1)
    _process = Process(target=_target,  args=(_statement,))
    _process.start()

def stop():
    global _process, _statement
    _process.terminate()
    _statement, _process = None, _process

def enable():
    _statement.value = True

def disable():
    _statement.value = False
"
Flask extensions & its configuration,"app = Flask(__name__)

manager = Manager(app)
db = SQLAlchemy()
redis = Redis()

def attach_extensions(app):
    db.init_app(app)
    redis.init_app(app)
"
How to handle changing dates in Django Queries,"return Cleanedlog.objects.filter(dest_url__contains=self.kwargs[""url_chunk""]) \
           .exclude(time_received__lt=from_date).exclude(time_received__gt=to_date)
"
Django subclassing multiwidget - reconstructing date on post using custom multiwidget,"forminstance.is_valid()
"
Python Regex: Picking one regular expression OR another,"(?|(?P<num>6\d+)|(?P<num>7\d+))
"
How can I call methods between two classes?,"class A(object):
    def __init__(self):
        self.c = C()
        self.b = B(self.c)

class B(object):
    def __init__(self, c):
        self.cobj = c

    def call_c(self):
        self.cobj.a_method_of_c()

class C(object):
    # whatever...
"
"Itertools, combinations",">>> item = ['3D', '4D', '6D']
>>> [int(val[0]) for val in item]
[3, 4, 6]
>>> 
"
Turning string with embedded brackets into a dictionary,"import re
x=""{key1 value1} {key2 value2} {key3 {value with spaces}}""
print dict(re.findall(r""\{(\S+)\s+\{*(.*?)\}+"",x))
"
How to get most informative features for scikit-learn classifier for different class?,"index = 0
coef_features_c1_c2 = []

for feat, c1, c2 in zip(word_vectorizer.get_feature_names(), mnb.feature_count_[0], mnb.feature_count_[1]):
    coef_features_c1_c2.append(tuple([mnb.coef_[0][index], feat, c1, c2]))
    index+=1

for i in sorted(coef_features_c1_c2):
    print i
"
How does a classmethod object work?,"In [29]: cm.__get__(None, dict).im_func.__name__
Out[29]: 'foo'
"
How to convert an array of dates (format 'mm/dd/yy HH:MM:SS') to numerics?,"for d in pre_process(csv.DictReader(open('MyFile.csv'))):
    process(d)
"
Chain of decorators in Python 2.7,">>> def number_filter(function):
    print 'i am number_filter and function is ' + function.__name__
    def wrapper3(*args, **kwargs):
        print 'wrapper3 args: ' + repr(args)
        l = []
        for a in args:
            try:
                l.append(int(a))
            except ValueError:
                pass
            except TypeError:
                pass                
        return function(*l, **kwargs) # pass filtered args and unfiltered kwargs
    return wrapper3

>>> def even_number_filter(function):
    print 'i am even_number_filter and function is ' + function.__name__
    def wrapper1(*args, **kwargs):
        print 'wrapper1 args: ' + repr(args)
        l = [i for i in args if i % 2 == 0]
        return function(*l, **kwargs) # same again
    return wrapper1

>>> @number_filter # filter out non-numbers first
@even_number_filter # then odd numbers
def sum_fn(*args, **kwargs): # handle arbitrary arguments 
    return sum(args)

i am even_number_filter and function is sum_fn
i am number_filter and function is wrapper1
>>> sum_fn(1,2,'',10, {}, None) # note separate arguments, not a single sequence
wrapper3 args: (1, 2, '', 10, {}, None)
wrapper1 args: (1, 2, 10)
12 # success!
"
Simple questions about the meaning of an argument,"Run a spider

Options
=======
--help, -h              show this help message and exit
-a NAME=VALUE           set spider argument (may be repeated)
--output=FILE, -o FILE  dump scraped items into FILE (use - for stdout)
--output-format=FORMAT, -t FORMAT
                        format to use for dumping items with -o

Global Options
--------------
--logfile=FILE          log file. if omitted stderr will be used
--loglevel=LEVEL, -L LEVEL
                        log level (default: DEBUG)
--nolog                 disable logging completely
--profile=FILE          write python cProfile stats to FILE
--lsprof=FILE           write lsprof profiling stats to FILE
--pidfile=FILE          write process ID to FILE
--set=NAME=VALUE, -s NAME=VALUE
                        set/override setting (may be repeated)
--pdb                   enable pdb on failure
"
Pandas - replacing NaN values using values from other columns,"df['C1'] = df.bfill(axis='columns')['C1']

df
Out[10]: 
        C0      C1      C2      C3      C4
0  3789507  2010.0     NaN     NaN     NaN
1  3789508  2010.0     NaN  2010.0     NaN
2  3789509  2016.0     NaN  2016.0     NaN
3  3789510  2014.0  2014.0     NaN     NaN
4  3789511  2014.0     NaN     NaN  2014.0
"
Python large multi-list efficient query,"In [38]: %%timeit
with  open(""/tennis_atp-master/atp_players.csv"") as pf, open(""/tennis_atp-master/atp_rankings_current.csv"") as rf:
    players = list(csv.reader(pf))
    rankings = csv.reader(rf)
    # only get first ten rows using islice
    for i in islice(rankings, None, 100):
        # ifilter won't create a list, gives values in the fly
        player = next(ifilter(lambda x: x[0] == i[2], players),"""")
   ....: 
10 loops, best of 3: 120 ms per loop

In [39]: %%timeit
with  open(""/tennis_atp-master/atp_players.csv"") as pf, open( ""/tennis_atp-master/atp_rankings_current.csv"") as rf:
    players = {}                  
    for row in csv.reader(pf):
        key = row[0]
        if key in players:
            continue                                          
        players[row[0]] = row                                     
    rankings = csv.reader(rf)
    for i in islice(rankings, None, 100):
        player = players.get(i[2])
        pass
   ....: 
10 loops, best of 3: 50.7 ms per loop

In [40]: %%timeit
MAINDIR = ""tennis_atp-master/""
pf = open (""/tennis_atp-master/atp_players.csv"")
players = [p for p in csv.reader(pf)]
rf =open( ""/tennis_atp-master/atp_rankings_current.csv"")
rankings = [r for r in csv.reader(rf)]
for i in rankings[:100]:
    player = filter(lambda x: x[0]==i[2],players)[0]
   ....: 
1 loops, best of 3: 806 ms per loop
"
mayavi points3d plot animation won't update the next frame,"msplt.set(x_coord = x_coord, y_coord = y_coord, z_coord = z_coord)
"
Python/Numpy/Scipy: Draw Poisson random values with different lambda,">>> import matplotlib.pyplot
>>> count, bins, ignored = matplotlib.pyplot.hist(
            numpy.random.poisson(
                    lam=numpy.random.rand(1e6) + 10), 
                    14, normed=True)
>>> matplotlib.pyplot.show()
"
Python: Naming conventions for modules & variables when they could conflict,"planetmodule.somefunction()
"
when does django run the query for a OneToOneField?,"In [1]: Bar.objects.create(name='chocolate')
Out[1]: <Bar: Bar object>
In [2]: Foo.objects.create(bar=Out[1])
Out[2]: <Foo: Foo object>
In [3]: from django.db import connection
In [4]: connection.queries
Out[4]:
[{u'sql': u""QUERY = u'BEGIN' - PARAMS = ()"", u'time': u'0.000'},
 {u'sql': u'QUERY = u\'INSERT INTO ""myapp_bar"" (""name"") VALUES (%s)\' - PARAMS = (u\'chochalate\',)',
  u'time': u'0.001'},
 {u'sql': u""QUERY = u'BEGIN' - PARAMS = ()"", u'time': u'0.000'},
 {u'sql': u'QUERY = u\'INSERT INTO ""myapp_foo"" (""bar_id"") VALUES (%s)\' - PARAMS = (1,)',
  u'time': u'0.001'}]
In [5]: foo = Foo.objects.all()
In [6]: foo
Out[6]: [<Foo: Foo object>]
In [7]: connection.queries
Out[7]:
[
 # ... same as above ...
 {u'sql': u'QUERY = u\'SELECT ""myapp_foo"".""id"", ""myapp_foo"".""bar_id"" FROM ""myapp_foo"" LIMIT 21\' - PARAMS = ()',
  u'time': u'0.000'}] # bar is not queried 
In [8]: foo.bar
Out[8]: <Bar: Bar object>

In [9]: connection.queries
Out[9]:
[
 # ... same as above ...
 {u'sql': u'QUERY = u\'SELECT ""myapp_bar"".""id"", ""myapp_bar"".""name"" FROM ""myapp_bar"" WHERE ""myapp_bar"".""id"" = %s LIMIT 21\' - PARAMS = (1,)',
  u'time': u'0.000'}] # now bar is queried 
"
Math on Django Templates,"{{ billsec|customFilter }}
"
Packing Python files into a single .py script,"#!/bin/sh

head -n @@TO@@ ""$0"" | tail -n +@@FROM@@ | python - ""$0""

exit $?
"
Add to custom class in Python,">>> a = MyClass(7)
>>> a + 3
10
"
How do I format code to print with the same width every time?,">>> print_room()
|---------------------|
|  [Chest]            |
|                   - |
|                 Door|
|                    -|
|   [Table]           |
|  You                |
|---------------------|
"
"My Maxent Classifier works fine with gis algorithm but does not work with iis algorithm. It is not throwing any error, just some warnings","from itertools import chain
from collections import defaultdict

import nltk
from nltk.classify import MaxentClassifier, accuracy
from nltk.corpus import movie_reviews

def bag_of_words(words):
    """"""
    Change a document into a BOW feature vector represented by a dict object.
    """"""
    return dict([(word, True) for word in words])


def label_feats_from_corpus(corp, feature_detector=bag_of_words):
    """"""
    Change the corpus into a feature matrix. Sometimes the proceess is 
    known as vectorization. The default is the use BOW features.
    """"""
    label_feats = defaultdict(list)
    for label in corp.categories():
        for fileid in corp.fileids(categories=[label]):
            feats = feature_detector(corp.words(fileids=[fileid]))
            label_feats[label].append(feats)
    return label_feats


def split_label_feats(lfeats, split=0.75):
    """"""
    Splits corpus into train and test portion.
    This module is used after using `label_feats_from_corpus`.
    """"""
    train_feats = []
    test_feats = []
    for label, feats in lfeats.iteritems():
        cutoff = int(len(feats) * split)
        train_feats.extend([(feat, label) for feat in feats[:cutoff]])
        test_feats.extend([(feat, label) for feat in feats[cutoff:]])
    return train_feats, test_feats


# Extract features from corpus and for each document label it with the appropriate labels. 
label_feats = label_feats_from_corpus(movie_reviews)
'''
for label in label_feats:
    for document in label_feats[label]: 
        print label, document
        break
    break
'''

# Let's split the data up into train and test.
train_documents, test_documents = split_label_feats(label_feats) 
'''
# Now we see that the `split_label_feats` change the key value structure such that each iteration of train_feats gives us a document with a tuple of the (features, label)
for features, label in train_documents:
    print label, features
    break

print len(train_documents)
print len(test_documents)
# Get the number of documents in movie_review corpus
num_docs_in_corpus = len(list(chain(*[movie_reviews.fileids(categories=[cat]) for cat in movie_reviews.categories()])))
print len(train_documents) + len(test_documents) == num_docs_in_corpus
'''

# To train the tagger.
me_classifier = nltk.MaxentClassifier.train(train_documents, algorithm='iis', trace=0, max_iter=3)
print accuracy(me_classifier, test_feats)
"
Interleave two numpy arrays based on element distances (python),"        0,1,2,3,4,5   # the index value 
idx1 = (_,_,_,_,_,2,...)
"
Find unique elements of floating point array in numpy (with comparison using a delta value),"import numpy as np
TOL = 1.0e-3
a = np.random.random((10,10))
i = np.argsort(a.flat)
d = np.diff(a.flat[i])
result = a.flat[i[d>TOL]]
"
Combine array along axis,"np.vstack((a + b[:,None,:]))
"
How to represent dbus type b(oss) in python?,"( a_boolean, (s1, s2, s3) )
"
How to change the color of table rows once ng-repeat executed,"<tr ng-repeat=""(k,v) in final_data.histories"" ng-class-even=""'my-even-class'"" ng-class-odd=""'my-odd-class'"">
"
SQLAlchemy retrieve one-to-many entities by subquery,"class Parent(Base):
  __tablename__ = ""parents""
  dbid = Column(Integer, Sequence(""parent_seq""), primary_key=True)
  children = relationship(""Child"", order_by = ""Children.dbid"", backref = ""_parent"")

  def __init__(self, children = [])
    self.children = children  #remember to initialize children as list!
"
Python regex match world but exclude certain phrase,".*\bfire\b(?!.*\bcrews\b).*
"
How to create sub list with fixed length from given number of inputs or list in Python?,"chunks = [my_list[x:x+size] for x in range(0, len(my_list), size)]
"
Function with extensive arguments,"def test_var_args_call(*args):
    print args
"
How to get start and end of ranges in pandas,"Get the index of those have numbers but not nan
In [134]: s = d.dropna().index.to_series()

In [135]: s
Out[135]: 
0      0
1      1
2      2
3      3
7      7
8      8
10    10
dtype: int64
"
Detect if a cube and a cone intersect each other?,"bool intersect(Cone cone, Box box)
{
    return intersect(cone, box.faces[0])
        || intersect(cone, box.faces[1])
        || intersect(cone, box.faces[2])
        || intersect(cone, box.faces[3])
        || intersect(cone, box.faces[4])
        || intersect(cone, box.faces[5]);
}
"
Unique elements in each file,"for line in File* ; do echo ""working on $line"" ; sort $line | uniq ; done
"
Algorithm - How to delete duplicate elements in a list efficiently?,">>> L = [2, 1, 4, 3, 5, 1, 2, 1, 1, 6, 5]
>>> S = set()
>>> M = []
>>> for e in L:
...     if e in S:
...         continue
...     S.add(e)
...     M.append(e)
... 
>>> M
[2, 1, 4, 3, 5, 6]
"
Python: Add JSON into Existing JSON,"def merge(lsta, lstb):
    for i in lstb:
        for j in lsta:
            if j['name'] == i['name']:
                j.update(i)
                break
        else:
            lsta.append(i)

for k,v in dictb.items():
    merge(dicta.setdefault(k, []), v)
"
How can I add two functions together in Python 3?,"x1,y1=[0,1,2,3,4,5],[2,4,1,5,1,2]
x2,y2=[2,3,4,5,6,7],[2,4,1,5,1,2]
x3 = np.arange(x1[0],x2[-1]+1)  # or latice of your choice
np.interp(x3,x1,y1,0,0) + np.interp(x3,x2,y2,0,0)
"
Django count matches query with contains,"User.objects.filter(likes__icontains=keyword)
            .exclude(id=sesion)
            .annotate(total_likes=Count('likes'))
            .order_by('total_likes')
"
Import paths - the right way?,"my_project/
    main.py
    package1/
        __init__.py
        module1
        module2
    package2/
        __init__.py
        module1
        module2
"
Discard older elements in Django queryset,"dates = Dating.objects.filter((Q(creator=user) | Q(assignee=user)) & Q(accepted=True)) \
                  .exclude(id__in=alreadyRated)
"
python socket GET,"s.sendall(""GET / HTTP/1.1\r\n\r\n"")
"
Merge every Every 6 dictionary into single dictionary of List,"[{u'Price': u'21.00', u'Code': u'900321', u'Description': u'TIG 2.4MM TUNGSTEN (EACH ROD)', u'Line Total': u'42.00', u'Quantity': u'2'},
{u'Price': u'2.60', u'Code': u'92.01.15.08', u'Description': u'BINZEL .8MM MIG TIPS MB15', u'Line Total': u'15.60', u'Quantity': u'6'}]
"
Python: Appending items to lists by iterating through list of lists,"list1 = list2 = list3 = list()
"
Is there a way to get processes information of local machine with python?,"psUtilInfo - psutil.Process(pid)
cpuPercentage = int(psUtilInfo.get_cpu_percent())
memoryInfo, _vms =psUtilInfo.get_memory_info()
"
"When creating a Python bytearray from NumPy array, where does the extra data come from?",">>> bytearray(a1)
bytearray(b'\x01\x03\x02\x05\x04')
>>> bytearray(buffer(a1))
bytearray(b'\x01\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x05\x00\x00\x00\x04\x00\x00\x00')
"
python - looping through values in a string,"import re

def find_between(s, word):
    # Search for your (word followed by ((:a_digit) repeated three times))
    x = re.search(""(%s(:\d+){3})"" % word, s)
    return x.groups()[0]

for word in l:
    print find_between(s, word).split(':', 1)[-1].split(':')
"
Can I return a text value if a certain tag is found?,"for search_text in ('HDMI ports quantity', 'DVI port'):
    pattern = re.compile(r'\s*%s\s*' % search_text)
    ds_data = soup.find(text=pattern).findNext('div', {'class': 'ds_data'})
    if ds_data.find('img', {'class': 'spacer_top n-sign'}):
        result_text = '0'
    else:
        result_text = ds_data.text
    print search_text, result_text
"
Large matplotlib pixel figure best approach,"import numpy as np 
import matplotlib.pyplot as plt

# Generate some data
nrows, ncols = 1000, 1000
xmin, xmax = -32.4, 42.0
ymin, ymax = 78.9, 101.3

dx = (xmax - xmin) / (ncols - 1)
dy = (ymax - ymin) / (ncols - 1)

x = np.linspace(xmin, xmax, ncols)
y = np.linspace(ymin, ymax, nrows)
x, y = np.meshgrid(x, y)

z = np.hypot(x - x.mean(), y - y.mean())
x, y, z = [item.flatten() for item in (x,y,z)]

# Scramble the order of the points so that we can't just simply reshape z
indicies = np.arange(x.size)
np.random.shuffle(indicies)
x, y, z = [item[indicies] for item in (x, y, z)]

# Up until now we've just been generating data...
# Now, x, y, and z probably represent something like you have.

# We need to make a regular grid out of our shuffled x, y, z indicies.
# To do this, we have to know the cellsize (dx & dy) that the grid is on and
# the number of rows and columns in the grid. 

# First we convert our x and y positions to indicies...
idx = np.round((x - x.min()) / dx).astype(np.int)
idy = np.round((y - y.min()) / dy).astype(np.int)

# Then we make an empty 2D grid...
grid = np.zeros((nrows, ncols), dtype=np.float)

# Then we fill the grid with our values:
grid[idy, idx] = z

# And now we plot it:
plt.imshow(grid, interpolation='nearest', 
        extent=(x.min(), x.max(), y.max(), y.min()))
plt.colorbar()
plt.show()
"
How to get the list of lists,"map(list,zip(*mult_list))
"
python: __init__ template,"Explicit is better than implicit.
"
Two different tickHeights on a rating scale in Psychopy,"rs = visual.RatingScale( ... lots of parameters here ...)
"
Is there any way that I can turn this into a list comprehension,"map(sum, itertools.izip_longest(self, other, fillvalue=0))
"
Python: How do I add a “Final Grade” converter in my Grading System Calculator,">>> scores = [93, 89, 87, 83, 79, 77, 73, 69, 67, 60, 0]
>>> grades = ['A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D+', 'D', 'F']
>>> grade_scores = zip(scores, grades)
>>> def gradeFor(s):
...     for score, grade in grade_scores:
...        if s >= score:
...            return grade

>>> gradeFor(87)
B+
>>> gradeFor(89)
A-
>>> gradeFor(88)
B+
>>> gradeFor(67)
D+
>>> gradeFor(72)
C-
>>> gradeFor(40)
F
"
sorting list based on other array contents,"list1, list2 = [5, 4, 7, 1, 9], [3, 1, 10, 11, 5]
indices1 = range(len(list1))
indices1.sort(key=lambda x: list2[x])
list1 = map(lambda i: list1[i], indices1)
print list1, list2
"
Disable automatic test execution for some tests unless those are explicitly requested,"$ SLOW_TESTS=1 nosetests -v
test_something_slow (test_foo.TestFoo) ... ok
test_upper (test_foo.TestFoo) ... ok

----------------------------------------------------------------------
Ran 2 tests in 5.003s

OK
"
Python splitting strings and jumbling the middle,">>> s
'$123abc$'
>>> first_letter = s[0]
>>> last_letter = s[-1]
>>> middle_parts = list(s[1:-1])
>>> random.shuffle(middle_parts)
>>> ''.join(middle_parts)
'b3a2c1'
"
PyQt QColor setAlpha not working?,"print qtwi.backgroundColor()
print qtwi.backgroundColor()
"
Python 3 - function data member of class,"import subprocess

class Base:
    def __init__(self):  #don't forget `self`!!!
        self.call = subprocess.call

instance = Base()
print (instance.call(['echo','foo']))
"
python function making unrequested changes,"  for i in range(n):
      B.append([0 for j in range(n)])
      L.append([0 for j in range(n)])
      U.append([0 for j in range(n)])
"
"NumPy dtype issues in genfromtxt(), reads string in as bytestring","array([('ZINC00043096', 'C.3', 'C1', -0.154, 'methyl'),
       ('ZINC00043096', 'C.3', 'C2', 0.0638, 'methylene'),
       ('ZINC00043096', 'C.3', 'C4', 0.0669, 'methylene'),
       ('ZINC00090377', 'C.3', 'C7', 0.207, 'methylene')], 
      dtype=[('f0', '<U12'), ('f1', '<U3'), ('f2', '<U2'), ('f3', '<f8'), ('f4', '<U9')])
"
"Need help properly using variables, python","class Definitions():
    def __init__():
        self.variable1 = 3
        self.variable2 = 'stuff'

    def spam(self,arg1):
        return 'spam' + arg1

    def eggs(self,arg1,arg2):
        return 'eggs' + arg1 + arg2
"
Python unittests in Jenkins?,"python tests.py
"
Find matching key-value pairs of two dictionaries,"d_inter = dict(set(d1.iteritems()).intersection(d2.iteritems()))
"
how to handle this string in python,"{u'thread_id': 1791, u'session': u'SeFKQ0SfYZqhh6FTCcKZGw==', u'authenticate': 1}
"
Output binary data from CGI in Python 3,"import os
import sys

if __name__ == '__main__':
    with open(os.path.abspath('test.png'), 'rb') as f:
        sys.stdout.buffer.write(b""Content-Type: image/png\n\n"") # <---
        sys.stdout.buffer.write(f.read())
"
rolling_sum on business day and return new dataframe with date as index,"df = pd.DataFrame(data={'A': np.random.randint(0, 10, 500)}, index=pd.date_range(datetime(2016,1,1), freq='6H', periods=500))

                     A
2016-01-01 00:00:00  6
2016-01-01 06:00:00  9
2016-01-01 12:00:00  3
2016-01-01 18:00:00  9
2016-01-02 00:00:00  7
2016-01-02 06:00:00  5
2016-01-02 12:00:00  8
2016-01-02 18:00:00  6
2016-01-03 00:00:00  2
2016-01-03 06:00:00  0
2016-01-03 12:00:00  0
2016-01-03 18:00:00  0
2016-01-04 00:00:00  5
2016-01-04 06:00:00  4
2016-01-04 12:00:00  1
2016-01-04 18:00:00  4
2016-01-05 00:00:00  6
2016-01-05 06:00:00  9
2016-01-05 12:00:00  7
2016-01-05 18:00:00  2
....
"
How to pass object as commandline argument in python?,">>> import json
>>> json.dumps(['Hi'])
'[""Hi""]'
>>> json.loads(_)
['Hi']

>>> import pickle
>>> pickle.dumps(['Hi'])
b'\x80\x03]q\x00X\x02\x00\x00\x00Hiq\x01a.'
>>> pickle.loads(_)
['Hi']
"
How to create a function (Iteration/Recursion) to run over a dictionary of tuples in Python?,"import numpy as np

d = {'A': [(4, 4, 3), [1, 2, 3, 4, 5]],
     'B': [(2, 1, 2), [5, 4, 3, 2, 1]],
     'C': [(4, 1, 1), [2, 4, 1, 2, 4]]}

def makeRanks(d):
    rankDict = {}
    for key in d:
        tup = d[key][0]
        mean = np.mean(tup)
        l = d[key][1]
        rank = np.mean([mean > np.mean(np.random.choice(l,len(tup))) for _ in range(10000)])
        rankDict[key] = rank
    return rankDict
"
Multiple re.sub() statements,">>> term = ""Lizards and Amphibians not salamander or newt""
>>> re.sub(r""\b(not|or|and)\b"", lambda m: m.group().upper(), term)
'Lizards AND Amphibians NOT salamander OR newt'
"
"How to use ""While()"" in python","with open('filename') as fin:
    tableau = [extract(data) for data in fin]
"
Does Python have a default Caching service,"def foo(value, arr=[]):
    arr.append(value)
    return arr
"
Python NLTK interpret a fixed pattern of sentence and tokenize it,"def extract_entities(text):
    for sent in nltk.sent_tokenize(text):
        for chunk in nltk.ne_chunk(nltk.pos_tag(nltk.word_tokenize(sent))):
            if hasattr(chunk, 'node'):
                print chunk.node, ' '.join(c[0] for c in chunk.leaves())

extract_entities(""to play to Atlanta"")

#Output: [('to', 'TO'),('play', 'VB'),('to', 'TO'),('play', 'NN')],
"
Extracting elements from dictionary of list of dictionaries,"mydict = {
    'labyrinth': [
        {
            u'content': u'something',
            u'expected': u''
        },
        {
            u'content': u'somethingelse',
            u'expected': u'thistext\n   user ID: a.b.c\n      user ID: e.f.g\n'
        },
        {
            u'content': u'blah',
            u'expected': u'a. Path:somepath\n   user ID: b.c.d\n'
        }
    ]
}
"
return duplicates in a list,"def FindDuplicates(in_list):  
    duplicates = []
    unique = set(in_list)
    for each in unique:
        count = in_list.count(each)
        if count > 1:
            duplicates.append(each)
    print duplicates
"
How can I perform a least-squares fitting over multiple data sets fast?,"import numpy as np
import matplotlib.pyplot as plt
import matplotlib as mpl
import itertools

def main():
    x, data = generate_data(256, 6)
    model = [invert(x, y) for y in data.T]
    sigma, mu, height = [np.array(item) for item in zip(*model)]
    prediction = gaussian(x, sigma, mu, height)

    plot(x, data, linestyle='none', marker='o')
    plot(x, prediction, linestyle='-')
    plt.show()

def invert(x, y):
    # Use only data within the ""peak"" (20% of the max value...)
    key_points = y > (0.2 * y.max())
    x = x[key_points]
    y = y[key_points]

    # Fit a 2nd order polynomial to the log of the observed values
    A, B, C = np.polyfit(x, np.log(y), 2)

    # Solve for the desired parameters...
    sigma = np.sqrt(-1 / (2.0 * A))
    mu = B * sigma**2
    height = np.exp(C + 0.5 * mu**2 / sigma**2)
    return sigma, mu, height

def generate_data(numpoints, numcurves):
    np.random.seed(3)
    x = np.linspace(0, 500, numpoints)

    height = 100 * np.random.random(numcurves)
    mu = 200 * np.random.random(numcurves) + 200
    sigma = 100 * np.random.random(numcurves) + 0.1
    data = gaussian(x, sigma, mu, height)

    noise = 5 * (np.random.random(data.shape) - 0.5)
    return x, data + noise

def gaussian(x, sigma, mu, height):
    data = -np.subtract.outer(x, mu)**2 / (2 * sigma**2)
    return height * np.exp(data)

def plot(x, ydata, ax=None, **kwargs):
    if ax is None:
        ax = plt.gca()
    colorcycle = itertools.cycle(mpl.rcParams['axes.color_cycle'])
    for y, color in zip(ydata.T, colorcycle):
        ax.plot(x, y, color=color, **kwargs)

main()
"
Reference a table column by its column header in Python,"df = pd.DataFrame(table[1:], columns=table[0]).astype(str)
"
Calculate two values and calculate difference in percentage in Django,"def is_number(s):
    try:
        float(s)
        return True
    except (ValueError, TypeError):
        return False
"
pandas join DataFrame force suffix?,"In [14]: df_a.columns = df_a.columns.map(lambda x: str(x) + '_a')

In [15]: df_a
Out[15]: 
   A_a
0    1
1    2
"
Django: filter queryset by intersection result,"Item.objects.filter(features__name__in=['Camera', 'Touchscreen', 'Keyboard'])
"
Pandas where clause after a count,"In [52]:
counts[counts > 2]

Out[52]:
name
n2    3
Name: id, dtype: int64
"
Is it possible to use variable name in imread? Basic issue in Python,"for i in range(1,100):
    X=io.imread('/home/oria/Desktop/more pics/%s.ppm' %(i))
"
Python3 SQL Update not committing,"updateDB(databaseLoc, new_class, post_id)
"
Reading a binary file with numpy structured array,"import numpy as np
import string

# Create some fake data
N = 10
dtype = np.dtype([('a', 'i4'), ('b', 'S8'), ('c', 'f8')])
a = np.zeros(N, dtype)
a['a'] = np.random.random_integers(0,3, N)
a['b'] = np.array([x for x in string.ascii_lowercase[:N]])
a['c'] = np.random.normal(size=(N,))

# Write to a binary file
a.tofile('test.dat')

# Read data into new array
b = np.fromfile('test.dat', dtype=dtype)
"
cleaning up nested function calls,"def get_clean_text(page):
    return cleanup(get_text(page))
def get_clean_page(url):
    return get_clean_text(get_page(url))
"
Python round up integer to next hundred,">>> import math
>>> def roundup(x):
...     return int(math.ceil(x / 100.0)) * 100
... 
>>> roundup(100)
100
>>> roundup(101)
200
"
Efficient way to iterate throught xml elements,"doc = etree.fromstring(xml)
btags = doc.xpath('//a/b')
for b in btags:
    print b.text
"
Return PostgreSQL hstore as OrderedDict using psycopg2 in Python,"SELECT 'foo=>1,bar=>2,spam=>3,eggs=>4'::hstore
UNION ALL
SELECT hstore('{foo,1,bar,2,spam,3,eggs,4}'::TEXT[])
UNION ALL
SELECT hstore('{{foo,1},{bar,2},{spam,3},{eggs,4}}'::TEXT[])
UNION ALL
SELECT hstore('{foo,bar,spam,eggs}'::TEXT[], '{1,2,3,4}'::TEXT[])
"
Sort individual components of a list in python,">>> d2.T
array([[ 0.17 ,  0.28 ,  0.31 ,  0.32 ,  0.36 ,  0.62 ],
       [ 0.02 ,  0.045,  0.1  ,  0.12 ,  0.19 ,  0.42 ],
       [ 0.01 ,  0.03 ,  0.09 ,  0.19 ,  0.26 ,  0.38 ]])
>>> for row in d2.T:
...     print(row)
...     
[ 0.17  0.28  0.31  0.32  0.36  0.62]
[ 0.02   0.045  0.1    0.12   0.19   0.42 ]
[ 0.01  0.03  0.09  0.19  0.26  0.38]
"
Pylons Uploading Distorted Images on Windows,"from __future__ import with_statements
"
Start SimpleHTTPServer in python,"def exec_module(module, globals=None, locals=None):
    frame = sys._getframe(1)

    exec_globals = nvl(globals, {})
    copy_globals = exec_globals.copy()
    exec_globals.update(frame.f_globals)
    exec_globals.update(copy_globals)

    exec_locals = nvl(locals, {})
    copy_locals = exec_locals.copy()
    exec_locals.update(frame.f_locals)
    exec_locals.update(copy_locals)

    exec(compile(module.__loader__.get_source(module.__name__),
                 module.__file__, 'exec'), exec_globals, exec_locals)
"
How to check efficiently if numpy array a contains b,"import numpy as np

def is_subarray_no_repeatition(a, b):
  try:
    i = np.where(a == b[0])[0][0]
  except IndexError:
    # either b is empty, or b[0] not in a
    return b.size == 0
  a = a[i : i+b.size]
  if a.size < b.size:
    return False
  return (a == b).all()
"
Best way to create a dictionary for a later comparison of the elements,"lst1 = range(0,10)
lst2 = range(10,20)
"
Access Controls in Silverlight DataGrid Column Header from Code,"from System.Windows.Media import VisualTreeHelper

def findChildren(parent, findType):
    count = VisualTreeHelper.GetChildrenCount(parent)
    for i in range(count):
        child = VisualTreeHelper.GetChild(parent, i)
        if isinstance(child, findType):
            yield child
        else:
            for entry in findChildren(child, findType):
                yield entry
"
Python method to boost function,"import MyLib
import time

def callMePls():
    print( ""Hello world"" )
    return True

class = MyLib.Class()

class.createTimer( 3, callMePls )

time.sleep( 1 )
"
Pythonic way of retry running a function,"from functools import partial
import requests

def some_request(uri, post):
    req = requests.post(uri, post)
    return req

uri = 'http://someuri.com'
post = {'test': 'yes'}

try:
    retry_func(partial(some_request, uri, post), max_retry=3)
except RetryException, e:
    print(e)
"
Entity Relational Model Design and Query Method,"def retrieve_group_byuser(self, username):
    # retrieves group by username
    query = self.session.query(Group).\
    filter(Group.users.any(User.username == username)).all()
    print ""retrieved by username:"", query
    return query
"
Python regular expression grouping?,"^                        the beginning of the string
(?:                      group, but do not capture:
  [a-zA-Z0-9]+             any character of: 'a' to 'z', 'A' to
                           'Z', '0' to '9' (1 or more times)
  [a-zA-Z0-9-]*            any character of: 'a' to 'z', 'A' to
                           'Z', '0' to '9', '-' (0 or more times)
 |                        OR
  [a-zA-Z0-9]+             any character of: 'a' to 'z', 'A' to
                           'Z', '0' to '9' (1 or more times)
  [a-zA-Z0-9-]+            any character of: 'a' to 'z', 'A' to
                           'Z', '0' to '9', '-' (1 or more times)
  [.]                      any character of: '.'
  [a-zA-Z0-9]{2,}          any character of: 'a' to 'z', 'A' to
                           'Z', '0' to '9' (at least 2 times)
)                        end of grouping
@                        '@'
[a-zA-Z0-9]+             any character of: 'a' to 'z', 'A' to 'Z',
                         '0' to '9' (1 or more times)
[a-zA-Z0-9-_]+           any character of: 'a' to 'z', 'A' to 'Z',
                         '0' to '9', '-', '_' (1 or more times)
[.]                      any character of: '.'
[a-zA-Z0-9]{2,}          any character of: 'a' to 'z', 'A' to 'Z',
                         '0' to '9' (at least 2 times)
$                        before an optional \n, and the end of the
                         string
"
Django: how to change label using formset extra?,"# File: views.py
from django.forms.formsets import formset_factory
from django.shortcuts import render_to_response
from django.template import RequestContext
from django.http import HttpResponseRedirect
from django.core.urlresolvers import reverse
from forms import MachineForm, LineForm, BaseLineFormSet


def get_no_of_lines(request):
    if request.method == 'POST':
        machine_form = MachineForm(request.POST)
        if machine_form.is_valid():
            # At this point, form fields have already been 
            # converted to Python data types :)
            # so no need to convert `line_no` to an integer
            no_of_lines = machine_form.cleaned_data['no_of_lines']
            return HttpResponseRedirect(reverse('line_form', kwargs={'no_of_lines': no_of_lines}))
    else:
        # It looks to me like you probably don't mean to
        # use formsets here (but a form instead)
        machine_form = MachineForm()

    c = RequestContext(request, {
        'machine_form': machine_form,
    })
    return render_to_response('get_no_of_lines.html', c)


def line_form(request, no_of_lines):
    # You probably should validate this number (again).
    # In fact, you probably need to validate first form (MachineForm).
    # ...But I'm assuming it'll be valid in this example.
    no_of_lines = int(no_of_lines)
    LineFormSet = formset_factory(LineForm, extra=no_of_lines, formset=BaseLineFormSet)
    if request.method == ""POST"":
        formset = LineFormSet(request.POST, request.FILES)
        if formset.is_valid():
            pass
            # Do stuff with form submission
            # Redirect

    else:
        formset = LineFormSet()

    c = RequestContext(request, {
        'formset': formset,
    })
    return render_to_response('line_form.html', c)
"
Convert unicode with utf-8 string as content to str,"content = content.encode('latin1')
"
Parsing Python function calls to get argument positions,"import ast
import re

def collect_offsets(call_string):
    def _abs_offset(lineno, col_offset):
        current_lineno = 0
        total = 0
        for line in call_string.splitlines():
            current_lineno += 1
            if current_lineno == lineno:
                return col_offset + total
            total += len(line)
    # parse call_string with ast
    call = ast.parse(call_string).body[0].value
    # collect offsets provided by ast
    offsets = []
    for arg in call.args:
        a = arg
        while isinstance(a, ast.BinOp):
            a = a.left
        offsets.append(_abs_offset(a.lineno, a.col_offset))
    for kw in call.keywords:
        offsets.append(_abs_offset(kw.value.lineno, kw.value.col_offset))
    if call.starargs:
        offsets.append(_abs_offset(call.starargs.lineno, call.starargs.col_offset))
    if call.kwargs:
        offsets.append(_abs_offset(call.kwargs.lineno, call.kwargs.col_offset))
    offsets.append(len(call_string))
    return offsets

def argpos(call_string):
    def _find_start(prev_end, offset):
        s = call_string[prev_end:offset]
        m = re.search('(\(|,)(\s*)(.*?)$', s)
        return prev_end + m.regs[3][0]
    def _find_end(start, next_offset):
        s = call_string[start:next_offset]
        m = re.search('(\s*)$', s[:max(s.rfind(','), s.rfind(')'))])
        return start + m.start()

    offsets = collect_offsets(call_string)   

    result = []
    # previous end
    end = 0
    # given offsets = [9, 14, 21, ...],
    # zip(offsets, offsets[1:]) returns [(9, 14), (14, 21), ...]
    for offset, next_offset in zip(offsets, offsets[1:]):
        #print 'I:', offset, next_offset
        start = _find_start(end, offset)
        end = _find_end(start, next_offset)
        #print 'R:', start, end
        result.append((start, end))
    return result

if __name__ == '__main__':
    try:
        while True:
            call_string = raw_input()
            positions = argpos(call_string)
            for p in positions:
                print ' ' * p[0] + '^' + ((' ' * (p[1] - p[0] - 2) + '^') if p[1] - p[0] > 1 else '')
            print positions
    except EOFError, KeyboardInterrupt:
        pass
"
Reading chunks of csv file in Python using pandas,"
import numpy as np
import pandas as pd

df = pd.read_table('data',sep=';',na_values=[''],thousands='.',decimal=',',
                   names=['date', '1Y', '2Y', '3Y'])
mask = df['date'].str.contains('^\s*\D')              # 1
df['currency'] = (df['date']
                  .where(mask, np.nan)                # 2
                  .fillna(method='ffill'))            # 3
df = df.loc[~mask]                                    # 4

print(df)    

groups = df.groupby(['currency'])
for key, grp in groups:
    print(grp)
"
Splitting a CSV file by range of datetimes,"pd.TimeGrouper
In [1604]: y.groupby(pd.TimeGrouper(freq='M')).count().head()
Out[1604]: 
            Price  Bid  Ask  Size
DateTime                         
2009-09-30     13   13   13    13
2009-10-31      0    0    0     0
2009-11-30      0    0    0     0
2009-12-31      0    0    0     0
2010-01-31      0    0    0     0

In [1605]: y.groupby(pd.TimeGrouper(freq='D')).count().head()
Out[1605]: 
            Price  Bid  Ask  Size
DateTime                         
2009-09-28     13   13   13    13
2009-09-29      0    0    0     0
2009-09-30      0    0    0     0
2009-10-01      0    0    0     0
2009-10-02      0    0    0     0
"
Quick way to sum the ith item of a list of lists in python,">>> map(sum, zip(*j))
[6, 5, 7]
>>> list(map(sum, zip(*j))) # In Python 3.x
[6, 5, 7]
"
generate date range to be used in a loop,"d = datetime.datetime(2015, 9, 17)
for i in range(33):
    d += datetime.timedelta(days=1)
    receiver=x.runQuery(""copy  dlr_2014_198_bk_todel from 'http://www/sms_sending18.179.67.198_{}_utf.csv.gz' CREDENTIALS delimiter '\t' emptyasnull escape gzip"".format(datetime.datetime.strftime(d, '%Y_%m_%d))
"
Cut a Substring of a String which was read by serial in Python,">>> out.split()
['aw=', '1.100', 'T=', '94.2', ""'C"", 'H20=', '530', 'ppm']
"
"Python and ElementTree: return ""inner XML"" excluding parent element","from xml.etree import ElementTree as ET

xml = '<root>start here<child1>some text<sub1/>here</child1>and<child2>here as well<sub2/><sub3/></child2>end here</root>'
root = ET.fromstring(xml)

def content(tag):
    return tag.text + ''.join(ET.tostring(e) for e in tag)

print content(root)
print content(root.find('child2'))
"
"What's perfect counterpart in Python for ""while not eof""","import sys

for line in sys.stdin:
    do_something()
"
"Understanding recursion in Python 2 (Think Python, exercise 5)","n = 2
work
    n = 1
    work
        n = 0
        return
    work
        n = 0
        return
    work
    return
work
    n = 1
    work
        n = 0
        return
    work
        n = 0
        return
    work
    return
work
return
"
send both string and buffer using httplib with python to the server,"#!/usr/bin/env python
import requests # $ pip install requests

file = 'file content as a file object or string'
r = requests.post('http://example.com/SomeName/action.php',
                  files={'file': ('filename.txt', file)},
                  data={'str1': 'string1', 'str2': 'string2'})
print(r.text) # response
"
iterative long-to-wide python one-liner (or two) using groupby,"[{'best meower': 10, 'fanciest': 9, 'id': 'cat', 'cleanest paws': 8},
 {'dumb': 9, 'smelly': 9, 'id': 'dog'}]
"
How to take sum and average of indexed values in a list?,"[0, 4, 11, 20] [0, 4, 22, 40]
"
Python: How to pass ARGV parameters to another script?,"import subprocess
import sys

subprocess.call([""/path/to/subprocess""] + sys.argv[1:])
"
Python : Allowing methods not specifically defined to be called ala __getattr__,"class MyClass(object):
    def create(self, itemType, itemName):
        print ""Creating item %s with name %s"" % (itemType, itemName)

    def __getattr__(self, attrName):
        def create_wrapper(name):
            self.create(attrName, name)
        return create_wrapper
"
Define function stubs enmasse,"def __getattribute__(self, name):
    attr = super(MySuperclass, self).__getattribute__(name)
    if callable(attr):
        return hierarchywrapper(attr)
    else:
        return attr
"
Python Lambda if statements,"monthdays = [31, 29 if leapyear(x) else 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
"
How do I generate a random vector in TensorFlow and maintain it for further use?,"rand_var_1 = tf.Variable(tf.random_uniform([5], 0, 10, dtype=tf.int32, seed=0)
rand_var_2 = tf.Variable(tf.random_uniform([5], 0, 10, dtype=tf.int32, seed=0)

# Or, alternatively:
rand_var_1 = tf.Variable(tf.random_uniform([5], 0, 10, dtype=tf.int32, seed=0)
rand_var_2 = tf.Variable(rand_var_1.initialized_value())

# Or, alternatively:
rand_t = tf.random_uniform([5], 0, 10, dtype=tf.int32, seed=0)
rand_var_1 = tf.Variable(rand_t)
rand_var_2 = tf.Variable(rand_t)
"
Generate a random derangement of a list,"(1, 0, 3, 2) 4934
(1, 2, 3, 0) 4952
(1, 3, 0, 2) 4980
(2, 0, 3, 1) 5054
(2, 3, 0, 1) 5032
(2, 3, 1, 0) 5053
(3, 0, 1, 2) 4951
(3, 2, 0, 1) 5048
(3, 2, 1, 0) 4996
"
Interpolation with Delaunay Triangulation (n-dim),"values = np.array(values)
for i in range(len(p)): p_values[i] = np.inner(values[v[i]], w[i])
"
extract data from ovs dump-flow using pyparsing,"eth = Group(""eth"" + LBRACE + 
                ""src"" + EQUAL + macAddress(""src"") + COMMA + 
                ""dst"" + EQUAL + macAddress(""dst"") + 
                RBRACE)
arp = Group(""arp"" + LBRACE +
                ""sip"" + EQUAL + ipAddress(""sip"") + COMMA +
                ""tip"" + EQUAL + ipAddress(""tip"") + COMMA +
                ""op"" + EQUAL + op(""op"") + COMMA + 
                ""sha"" + EQUAL + macAddress(""sha"") + COMMA + 
                ""tha"" + EQUAL + macAddress(""tha"") + 
                RBRACE)
ipv4 = Group(""ipv4"" + LBRACE + ""src"" + EQUAL + ipAddress(""src"") + COMMA + 
                ""dst"" + EQUAL + ipAddress(""dst"") + COMMA + 
                ""proto"" + EQUAL + proto(""proto"") + COMMA + 
                ""tos"" + EQUAL + tos(""tos"") + COMMA + 
                ""ttl"" + EQUAL + ttl(""ttl"") + COMMA + 
                ""frag"" + EQUAL + frag(""frag"") + 
                RBRACE)
tcp = Group(""tcp"" + LBRACE + 
                ""src"" + EQUAL + src(""srcPkt"") + COMMA + 
                ""dst"" + EQUAL + dst(""dstPkt"") + 
                RBRACE)
"
How to use following python dictionary in template using javascript?,"<script>
     obj = {{ my_json|safe }};
     for (var prop in obj){  // Iterating through an object
         console.log(prop);
         for(i=0, i < obj[prop].length, i++){  // Iterating through the list for each key
              console.log(obj[prop][i]);
         }
     }
</script>
"
Getting Python System Calls as string results,"import subprocess
resultMD5 = subprocess.Popen([""md5sum"",""myFile""],stdout=subprocess.PIPE).communicate()[0]
"
How to filter nested JSON and preserve branch hierarchy for matches?,"tree=[{'id': 20, 'name': 'education', 'subterms': [
               {'id': 21, 'name': 'schools', 'synonyms': []},
               {'id': 22, 'name': 'schoolbooks', 'synonyms': ['literature']},
               {'id': 23, 'name': 'higher education', 'synonyms': ['university']},
               {'id': 25, 'name': 'conference', 'synonyms': ['lecture']}]},
 {'id': 26, 'name': 'health', 'subterms': [
               {'id': 27, 'name': 'health issues', 'synonyms': []},
               {'id': 28, 'name': 'nutrition', 'synonyms': []},
               {'id': 29, 'name': 'medicine', 'synonyms': []}]},
 {'id': 1, 'name': 'business', 'subterms': [{'id': 2,
                'name': 'industry',
                'subterms': [{'id': 21, 'name': 'service', 'synonyms': []},
                             {'id': 21, 'name': 'agriculture', 'synonyms': []}],
                'synonyms': []},
               {'id': 3, 'name': 'professions', 'synonyms': ['jobs']}]}]

def filter_by_name(node, names):
    if isinstance(node, list):
        return filter(None, (filter_by_name(x, names) for x in node if x))
    subterms = filter(None, filter_by_name(node.get('subterms',[]), names))
    if set([node['name']]+node.get('synonyms',[])).intersection(names):
        return dict(node, subterms=subterms)
    if subterms:
        return dict(node, subterms=subterms)
    return None


from pprint import pprint
pprint(filter_by_name(tree, ['business']))
pprint(filter_by_name(tree, ['literature']))
pprint(filter_by_name(tree, ['literature', 'agriculture']))
"
"How to get row, column indices of items in Pandas dataframe","In [26]: list(df[df.notnull()].stack().index)
Out[26]: [(0L, '2'), (1L, '0'), (2L, '1')]

In [27]: df[df.notnull()].stack().index
Out[27]:
MultiIndex(levels=[[0, 1, 2], [u'0', u'1', u'2']],
           labels=[[0, 1, 2], [2, 0, 1]])
"
Django: How to custom save a model/form based on a non-persistent field of a form?,"class EntryAdmin(MarkdownModelAdmin):
    ...
    def save_model(self, request, obj, form, change):
        if form.cleaned_data.get('to_publish'):
            obj.publication_date = datetime.now()
        obj.save()
"
Python output to Console within Subprocess from the child scricpt,"try: # Windows
    from msvcrt import putwch

    def print_to_console(message):
        for c in message:
            putwch(c)
        # newline
        putwch('\r') 
        putwch('\n')
except ImportError: # Unix
    import os

    fd = os.open('/dev/tty', os.O_WRONLY | os.O_NOCTTY)
    tty = os.fdopen(fd, 'w', 1)
    del fd
    def print_to_console(message, *, _file=tty):
        print(message, file=_file)
    del tty
"
Name isn't found in my Python application,"def main():
    keepProgramRunning = True

    while keepProgramRunning:
        print ""Welcome to the Calculator!""
        print ""Please choose what you'd like to do:""

        print ""0: Addition""
        print ""1: Subtraction""
        print ""2: Multiplication""
        print ""3: Division""    


        #Capture the menu choice.
        choice = raw_input()

        #Capture the numbers you want to work with.
        numberA = raw_input(""Enter your first number: "")
        numberB = raw_input(""Enter your second number: "")

        if choice == ""0"":
            print ""Your result is:""
            print Addition(numberA, numberB)
        elif choice == ""1"":
            print ""Your result is:""
            print Subtraction(numberA, numberB)
        elif choice == ""2"":
            print ""Your result is:""
            print Multiplication(numberA, numberB)
        elif choice == ""3"":
            print ""Your result is:""
            print Division(numberA, numberB)
        else:
            print ""Please choose a valid option.""

def Addition(a, b):
    return a + b

def Subtraction(a, b):
    return a - b

def Multiplication(a, b):
    return a * b

def Division(a, b):
    return a / b

if __name__ == '__main__':
    main()
"
regex match certain characters but not with a period at the beginning,">>> import re
>>> text = r""This is the oldest European-settled town in the continental U.S.\r\nExplore the town at your leisure\r\nUpgrade to add a scenic cruise aboard \r\n""
>>> result = re.sub(r'[ .]*(?:(?:\\r)?\\n)+', '. ', text).strip()
>>> print(result)
This is the oldest European-settled town in the continental U.S. Explore the town at your leisure. Upgrade to add a scenic cruise aboard.
"
Python newbie: What does this code do?,"def my_other_func(a, *b, **c):
    print a, b, c
"
How to access multiple dictionaries in list with Python,"first_container_number = lcontainers311[0]['ContainerNumber']
"
"I have a string that i need to put into an object, but i cant get it to work",">>> (a, b), (c, d) = l   # Thanks Lev!
>>> a
39.83
>>> # etc.
"
Do Python regular expressions have an equivalent to Ruby's atomic grouping?,"[nelhage@anarchique:~/tmp]$ python re.py
96.0800571442
7.41481781006e-05
"
Pythonic way of inheriting many classes?,"class Apple(Fruit):

    def __init__(self):
        super().__init__(""apple"", 2)
"
Dictionary with named values?,"d['A'] = {}
d['A']['X'] = 'V1'
"
Column to row in pandas dataframe,"print pd.melt(df, id_vars='Time', var_name='Category', value_name='Count')
        .groupby(['Time','Category']).sum().reset_index().sort_values('Category')
   Time Category  Count
0    10        X      0
3    15        X      1
6    23        X      1
1    10        Y      3
4    15        Y      0
7    23        Y      0
2    10        Z      5
5    15        Z      2
8    23        Z      0
"
Trying to find all combinations of a 2-state vector (in python),"vectors[i] = A
"
Conditional maths operation on 2D numpy array checking on one dimension and doing different operations on diff dimensions,"pantilt=np.column_stack([np.linspace(-180,180,11),np.linspace(0,90,11)])

I = pantilt[:,0]>90
# J = pantilt[:,0]<-90 
pantilt[I,0] -= 180
pantilt[I,1] *= -1

I = pantilt[:,0]<-90  # could use J instead
pantilt[I,0] += 180
pantilt[I,1] *= -1
"
Django: HttpResponseRedirect not working,"def login_view(request):
    err_msg = None
    # if the request method is POST the process the POST values otherwise just render the page
    if request.method == 'POST':
        username = request.POST.get('username', '')
        password = request.POST.get('password', '')
        user = auth.authenticate(username=username, password=password)
        if user is not None and user.is_active:
            # Correct password, and the user is marked ""active""
            auth.login(request, user)
            # Redirect to dashboard
           return HttpResponseRedirect('/')
        else:
            # Show a message     
            err_msg 'Please enter your username and password below.'
    return render(request, 'login.html', {'login': err_msg})
"
multiprocessing.Pool - PicklingError: Can't pickle <type 'thread.lock'>: attribute lookup thread.lock failed,"UnpickleableError: Cannot pickle <type 'thread.lock'> objects
"
How to format a floating number to fixed width with forced sign in Python,">>> '{:+5.0f}'.format(47.55)
'  +44'
"
Convert numpy unit8 raw array directly to float32,">>> raw_unit8_data = np.array([32, 14, 135, 241], dtype='uint8')
>>> raw_unit8_data.view('<f4')
array([ -1.33752168e+30], dtype=float32)
"
requests: how to disable / bypass proxy,"import os
import requests

os.environ['NO_PROXY'] = 'stackoverflow.com'

response = requests.get('http://www.stackoverflow.com')
"
Python: failed to get all the text in all the <span> tags using BeautifulSoup,"Director James
Actor Tom
Countries USA
Language English
"
Efficient list manipulation in python,"def good_for_g(g, n):
    # for some container `g` and item value `n`:
    u, v, w = n.value
    return v in g[u] and w in g[v] and u not in g[w]
"
How to get follower count using tweepy,"from functools import partial
from sys import maxint

def get_friends_followers_ids(twitter_api, screen_name=None, user_id=None,
friends_limit=maxint, followers_limit=maxint):
    # Must have either screen_name or user_id (logical xor)
    assert (screen_name != None) != (user_id != None),\
    ""Must have screen_name or user_id, but not both""
    # See https://dev.twitter.com/docs/api/1.1/get/friends/ids and
    # https://dev.twitter.com/docs/api/1.1/get/followers/ids for details
    # on API parameters
    get_friends_ids = partial(make_twitter_request, twitter_api.friends.ids,
                             count=5000)
    get_followers_ids = partial(make_twitter_request,twitter_api.followers.ids,
                               count=5000)
    friends_ids, followers_ids = [], []
    for twitter_api_func, limit, ids, label in [
                    [get_friends_ids, friends_limit, friends_ids, ""friends""],
                    [get_followers_ids, followers_limit, followers_ids, ""followers""]
                ]:
        if limit == 0: continue
        cursor = -1
        while cursor != 0:

            # Use make_twitter_request via the partially bound callable...
            if screen_name:
                response = twitter_api_func(screen_name=screen_name, cursor=cursor)
            else: # user_id
                response = twitter_api_func(user_id=user_id, cursor=cursor)
            if response is not None:
                ids += response['ids']
                cursor = response['next_cursor']
            print >> sys.stderr, 'Fetched {0} total {1} ids for{2}'.format(len(ids),
                                                    label, (user_id or screen_name))
            # XXX: You may want to store data during each iteration to provide  
            # an additional layer of protection from exceptional circumstances
            if len(ids) >= limit or response is None:
                break
    # Do something useful with the IDs, like store them to disk...
    return friends_ids[:friends_limit], followers_ids[:followers_limit]

# Sample usage
twitter_api = oauth_login()
friends_ids, followers_ids =get_friends_followers_ids(twitter_api,
                                                      screen_name=""SocialWebMining"",
                                                      friends_limit=10,
                                                      followers_limit=10)
print friends_ids
print followers_ids
"
Frequencies not adding up to one,"print float('AAAA'.count('AA')) / (len('AAAA') - 1)
0.666666
"
How to get the top 10 students in the class using Python dict,">>> from heapq import nsmallest
>>> for name, score in nsmallest(10, names.iteritems(), key=lambda (k, v): (-v, k)):
...     print name, score
...
name3 98
name5 66
name2 45
name1 34
name4 34
"
"Convert list into sub-list while maintaining ""key""","xl = list(x) # you gave us a tuple          
for i,y in enumerate(xl):
    xx = xl[i]
    xx = [[xx[0],y] for y in xx[1].split('. ')]
    xl[i:i+1] = xx
"
Dot product sparse matrices,"a = np.arange(12).reshape(3,4)
a1 = sparse.csr_matrix(a)

np.dot(a, a.T)
a1 * a.T
a*a
a1.multiply(a1)
etc
"
How do I change the built-in button labels on a gtk.Assistant?,"gtk-goto-last
gtk-go-back
gtk-go-forward
gtk-apply
gtk-cancel
gtk-close
"
QTreeWidget insertTopLevelItem - index given not accurately displayed in Tree?,"class TreeItem(QtGui.QTreeWidgetItem):

    PythonValueRole = QtCore.Qt.UserRole

    #values are list of python objects, that have __str__ and can be compared
    def __init__(self, tree, values):
        QtGui.QTreeWidgetItem.__init__(self, tree)
        i = 0
        for v in values:
            self.setData(i, TreeItem.PythonValueRole, v)
            i += 1

    #overridden to simplify data assigning. When called with PythonValueRole, passes
    #that object's string representation to DisplayRole and EditRole
    def setData(self, col, role, value):
        if role == TreeItem.PythonValueRole:
            QtGui.QTreeWidgetItem.setData(self, col, TreeItem.PythonValueRole, value)
            # sets DisplayRole and EditRole
            QtGui.QTreeWidgetItem.setData(self, col, QtCore.Qt.EditRole, str(value)) 
            QtGui.QTreeWidgetItem.setData(self, col, QtCore.Qt.DisplayRole, str(value))
        else:
            QtGui.QTreeWidgetItem.setData(self, col, role, value)

    def __lt__(self, other):
        c = self.treeWidget().sortColumn()
        return self.data(c, TreeItem.PythonValueRole).toPyObject() < 
               other.data(c, TreeItem.PythonValueRole).toPyObject()
"
WxPython Panel Refresh,"def get_widget_value(widget):
    if isinstance(widget,wx.TextCtrl):
       return widget.GetLabel()
    if hasattr(widget,""GetValue""):
       return widget.GetValue()
    raise Exception,""Unknown Widget {0}"".format(widget)

def set_widget_value(widget,value):
    if isinstance(widget,wx.TextCtrl):
       return widget.SetLabel(value)
    if hasattr(widget,""SetValue""):
       return widget.SetValue(value)
    raise Exception,""Unknown Widget {0}"".format(widget)
"
Python: sort list based on value present in dictionary,"[obj2, obj1, obj5, obj3, obj4]
"
Generate IMEI in python,">>> luhn_residue('79927398713')
0
>>> luhn_residue('05671564547361')
6
>>> luhn_residue(getImei(14))
0
"
numpy.partition() with 2-D Array,"# a slightly larger example array in order to better illustrate what
# argpartition does
b = np.array([[  5.2,   4.3],
              [200.2,   6.2],
              [  3.6,  85.1],
              [  1.4, 112.2],
              [ 12.8,  60.0],
              [  7.6,  23.4]])

# get a set of indices to reorder the rows of `b` such that b[2, 0] is in its
# final 'sorted' position, and all elements smaller or larger than it will be
# placed before and after it respectively
partial_order = np.argpartition(b[:, 0], 2)

# the first (2+1) elements in the first column are guaranteed to be smaller than
# the rest, but apart from that the order is arbitrary
print(b[partial_order])
# [[   1.4  112.2]
#  [   3.6   85.1]
#  [   5.2    4.3]
#  [ 200.2    6.2]
#  [  12.8   60. ]
#  [   7.6   23.4]]
"
python natural comparison between strings?,"import re
from itertools import groupby

def regex_key(key):
    """"""Traditional, regular-expression-based nat-sort key.""""""
    convert = lambda text: int(text) if text.isdigit() else text.lower()
    return [convert(c) for c in re.split('([0-9]+)', key)]

def fast_key(value):
    """"""Attempt #1 to go faster than 'slow' 're' library.""""""
    result = []
    for is_int, chunk in groupby(value.lower(), str.isdigit):
        if is_int:
            result.append(int(''.join(chunk)))
        else:
            result.append(tuple(chunk))
    return result

def faster_key(value):
    """"""Attempt #2.  'Low-level' python.""""""
    start_idx = 0
    is_num = None
    result = []
    for idx, c in enumerate(value.lower()):
        now_is_num = c.isdigit()
        if is_num is not None and now_is_num != is_num:
            buf = value[start_idx:idx]
            result.append(int(buf) if is_num else buf)
            start_idx = idx
            is_num = None
        is_num = now_is_num
    buf = value[start_idx:]
    result.append(int(buf) if is_num else buf)
    return result
"
How to draw a bitmap real quick in python using Tk only?,"from Tkinter import *
import random

def RGBs(num):
 # random list of list RGBs
 return [[random.randint(0,255) for i in range(0,3)] for j in range(0,num)]

def rgb2Hex(rgb_tuple):
    return '#%02x%02x%02x' % tuple(rgb_tuple)

def drawGrid(w,colors):
 col = 0; row = 0
 colors = [rgb2Hex(color) for color in colors]
 for color in colors:
  w.create_rectangle(col, row, col+1, row+1, fill=color, outline=color)
  col+=1
  if col == 100:
   row += 1; col = 0

root = Tk()
w = Canvas(root)
w.grid()
colors = RGBs(5000)
drawGrid(w,colors)
root.mainloop()
"
xml filtering with python,"doc = lxml.etree.XML(data)
for parent in doc.iter('*'):
    child=parent.find('node2/[@a1=""x2""]')
    if child is not None:
        parent.remove(child)
"
How do I get the atomic clock time in python?,">>>import ntplib
>>>from time import ctime
>>>c = ntplib.NTPClient()
>>>response = c.request('europe.pool.ntp.org', version=3)
>>>ctime(response.tx_time)
'Sun May 17 09:32:48 2009'
"
How to handle CLI subcommands with argparse,"$python3 test_args.py cmd1 1
Namespace(cmd1_option1='1')
"
Python lxml - How to remove empty repeated tags,"# Walk over all elements in the tree and remove all
# nodes that are recursively empty
context = etree.iterwalk(root)
for action, elem in context:
    parent = elem.getparent()
    if recursively_empty(elem):
        parent.remove(elem)
"
Tkinter press button with command,"import tkinter as tk

def mimicClick( _button):
    _button.config(relief=tk.SUNKEN)
    _button.after(100, lambda :  _button.config(relief=tk.RAISED))

master = tk.Tk()
buttons = []
for i in range(10):
    b = tk.Button(master, text= i)
    b.grid(row = i // 3, column = i % 3, padx = 10, pady = 10)
    buttons.append(b)
    master.bind(str(i), lambda e, i = i: mimicClick(buttons[i]) )

master.mainloop()
"
Insert JSON into MySQL,"balance = subprocess.check_output([shell_script, 'all'])

# ...

for i in balance.items():
"
How to skip a particular tag and crawl other tag's text in Beautifulsoup,"soup = BeautifulSoup(html_doc)
content = soup.find('blockquote',attrs={'class':'messagetext'})

for tag in content.findChildren():
    if tag.name == 'div':
        tag.clear()

print content.text
"
"Given a dictionary of word and frequency pairs, how to proceed with text mining in scikit",">>> model.predict([{'cat':1}])[0]
'animals'
"
Converting date into hours,">>> hours_difference = abs(start_time - end_time).total_seconds() / 3600.0
>>> hours_difference
2.3033333333333332
"
Python: Return function won’t return a list,"def getAppNames():
    result = []
    for app in service.apps:
        result.append(app.name)
    return result
"
What are the kernel coefficients for OpenCV's Sobel filter for sizes larger than 3 x 3?,"
#include <cv.h>

using namespace std;
using namespace cv;

int main() {

    // For the kernels
    Mat sobelX, sobelY;

    // 5 x 5 - x direction
    getDerivKernels(sobelX, sobelY, 1, 0, 5, false, CV_32F);
    cout << ""sobel5x = "" << endl << "" "" << sobelX*sobelY.t() << endl << endl;

    // 5 x 5 - y direction
    getDerivKernels(sobelX, sobelY, 0, 1, 5, false, CV_32F);
    cout << ""sobel5y = "" << endl << "" "" << sobelX*sobelY.t() << endl << endl;

    // 7 x 7 - x direction
    getDerivKernels(sobelX, sobelY, 1, 0, 7, false, CV_32F);
    cout << ""sobel7x = "" << endl << "" "" << sobelX*sobelY.t() << endl << endl;

    // 7 x 7 - y direction
    getDerivKernels(sobelX, sobelY, 0, 1, 7, false, CV_32F);
    cout << ""sobel7y = "" << endl << "" "" << sobelX*sobelY.t() << endl << endl;

    return 0;
}
"
Time complexity of random.sample,"   315             selected = set()
   316             selected_add = selected.add
   317             for i in range(k):
   318                 j = randbelow(n)
   319                 while j in selected:
   320                     j = randbelow(n)
   321                 selected_add(j)
   322                 result[i] = population[j]
"
Partioning non-unique entities into unique sets with Python,"((1,), (1,), (1,), (1,), (1,), (1,))
((1, 1), (1,), (1,), (1,), (1,))
((1, 1), (1, 1), (1,), (1,))
((1, 1), (1, 1), (1, 1))
"
How do I identify sequences of values in a boolean array?,">>> from itertools import accumulate, groupby
>>> [0] + list(accumulate(sum(1 for _ in g) for _,g in groupby(bool_array)))
[0, 5, 10, 13, 15, 19, 26]
"
Start and end an independent sub-session in Python,"class Session(object):
    def __init__(self, gref):
        self.init()
        self.gref = gref

    def init(self):
        self.modules = {}
        self.path = None
        self.glob = {}

    def start(self):
        import sys
        self.modules = sys.modules.copy()
        self.path = sys.path[:]
        self.glob = self.gref.copy()
        self.gref['test'] = 'abc'

    def stop(self):
        import sys
        sys.modules = self.modules.copy()
        sys.path = self.path[:]
        for k in self.gref.keys():
            del self.gref[k]
        self.gref.update(self.glob)

    def __repr__(self):
        return repr(self.glob)
"
Manipulating numpy arrays,"test.reshape(2,2,2,3).transpose(1,0,3,2).reshape(-1,2)
"
Text between tag including the text of children within the tag in lxml,"import urllib2
import lxml.html as LH

site = ""http://racing.racingnsw.com.au/InteractiveForm/HorseAllForm.aspx?HorseCode=ODA0ODQ0MTUy&src=horsesearch""
req = urllib2.Request(site)
page = urllib2.urlopen(req)
root = LH.parse(page)
for td in root.xpath('//*[@id=""info-container""]/table[2]/tr[33]/td[2]'):
    print(td.text_content())
"
How do I take an integer from a list intending to use it?,">>> one[0]
1
>>> one[2]
2
"
Removing extra spaces in Chinese HTML files using lxml,"<html><body><p>&#31069;&#20320;19&#26085;&#24555;&#20048;&#12290;</p></body></html>
"
How do I fill in nested ManyToMany fields in Django with Shell?,"teacher =  Teacher.objects.create(name='some name')
student = Student.objects.create(name='some_name')
parent =  Parent.objects.create(name='some_name', address='some_address')
"
How to use SHGetFileInfo with SHGFI_PIDL in python,"test\Scripts\activate
"
Override __init__ for all classes in module,"from django.db import models

def new_init(func):
   def __init__(self, *args,  **kw):
       self.documentation = kw.pop(""documentation"", None)
       return func(self, *args, **kw)

for name, obj in models.__dict__.items():
    #check if obj is a class:
    if not isinstance(obj, type):
        continue

    obj.__init__ = new_init(obj.__dict__[""__init__""])
"
Can boost::python pass ownership of an object to a python callback function?,"void give_up_x(py::object callback) {
    callback(py::handle<>{py::detail::make_owning_holder::execute(x)});
}
"
Opencv python: apply arbitrary function to each pixel without iterating,"in_img = numpy.random.random((1000, 1000))
"
`uniq` for 2D Theano tensor,"def compile_theano_uniq(x):
    diffs = x[1:] - x[:-1]
    diffs = tt.concatenate([tt.ones_like([x[0]], dtype=diffs.dtype), diffs])
    y = diffs.nonzero_values()
    return theano.function(inputs=[x], outputs=y)

theano_uniq = compile_theano_uniq(tt.vector(dtype='int32'))
"
Navigating from admin site to one of my apps in same project,"<div><a href=""/admin/app1/model1/add/"">Add a new entry in app1/model1</a></div>
"
How to create a dict with letters as keys in a concise way?,"In [7]: dic = dict((y, x) for x, y in enumerate(al, 1))
"
send xml file to http using python,"import urllib

URL = ""http://host.domain.tld/resource""
XML = ""<xml />""

parameter = urllib.urlencode({'XML': XML})
"
Using Flask-Cache to cache a lxml.html object," * Running on http://127.0.0.1:5000/
 * Restarting with reloader
--------------------------------------------------------------------------------
DEBUG in q12030403 [q12030403.py:20]:
index called
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
DEBUG in q12030403 [q12030403.py:14]:
get_content called
--------------------------------------------------------------------------------
127.0.0.1 - - [21/Dec/2012 00:03:28] ""GET / HTTP/1.1"" 200 -
--------------------------------------------------------------------------------
DEBUG in q12030403 [q12030403.py:20]:
index called
--------------------------------------------------------------------------------
127.0.0.1 - - [21/Dec/2012 00:03:33] ""GET / HTTP/1.1"" 200 -
"
"Runtime Error in python: ""Maximum recursion depth exceeded""","directions = (
    (1, 0, '>'),
    (0, 1, 'v'),
    (-1, 0, '<'),
    (0, -1, '^'),
)

def solve(x, y, mazeList=None):
    if mazeList is None:
        mazeList = loadMaze(""sample.maze"")

    for dx, dy, char in directions:
        nx, ny = x + dx, y + dy

        if mazeList[ny][nx] == ""E"":
            return ""YOU'VE SOLVED THE MAZE!""

        if mazeList[ny][nx] == "" "":
            new_maze = [m[:] for m in mazeList]
            new_maze[ny][nx] = char
            result = solve(nx, ny, new_maze)
            if result is not None:
                return result
"
Python maplotlib sine curve with random.randn,"import matplotlib.pyplot as plt
import numpy as np

X = np.random.rand(1000)*2
Y = np.sin(X)
plt.scatter(X,Y)
plt.show()
"
Read a File 8 Lines at a Time Python,">>> from collections import namedtuple
>>> from itertools import islice
>>> records = namedtuple('record',
                  ('firstname','lastname','email' #, .....
               ))
>>> with open(""test.txt"") as fin:
    try:
        while True:
            data =  islice(fin, 0, 3)

            data = record(*data)
            print data.firstname, data.lastname, data.email #.......
    except (StopIteration, TypeError):
        pass
"
csv-table formatting through preamble?,".. figtable::
   :label: my-csv-label
   :caption: My CSV Table
   :nofig:

   .. csv-table::
     :file: data/foo.csv
     :header-rows: 1
"
Why there is a huge performance difference between these two codes in Python and Cython?,"for i in xrange(value):
    z = i**2
    if(i==1000000):
        print i
    if z < i:
        print ""yes""
"
How to make a Python script an executable program,"   #!/usr/bin/python
"
averaging list of lists python,"[243.0, 240.5, 236.5]
"
How to make a Python script run without it opening the console window?,"pyinstaller ""C:\Documents and Settings\project\myscript.spec""
"
Python regex replace anchors,"<a href=""#"" onclick=""javascript:ra('Name of object one')"" title=""Some title Text"">Name of Object two</a>`
"
How to create a delayed queue in RabbitMQ?,"delay_channel.queue_declare(queue='hello_delay', durable=True,  arguments={
  'x-message-ttl' : 5000,
  'x-dead-letter-exchange' : 'amq.direct',
  'x-dead-letter-routing-key' : 'hello'
})
"
Special Character problem in regexp by python,"'<fieldset>\n  <idle1>\n    <value>something\\n</value>\n  </idle1>\n  <idle2>\n    <value>blabla</value>\n  </idle2>\n</fieldset>'

<fieldset>
  <idle1>
    <value>something\n</value>
  </idle1>
  <idle2>
    <value>blabla</value>
  </idle2>
</fieldset>

-------------------------------------------------
'<fieldset>\n  <idle1>\n    <value>something\\n</value>\n  </idle1>\n  <idle2>\n    <value>AAA</value>\n  </idle2>\n</fieldset>'

<fieldset>
  <idle1>
    <value>something\n</value>
  </idle1>
  <idle2>
    <value>-----HHHHHHXXXXXXX-------</value>
  </idle2>
</fieldset>
"
Changing List Entry Syntax,"numbers: [4, 8, 15, 16, 23, 42]
sum of numbers: 108
"
Rolling standard deviation using parts of data in dataframe with Pandas,">>> df.ix[df.index[::-1][::window_step_size][::-1]]

                   A         B         C
2000-01-03  1.223165 -0.548387 -1.558204
2000-01-06 -0.265311 -1.807045  0.533477
2000-01-09  0.463943  0.982042 -0.382241
2000-01-12  0.209979 -0.118331 -0.369776
2000-01-15 -0.464360  0.821400  1.412874
"
Find C Keywords inside a String with Python and Regex,"int (0, 3)
main (4, 8)
void (10, 14)
return (28, 34)
"
Python - Searching a dictionary for strings,"while True:
    problem = eg.enterbox(...)  # as above
    solution = problems.get(problem)
    if solution is None:
        # invalid problem, warn the user
    else:
        # display the solution? Do whatever it is you're doing with it and...
        break
"
common between all csv columns,"from itertools import izip_longest
import csv
import StringIO

data='''table1    table2    table3  table4   table5
paper     paper     pen     book     book
pen       pencil    pencil  charger  apple
apple     pen       charger beatroot sandle
beatroot  mobile    apple   pen      paper
sandle    book      paper   paper'''

f = StringIO.StringIO(data)
reader = csv.reader(f, delimiter=' ', skipinitialspace=True)
cols = map(set, izip_longest(*reader))

print set.intersection(*cols)
"
Renaming columns of dataframe list in Pandas,"['df1open', 'df1high', 'df1low', 'df1close']
"
how to perform calculations across specific rows and columns of a crosstabulation in pandas?,"In [40]: for _, x in g2.groupby(['c2', 'c3']):
   ....:     print x
   ....:     print
   ....:
  c1 c2  c3  c4    val
1  a  x  G1   2  0.572
9  b  x  G1   2  0.811

   c1 c2  c3  c4    val
3   a  x  G2   2  0.893
11  b  x  G2   2  0.736

   c1 c2  c3  c4    val
5   a  y  G1   2  0.400
13  b  y  G1   2  0.159

   c1 c2  c3  c4    val
7   a  y  G2   2  0.237
15  b  y  G2   2  0.772
"
Grouping a dataframe by X columns,">>> df.groupby(np.arange(df.columns.size)//2, axis=1).mean()
          0         1         2
0  0.474179  0.730618 -0.306970
1  0.094818  0.463155  0.132270
2  0.301746  0.937235  0.096684
3  0.812239  1.618627  0.554080
4 -0.349482 -0.889419 -0.795292
5 -0.565273  1.111908  0.141036
"
"Detect ""overall average"" color of the picture","<?php 
function colorPalette($imageFile, $numColors, $granularity = 5) 
{ 
   $granularity = max(1, abs((int)$granularity)); 
   $colors = array(); 
   $size = @getimagesize($imageFile); 
   if($size === false) 
   { 
      user_error(""Unable to get image size data""); 
      return false; 
   } 
   $img = @imagecreatefromjpeg($imageFile);
   // Andres mentioned in the comments the above line only loads jpegs, 
   // and suggests that to load any file type you can use this:
   // $img = @imagecreatefromstring(file_get_contents($imageFile)); 

   if(!$img) 
   { 
      user_error(""Unable to open image file""); 
      return false; 
   } 
   for($x = 0; $x < $size[0]; $x += $granularity) 
   { 
      for($y = 0; $y < $size[1]; $y += $granularity) 
      { 
         $thisColor = imagecolorat($img, $x, $y); 
         $rgb = imagecolorsforindex($img, $thisColor); 
         $red = round(round(($rgb['red'] / 0x33)) * 0x33); 
         $green = round(round(($rgb['green'] / 0x33)) * 0x33); 
         $blue = round(round(($rgb['blue'] / 0x33)) * 0x33); 
         $thisRGB = sprintf('%02X%02X%02X', $red, $green, $blue); 
         if(array_key_exists($thisRGB, $colors)) 
         { 
            $colors[$thisRGB]++; 
         } 
         else 
         { 
            $colors[$thisRGB] = 1; 
         } 
      } 
   } 
   arsort($colors); 
   return array_slice(array_keys($colors), 0, $numColors); 
} 
// sample usage: 
$palette = colorPalette('rmnp8.jpg', 10, 4); 
echo ""<table>\n""; 
foreach($palette as $color) 
{ 
   echo ""<tr><td style='background-color:#$color;width:2em;'>&nbsp;</td><td>#$color</td></tr>\n""; 
} 
echo ""</table>\n"";
"
Python - print tab delimited two-word set,"mystr = ""mike dc car dc george dc jerry dc""
"
Add fractional component in Pandas,"In [47]:
l=[1, 1, 1, 1, 2, 2, 2, 2 ,3 ,3 ,3, 3]
df = pd.DataFrame({'values':l})
df['values'] = df['values'] + (0.25 * (df.index.values % 4 ))
df

Out[47]:
    values
0     1.00
1     1.25
2     1.50
3     1.75
4     2.00
5     2.25
6     2.50
7     2.75
8     3.00
9     3.25
10    3.50
11    3.75
"
subprocess.popen (python) in C,"#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <errno.h>

int main(void)
{
    pid_t child, p;
    int   status;

    /*
     * Prepare pipes et cetera first.
    */

    /* Fork to create the subprocess. */
    child = fork();
    if (child == (pid_t)-1) {
        /* Cannot fork(); usually out of resources (user limits).
         * see errno for details. With <string.h>, you can use
         * strerror(errno) to obtain the error string itself. */
        return 1;

    } else
    if (!child) {
        /* This is the child process itself.
         * Do whatever cleanup is necessary, then
         * execute the subprocess command. */
        execlp(""/bin/ls"",  ""ls"", ""-lA"", NULL);

        /* This is only reached if the exec failed;
         * again, see errno for reason.
         * Always have the child process exit! */
        return 127;
    }

    /* This is only run by the parent process
     * (because the child always exits within the
     *  else if body above).
     *
     * The subprocess PID is 'child'.
    */

    /* Wait for the child process to exit. */
    do {
        status = 0;
        p = waitpid(child, &status, 0);
        if (p == (pid_t)-1 && errno != EINTR)
            break; /* Error */
    } while (p != child);

    if (p != child) {
        /* Child process was lost.
         * If (p == (pid_t)-1), errno describes the error.
        */

    } else
    if (WIFEXITED(status)) {
        /* Child process exited with WEXITSTATUS(status) status.
         * A status of 0 (or EXIT_SUCCESS) means success,
         * no errors occurred. Nonzero usually means an error,
         * but codes vary from binary to binary.
        */

    } else
    if (WIFSIGNALED(status)) {
        /* Child process died from WTERMSIG(status) signal.
         * If you include <string.h>, you can use
         *     strsignal(WTERMSIG(status))
         * to obtain the name (string) of the terminating signal.
        */

    } else {
        /* Child process died from unknown causes.
        */

    }

    /* All done. */
    return 0;
}
"
Python program that is given a line read from a text file and displays the one number found,"import re

with open('path/to/file.txt') as inf:
    text = inf.read()  # generally bad practice, but...

numbers = re.findall(r""\d+"", text)  # ['95', '90']
for number in numbers:
    print(number)
"
How to use argparse arguments as function names,"#!/usr/bin/env python

def a(): return 'function a'
def b(): return 'function b'
def c(): return 'function c'

func_list = [a, b, c]
func_names = [f.func_name for f in func_list]
funcs_dict = dict(zip(func_names, func_list))

f = funcs_dict['b']
print f()
"
Getting `django-registration` to send you to the page you were originally trying to visit,"{% url 'registration.view.activate' activation_key as a_url %}

Thanks! ....

{% autoescape off %}
<a href=""http://{{ site.domain }}{{ a_url }}?next='http://somepage_or_url'"">
    http://{{ site.domain }}{{ url_registration_activate }}/
</a>
{% endautoescape %}

Thanks!
"
Check whether class variable has been defined,"class Foo(object):
    def __init__(self):
        self._big_calc_result = None

    @property
    def big_calc_result(self):
        if self._big_calc_result is not None:
            return self._big_calc_result
        else:
            self._big_calc_result = self.big_calc_run()
            return self._big_calc_result 

    def big_calc_run(self):
        time.sleep(10)  # Takes a long time ...
"
Creating dataframe by adjusting the index taken from list of tuples,"
0   111  222  333
-1  NaN  NaN    0
 0    1  NaN   11
 1    2  NaN   22
 2    3   33   33
 3    4   44  NaN
 4    5   55  NaN
 5  NaN   66  NaN
"
Matching list items to items at the other end of the same list?,"import sys
data = [line.strip() for line in sys.stdin]
"
Pandas: Efficient way to get first row with element that is smaller than a given value,"In [18]: %timeit s[s<5783091]
100 loops, best of 3: 9.01 ms per loop

In [19]: %timeit s[s<5783091].nlargest(1)
100 loops, best of 3: 11 ms per loop
"
Leaving one item out in a python list and print paths,"directory = ""c:\\...""
import os.path
paths = [os.path.join(directory, filename) for filename in filenames]
"
Ascii art that is continually replaced,"python test_curses.py
"
"With pyparsing, how do you parse a quoted string that ends with a backslash","from pyparsing import *

s = r""foo = 'ab\'cd\\'""  # <--- IMPORTANT - use a raw string literal here

ident = Word(alphas)
strValue = QuotedString(""'"", escChar='\\')
strAssign = ident + '=' + strValue

results = strAssign.parseString(s)
print results.asList() # displays repr form of each element

for r in results:
    print r # displays str form of each element

# count the backslashes
backslash = '\\'
print results[-1].count(backslash)
"
Use numpy arrays to count similar tuples,"count = Counter(map(tuple,np.c_[d01,d02][:2].T.tolist()))

Out[1]:
Counter({(0, 2): 1,
         (0, 5): 2,
         (1, 5): 2,
         (3, 2): 1,
         (4, 8): 1,
         (7, 8): 1,
         (8, 2): 1,
         (8, 6): 1})
"
Reversing dictionary: time and space,"d = {i: i * 2 for i in range(10000)}
print 10 in d.viewvalues()
# True
"
Interpolation of values when zooming down,"[[  2.5   4.5]
 [ 10.5  12.5]]
"
Playing with the Python zip function,">>> a = [1, 2, 3] 
>>> b = [0, 0.1, 4]
>>> map(operator.gt, a, b)
[True, True, False]
>>> 
"
How do I normalize a hexbin plot?,"norm = plt.normalize(min_v, max_v)
hb1 = plt.hexbin(x1, y1, norm=norm)
hb2 = plt.hexbin(x2, y2, norm=norm)
"
How do I use BeautifulSoup to move tag contents from one soup to a template soup,"<div id=""here""><script src=""//ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js""></script>
<script src=""//cdn.sstatic.net/Js/stub.en.js?v=283ea58c715b""></script>
<link href=""//cdn.sstatic.net/stackoverflow/all.css?v=71d362e7c10c"" rel=""stylesheet""   type=""text/css"">
</link></div>
"
question related to reverse function and kwargs,"reverse(""name"", year=2009, month=9)
"
Pandas Create Columns From Rows in Other Data Frame with Criteria,"import itertools as IT
import pandas as pd

pos = pd.DataFrame({'Station(s)':[',1,2,,','0,1,2,3,4'],
                    'Position':['Contractor','President'],
                    'Site(s)':['A,B','A'],
                    'Item(s)':['1','1,2']})

sd = pd.DataFrame({'Site':['A','B','B','C','A','A'],
                   'Station(s)':[',1,2,,',',1,2,,',',,,,',',1,2,,','0,1,2,,',',,2,,'],
                   'Item 1':[1,1,0,0,1,0],
                   'Item 2':[1,0,0,1,1,1]})

mypos = pos.copy()
mypos['Station(s)'] = mypos['Station(s)'].str.findall(r'(\d+)')
mypos['Site(s)'] = mypos['Site(s)'].str.split(r',')
tidypos = pd.DataFrame(
    [(row['Position'], site, station) 
     for index, row in mypos.iterrows() 
     for site, station in IT.product(
             *[row[col] for col in ['Site(s)', 'Station(s)']])], 
    columns=['Position', 'Site', 'Station'])

mysd = sd[['Site', 'Station(s)']].copy()
mysd['Station(s)'] = mysd['Station(s)'].str.findall(r'(\d+)')

tidysd = pd.DataFrame(
    [(index, row['Site'], station)
     for index, row in mysd.iterrows() 
     for station in row['Station(s)']], 
    columns=['index', 'Site', 'Station'])

merged = pd.merge(tidysd, tidypos, how='left')
pos_count = merged.groupby(['index', 'Position'])['Station'].nunique().unstack()
total_count = tidysd.groupby(['index'])['Station'].nunique()
pos_count = pos_count.reindex(total_count.index, fill_value=0)
for col in pos_count:
    pos_count[col] = (pos_count[col] == total_count).astype(int)
pos_count = pos_count.reindex(sd.index, fill_value=0)
result = pd.concat([sd, pos_count], axis=1)
print(result)
"
Python regular expression capture re-use,"import re
p = re.compile(r'^([a-z]).*\1$', re.MULTILINE)
test_str = ""a sdf sd fdsf sd a\nsdfdsf ASDSDSAD@#$@#ASDASDs\nsadasd Wdsda""

re.findall(p, test_str)
"
Skip last 5 line in a file using python,"from __future__ import print_function

import sys

from itertools import islice


filepath = sys.argv[1]

with open(filepath, 'rb') as f:
    for line in truncate(islice(f, 6, None), 5):
        print(line, end='')
"
Assure minimal wait between calls with decorators,"def interval_assurer(f):
    def func():
        global last_time
        if (datetime.datetime.now() - last_time).seconds < 1:
            print(""Too fast..."")
            time.sleep(1)
        last_time = datetime.datetime.now()
        return f()
    return func
"
Summarizing log file to unique entries only," @alpha=sort @logf;
 $prev = 'null';
 @uniq = grep($_ ne $prev && ($prev = $_), @alpha);
"
Python Selenium click on a specific row in a table containing the right data in a column,"tr = td.find_element_by_xpath("".."")
"
Python dynamic function attribute,">>> dis.dis(l[0])
  3           0 LOAD_GLOBAL              0 (f)
              3 LOAD_ATTR                1 (v)
              6 RETURN_VALUE
"
Converting strings to integers then ordering them in an list with strings,">>> lis=['joe:  5', 'ed:  9', 'joe:  7', 'ed:  8']

>>> sorted(lis,key=lambda x:int(x.split()[-1]),reverse=True)
>>> ['ed:  9', 'ed:  8', 'joe:  7', 'joe:  5']
"
how to convert xml into list,"In [8]: [x.text for x in doc]
Out[8]: ['text1', 'text2', 'text3', 'text4']
"
Beautiful Soup and searching in results,">>> from bs4 import BeautifulSoup
>>> import re
>>> soup = BeautifulSoup('''\
... <div id=""dw__toc"">
... <h3 class=""toggle"">Table of Contents</h3>
... <div>
... 
... <ul class=""toc"">
... <li class=""level1""><div class=""li""><a href=""#section"">#</a></div>
... <ul class=""toc"">
... <li class=""level2""><div class=""li""><a href=""#link1"">One</a></div></li>
... <li class=""level2""><div class=""li""><a href=""#link2"">Two</a></div></li>
... <li class=""level2""><div class=""li""><a href=""#link3"">Three</a></div></li>
... </ul></ul>''')
>>> matching_link = soup.find('a', text=re.compile('one', re.IGNORECASE))
>>> print matching_link.string
One
>>> print matching_link['href']
#link1
"
How to efficiently compare two unordered lists (not sets) in Python?,"def compare(s, t):
    t = list(t)   # make a mutable copy
    try:
        for elem in s:
            t.remove(elem)
    except ValueError:
        return False
    return not t
"
numpy bytes to plain string,">>> b'somestring'.decode('UTF-8')
'somestring'
"
[tricky]Searching for multiple occurrences of word pairs based on vicinity. Python,"input = 'the flory of gthys inhibition in this proffession by in aquaporin protein-1 its inhibition b , aquaporin protein-1'

a = 'aquaporin protein-1'
b = 'inhibition'

multiwords = ['aquaporin protein-1']
for mw in multiwords:
    mw_no_space = mw.replace(' ', '__')
    text = input.replace(mw, mw_no_space)
k1 = a.replace(' ', '__')
k2 = b.replace(' ', '__')

l = text.split()

d_idx = {k1:[], k2:[]}
for k,v in enumerate(l):
    if v == k1:
        d_idx[k1].append(k)
    elif v == k2:
        d_idx[k2].append(k)

distance = 10
data = []
for idx1 in d_idx[k1]:
    for idx2 in d_idx[k2]:
        d = abs(idx1 - idx2)
        if d<=distance:
            data.append((d,idx1,idx2))

data.sort(key=lambda x: x[0])
print data

print ""Least distance: "", data[0][0]
print ""Index of kw1 and kw2: "", data[0][1:]
print ""Number of occurences: "", len(data)
"
Input in python on more than one line,"fw.write('\n'.join(input().split(' ')))
"
Python openpyxl select sheet,"from openpyxl import load_workbook
wb2 = load_workbook('test.xlsx')
ws4 = wb2[""New Title""]
"
How to read JSON file that contains list of dictionaries into pandas data frame?,"import pandas as pd

lis = [{""url"": ""http://www.URL1.com"", ""date"": ""2001-01-01""}, 
       {""url"": ""http://www.URL2.com"", ""date"": ""2001-01-02""}]

print pd.DataFrame.from_dict(lis)

         date                  url
0  2001-01-01  http://www.URL1.com
1  2001-01-02  http://www.URL2.com
"
"Trying to manipulate data, assign a list to the first item in a higher list, second item will be information about that list","from collections import defaultdict

worddictlist2 = []
for innertweet in namelist:
    worddict = defaultdict(lambda: 0)
    category = innertweet[1]
    for tweet in innertweet[0]:
        for word in wordlist:
            worddict[word] += tweet.count(word)

    # optional - transform defaultdict into standard dict to make it printable
    worddictClean = {}
    worddictClean.update(worddict)

    worddictlist2.append([worddictClean, category])

print worddictlist2
"
Getting Actual String from Python XML parsing,">>> from xml.etree import ElementTree as ET
>>> root = ET.fromstring('''\
... <root><string>11&gt;2</string></root>''')
>>> root.find('string')
<Element 'string' at 0x103332990>
>>> root.find('string').text
'11>2'
"
"Accept everything until ""more than 1 white space"", using pyparsing","{label: values.asList() for label, values in line.searchString(text)}
"
Split one txt to several txt files with particular name in Python,"from itertools import groupby


with open('data.txt') as f_input:
    for k, g in groupby(f_input, lambda x: x.split()[0].split('.')[1:]):
        entries = list(g)
        with open(entries[0].split()[0], 'w') as f_output:
            for line in entries:
                print line
                f_output.write(line.split(' ', 1)[1].lstrip())
"
multiplying two huge matrices using numpy.dot,"In [64]: multidot()
 0 0
 0 1
 0 2
 1 0
 1 1
 1 2
 2 0
 2 1
 2 2
dot time 4.697121858596802
save time 29.11250686645508
"
How to write output of web scrape to column instead of rows in Beautiful Soup,"with open('/home/kwal0203/Desktop/Apple.csv', 'a') as csvfile:
    writer = csv.writer(csvfile)
    writer.writerow([value.get_text(strip=True).encode(""utf-8"") for value in revenue])
"
Python: no. of occurences of each character in a string,"from collections import defaultdict

def count_chars(s):
    res = defaultdict(int)
    for char in s:
        res[char] += 1
    return res
"
Best way to split strings,"from operator import itemgetter
first_names = map(itemgetter(0), map(str.split, names))
"
Pandas: How to apply a function to different columns,"df[['B','D']].apply(function)
"
System theme icons and PyQt4,"from PyQt4 import QtGui
from gtk import icon_theme_get_default

iconTheme = icon_theme_get_default()
iconInfo = iconTheme.lookup_icon(""*The Icon Name*"", *Int of the icon size*, 0)
icon = QtGui.QIcon(iconInfo.get_filename())
"
Python List of Dictionaries[int : tuple] Sum,"sum(v[1] for d in myList for v in d.itervalues())
"
Decoding JSON with Python and storing nested object,"import pprint
pprint.pprint(jdata)
"
How can a class that inherits from list and uses keyword arguments be made to work in both Python 2 and Python 3?,">>> Palette('#F1E1BD', '#EEBA85', name='palette2')
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
TypeError: __init__() got multiple values for argument 'name'
"
How to loop through specific range of rows with Python csv reader?,"import itertools

i, j = 10, 20
with open(trainFile, 'rt') as csvfile:
    spamreader = csv.reader(itertools.islice(csvfile, i, j+1),
                            delimiter=' ', quotechar='|')
    for row in spamreader:
        print (', '.join(row))
"
Python: creating a variable using retrieved string name,"{'a': ['alpha'], 'b': ['bravo'], ...}
"
Switching from SQLite to MySQL with Flask SQLAlchemy,"app.config['SQLALCHEMY_DATABASE_URI'] = 'mysql+pymysql://username:password@localhost/db_name'
"
Mapping result rows to namedtuple in python sqlite,"import sqlite3
import collections

LanguageRecord = collections.namedtuple('LanguageRecord', 'id name creation_date')
def namedtuple_factory(cursor, row):
    return LanguageRecord(*row)

con = sqlite3.connect("":memory:"")
con.row_factory = namedtuple_factory
cur = con.cursor()
cur.execute(""select 1,2,3"")
print(cur.fetchone())
"
How can I create dictionary within dictionary,"key = (name, id)
"
Python reading X and Y values and assigning to Z specific X Y pairs,"import numpy as np
data = []
N_x_values, N_y_values = 0, 0
with open(file_name, 'r') as in_file:
    # skip 2 lines, grab N_X, grab N_Y
    [in_file.next() for _ in range(2)]
    N_x_values = int(in_file.next().strip())
    N_y_values = int(in_file.next().strip())

    for line in in_file:
        line = line.strip().split(' ')
        data.append(map(float, line))

data = np.array(data)
data = data.reshape(np.prod(data.shape))
x_cutoff = N_x_values
y_cutoff = N_y_values
x = data[:x_cutoff]
y = data[x_cutoff:y_cutoff]
z = data[y_cutoff:].reshape(N_x_values, N_y_values)
"
Scrapy crawled 0 pages,"{'position': u'1.', 'point': u'6', 'team': u'Chievo'}
{'position': u'1.', 'point': u'6', 'team': u'Torino'}
{'position': u'1.', 'point': u'6', 'team': u'Inter'}
{'position': u'1.', 'point': u'6', 'team': u'Sassuolo'}
{'position': u'1.', 'point': u'6', 'team': u'Palermo'}
{'position': u'6.', 'point': u'4', 'team': u'Sampdoria'}
{'position': u'6.', 'point': u'4', 'team': u'Roma'}
{'position': u'8.', 'point': u'3', 'team': u'Atalanta'}
{'position': u'8.', 'point': u'3', 'team': u'Genoa'}
{'position': u'8.', 'point': u'3', 'team': u'Fiorentina'}
{'position': u'8.', 'point': u'3', 'team': u'Udinese'}
{'position': u'8.', 'point': u'3', 'team': u'Milan'}
{'position': u'8.', 'point': u'3', 'team': u'Lazio'}
{'position': u'14.', 'point': u'1', 'team': u'Napoli'}
{'position': u'14.', 'point': u'1', 'team': u'Verona'}
{'position': u'16.', 'point': u'0', 'team': u'Bologna'}
{'position': u'16.', 'point': u'0', 'team': u'Juventus'}
{'position': u'16.', 'point': u'0', 'team': u'Empoli'}
{'position': u'16.', 'point': u'0', 'team': u'Frosinone'}
{'position': u'16.', 'point': u'0', 'team': u'Carpi'}
"
String alignment when printing in python,">>> name = 'Якета'
>>> asterisks = '****************************'
>>> price = 1250.23
>>> print '{0:17}: {1} {2} €'.format(name, asterisks, price)
Якета       : **************************** 1250.23 €
"
Extracting Unique String Combinations from List of List in Python,"combos = set(tuple(sorted(item)) for item in combos)
"
Python faster than D?? IO operations seem to slow D down a lot... what's going on?,"int[string] type_dict;

const TYPE_ARITHMETIC = 0,
    TYPE_MEMORY = 1;

//...
type_dict = [""add"": TYPE_ARITHMETIC, ""push"": TYPE_MEMORY]; // etc
//...

//...
if (type_dict[operation] == TYPE_ARITHMETIC) {
    //...
}
//...
"
How to GET data in Flask from AJAX post,"@app.route('/test/', methods=['GET','POST'])
def test():
      clicked=None
      if request.method == ""POST"":
          clicked=request.json['data']
     return render_template('test.html')
"
Detect int32 overflow using 0xFFFFFFFF masking in Python?,">>> def isOverflow(num, width=32):
    if num > 0 and num > 2**(width-1) -1 :
        return True
    elif num < 0 and abs(num) > 2**(width-1):
        return True
    return False
"
"In Pandas, how to find occurrence of one value from one dataframe in another dataframe?","    Name        Date      Time Drink       Epoch
2  User3  14/09/2015  16:54:00   tea  1442242440
"
Making a dictionary for value in a dictionary in Python,">>> line = ['The', 'cat', 'chased', 'the', 'dog','the','dog']
>>> from collections import Counter
>>> output = {}
>>> for i, item in enumerate(line):
...     print(i, item, len(line))
...     if i != len(line) - 1:
...         output.setdefault(item.lower(),Counter()).update(Counter({line[i+1]:1}))
...
0 The 7
1 cat 7
2 chased 7
3 the 7
4 dog 7
5 the 7
6 dog 7
>>> print(output)
{'dog': Counter({'the': 1}), 'cat': Counter({'chased': 1}), 'chased': Counter({'the': 1}), 'the': Counter({'dog': 2, 'cat': 1})}
"
python loop exception,"with contextlib.closing(output):
    blah blah
"
Output of lxml in Python 2.7,"<lxml.etree._ElementTree object at 0x2db0dd0>
"
Numpy mean AND variance from single function?,"In [329]: a = np.random.rand(1000)

In [330]: %%timeit
   .....: a.mean()
   .....: a.var()
   .....: 
10000 loops, best of 3: 80.6 µs per loop

In [331]: %%timeit
   .....: m = a.mean()
   .....: np.mean((a-m)**2)
   .....: 
10000 loops, best of 3: 60.9 µs per loop

In [332]: m = a.mean()

In [333]: a.var()
Out[333]: 0.078365856465916137

In [334]: np.mean((a-m)**2)
Out[334]: 0.078365856465916137
"
POST request in search query with Scrapy,"# -*- coding: utf-8 -*-
from __future__ import unicode_literals
import scrapy
from scrapy.shell import inspect_response
from scrapy.utils.response import open_in_browser


class Cars(scrapy.Item):
    Make = scrapy.Field()
    Model = scrapy.Field()
    Year = scrapy.Field()
    Entered_Yard = scrapy.Field()
    Section = scrapy.Field()
    Color = scrapy.Field()


class LkqSpider(scrapy.Spider):
    name = ""lkq""
    allowed_domains = [""lkqpickyourpart.com""]
    start_urls = (
        'http://www.lkqpickyourpart.com/DesktopModules/pyp_vehicleInventory/getVehicleInventory.aspx?store=224&page=0&filter=toyota&sp=&cl=&carbuyYardCode=1224&pageSize=1000&language=en-US',
    )

    def parse(self, response):
        section_color = response.xpath(
            '//div[@class=""pypvi_notes""]/p/text()').extract()
        info = response.xpath('//td[""pypvi_make""]/text()').extract()
        for element in range(0, len(info), 4):
            item = Cars()
            item[""Make""] = info[element]
            item[""Model""] = info[element + 1]
            item[""Year""] = info[element + 2]
            item[""Entered_Yard""] = info[element + 3]
            item[""Section""] = section_color.pop(
                0).replace(""Section:"", """").strip()
            item[""Color""] = section_color.pop(0).replace(""Color:"", """").strip()
            yield item

        # open_in_browser(response)
        # inspect_response(response, self)
"
Detect missing multiplication in math expression,"patterns = [r""([0-9])\s*([a-z(])"", # matches '2x', '2 x', or '2 ('
            r""([a-z])\s+([a-z])"",  # matches 'x y', but not 'xy'
            r""([a-z])\s+(\()"",     # matches 'x (', but not 'x('
            r""(\))\s*([0-9a-z(])""] # matches ')x', ')2', ') x', ') (', etc.
"
Finding the Maximum Route in a given input,"route = triangle # This will not work, because in python copy is done by reference
route = triangle[:] #This will also not work, because triangle is a list of list
                    #and individual list would be copied with reference
"
Formal parameter of the form **keyword,"class MyFrame(tk.Frame):
    def __init__(self, *args, **kwargs):
        tk.Frame.__init__(self, *args, **kwargs)
        <more code here>
"
the sum of values of a second column of a file,"with open('data.txt') as inf:
    ysum = 0
    for line in inf:
        line = line.split()
        x, y = [float(i) for i in line]
        ysum += y
        print x, ysum
"
Solving non-linear equations in python,"d = a^2
e = b^2
f = a b cos(c)
g = a b sin(c)
"
Using ctypes to write callbacks that pass-in pointer to pointer parameters to be used as output-parameter,"    def pyfoo(self, char_ptr_ptr):
        char_ptr_ptr[0] = self.response
        return 0
"
Convert a Pandas DataFrame to bin frequencies,"print new.apply(lambda x: x.value_counts())

          Percentile1  Percentile2  Percentile3  Percentile4
(0, 10]             1          NaN          NaN            1
(10, 20]            3            2            2            1
(20, 30]            1            2            1          NaN
(30, 40]          NaN            1            1            1
(60, 70]          NaN          NaN            1            1
(70, 80]          NaN          NaN          NaN            1
"
genfromtxt: how to disable caching,"def genfromtxt(fname, dtype=float, comments='#', delimiter=None,
           skiprows=0, skip_header=0, skip_footer=0, converters=None,
           missing='', missing_values=None, filling_values=None,
           usecols=None, names=None,
           excludelist=None, deletechars=None, replace_space='_',
           autostrip=False, case_sensitive=True, defaultfmt=""f%i"",
           unpack=None, usemask=False, loose=True, invalid_raise=True,cache=True):
"
"Python: How to evaluate a part of each item in a list, and append matching results?","['093T.021/102', '194P.005/015', '094G.016/019/032']
"
Vectorized element assignment involving comparisons between matrices in Numpy,"classifiedmat[samplemat==nodatacode] = nodatacode
"
"Python - sorting a tuple, characters over numbers",">>> def value_to_time(val):
...     if val == 'now':
...         return -11
...     if val.endswith('min'):
...         return -11 + int(val[:-3])
...     hours, minutes = map(int, val.split(':'))
...     return hours * 60 + minutes
... 
>>> sorted(lst, key=value_to_time)
['now', '3min', '9min', '16:21', '16:36', '16:51']
"
Sorting with two digits in string - Python,"def callback(item):
    phrase = item.split('-')
    first = phrase[0].rjust(3, '0')
    second = ''.join(filter(str.isdigit, phrase[1])).rjust(3, '0')
    word = ''.join(filter(str.isalpha, phrase[1]))
    return first + second + word
"
Automating SSH using Python,"with open('host.txt', 'r') as inf:
    lines = inf.readlines()
    hostlist = [ln.split() for ln in lines]
"
Divide option in django model query,"{{ daily_obj.total_crores }}
"
What is the pythonic way to read CSV file data as rows of namedtuples?,"Data = namedtuple(""Data"", next(reader))
"
tkinter python maximize window,"def resize(event):
    print(""New size is: {}x{}"".format(event.width, event.height))

root.bind(""<Configure>"", resize)
"
How to render and return plot to view in flask?,"#Add this imports
import StringIO
import base64

@devices_blueprint.route('/devices/test/')
def test():

    img = StringIO.StringIO()
    y = [1,2,3,4,5]
    x = [0,2,1,3,4]

    plt.plot(x,y)
    plt.savefig(img, format='png')
    img.seek(0)

    plot_url = base64.b64encode(img.getvalue())

    return render_template('test.html', plot_url=plot_url)
"
Best and/or fastest way to create lists in python,">>> from timeit import timeit
>>>
>>> # Test 1
>>> test = """"""
... my_list = []
... for i in xrange(50):
...     my_list.append(0)
... """"""
>>> timeit(test)
22.384258893239178
>>>
>>> # Test 2
>>> test = """"""
... my_list = []
... for i in xrange(50):
...     my_list += [0]
... """"""
>>> timeit(test)
34.494779364416445
>>>
>>> # Test 3
>>> test = ""my_list = [0 for i in xrange(50)]""
>>> timeit(test)
9.490926919482774
>>>
>>> # Test 4
>>> test = ""my_list = [0] * 50""
>>> timeit(test)
1.5340533503559755
>>>
"
Boolean expression with strings,">>> s='ABABABABABABABABABABABABABABABABABAB'
>>> s.split('AB')
['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '']
>>> s.split('ABA')
['', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B']
>>> s.split('ABAB')
['', '', '', '', '', '', '', '', '', '']
"
pexpect: Retrieve log from command run over ssh tunnel,"sshChild.sendline(cmdrun + '\r')
"
"Python equivalent to ""find -type f""","os.path.relpath(fname, '/path/to/directory')
"
NLTK count frequency of sub phrase,">>> string = ""I see a tall tree outside. A man is under the tall tree""
>>> string.count(""tall tree"")
2
>>> string = ""The see a stall tree outside. A man is under the tall trees""
>>> string.count(""tall tree"")
2
>>> string = ""I would like to install treehouses at my yard""
>>> string.count(""tall tree"")
1
"
Pandas create column containing a row count,"df = df.merge(counts, left_on=['full_name'], right_index=True)
"
Python: updating a large dictionary using another large dictionary,"for k_d1 in d1:
    if k_d1 in b1:
        d1[k_d1] = b1[k_d1]
"
Filtering objects matching a given logical formula,"from pyparsing import *

expr   = Forward()
factor = Forward()
term   = Forward()

iand   = Literal(""AND"").suppress()
ior    = Literal(""OR"").suppress()
ieq    = Literal(""="").suppress()
lpar   = Literal(""("").suppress()
rpar   = Literal("")"").suppress()
ident  = Word(alphas)
atom   = ident | lpar + expr + rpar

factor << Group(atom + ZeroOrMore(ieq + atom))(""equal"")
term   << Group(factor + ZeroOrMore(iand + term))(""and"")
expr   << Group(term  + ZeroOrMore(ior + expr))(""or"")
"
Calling a python script which has input Fields,"from subprocess import check_output

out  = check_output([""python"", ""2ndpythonscript.py"" ,""input_variable"" ,""output_variable""])
"
Android turn 3 sequence byte[] to int[],"+ 0xFF << 24
"
Convert column elements to column name in panda (part II)," df = pd.read_csv('prices.csv', header=None, names=['time', 'stock', 'type',   'prices'], 
                  index_col=['time', 'stock', 'type'])

In [1062]:

df
Out[1062]:
                    prices
time    stock   type    
time1   stockA  bid 1.0
time2   stockA  ask 1.1
time3   stockB  ask 2.1
time4   stockB  bid 2.0
time5   stockA  bid 1.1
time6   stockA  ask 1.2
time7   stockA  high1.5
time8   stockA  low 0.5
"
Reset a columns MultiIndex levels,"import pandas as pd

cols = pd.MultiIndex.from_arrays([['basic_amt']*4,
                                     ['NSW','QLD','VIC','All']], 
                                     names = [None, 'Faculty'])
idx = pd.Index(['All', 'Full Time', 'Part Time'])

df = pd.DataFrame([(1,1,2,4),
                   (0,1,0,1),
                   (1,0,2,3)], index = idx, columns=cols)

print (df)
          basic_amt            
Faculty         NSW QLD VIC All
All               1   1   2   4
Full Time         0   1   0   1
Part Time         1   0   2   3

df.columns = df.columns.droplevel(0)
#pandas 0.18.0 and higher
df = df.rename_axis(None, axis=1)
#pandas bellow 0.18.0
#df.columns.name = None

print (df)
           NSW  QLD  VIC  All
All          1    1    2    4
Full Time    0    1    0    1
Part Time    1    0    2    3

print (df.columns)
Index(['NSW', 'QLD', 'VIC', 'All'], dtype='object')
"
How to Get the Path of the executing frozen script,"import sys

if hasattr(sys, 'frozen'):
    print(sys.executable)
else:
    print(sys.argv[0])
"
"how do I pass a var including the quotes("""")",">>> var = ""735531 12345""
>>> '""%s""' % var
'""735531 12345""'
>>> print '""%s""' % var
""735531 12345""
>>>
"
Simple Python Program - unsure with While loop,"for NoOfGamesPlayed in range(NoOfGamesInMatch):
    while NoOfGamesInMatch!=NoOfGamesPlayed:
        PlayerOneWinsGame=(input('Did Player One win the game (enter Y or N)?'))    

        # Keep the if/else inside the while loop
        if PlayerOneWinsGame=='Y':
            PlayerOneScore = PlayerOneScore + 1
        else:
            PlayerTwoScore = PlayerTwoScore + 1
"
Python - permutation and percentage,">>> a = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

>>> for row in a:
...     print list(itertools.product(row, row))

[(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3), (3, 1), (3, 2), (3, 3)]
[(4, 4), (4, 5), (4, 6), (5, 4), (5, 5), (5, 6), (6, 4), (6, 5), (6, 6)]
[(7, 7), (7, 8), (7, 9), (8, 7), (8, 8), (8, 9), (9, 7), (9, 8), (9, 9)]
"
How can I replace Unicode characters with Turkish characters in a text file with Python,"import json
inp = open('input.txt', 'r')
out = open('output.txt', 'w')
for line in inp:
    if not line.strip():
        out.write(line)
        continue
    in_as_obj = json.loads(line)
    json.dump(in_as_obj, out, ensure_ascii=False)
    out.write('\n')
"
create a list from a functions output?,"vals = list(x['custtypeA_nondp'] for x in s)
"
Scrapy and Xpath to extract data from javascript code,"pattern = r'SKART\.analytics\[""category""\] = ""(\w+)"";'
response.xpath('//script[@type=""text/javascript+gk-onload""]').re(pattern)
"
How do I create an auto updateing sqlite table?,"create table series_a (
  season_num,         
  i_have_season, 
  episodes, 
  episodes_i_have
);

create table series_b (
  season_num,         
  i_have_season, 
  episodes, 
  episodes_i_have
);
"
IronPython as Scripting language to C# WPF VS 2015,"public void ExecuteInUI(object obj)
{
    this.Dispatcher.BeginInvoke((Action)(() =>
    {
        var op = engine.CreateOperations(scope);
        op.Invoke(obj);
    }));
}
"
How to make FileField in django optional?,"class amodel(models.Model):
    file = models.FileField(blank=True, null=True)
"
Implementing an optional logger in code,"class DummyObject():
    def __init__(self):
        pass
    def __getattr__(self, name):
        return (lambda *x: None)

logger = logger or DummyObject()
"
List of all available matplotlib backends,"matplotlib.rcsetup.validate_backend(name)
"
Convert a python 'type' object to a string,"print type(someObject).__name__
"
How do I sort objects inside of objects in JSON? (using Python 2.7),"from collections import OrderedDict
data = OrderedDict(zip(('first', 'second', 'last'), (1, 10, 3)))
print json.dumps(dict(data)) # {""second"": 10, ""last"": 3, ""first"": 1}
print json.dumps(data) # {""first"": 1, ""second"": 10, ""last"": 3}
"
Python dealing with dates and times,"def filetimestamp(fullname):
    return os.stat(fullname).st_ctime
"
How to read text from a website in Python,"<div> some stuff
<table>
<tr>
<td> banana </td>
</tr>
<table>
some more stuff
</div>
"
Populating dictionary from text file PYTHON,"import csv
from itertools import islice
with open('file.txt', 'r') as f:
    next(f) # skip header
    r = csv.reader(f, delimiter="" "")
    out = []
    for row in iter(lambda: list(islice(r, 4)),[]):
        out.append(dict((int(r[0]), map(int,r[1:])) for r in row ))
"
Can a string ever get shorter when converted to upper/lowercase?,">>> import sys
>>> unicode_chars = list(map(chr, range(sys.maxunicode+1)))
>>> [x for x in unicode_chars if len(x.lower()) == 0]
[]
"
All possible combinations of card/poker hands for a set of players,"['1:a 1:c 2:b 2:d',
 '1:a 1:b 2:c 2:d',
 '1:a 1:d 2:c 2:b',
 '1:c 1:b 2:a 2:d',
 '1:c 1:d 2:a 2:b',
 '1:b 1:d 2:a 2:c']
"
Using multiple (similar) generator expressions,"replacements = [
    ('abc', 'x'),
    ('def', 'y'),
    ('ghi', 'z'),
]

trans = str.maketrans({ k: v for l, v in replacements for k in l })
"
How would I make a simple URL extracter in Python?,"import urllib2
from BeautifulSoup import BeautifulSoup

q = urllib2.urlopen('http://stackoverflow.com/questions/3884419/')
soup = BeautifulSoup(q.read())

for link in soup.findAll('a'):
    if link.has_key('href'):
        print str(link.string) + "" -> "" + link['href']
    elif link.has_key('id'):
        print ""ID: "" + link['id']
    else:
        print ""???""
"
MySQL table to Python list of lists using fetchall(),"SELECT GROUP_CONCAT(ITEM_CODE) 
FROM table1
GROUP BY ID 
ORDER BY ID;
"
"How do i make it say: ""Write will create (random number goes here) random numbers","from random import randint

number = randint(0, 9)
print(""Write will create %d random numbers"" % number)
"
Adding data to related table with SQLAlchemy,"association_table = db.Table('association',
    db.Column('user_id', db.Integer, db.ForeignKey('user.id')),
    db.Column('friend_id', db.Integer, db.ForeignKey('user.id'))
)
class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(20), unique=True)
    password = db.Column(db.String(30))
    email = db.Column(db.String(45), unique=True)
    friends = db.relationship(""User"",
                secondary=association_table,
                backref='added_by',
                primaryjoin=id == association_table.c.user_id,
                secondaryjoin=id == association_table.c.friend_id)
"
generating a file with django to download with javascript/jQuery,"url(r'^test/getFile', 'getFile')
"
set the value of a django HiddenInput widget to another object's id rendered in the template,"url(r'post/(?P<post_id>\d+)/comment/$', views.comment, name=""comment"")
"
Changing the bases of an object based on arguments to __init__,">>> C(1)
<__main__.C_1 object at 0x00000000030231D0>
>>> C(2)
<__main__.C_2 object at 0x00000000037101D0>
>>> C(1).print_num()
1
>>> C(2).print_num()
2
>>> type(C(1)) == type(C(2))
False
>>> type(C(1)) == type(C(1))
True
>>> isinstance(C(1), type(B(1)))
True
"
Python: interrupt execution with key and run again,"while True:
    self.check_pause()
    if self.pause:
        continue
    # Main loop of program goes here.
"
How can I get the proper capitalization for a path?,">>> from pathlib import Path
>>> Path(r'c:\python34\lib').resolve()
WindowsPath('C:/Python34/Lib')
>>> str(Path(r'c:\python34\lib').resolve())
'C:\\Python34\\Lib'
>>>
"
how to calculate ratio on some condition in pandas dataframe,"dict((k, n / float(len(unique_items))) \
    for (k, n) in zip(unique_items, num_appearances))
"
Replace part of a matched string in python,"line = ""TROGA_""+line.split(""_"", 1)[1]
"
Numpy array filled with random numbers so that you only change the value by one along the x/y axis,"import numpy as np

H, W = 5, 5
x = np.add.accumulate(np.random.randint(-1, 2, size=(H,1)), axis=0)
y = np.add.accumulate(np.random.randint(-1, 2, size=(1,W)), axis=1)
out = x + y
print(out)
"
Why would Python's variable length arguments be used over passing in a list/dictionary?,"print([""please print my variable"", x, "" and another:"", y])
print([x])
"
Django: templates and iterate over dict,"{{some_dict.0.iter1}}<br>{% endfor %}
"
extract info from a string,"[u'07-08-2014 15:50', u'Andhra Pradesh', u'Unitech', u'0']
"
Grouping data by value ranges,"        Red  Amber  Yellow  White
ID                               
STRSUB   56     60      74     40
BOTDWG   20     67      87     34
"
Merge multiple dataframes with non-unique indices,"In [23]: s0.groupby(level=0).cumcount()
Out[23]:
0    0
0    1
1    0
dtype: int64
"
Can my use of paste0() in R be corrected so that this function runs as fast as the original Python example?,"> library(microbenchmark)
> microbenchmark(paste0(""a"", ""b""), times=1e6)
Unit: nanoseconds
             expr min   lq median   uq      max neval
 paste0(""a"", ""b"") 951 1071   1162 1293 21794972 1e+06
"
Tuple type content python,">>> data = ('ab', [1, 2, 3], 101)
>>> map(type, data)
[<type 'str'>, <type 'list'>, <type 'int'>]
"
Testing all combinations in Python,"def combinations(list1, list2):
    return ([opt1, opt2, opt3]
            for i,opt1 in enumerate(list1)
            for opt2 in list1[i+1:]
            for opt3 in list2)
"
Middle value using python 3,"def input(a, b, c) :
    m = min(a,b,c)
    M = max(a,b,c)
    return a+b+c-m-M
"
Creating dynamic variables for a class from within the class,"pants = []
pants.append(Leather_Pants(NPC))
pants.append(Leather_Pants(chests[5]))
pants[1].pickup(PC)
"
What is Go's equivalent to Python's crypt.crypt?,">>> from crypt import crypt
>>> crypt(""abcdefg"",""aa"")
'aaTcvO819w3js'
>>> 
"
Get attribute of object from relationship in sqlalchemy,"@property
def Teacher(self):
    return self.Class.Teacher
"
How can I get the difference between the conditional sum of values from 2 dataframes?,"joined = df1.groupby(['cnpj','num_doc']).sum() \
            .join(df2.groupby(['cnpj','num_doc']).sum()) \
            .fillna(0)
"
(Python + pygame) collision detection with rects,"import pygame
import random

red = [255,0,0]
green = [0,255,0]
blue = [0,0,255]
white = [255,255,255]
black = [0,0,0]
UP = [0,-1]
DOWN = [0,1]
LEFT = [-1,0]
RIGHT = [1,0]
NOTMOVING = [0,0]
#constants end
#classes
class collidable:
    x = 0
    y = 0
    w = 0
    h = 0
    rect = pygame.Rect(x,y,w,h)
    color = [0,0,0]
    def __init__(self,x,y,w,h,color):
        self.x = x
        self.y = y
        self.w = w
        self.h = h
        self.color = color
        self.rect = pygame.Rect(x,y,w,h)
    def draw(self):
        pygame.draw.rect(screen,self.color,[self.x,self.y,self.w,self.h],6)

class player:
    x = 0
    y = 0
    speed = 0
    rect = pygame.Rect(x,y,20,20)
    def __init__(self,x,y,speed):
        self.x = x
        self.y = y
        self.speed = speed
        self.rect = pygame.Rect(self.x,self.y,20,20)
    def draw(self):
        if player_moving==LEFT:
                pygame.draw.polygon(screen,black,[(self.x-10,self.y),(self.x+10,self.y-10),(self.x+10,self.y+10)])
        elif player_moving==RIGHT:
            pygame.draw.polygon(screen,black,[(self.x+10,self.y),(self.x-10,self.y-10),(self.x-10,self.y+10)])
        elif player_moving==UP:
            pygame.draw.polygon(screen,black,[(self.x,self.y-10),(self.x+10,self.y+10),(self.x-10,self.y+10)])
        elif player_moving==DOWN:
            pygame.draw.polygon(screen,black,[(self.x,self.y+10),(self.x+10,self.y-10),(self.x-10,self.y-10)])
        else:
            pygame.draw.rect(screen,black,pygame.Rect(self.x-10,self.y-10,20,20),6)
    def setpos(self,x,y):
        self.x = x
        self.y = y
    def move(self,direction):
        self.x = self.x + direction[0]*self.speed
        self.y = self.y + direction[1]*self.speed
        self.rect = pygame.Rect(self.x,self.y,20,20)
#classes end

#globals
pygame.init()
screenSize = [800,600]
screenBGColor = white
screen=pygame.display.set_mode(screenSize)
pygame.display.set_caption(""Move the Block"")
player = player(screenSize[0]/2,screenSize[1]/2,9)
collidables = []
clock=pygame.time.Clock()
for i in range(10):
    collidables.append(collidable(random.randrange(0,screenSize[0]),random.randrange(0,screenSize[1]),random.randrange(10,200),random.randrange(10,200),blue))

running = True
#globals end
player_moving = NOTMOVING
#functions
def render():
    screen.fill(screenBGColor)
    clock.tick(60)
    player.draw()
    for c in collidables:
        c.draw()
    pygame.display.flip()
def tick(player_moving):                                           #----------------HERE
    for c in collidables:
        if player.rect.colliderect(c.rect):
            player_moving = NOTMOVING
            print(""hit""+str(c.rect)+"" with ""+str(player.rect))
    player.move(player_moving)

#functions end

#main loop
while running==True:
    for event in pygame.event.get():
        if event.type==pygame.QUIT:
            running = False
        if event.type==pygame.KEYDOWN:
            if event.key==pygame.K_LEFT:
                player_moving = LEFT
            if event.key==pygame.K_RIGHT:
                player_moving = RIGHT
            if event.key==pygame.K_UP:
                player_moving = UP
            if event.key==pygame.K_DOWN:
                player_moving = DOWN
        else:
            player_moving = NOTMOVING
    tick(player_moving)
    render()
#main loop end

pygame.quit()
"
What is the practical difference between these two ways of making web connections in Python?,"import urllib3, certifi
http = urllib3.PoolManager(ca_certs=certifi.where())
html = http.request('GET', url).read()
soup = BeautifulSoup(html, ""html5lib"")
"
How to handle dynamic decorators in python easily?,"from main import socketio

@socketio.on('connect', namespace='/namespaceOne')
def test_connectOne():
    print('new connection')

@socketio.on('connect', namespace='/namespaceTwo')
def test_connectTwo():
    print('new connection')
"
Python Regex Match Integer After String,"#!/usr/bin/env python
import re

subject = '{""page"":1,""results"": [{""adult"":false,""backdrop_path"":""/ba4CpvnaxvAgff2jHiaqJrVpZJ5.jpg"",""id"":807,""original_title"":""Se7en"",""release_date"":""1995-09-22"",""p'

match = re.search('""id"":([^,]+)', subject)
if match:
    result = match.group(1)
else:
    result = ""no result""
print result    
"
Use regex to parse parameter line with whitespace in parameters but without quotes,">>> re.split(r'(\w+=)',s)
['', 'name=', 'This is tricky ', 'pos=', '81 ', 'key=', '4565 ', 'count=', '1 ', 'pass=', 'a_23 ', 'find=', '2']
"
Nested Regular Expression in Python for,"r1 = re.compile(r'SO ON')
r2 = re.compile(r'WHATEVER AND (%s)*' % r1.pattern)
"
merge to dictionaries preserving different values,"output = {}
for key in d1.keys():
    output[key] = {}
    lst = d1[key]
    for name, count in (lst[i:i+2] for i in range(0, len(lst), 2)):
        output[key][name] = (int(count),)
for key in d2.keys():
    if key not in output:
        output[key] = {}
    lst = d2[key]
    for name, count in (lst[i:i+2] for i in range(0, len(lst), 2)):
        if name in output[key].keys():
            output[key][name] += (int(count),)
        else:
            output[key][name] = (int(count),) 
"
List conversion/transformation,"data = [('h', 'e', 'l', 'l', 'o'), ('w', 'o', 'r', 'd')]
"
How to add column to numpy array,"x = np.random.random(10)
y = np.random.random(10)
z = np.random.random(10)
data = np.array( zip(x,y,z), dtype=[('x',float),('y',float),('z',float)])
data = np.recarray(data.shape, data.dtype, buf=data)
data.shape
#(10,)
tot = data['x'] + data['y'] + data['z'] # sum(axis=1) won't work on recarray
tot.shape
#(10,)
all_data = append_fields(data, 'total', tot, usemask=False)
all_data
#array([(0.4374783740738456 , 0.04307289878861764, 0.021176067323686598, 0.5017273401861498),
#       (0.07622262416466963, 0.3962146058689695 , 0.27912715826653534 , 0.7515643883001745),
#       (0.30878532523061153, 0.8553768789387086 , 0.9577415585116588  , 2.121903762680979 ),
#       (0.5288343561208022 , 0.17048864443625933, 0.07915689716226904 , 0.7784798977193306),
#       (0.8804269791375121 , 0.45517504750917714, 0.1601389248542675  , 1.4957409515009568),
#       (0.9556552723429782 , 0.8884504475901043 , 0.6412854758843308  , 2.4853911958174133),
#       (0.0227638618687922 , 0.9295332854783015 , 0.3234597575660103  , 1.275756904913104 ),
#       (0.684075052174589  , 0.6654774682866273 , 0.5246593820025259  , 1.8742119024637423),
#       (0.9841793718333871 , 0.5813955915551511 , 0.39577520705133684 , 1.961350170439875 ),
#       (0.9889343795296571 , 0.22830104497714432, 0.20011292764078448 , 1.4173483521475858)], 
#      dtype=[('x', '<f8'), ('y', '<f8'), ('z', '<f8'), ('total', '<f8')])
all_data.shape
#(10,)
all_data.dtype.names
#('x', 'y', 'z', 'total')
"
How to clear terminal (Mac osx) scrollback?,">>> print '\033c',
"
Creating and accessing list of lists in python,">>> for inputs,outputs in testcases:
...     print '%r, %r' % (inputs, outputs)

([0.5, 0.4, 0.3], 'HHTH'), [0.4166666666666667, 0.432, 0.42183098591549295, 0.43639398998330553]
([0.14, 0.32, 0.42, 0.81, 0.21], 'HHHTTTHHH'), [0.5255789473684211, 0.6512136991788505, 0.7295055220497553, 0.6187139453483192, 0.4823974597714815, 0.3895729901052968, 0.46081730193074644, 0.5444108434105802, 0.6297110187222278]
([0.14, 0.32, 0.42, 0.81, 0.21], 'TTTHHHHHH'), [0.2907741935483871, 0.25157009005730924, 0.23136284577678012, 0.2766575695593804, 0.3296000585271367, 0.38957299010529806, 0.4608173019307465, 0.5444108434105804, 0.6297110187222278]
([0.12, 0.45, 0.23, 0.99, 0.35, 0.36], 'THHTHTTH'), [0.28514285714285714, 0.3378256513026052, 0.380956725493104, 0.3518717367468537, 0.37500429586037076, 0.36528605387582497, 0.3555106542906013, 0.37479179323540324]
([0.03, 0.32, 0.59, 0.53, 0.55, 0.42, 0.65], 'HHTHTTHTHHT'), [0.528705501618123, 0.5522060353798126, 0.5337142767315369, 0.5521920592821695, 0.5348391689038525, 0.5152373451083692, 0.535385450497415, 0.5168208803156963, 0.5357708613431963, 0.5510509656933194, 0.536055356823069]
"
"Read info from hyperlink located remotely (know that by hyperlink it will be csv file, but can't find general approach)","import requests
line_cnt=0
r = requests.get('http://127.0.0.1/some_path/small.csv',stream=True)
for i in r.iter_lines():
    if i.strip():
        line_cnt +=1
print (line_cnt)
"
Python multiprocessing: call module with multiprocessing from another script with passing variable,"from multiprocessing import Pool

def f(x):
    return x*x
def func(num):
    pool = Pool(processes=4)
    result = pool.apply_async(f, [10])
    print result.get(timeout=1) 
    print pool.map(f, range(num))

if __name__ == '__main__':
    func(1000)
"
Python3 convert Julian date to standard date,">>> date = datetime.date(2016, 8, 21)
>>> date.strftime('%d/%m/%Y')
'21/08/2016'
"
If without else - Python lists,"@list = (1, 0 ? 2 : (), 3)
"
iterating over a list by a certain number,"for id, status, ip_address, name in zip(*[iter(data)]*4):
    # do something
"
How to get the name of lists for comparison purposes,"def list_processor(some_list=None, type_of_list=1):
    if type_of_list == 1:
        # do stuff with some_list as if it was list1
    if type_of_list == 2:
        # do stuff with some_list as if it was list2
"
loading issue of subpackages in astropy 0.3 in ubuntu 14.04,"sudo apt-get install python3-astropy
"
Structuring .csv in Python,"latitude 1 2
1 10 20
2 30 40
3 50 60
"
Search a list containing class objects and remove the class object that matches an instance variable of class object,"def remove_employee(self, employee_id):
    for employee in self._employees:
        if employee.get_employee_id() == employee_id:
            self._employees.remove(employee)
"
get javascript selector of WebElement,"# select the element in python
form1 = driver.find_element_by_id('id_of_the_form')

# execute javascript which references the object
execute_script(""$(arguments[0]).find('input.childOfInterest').val('newValue')"", form1)
"
Running python scripts within a subpackage of my package,"$ nosetests
.
----------------------------------------------------------------------
Ran 1 test in 0.003s

OK
"
"How can we join two columns of a numpy array into a single column, separating the values by a space?",">>> from pandas import DataFrame
>>> df = DataFrame({""first"": [""John"", ""Jane""], ""last"": [""Smith"", ""Jones""]})
>>> df
  first   last
0  John  Smith
1  Jane  Jones
>>> df[""first""] + "" "" + df[""last""]
0    John Smith
1    Jane Jones
"
Python Count number of records within a given date range,"2012-07-01  2
2012-07-03  4
…
"
Detect if image has border using PIL,"border_threshold_R = 4
border_threshold_G = 4
border_threshold_B = 4

mid_pixels = []
top_border_height = 0
bottom_border_height = 0
"
cmap to rgba in Matplotlib,"array([[ 0.        ,  0.7372549 ,  0.63137255,  1.        ],
       [ 0.        ,  0.7372549 ,  0.63137255,  1.        ],
       [ 0.        ,  0.4745098 ,  0.7627451 ,  1.        ],
       [ 0.        ,  1.        ,  0.5       ,  1.        ],
       [ 0.        ,  0.36078431,  0.81960784,  1.        ],
       [ 0.        ,  0.47843137,  0.76078431,  1.        ],
       [ 0.        ,  0.        ,  1.        ,  1.        ],
       [ 0.        ,  0.48627451,  0.75686275,  1.        ]])
"
Python for-loop look-ahead,"from itertools import tee, islice, izip_longest
def get_next(some_iterable, window=1):
    items, nexts = tee(some_iterable, 2)
    nexts = islice(nexts, window, None)
    return izip_longest(items, nexts)
"
pandas comparing data frame slices,"pd.merge(df_A,df_B)
  bidders  other_col1  other_col2   time  other_col3
0  'abcd'           2           3  23456          67
1  'abcd'           2           3  23456          43
"
Python: Find in list,"next(x for x in lst if ...)
"
Sending a POST request with Angularjs and get parameters in a Flask backend,"def view_of_test():
    post = request.get_json()
    param = post.get('param_name')
"
Mapping a 'fake' object in SQLAlchemy,"class ViewAB(object):
    pass

sqlalchemy.orm.mapper(ViewAB, ab_view_sel)
"
How do I use a MySQLdb connect object on imported function,"class DB():
    def __init__(self,database_name):
        db = MySQLdb.connect('localhost', 'user', 'pswrd', database_name)
        self.cur = db.cursor()


    def lookup_value(self,user_name):
        query = ""SELECT COUNT(*) FROM x_user_%s""
        self.cur.execute(query, (user_name,))
        self.result = self.cur.fetchone()
        return self.result
"
Filter non-existing GenericForeignKey objects in Django queryset,"broken_items = []
for ct in ContentType.objects.all():        
    broken_items.extend(
        Generic.objects
        .filter(content_type=ct)
        .exclude(pk__in=ct.model_class.objects.all())
        .values_list('pk', flat=True))
"
filter items by value in dict,"filter_cards(deck, ['lvl'=23, 'items'=['sword','mace'])
"
Date list in text,"import linecache

w = 'Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'
l = linecache.getline(""Aberdeen2005.txt"",5)
m = [d in l for d in w]
c = '2005','2016' # years (optional)

if any(y in l for y in c): # check for years (optional)

    if any(x in l for x in w):
        r = [i for i,v in enumerate(m,0) if v]
        l = l.replace(' '+w[r[0]],'')

    with open(""dates.txt"", ""a"") as article_dates:
        article_dates.write(l)

linecache.clearcache()
"
Finding a minimal subarray of n integers of sum >= k in linear time,"for end in 0..N-1
   for start in 0..end
      check the segment from start to end
"
Dataproc Pyspark job only running on one node,"rddData = rddData.repartition(200)
"
"Read hierarchical (tree-like) XML into a pandas dataframe, preserving hierarchy","key: 12345
group:
                                 status priority streetLength direction
messageId streetName   linkId                                          
12345     NaN          NaN       Active      Low          NaN       NaN
          King Street  NaN          NaN      NaN        Short       NaN
          NaN          75838745     NaN      NaN          NaN     North
                       168745       NaN      NaN          NaN     South
                       975416       NaN      NaN          NaN     North
          Queen Street NaN          NaN      NaN         Long       NaN
          NaN          366248       NaN      NaN          NaN      West
                       745812       NaN      NaN          NaN      East


key: 54321
group:
                                     status priority streetLength direction
messageId streetName      linkId                                           
54321     NaN             NaN      Inactive     High          NaN       NaN
          Princess Street NaN           NaN      NaN          Mid       NaN
          NaN             744154        NaN      NaN          NaN      West
                          632214        NaN      NaN          NaN     South
                          654785        NaN      NaN          NaN      East
          Prince Street   NaN           NaN      NaN    Very Long       NaN
          NaN             1022444       NaN      NaN          NaN     North
                          4474558       NaN      NaN          NaN     South
"
Plot large data in the specified format using python,"import matplotlib.pyplot as plt
import csv
"
"Login via the browser to facebook and google without using their APIs, using Python","Log-In Facebook / Option #1 - Socket:
import urllib2,cookielib

def TryToLoginFB(username,password):
    opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cookielib.CookieJar()))
    url1 = ""https://login.facebook.com""
    url2 = ""https://login.facebook.com/login.php?login_attempt=1""
    data = ""&email=""+username+""&pass=""+password
    socket = opener.open(url1)
    socket = opener.open(url2,data)
    return socket

socket = TryToLoginFB(""not_gonna_tell_you@gmail.com"",""my_password"")

if ""logout"" in socket.read():
    print ""OK""
else:
    print ""Error""

# or use 'socket' in order to do whatever you wanna do at this point...
"
How to generate a permutation of list of lists in python,"for comb in itertools.combinations(lists, n):
    print(comb)
"
How to escape special regex characters in a string?,">>> p in 'blablafoo+*bar123'
True
>>> 'foo+*bar foo+*bar'.count(p)
2
"
Translate argparse's internal strings,"~/Desktop> find . -name *mo
./foo/LC_MESSAGES/messages.mo
~/Desktop> cat myargparse2.py
import argparse
import gettext
gettext.bindtextdomain(gettext.textdomain(), '.')
p = argparse.ArgumentParser(description='Foo')
p.add_argument('foo', type=str)
print p.parse_args()
~/Desktop> LANGUAGE=foo python myargparse2.py
foobar: myargparse2.py [-h] foo
myargparse2.py: error: too few arguments
"
bcrypt in python,"#!/usr/bin/env python
import hashlib
import random

password = str(random.getrandbits(8000))
salt = str(random.getrandbits(256))
print hashlib.sha512(password + salt).hexdigest()
"
Python - Calculate average for every column in a csv file,"def average_column (csv):
    f = open(csv,""r"")
    average = 0
    Sum = 0
    row_count = 0
    for row in f:
        for column in row.split(','):
            n=float(column)
            Sum += n
        row_count += 1
    average = Sum / len(column)
    f.close()
    return 'The average is:', average
"
Check if element is already in a Queue,"if x not in my_queue:
    my_queue.put(x)
"
How to auto-discover a lagging of time-series data in scikit-learn and classify using time-series data,"
|>>> aFeatureImportancesMAP_v4( loc_PREDICTOR, X_v412 )

 ID.|LDF( fI ) | GDF|HUMAN_READABLE_FEATURE_NAME[COL] min()     | MAX()    | var()
 ___|__________|____|___________________________[___]___________|__________|____________
    |          |    |                           [   ]           |          |
  0. 0.4360231 | 43%| __________xxxxxxxxxxxxxCE [216] min:  ... | MAX: ... | var():  ...
  1. 0.0464851 | 48%| __________xxxxxxxxxxxxx_0 [215] min:  ... | MAX: ... | var():  ...
  2. 0.0104704 | 49%| __________xxxxxxxxxxxxx_1 [251] min:  ... | MAX: ... | var():  ...
  3. 0.0061596 | 49%| __________xxxxxxxxxxxxx_3 [206] min:  ... | MAX: ... | var():  ...
  4. 0.0055069 | 50%| __________xxxxxxxxxxxxx_2 [203] min:  ... | MAX: ... | var():  ...
  5. 0.0053235 | 50%| __________xxxxxxxxxxxxx_3 [212] min:  ... | MAX: ... | var():  ...
  6. 0.0050404 | 51%| ________f_xxxxxxxxxxxxx_7 [261] min:  ... | MAX: ... | var():  ...
  7. 0.0049998 | 52%| ________f_xxxxxxxxxxxxx_7 [253] min:  ... | MAX: ... | var():  ...
  8. 0.0048721 | 52%| __________xxxxxxxxxxxxx_4 [113] min:  ... | MAX: ... | var():  ...
  9. 0.0047981 | 52%| __________xxxxxxxxxxxxx_4 [141] min:  ... | MAX: ... | var():  ...
 10. 0.0043784 | 53%| __________xxxxxxxxxxxxx_3 [142] min:  ... | MAX: ... | var():  ...
 11. 0.0043257 | 53%| __________xxxxxxxxxxxxx_4 [129] min:  ... | MAX: ... | var():  ...
 12. 0.0042124 | 54%| __________xxxxxxxxxxxxx_1 [144] min:  ... | MAX: ... | var():  ...
 13. 0.0041864 | 54%| ________f_xxxxxxxxxxxxx_8 [260] min:  ... | MAX: ... | var():  ...
 14. 0.0039645 | 55%| __________xxxxxxxxxxxxx_1 [140] min:  ... | MAX: ... | var():  ...
 15. 0.0037486 | 55%| ________f_xxxxxxxxxxxxx_8 [252] min:  ... | MAX: ... | var():  ...
 16. 0.0036820 | 55%| ________f_xxxxxxxxxxxxx_8 [268] min:  ... | MAX: ... | var():  ...
 17. 0.0036384 | 56%| __________xxxxxxxxxxxxx_1 [108] min:  ... | MAX: ... | var():  ...
 18. 0.0036112 | 56%| __________xxxxxxxxxxxxx_2 [207] min:  ... | MAX: ... | var():  ...
 19. 0.0035978 | 56%| __________xxxxxxxxxxxxx_1 [132] min:  ... | MAX: ... | var():  ...
 20. 0.0035812 | 57%| __________xxxxxxxxxxxxx_4 [248] min:  ... | MAX: ... | var():  ...
 21. 0.0035558 | 57%| __________xxxxxxxxxxxxx_3 [130] min:  ... | MAX: ... | var():  ...
 22. 0.0035105 | 57%| _______f_Kxxxxxxxxxxxxx_1 [283] min:  ... | MAX: ... | var():  ...
 23. 0.0034851 | 58%| __________xxxxxxxxxxxxx_4 [161] min:  ... | MAX: ... | var():  ...
 24. 0.0034352 | 58%| __________xxxxxxxxxxxxx_2 [250] min:  ... | MAX: ... | var():  ...
 25. 0.0034146 | 59%| __________xxxxxxxxxxxxx_2 [199] min:  ... | MAX: ... | var():  ...
 26. 0.0033744 | 59%| __________xxxxxxxxxxxxx_1 [ 86] min:  ... | MAX: ... | var():  ...
 27. 0.0033624 | 59%| __________xxxxxxxxxxxxx_3 [202] min:  ... | MAX: ... | var():  ...
 28. 0.0032876 | 60%| __________xxxxxxxxxxxxx_4 [169] min:  ... | MAX: ... | var():  ...
 ...
 62. 0.0027483 | 70%| __________xxxxxxxxxxxxx_8 [117] min:  ... | MAX: ... | var():  ...
 63. 0.0027368 | 70%| __________xxxxxxxxxxxxx_2 [ 85] min:  ... | MAX: ... | var():  ...
 64. 0.0027221 | 70%| __________xxxxxxxxxxxxx_1 [211] min:  ... | MAX: ... | var():  ...
 ...
104. 0.0019674 | 80%| ________f_xxxxxxxxxxxxx_3 [273] min:  ... | MAX: ... | var():  ...
105. 0.0019597 | 80%| __________xxxxxxxxxxxxx_6 [ 99] min:  ... | MAX: ... | var():  ...
106. 0.0019199 | 80%| __________xxxxxxxxxxxxx_1 [104] min:  ... | MAX: ... | var():  ...
 ...
169. 0.0012095 | 90%| __________xxxxxxxxxxxxx_4 [181] min:  ... | MAX: ... | var():  ...
170. 0.0012017 | 90%| __________xxxxxxxxxxxxx_3 [  9] min:  ... | MAX: ... | var():  ...
171. 0.0011984 | 90%| __________xxxxxxxxxxxxx_4 [185] min:  ... | MAX: ... | var():  ...
172. 0.0011926 | 90%| __________xxxxxxxxxxxxx_1 [ 19] min:  ... | MAX: ... | var():  ...
 ...
272. 0.0005956 | 99%| __________xxxxxxxxxxxxx_2 [ 33] min:  ... | MAX: ... | var():  ...
273. 0.0005844 | 99%| __________xxxxxxxxxxxxx_2 [127] min:  ... | MAX: ... | var():  ...
274. 0.0005802 | 99%| __________xxxxxxxxxxxxx_3 [ 54] min:  ... | MAX: ... | var():  ...
275. 0.0005663 | 99%| __________xxxxxxxxxxxxx_3 [ 32] min:  ... | MAX: ... | var():  ...
276. 0.0005534 | 99%| __________xxxxxxxxxxxxx_1 [ 83] min:  ... | MAX: ... | var():  ...
 ...
391. 0.0004347 |100%| __________xxxxxxxxxxxxx_2 [ 82] min:  ... | MAX: ... | var():  ...
"
destroy() not destroying on repeats,"'''
Created on Apr 23, 2016

@author: billal begueradj
'''
from tkinter import *
class BlackjackTable:
    def __init__(self,numPlayers):
        self.numPlayers=numPlayers
        self.tableWindow=Tk()
        self.bettedE=False
        self.bettedS=False
        self.bettedW=False
        self.suitWindow()
    def suitWindow(self):
        self.tableWindow.title(""Blackjack Table"")
        self.tableWindow.config(bg=""dark green"")

        self.EHandEntry=Entry(self.tableWindow,fg=""white"",bg=""dark green"",width=10)
        self.EHandEntry.grid(row=5,column=9)

        self.EHandSubmit=Button(self.tableWindow,text=""Bet"",fg=""white"",padx=15,pady=5,command=self.betE,bg=""dark green"",activebackground=""dark green"",activeforeground=""white"")
        self.EHandSubmit.grid(row=5,column=10)


        self.SHandEntry=Entry(self.tableWindow,fg=""white"",bg=""dark green"",width=10)
        self.SHandEntry.grid(row=8,column=6)

        self.SHandSubmit=Button(self.tableWindow,text=""Bet"",fg=""white"",padx=15,pady=5,command=self.betST,bg=""dark green"",activebackground=""dark green"",activeforeground=""white"")
        self.SHandSubmit.grid(row=8,column=7)
        self.WHandEntry=Entry(self.tableWindow,fg=""white"",bg=""dark green"",width=10)
        self.WHandEntry.grid(row=5,column=3)

        self.WHandSubmit=Button(self.tableWindow,text=""Bet"",fg=""white"",padx=15,pady=5,command=self.betW,bg=""dark green"",activebackground=""dark green"",activeforeground=""white"")
        self.WHandSubmit.grid(row=5,column=4)
    def betE(self):
        print(""betE"")
        self.bettedE=True
        self.EHandSubmit.destroy()
        self.EHandEntry.destroy()

    def betST(self):
        print(""betST"")
        self.bettedS=True
        self.SHandSubmit.destroy()
        self.SHandEntry.destroy()

    def betW(self):
        print(""betW"")
        self.bettedW=True
        self.WHandSubmit.destroy()
        self.WHandEntry.destroy()

gui=BlackjackTable(3)
mainloop()
"
How to use index as a key in Python?,"x[(1,2,2,3)] = 7
"
Importing the entire Python standard library,"import pkgutil
stuff = [thing[1] for thing in pkgutil.iter_modules()]
stuff.sort() # To make it easy to look through
print(stuff)
"
Merge multiple lists of dictionaries and rename the key,"[{'sku': 'foo', 'dept': '001', 'sold': 100, 'return': 10},
 {'sku': 'baz', 'dept': '002', 'sold': 200, 'return': 20},
 {'sku': 'foo', 'dept': '003', 'sold': 300, 'return': 0}]
"
how do i set a timeout value for python's mechanize?,"def urlopen(url, data=None, timeout=_sockettimeout._GLOBAL_DEFAULT_TIMEOUT):
    ...
    return _opener.open(url, data, timeout)
"
python key value list to panda series,"dates, vals = zip(*data)
s = pd.Series(vals, index=dates)
"
Increasing the functionality of my Scrapy spider - Following internal links,"import urlparse
from scrapy.spider import BaseSpider
from scrapy.http import Request
from scrapy.selector import HtmlXPathSelector
from TOSpider.items import TOSpiderItem

class MySpider(BaseSpider):
    name = ""TOSpider""
    allowed_domains = [""http://nowtoronto.com/""]
    start_urls = [""http://www.nowtoronto.com/music/listings/""]

    def parse(self, response):
        hxs = HtmlXPathSelector(response)
        listings = hxs.select(""//div[starts-with(@class, 'listing-item')]"")

        for listing in listings:
            item = NowTorontoItem()
            item[""eventArtist""] = listing.select(""span[@class='listing-body']/div[@class='List-Body']/span[@class='List-Name']/text()"").extract()
            item[""eventTitle""] = listing.select(""span[@class='listing-body']/div[@class='List-Body']/span[@class='List-Body-Emphasis']/text()"").extract()
            item[""eventHolder""] = listing.select(""span[@class='listing-body']/div[@class='List-Body']/span[@class='List-Body-Strong']/text()"").extract()
            item[""eventDetails""] = listing.select(""span[@class='listing-body']/div[@class='List-Body']/text()"").extract()

            # instead of returning all items at the end,
            # you can use yield with an item in each iteration
            yield item

            # and you can also yield a Request()
            # so that scrapy enqueues a new page to fetch
            detail_url = listing.select(""div[@class='listing-readmore']/a/@href"")
            if detail_url:
                yield Request(detail_url.extract()[0], callback=self.parse_details)


    def parse_details(self, response):
        hxs = HtmlXPathSelector(response)
        # and here you parse 
        # <span property=""v:location"">, 
        # <span property=""v:organization"">, 
        # <span property=""v:name"">, 
        # <span property=""v:street-address"">, 
        # <span property=""v:locality"">, 
        # <span property=""v:postal-code"">, 
        # <span property=""v:tel""> and <span property=""v:url""> ...
        #
        # and return a item
"
How to split an UTF-8 string by an escape sequence provided as command line argument in Python 3?," arg = bytes(sys.argv[1], ""utf-8"").decode(""unicode_escape"")

print(arg)

l1 = u""12345\tktktktk"".split(arg)
print(l1)

l2 = u""633\tbgt"".split(arg)
print(l2)
"
Get time of last commit for Git repository files via Python?,"serve-git|8d92934|2012-08-31 21:21:38 +0200
setres|8d92934|2012-08-31 21:21:38 +0200
mydec|e711e27|2008-04-09 21:26:05 +0200
sync-iaudio|8d92934|2012-08-31 21:21:38 +0200
tarenc|8d92934|2012-08-31 21:21:38 +0200
keypress.sh|a5c0fb5|2009-09-29 00:00:51 +0200
tolower|8d92934|2012-08-31 21:21:38 +0200
"
GatoIcon.py automatically generated <?> from images via perl?,"perl -MMIME::Base64 -E ""open (my $output, '>:raw', $ARGV[0]); print $output decode_base64('R0lGODdhHgAeAPcAAP//AAAAAAAAMwAAZgAAmQAAzAAA/wAzAAAzMwAzZgAzmQAzzAAz/wBmAABmMwBmZgBmmQBmzABm/wCZAACZMwCZZgCZmQCZzACZ/wDMAADMMwDMZgDMmQDMzADM/wD/AAD/MwD/ZgD/mQD/zAD//zMAADMAMzMAZjMAmTMAzDMA/zMzADMzMzMzZjMzmTMzzDMz/zNmADNmMzNmZjNmmTNmzDNm/zOZADOZMzOZZjOZmTOZzDOZ/zPMADPMMzPMZjPMmTPMzDPM/zP/ADP/MzP/ZjP/mTP/zDP//2YAAGYAM2YAZmYAmWYAzGYA/2YzAGYzM2YzZmYzmWYzzGYz/2ZmAGZmM2ZmZmZmmWZmzGZm/2aZAGaZM2aZZmaZmWaZzGaZ/2bMAGbMM2bMZmbMmWbMzGbM/2b/AGb/M2b/Zmb/mWb/zGb//5kAAJkAM5kAZpkAmZkAzJkA/5kzAJkzM5kzZpkzmZkzzJkz/5lmAJlmM5lmZplmmZlmzJlm/5mZAJmZM5mZZpmZmZmZzJmZ/5nMAJnMM5nMZpnMmZnMzJnM/5n/AJn/M5n/Zpn/mZn/zJn//8wAAMwAM8wAZswAmcwAzMwA/8wzAMwzM8wzZswzmcwzzMwz/8xmAMxmM8xmZsxmmcxmzMxm/8yZAMyZM8yZZsyZmcyZzMyZ/8zMAMzMM8zMZszMmczMzMzM/8z/AMz/M8z/Zsz/mcz/zMz///8AAP8AM/8AZv8Amf8AzP8A//8zAP8zM/8zZv8zmf8zzP8z//9mAP9mM/9mZv9mmf9mzP9m//+ZAP+ZM/+ZZv+Zmf+ZzP+Z///MAP/MM//MZv/Mmf/MzP/M////AP//M///Zv//mf//zP///wAAAA0NDRoaGigoKDU1NUNDQ1BQUF1dXWtra3h4eIaGhpOTk6Ghoa6urru7u8nJydbW1uTk5PHx8f///wAAAAEBAQICAgMDAwQEBAUFBQYGBgcHBwgICAkJCQoKCgsLCwwMDA0NDQ4ODg8PDxAQEBERERISEiwAAAAAHgAeAAcIMgABCBxIsKDBgwgTKlzIsKHDhxAjSpxIsaLFixgzatzIsaPHjyBDihxJsqTJkyhTngwIADs=')"" yellow.gif
"
unbound method get_queryset() must be called with WorkoutList instance as first argument (got nothing instead),"def get_queryset(self):
    query_set = super(WorkoutList, self).get_queryset()
"
How to use Scikit Learn dictvectorizer to get encoded dataframe from dense dataframe in Python?,"df = pd.concat([df]*1000).reset_index(drop=True)

In [41]: %timeit pd.concat([df1,df2, df.affinity], axis=1)
The slowest run took 4.67 times longer than the fastest. This could mean that an intermediate result is being cached 
1000 loops, best of 3: 761 µs per loop
"
trouble extracting elements to list from string,"zip(*literal_eval(s.split('=')[-1].strip()))[0]
(100, 2500, 5000, 10000)
"
Strange For Loop,"temp = []
for i in range(len(rows) - 2, -1, -1):
    for j in range(i + 1):
        temp.append((i, j))
for (i, j) in temp:
    rows[i][j] += max([rows[i + 1][j], rows[i + 1][j + 1]])
"
Python CSV joining columns,"print df2
        KEYS     TC_NUM
0    UXS-689  1105.0017
1   FIT-3015  1135.0027
2   FIT-2994  1140.0156
3   FIT-2991  1105.0022
4   FIT-2991  1942.0001
5   FIT-2991  3004.0004
6   FIT-2991  3004.0020
7   FIT-2991  3004.0026
8   FIT-2991  3004.0063
9   FIT-2991  3004.0065
10  FIT-2991  3004.0079
11  FIT-2991  3004.0084
12  FIT-2991  3004.0091
13  FIT-2991  2101.0015
14  FIT-2991  2101.0016
15  FIT-2991  2101.0017
16  FIT-2991  2101.0018
17  FIT-2991  2101.0050
18  FIT-2991  2101.0052
19  FIT-2991  2101.0054
20  FIT-2991  2101.0055
21  FIT-2991  2101.0071
22  FIT-2991  2101.0074
23  FIT-2991  2101.0075
24  FIT-2991  2206.0001
25  FIT-2991  2103.0001
26  FIT-2991  2103.0002
27  FIT-2991  2103.0009
28  FIT-2991  2103.0011
29  FIT-2991  3000.0004
30  FIT-2991  3000.0030
31  FIT-2991  1927.0020
32  FIT-2990  2034.0002
33  FIT-2990  3004.0035
34  FIT-2990  3004.0084
35  FIT-2990  2034.0001
36  FIT-2918  3001.0039
37  FIT-2918  3004.0042
"
How to retrieve a specific field of data in parent key from child key in sqlite3 python?,"SELECT artistname FROM artist WHERE artistid = ?
"
Python sort list by regular expression,"In [1]: a = ['jhfewrgjhdfjhgsufgssdfjgh;NR;3243;fgjdsgfjsdfkjgdf', 'dsafjhsafjkhefhajwejh;NR;123;dfgdsrhgjhdfgjhdsfjhg']

In [2]: a.sort(key=lambda x: x.split(';')[2])

In [3]: a
Out[3]:
['dsafjhsafjkhefhajwejh;NR;123;dfgdsrhgjhdfgjhdsfjhg',
 'jhfewrgjhdfjhgsufgssdfjgh;NR;3243;fgjdsgfjsdfkjgdf']
"
"Double loops for ""concatenation of subarrays in bigger array""","In [82]: conc.reshape(4,4)
Out[82]: 
array([[ 1.,  1.,  1.,  1.],
       [ 2.,  2.,  2.,  2.],
       [ 3.,  3.,  3.,  3.],
       [ 4.,  4.,  4.,  4.]])
"
List and serve files from GridFS with Flask,"<ul>{% for name in names %}
<li><a href=""{{ url_for('get_file', name=name) }}"">{{ name }}</a></li>
{% endfor %}</ul>
"
Python property on a list,"c.x           # getter
c.x = [1,2,3] # setter
"
How to read the contents of a .gz compressed file in Python?,"from subprocess import check_output
size_name = check_output(['gunzip', '-Nlq','othertext.gz'])
size_name = size_name.strip().split(""%"",1)
print ""original filename ="",size_name[1].strip()
"
Slicing different rows of a numpy array differently,">>> pastpresent = np.array([[0, 2], [0, 6]])
>>> nlayers = 10
"
Which format of scipy.sparse is best for this type of matrix generation and use?,"In [66]: %%timeit 
for i in np.random.randint(1000,size=(2000,)):
    adict[(i,i)]=1
dd.update(adict)
   ....: 
1000 loops, best of 3: 1.32 ms per loop

In [67]: %%timeit 
for i in np.random.randint(1000,size=(2000,)):
    dd[i,i]=1
   ....: 
10 loops, best of 3: 35.6 ms per loop
"
"How do I generate random numbers from [0,1]?","import random

# int
x = random.randint(0, 1)  # 0 or 1(both incl.)

# float excl. 1.0
x = random.random()  # float from [0,1)
"
How can I know the parent of an element when using iterparse methode of cElementTree?,"import xml.etree.cElementTree as et
# Produces identical answers with import lxml.etree as et
import cStringIO

def normtext(t):
    return repr("""" if t is None else t.strip())

def dump(el):
    print el.tag, normtext(el.text), normtext(el.tail), el.attrib

def my_filtered_elements(source, skip_parent_tag=""feature""):
    # get an iterable
    context = et.iterparse(source, events=(""start"", ""end""))
    # turn it into an iterator
    context = iter(context)
    # get the root element
    event, root = context.next()
    tag_stack = [None, root.tag]
    for event, elem in context:
        # print event, elem.tag, tag_stack
        if event == ""start"":
            tag_stack.append(elem.tag)
        else:
            assert event == ""end""
            my_tag = tag_stack.pop()
            assert my_tag == elem.tag
            parent_tag = tag_stack[-1]
            if parent_tag is not None and parent_tag != skip_parent_tag:
                dump(elem)
                # yield elem
            root.clear()

def other_filtered_elements(source, skip_parent_tag=""feature""):            
    in_feature_tag = False
    for event, element in et.iterparse(source, events=('start', 'end')):
        if element.tag == skip_parent_tag:
            in_feature_tag = event == 'start'
        if event == 'end' and not in_feature_tag:
            dump(element)            

test_input = """"""
<top>
    <lev1 guff=""1111"">
        <lev2>aaaaa</lev2>
        <lev2>bbbbb</lev2>
    </lev1>
    <feature>
        feat text 1
        <fchild>fcfcfcfc
            <fgchild>ggggg</fgchild>    
        </fchild>
        feat text 2
    </feature>
    <lev1 guff=""2222"">
        <lev2>ccccc</lev2>c-tail
        <lev2>ddddd</lev2>d-tail
        <notext1></notext1>e-tail
        <notext2 />f-tail
     </lev1>g-tail
</top>
""""""

print ""=== me ===""
my_filtered_elements(cStringIO.StringIO(test_input))
print ""=== other ===""
other_filtered_elements(cStringIO.StringIO(test_input))
"
Logging in a Framework,"# logging_setup.py
from framework import logutils
logutils.set_up()
"
Interpreting nested HTML <blockquote>s in Python?,"<p><b>Latest:</b> This is another reblog. As you can see, all of the previous comments are stored as blockquotes, with earlier ones
"
Iterating through file multiple times (Python),"from collections import OrderedDict

results = OrderedDict

with open('somefile.txt') as f:
   for line in f:
      line = line.strip()
      if line:
         value, key = line.split(',')
         key = key.split('_')[0] # returns var1 from var1_val1
         results.setdefault(key, []).append(value)

for k,v in results.iteritems():
    print('{} {}'.format(k, ' '.join(v)))
"
Use urlparse library to iterate through url param,"from collections import defaultdict
import urllib
import urlparse

# parse the url into parts
parsed = urlparse.urlparse('http://somesite.com/blog/posting/?id=6&name=Bill')

# and parse the query string into a dictionary
qs = urlparse.parse_qs(parsed.query, keep_blank_values=0, strict_parsing=0)

# this makes a new dictionary, with same keys, but all values changed to ""foobar""
foozsified = { i: 'foobar' for i in qs }

# make them back to a query string: id=foobar&name=foobar
quoted = urllib.urlencode(foozsified, doseq=True)

# the original parsed result is a named tuple and cannot be changed,
# make it into a list
parsed = list(parsed)

# replace the 4th element - the query string with our new
parsed[4] = quoted

# and unparse it into a full url    
print(urlparse.urlunparse(parsed))
"
How could I loop a code involving a list,"for index, question in enumerate(questions):
    print (""Question {}: "".format(index+1))
    print (question)
    #asks for the answer from the user
    ans = int(input())
    #compares the users input to the answer
    if ans == eval(question):
        print (""Well done, you got it correct"")
        #if correct grants a point to the overall score
        score = score + 1
"
Create new pandas timeseries dataframe from other dataframe,">>> pivoted.cumsum()
                 Signal      
Event                 A  B  C
Time                         
11/28/2014 11:32      0  0  1
11/28/2014 11:35      1  0  1
11/28/2014 11:36      1  1  1
11/28/2014 11:37      2  0  1
11/28/2014 19:53      1  0  0
11/29/2014 19:53      0  0  0
"
"In Django, how do I gracefully add a queryset filter to a large group or all members of an object?","class MyModelAdmin(admin.ModelAdmin):
    def get_queryset(self, request):
        qs = self.model.all_objects.get_queryset()
        ordering = self.get_ordering(request)
        if ordering:
            qs = qs.order_by(*ordering)
        return qs
"
python backports for some methods,"
def addword(theIndex, word, pagenumber):
    try:
        theIndex[word].append(pagenumber)
    except KeyError:
        theIndex[word] = [pagenumber]
"
Dictionary all for one,">>> dicMyDictionary = {""michael"":""jordan"", ""kobe"":""bryant"", ""lebron"":""james""}
>>> print(dicMyDictionary)
{'kobe': 'bryant', 'michael': 'jordan', 'lebron': 'james'}
"
Is there any way to kill a Thread in Python?,"import threading

class StoppableThread(threading.Thread):
    """"""Thread class with a stop() method. The thread itself has to check
    regularly for the stopped() condition.""""""

    def __init__(self):
        super(StoppableThread, self).__init__()
        self._stop = threading.Event()

    def stop(self):
        self._stop.set()

    def stopped(self):
        return self._stop.isSet()
"
Python - Ready text file and report count of individual characters,">>> ================================ RESTART ================================
>>> 
{'a': 6, 'j': 4, 'd': 2, 'g': 1, 'f': 2, 'k': 2, '\n': 6, 'm': 1, 'l': 1, ""'"": 1, '1': 1, 's': 5, '5': 1, '4': 1, ';': 1}
>>> 
"
Print / view all variables whilst a script is running in python,"a = False
b = """"
c = ""test""
d = {}
e = []
f = [""Test"", ""Test""]
g = (""One"", ""1"", ""Two"", ""2"")
for k, v in vars().items():
    if not (k.startswith('__') and k.endswith('__')):
        print k,'--',v
"
How to capture query string parameter in form view?,"request.GET['return_url'] 
"
I am having problems doing Word Sense Disambiguation in Python using Lesk algorithm,">>> ss = str(lesk(sent, 'be', 'v'))
>>> re.findall(""'([^']*)'"",ss)
['equal.v.01']
"
Instance of Python class that responds to all method calls,">> a = A() 
>> # First let's try simple access (no method call)
>> a.real_method # The method that is actually defined in the class
<bound method A.real_method of <test.A object at 0x10a9784d0>>

>> a.imaginary_method # Some method that is not defined
<bound method A.imaginary_method of <test.A object at 0x10a9784d0>>

>> # Now let's try to call each of these methods
>> a.real_method(1, 2, x=3, y=4)
I am a method that you actually defined
My name is real_method
My arguments are: (1, 2)
My keyword arguments are: {'y': 4, 'x': 3}

>> a.imaginary_method(1, 2, x=3, y=4)
I am an imaginary method with name imaginary_method
My arguments are: (1, 2)
My keyword arguments are: {'y': 4, 'x': 3}

>> # Now let's try to access the x attribute, just to make sure that 'regular' attribute access works fine as well
>> a.x
1
"
Is there a simple way to make lists behave as files (with ftplib),"buffer.writelines(line + '\n' for line in mylist)
"
Create a set of objects when their type is set by ini file (Python),"types = {}

class XBee24ZBCoordinator():
    # class definition

types[XBee24ZBCoordinator.__name__] = XBee24ZBCoordinator
"
Customizing rolling_apply function in Python pandas,"import pandas as pd
import numpy as np
np.random.seed(1)

def setup(regular=True):
    N = 10
    x = np.arange(N)
    a = np.arange(N)
    b = np.arange(N)

    if regular:
        timestamps = np.linspace(0, 120, N)
    else:
        timestamps = np.random.uniform(0, 120, N)

    df = pd.DataFrame({
        'Category': [True]*N + [False]*N,
        'Time': np.hstack((timestamps, timestamps)),
        'Value': np.hstack((a,b))
        })
    return df

df = setup(regular=False)
df.sort(['Category', 'Time'], inplace=True)
"
"Is there something better than dict.get(<thing>, dict.get(<other>))?","x['eggs'] if 'eggs' in x else x.get('spam')
"
Datetime and Timestamp equality in Python and Pandas,"In [6]:    
first_date = year_month['date'].unique()[0]
first_date

Out[6]:
numpy.datetime64('2001-01-01T00:00:00.000000000+0000')
"
Style for checking multiple elements in a Python sequence,"if set(list_of_x).issubset(set(tupla)):
"
Limit the number of repeats in pseudo random python list,"import random

sequences = []
order = [1, 0] * 10

while len(sequences) < 10:
    random.shuffle(order)

    if order in sequences:
        continue

    sequences.append(order[:])
"
Most efficient way to create a dictionary of empty lists in Python?,"b = ['a', 'b','c','d','e']
"
fastest way to iterate in python,"activity.shape == (len(vertices) // 3,)
start_colors.shape == (3,)
end_colors.shape == (3,)
"
How to bin all subsets of a python list into n bins,"import itertools

def everywhere(seq, width):
    for locs in itertools.product(range(width), repeat=len(seq)):
        output = [[] for _ in range(width)]
        for elem, loc in zip(seq, locs):
            output[loc].append(elem)
        yield output
"
Turn any 2D image into 3D printable sculpture with code,"// gluProjection parameters
double f=100;                   //[pixels] focus
scr.views[0].znear=       f;    //[pixels]
scr.views[0].zfar =1000.0+f;    //[pixels]
scr.views[0].zang =  60.0;      //[deg] view projection angle
scr.init(this); // this compute the Projection matrix and init OpenGL
// place the painting surface in the middle of frustrum
rep.reset();
rep.gpos_set(vector_ld(0.0,0.0,-0.5*(scr.views[0].zfar+scr.views[0].znear)));
rep.lrotx(180.0*deg); // rotate it to match original image
"
How to calculate the timezone of these data?,"df <- df %>% arrange(Feedback, Timestamp) %>% group_by(Feedback) %>% summarise(timedelta = as.numeric(difftime(max(Timestamp), min(Timestamp), units = 'mins')))
df
Source: local data frame [6 x 2]

         Feedback timedelta
            (chr)     (dbl)
1         Awesome       480
2 Could be better       720
3  Great service!      1320
4              OK       960
5        Whatever         0
6            YES!       840
"
How to add parameters to Django class based generic view decorators?,"def decorator(arg):
    def wrap(klass): ...
    return wrap
"
Trying to understand instance variables in python,"In [38]: class Test(object):
   ....:     def modify_state(self):
   ....:         self.ponk = ""ponk""
   ....:         self.blonk = ""splonk""
   ....:

In [39]: a = Test()

In [40]: a.ponk
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-40-00b6c3f2ca26> in <module>()
----> 1 a.ponk

AttributeError: 'Test' object has no attribute 'ponk'

In [41]: a.modify_state()

In [42]: a.ponk
Out[42]: 'ponk'
"
Iterate a tuple of dictionaries and pass the nested dictionaries to a function,"print type(passedDict)
"
How to reduce multiple queries to only one query?,"SELECT
    ""bar_player"".""id"",
    MAX(""bar_score"".""score"") AS ""max_score""
FROM
    ""bar_player""
LEFT OUTER JOIN
    ""bar_score""
ON
    ( ""bar_player"".""id"" = ""bar_score"".""player_id"" )
WHERE
    ""bar_score"".""score"" <= 1000
GROUP BY
    ""bar_player"".""id""
"
Plotting bar chart in python,">>> x = np.arange(1,11)
>>> x
array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])
>>> width = .5
>>> x + width/2
array([  1.25,   2.25,   3.25,   4.25,   5.25,   6.25,   7.25,   8.25,   9.25,  10.25])
>>> 
"
Tesseract use subset of letters,"
tesseract imagename outputbase digits
"
Adding datalabels - matplotlib barchart,"
fig, ax = plt.subplots(1, 1)
ax.get_xaxis().set_visible(False)   # Hide Ticks
df.plot(table=np.round(df.T, 2), ax=ax)
"
why python requires us to use from statement when we have already loaded a module using import,"sys.exit()
"
Using Python to create a dictionary with setters and getters,">>> class AttrDict(dict):
...     def __init__(self, *args, **kw):
...         super(AttrDict, self).__init__(*args, **kw)
...         self.__dict__ = self
... 
>>> foo = AttrDict()
>>> foo.bar = 'baz'
>>> foo
{'bar': 'baz'}
>>> foo.bar
'baz'
"
Python: Alphanumeric Serial Number with some rules,"def next_string(s):
    if len(s) == 0:
        return '1'
    head = s[0:-1]
    tail = s[-1]
    if tail == 'Z':
        return next_string(head) + '1'
    if tail == '9':
        return head+'A'
    if tail == 'H':
        return head+'J'
    if tail == 'N':
        return head+'P'
    return head + chr(ord(tail)+1)
"
Regexp on specific URL,">>> for line in lines:
...     if re.match(r'^http://www.toto.com/(\w+/){4}$', line):
...         print line
... 
http://www.toto.com/bags/handbags/test1/test2/
http://www.toto.com/bags/handbags/blabla1/blabla2/
http://www.toto.com/bags/handbags/smt1/smt2/
"
argparse: map user input to defined constant,"import argparse

class MappedParser(argparse.ArgumentParser):
    mapping = {} #backup if you don't use def_mapping

    def def_mapping(self,**options):
        self.mapping = options

    def parse_args(self,args=None,namespace=None):
        result = argparse.ArgumentParser.parse_args(self,args,namespace)
        for name,options in self.mapping.items(): #by default this is is empty so the loop is skipped
            if name in result:
                key = getattr(result,name)
                if key in options:
                    replace_with = options[key]
                    setattr(result,name,replace_with)
                else:
                    self.error(""option {name!r} got invalid value: {key!r}\n must be one of {valid}"".format(name=name,key=key,valid=tuple(options.keys())))
                    return #error should exit program but I'll leave this just to be safe.
        return result
"
flask templates: nginx cache or serve static assets called in jinja markups,"location /static {
    alias /var/www/mySite/static;
    add_header X-Served-By-NGINX true always;
}
"
Optimize two simple nested loops,"def startbars(query_name, commodity_name):

    assert query_name in INNOVOTABLE_FIELD_NAMES

    ## TODO: Replace with proper SQL query
    query = """""" SELECT wbcode, Year, """"""+query_name+"""""" 
             FROM innovotable WHERE commodity='""""""+commodity_name+""""""' and

             """"""+query_name+"""""" != 'NULL' """"""
    rows = cursor.execute(query)

    mapYearToWbcodeToField = {}
    nc = []
    global h_list
    h_list = {}

    for row in rows:
        n = float(row[2])
        wbCodeToField = mapYearToWbcodeToField.setdefault(int(row[1]),{})
        wbCodeToField[str(row[0])] = n
        nc.append(n)

    constant = 8.0 / max(nc)


    for (an_year,wbCodeToField) in mapYearToWbcodeToField.iteritems():
        if an_year < 1961 or an_year > 2031:
            continue

        for (wbCode,value) in wbCodeToField.iteritems():
            if wbCode not in result:
                continue

            skey = wbCode+str(an_year)
            h_list[skey] = constant * value
"
Efficiently keeping track of the top-k keys of a dictionary based on value,"Implementation
class MostCommon(object):
    """"""Keep track the top-k key-value pairs.

    Attributes:
        top: Integer representing the top-k items to keep track of.
        store: Dictionary of the top-k items.
        min: The current minimum of any top-k item.
        min_set: Set where keys are counts, and values are the set of
            keys with that count.
    """"""
    def __init__(self, top):
        """"""Create a new MostCommon object to track key-value paris.

        Args:
            top: Integer representing the top-k values to keep track of.
        """"""
        self.top = top
        self.store = dict()
        self.min = None
        self.min_set = defaultdict(set)

    def _update_existing(self, key, value):
        """"""Update an item that is already one of the top-k values.""""""
        # Currently handle values that are non-decreasing.
        assert value > self.store[key]
        self.min_set[self.store[key]].remove(key)
        if self.store[key] == self.min:  # Previously was the minimum.
            if not self.min_set[self.store[key]]:  # No more minimums.
                del self.min_set[self.store[key]]
                self.min_set[value].add(key)
                self.min = min(self.min_set.keys())
        self.min_set[value].add(key)
        self.store[key] = value

    def __contains__(self, key):
        """"""Boolean if the key is one of the top-k items.""""""
        return key in self.store

    def __setitem__(self, key, value):
        """"""Assign a value to a key.

        The item won't be stored if it is less than the minimum (and
        the store is already full). If the item is already in the store,
        the value will be updated along with the `min` if necessary.
        """"""
        # Store it if we aren't full yet.
        if len(self.store) < self.top:
            if key in self.store:  # We already have this item.
                self._update_existing(key, value)
            else:  # Brand new item.
                self.store[key] = value
                self.min_set[value].add(key)
                if value < self.min or self.min is None:
                    self.min = value
        else:  # We're full. The value must be greater minimum to be added.
            if value > self.min:  # New item must be larger than current min.
                if key in self.store:  # We already have this item.
                    self._update_existing(key, value)
                else:  # Brand new item.
                    # Make room by removing one of the current minimums.
                    old = self.min_set[self.min].pop()
                    del self.store[old]
                    # Delete the set if there are no old minimums left.
                    if not self.min_set[self.min]:
                        del self.min_set[self.min]
                    # Add the new item.
                    self.min_set[value].add(key)
                    self.store[key] = value
                    self.min = min(self.min_set.keys())

    def __repr__(self):
        if len(self.store) < 10:
            store = repr(self.store)
        else:
            length = len(self.store)
            largest = max(self.store.itervalues())
            store = '<len={length}, max={largest}>'.format(length=length,
                                                           largest=largest)
        return ('{self.__class__.__name__}(top={self.top}, min={self.min}, '
                'store={store})'.format(self=self, store=store))
"
Unordered collection - sets in python,"Security improvements:
    Hash randomization is switched on by default.
"
enter n numbers to control the enter of the map or array,"a=str(raw_input('Enter The String To revers'))
lst.append(a) #adding input to a list in each iteration
"
Python decorator class to transform methods to dictionary items,"class Info(object):
    @property
    def version(self):
        return 3
    def __getitem__(self,key):
        if hasattr(self,key.lower()):
            return getattr(self,key.lower())
"
reinterpret signed long as unsigned in Python,"if x < 0:
   x += 2 ** 64
"
binary to hex dictionary,"def convert_binary_to_hex(binary, table):
    result = ''
    groups = [binary[i:i + 4] for i in range(0, len(binary), 4)]
    for each in groups:
        result += binary_to_hex_map[each]
    print(result)

binary_to_hex_map = {'0000':'0', '0001':'1', '0010':'2','0011':'3', 
    '0100': '4', '0101': '5', '0110':'6', '0111': '7', 
    '1000': '8', '1001': '9', '1010': 'A', '1011': 'B', 
    '1100': 'C', '1101': 'D', '1110': 'E', '1111': 'F'}
"
Dividing a square into N smaller squares and finding center coordinates of the N smaller squares,"import numpy as np
dx = 2.
dy = 2.
N = 5
centers = np.mgrid[dx/2:N*dx:dx, dy/2:N*dy:dy]
"
Styling of Pandas groupby boxplots,"for i, item in enumerate(cl):
    if item.get_xdata().mean()>0:
        bp[0].text(item.get_xdata().mean(), item.get_ydata().mean(), str(i), va='center', ha='center')
"
"Python, Java, C: Pass by Reference or Pass by Value Differences","void appendX( StringBuilder sb ) {
  sb.append('x');
}

void foo() {
  StringBuilder builder = ...
  appendX( builder );
  builder.toString(); // will contain 'x' because you worked with the object that 
                      // is the value of the variable `builder`.  When appendX was
                      // was invoked, the value of its variable `sb` was the same 
                      // object that is the value of foo's `builder`.  Without 
                      // changing what value the variable `builder` refers to, we
                      // did ""change"" the object (i.e., we appended 'x').
}
"
"Does Django have an equivalent of Rails's ""bundle install""?","pip install -r requirements.txt
"
python - High time consumption and low efficiency in programming challenge,"if M>0:
    number1 = Fibo(M-1)
    number0 = Fibo(M)
"
keeping a variable inside a range in python,"<class '__main__.BoundedInt'> 100
<class '__main__.BoundedInt'> 100
<class '__main__.BoundedInt'> 100
<class '__main__.BoundedInt'> 0
"
Python: multidimensional array masking,">>> b_row, b_col = np.vstack([np.unravel_index(b, A.shape) for b in B]).T
>>> A[b_row, b_col] = 0
>>> A
array([[1, 0, 1, 0, 1],
       [1, 1, 0, 1, 1],
       [1, 1, 1, 1, 1],
       [1, 1, 1, 1, 1],
       [1, 1, 1, 0, 1]])
"
Python / Django - If statement in template around extends,"if ajax:
    template_values['my_template'] = 'base_ajax.html'
else:
    template_values['my_template'] = 'base.html'
"
Cant get __import__() to dynamically import a module in python - I know this cause it doesn't show up in sys.modules,"    var_mod = raw_input(""What module do you want to look more into?:  "")
    print ""\n attempting to browse... please wait!""
    time.sleep(2)
    browse_mod(zlib = sys.modules[var_mod])
"
How to lookup debian package info with Python,"from subprocess import check_output

out = check_output([""apt-cache"", ""policy"",""python""])
print(out)
"
templating in python with GAE using GQL,"product_list = db.GqlQuery(""SELECT * FROM Post"")
"
Assigning the same value to different positions in a list in python,"x[0] = x[7] = x[9] = 0
"
Turning a list of dictionaries into a list of lists,"[['b', 'a'], ['d', 'c'], ['f', 'e']]
"
How do I pull information from a field in the admin panel?,"models:
class MyUser(models.Model):
    # regular stuff

    @property
    def get_avatar_url(self):
        try:
            return self.social_auth.get(
                provider='steam'
            ).extra_data.player.avatarfull
        except (UserSocialAuth.DoesNotExist, AttributeError):
            return 'http://placehold.it/64x64'
"
If I have three different text file how do I read them then sort them by average?,"def write_data_to_file(filename, data):
    myfile = open(filename,'a')
    myfile.write(repr(data))
    myfile.write('\n')
    myfile.close()
"
fast dict lookup,"In [7]: l1 = range(10)
In [8]: l2 = range(10000)
In [9]: %timeit sl2 = set(l2); all(l in sl2 for l in l1)
1000 loops, best of 3: 230 us per loop
In [10]: %timeit sl1 = set(l1); all(l in sl1 for l in l2)
1000000 loops, best of 3: 1.45 us per loop
In [11]: %timeit s1 = set(l1); s2 = set(l2); s1.issubset(s2)
1000 loops, best of 3: 228 us per loop
In [12]: %timeit s1 = set(l1); s2 = set(l2); s2.issubset(s1)
1000 loops, best of 3: 228 us per loop
"
BeatifulSoup HTML getting src link,"for link in soup.find_all(""a"", class_ = ""img-link""):
    for img in link.find_all(""a"", src=True):  # searching for img with src attribute
        print(img[""src""])
"
Delete Multiple Django Model Attributes,"for attr in ('description', 'title', 'etc'):
    setattr(book, attr, None)
book.save()
"
Converting an RPy2 ListVector to a Python dictionary,"In [290]:

dict(zip(a.names, list(a)))
Out[290]:
{'fizz': <FloatVector - Python:0x08AD50A8 / R:0x10A67DE8>
[123.000000],
 'foo': <StrVector - Python:0x08AD5030 / R:0x10B72458>
['barbat']}
In [291]:

dict(zip(a.names, map(list,list(a))))
Out[291]:
{'fizz': [123.0], 'foo': ['barbat']}
"
Compare List with different number of items,"In [9]: zip(A, B)
Out[9]: [('fish', 'fish'), ('banana', 'banana'), ('old pajamas', 'old pajamas')]
"
Beautifulsoup Python nested text,"from bs4 import BeautifulSoup
soup = BeautifulSoup(html)
for a in soup.find_all('a', text='View Rollover Dates'):
    print a.previous_element
"
debianzing a python program to get a .deb,"python setup.py --command-packages=stdeb.command bdist_deb
"
How to normalize a NumPy array to within a certain range?,"image *= 255.0/image.max()    # Uses 1 division and image.size multiplications
"
Can we change background color of checkbox text in WxPython?,"import wx
"
Increasing the maximum number of connections per host of QtWebKit,"hackUrl.setUserName(QString::number(qrand()));
"
How to iterate each element in list with all the others,">>> from itertools import chain
>>> s =  [8,2,0,1]
>>> s1 = sorted(s)
>>> list(chain(*(((x,y),(y,x)) for (x,y) in zip(s1, s1[1:]) if y-x == 1)))
[(0, 1), (1, 0), (1, 2), (2, 1)]
"
Using a function to create a function in Python,"def add_to(amount):
    def f(x):
        return x + amount
    return f

if __name__ == ""__main__"":
    add_2 = add_to(2)
    add_3 = add_to(3)

    print add_2(42)
    print add_3(42)
"
Eliminating series of .replace() calls in Python,">>> 'Hello, ""world"".'.translate(None, ',.""')
'Hello world'
"
Creating many related objects like INSERT ... SELECT in SQL,"m = Message.objects.create(*args)
emails = ModelWithEmails.active.values_list('email', flat=True)
Recipient.objects.bulk_create([Recipient(message=m, email=email) for email in emails])
"
Finding difference between two list of dictionary in Python,"In [25]: [dict(i) for i in i_set - a_set]
Out[25]: 
[{'column_name': 'CONFIG_ID',
  'data_type': 'numeric(10,0)',
  'table_name': 'CONFIG'},
 {'column_name': 'CREATE_DATE',
  'data_type': 'VARCHAR(20)',
  'table_name': 'CONFIG'},
 {'column_name': 'CONFIG_TYPE',
  'data_type': 'varchar(1)',
  'table_name': 'CONFIG'}]
"
Limit which classes in a .py file are importable from elsewhere,">>> A
<class 'mod1.A'>
>>> B
<class 'mod2.B'>
"
Encode MIMEText as quoted printables,"class MIMEUTF8QPText(email.mime.nonmultipart.MIMENonMultipart):
  def __init__(self, payload):
    email.mime.nonmultipart.MIMENonMultipart.__init__(self, 'text', 'plain',
                                                      charset='utf-8')

    utf8qp=email.charset.Charset('utf-8')
    utf8qp.body_encoding=email.charset.QP

    self.set_payload(payload, charset=utf8qp) 
"
Equivalent of os.getpardir()?,"os.path.dirname(os.getcwd())
"
Python - finding same elements in three lists (ignoring empty list),"set.intersection(*map(set,filter(None, [a,b,[]])))
"
Case insensitive Python regular expression without re.compile,"re.search('test', 'TeSt', re.IGNORECASE)
re.match('test', 'TeSt', re.IGNORECASE)
"
How to change a tuple within a value of a dictionary?,"dic = { k: [(x, y[0]) for x,y in v]  for k,v in dic.items()}
"
beautifulsoup to retrieve the date,"import urllib2
from bs4 import BeautifulSoup

url = 'http://www.homedepot.com/p/Husky-41-in-16-Drawer-Tool-Chest-and-Cabinet-Set-HOTC4016B1QES/205080371'
soup = BeautifulSoup(urllib2.urlopen(url=url))

print [meta.get('content') for meta in soup.find_all('meta', itemprop='datePublished')]
"
"Regex works fine on Pythex, but not in Python","import re

fn_list = ['IMG_0064.png',
           'IMG_0064.JPG',
           'IMG_0064_1.JPG',
           'IMG_0064_2.JPG',
           'IMG_0064_2.PNG',
           'IMG_0064_2.BMP',
           'IMG_0064_3.JPEG',
           'IMG_0065.JPG',
           'IMG_0065.JPEG',
           'IMG-20150623-00176-preview-left.jpg',
           'IMG-20150623-00176-preview-left_2.jpg',
           'thumb_2595.bmp',
           'thumb_2595_1.bmp',
           'thumb_2595_15.bmp']

pattern = re.compile(r'(\d|t)(_\d+){1}\.', re.IGNORECASE)

for line in fn_list:
    search_obj = re.search(pattern, line)  # CHANGED HERE
    if search_obj:
        matching_group = search_obj.groups()
        print matching_group
"
Trouble splitting text without using split(),"for ch in text:
"
Shortest Path between two Trie Nodes,"// populate a list of known words (or read from file etc)...
std::vector<std::string> words = {
    ""dog"", ""dot"", ""cot"", ""cat"", ""log"", ""bog""
};

// create sets of one-letter-apart words...
std::unordered_map<std::string, int32_t> links;
for (auto& word : words)
    for (int i = 0; i < word.size(); ++i)
    {
        char save = word[i];
        word[i] = '_';
        links[word] |= 1 << (save - 'a');
        word[i] = save;
    }
"
Python to combine lines in a txt file,">>> print(new)
1
00:00:23,343 --> 00:00:25,678
Been a while since I was up here in front of you. 

2
00:00:25,762 --> 00:00:28,847
Maybe I'll do us all a favour and just stick to the cards. 
...
"
Python 3.5.1 from PixelAcces Objects to CSV dataset,"array([[[1, 2, 3],
        [1, 2, 3],
        [1, 2, 3]],
       [[1, 2, 3],
        [1, 2, 3],
        [1, 2, 3]],
       [[1, 2, 3],
        [1, 2, 3],
        [1, 2, 3]]])
"
Javascript-style object methods in Python?,"person['speak']()
"
What is the most pythonic way to extract branch names from a remote-ls list?,"l = ['db6ad7246abf74cb845baa60e6fe45dacf897612    HEAD',
     '1fc347b17201054d8b5b9593efc1925918f04940    refs/heads/develop',
     '63b1a5b5901250651a162814b085c88c96835e3a    refs/heads/feature-dm',
     '8d72969f3b1ef5b16792b1cca5c65262d78b8dc2    refs/heads/feature/breedtest',
     '0ca9346d1f5b46f77f41a89aeb11998cbb83c007    refs/heads/feature/fedortest',
     '147bea618187c11927bfe83f1d8b52591f3b734c    refs/heads/feature/frontend-autumn14',
     'd5e5d4d75dddd46a5068ca621ce8e74e68bdca4e    refs/heads/feature/socket-testing',
     '03e70c846a84688ccbf78ca1159f410e577e1ee5    refs/heads/feature/youtracktest',
     'db6ad7246abf74cb845baa60e6fe45dacf897612    refs/heads/master',
     '787580497c0b41ca040c60bd7906ab598f891a43    refs/heads/master-old',
     '33a553135eb4341046702adaa762791b38456daf    refs/pull/67/head',
     '10c4c172ba0479dac8eefba674395d09d9d4b061    refs/pull/67/merge']
"
Most pythonic way to convert a list of tuples,">>> list_of_tuples = [('day1', 'name1', 'value1'), ('day2', 'name2', 'value2'), ('day3', 'name3', 'value3')]
>>> [list(t) for t in zip(*list_of_tuples)]
[['day1', 'day2', 'day3'], ['name1', 'name2', 'name3'], ['value1', 'value2', 'value3']]
"
JSON/Django http request,"url(r'^/api/club/(?P<club_name>[a-zA-Z]+)/$', ....)
"
The random number generator in numpy,">>> import numpy as np
>>> np.random.rand(10)
array([ 0.63067838,  0.61371053,  0.62025104,  0.42751699,  0.22862483,
        0.75287427,  0.90339087,  0.06643259,  0.17352284,  0.58213108])
>>> np.random.randn(10)
array([ 0.19972981, -0.35193746, -0.62164336,  2.22596365,  0.88984545,
       -0.28463902,  1.00123501,  1.76429108, -2.5511792 ,  0.09671888])
>>> 
"
pyparsing: Nested countedArray?,"from pyparsing import Word,nums,alphas,countedArray

test = ""key 02 01 30 03 40 20 10""

integer = Word(nums)

# each string is a countedArray of integers, and the data is a counted array
# of those, so...
lineExpr = Word(alphas)(""keyword"") + countedArray(countedArray(integer))(""data"")

# parse the test string, showing the keyworod, and list of lists for the data
print lineExpr.parseString(test).asList()
"
"lxml, flat_namespace and starting the program with or without python","Python 2.7.1 (r271:86832, Jun 16 2011, 16:59:05) 
[GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.15.00)] on darwin
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> from lmxl import etree
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
ImportError: No module named lmxl
>>> 
"
How can I easily call an IronPython function from VB.net?,"**Imports Microsoft.Scripting.Hosting
Imports IronPython.Hosting
Imports IronPython.Runtime.Types**
"
Formatting Numbers So They Allign On Decimal Point,"  4.8
 49.723
456.781
-72.18
  5
 13
"
Include tag in Django template language -- what can I pass in to it?,"{% load my_car_tags %}

{% for car in user.favorite_cars.all %}
    {% show_car car %}
{% endfor %}
"
numpy.genfromtxt imports tuples instead of arrays,"In [186]:

np.genfromtxt('temp.csv', delimiter=',', \
                          missing_values=0,skip_header=1,dtype=float,\
                          usecols=(0,2,3,4,5,6,7,8,9,10,11,17))
Out[186]:
array([[  1.66666680e-02,   4.35550640e+00,   0.00000000e+00,
          2.00000000e-03,   0.00000000e+00,   1.18000000e+02,
          1.00000000e+00,   6.84300000e+02,   0.00000000e+00,
          0.00000000e+00,   1.47100000e+01,  -1.00000000e+00],
       [  3.33333350e-02,   4.35550640e+00,   2.00000000e+01,
          2.00000000e-03,   0.00000000e+00,   1.19000000e+02,
          1.00000000e+00,   6.84300000e+02,   0.00000000e+00,
          0.00000000e+00,   1.47100000e+01,  -1.00000000e+00],
       [  5.00000000e-02,   4.44429100e+00,   1.30000000e+01,
          4.00000000e-03,   0.00000000e+00,   1.19000000e+02,
          1.00000000e+00,   6.84300000e+02,   0.00000000e+00,
          0.00000000e+00,   1.47100000e+01,  -1.00000000e+00]])
"
"Python, remove all numbers from sublist",">>> l = [['F', 'G', 'C'], ['S', '3', '7'], ['C', '3', 'D']]
>>> [[item for item in sublist if not item.isdigit()] for sublist in l]
[['F', 'G', 'C'], ['S'], ['C', 'D']]
"
Access sequence element from fasta record using Biopython Entrez,"handle = Entrez.efetch(db=""nucleotide"", id=key, retmode=""xml"") # retmode as 'xml' , db='nucleotide'
features = Entrez.read(handle)[0]
sequence = features['GBSeq_sequence'] # this is your sequence!
"
Python set Union and set Intersection operate differently?,"x = [set(a) for a in x]
"
Python: Using two while loops to create grid. No for loops,"def create_grid(grid):
    y = 0
    size = LENGTH * WIDTH
    table = ''
    while y < size:
        table += '|'.join(grid[y:y+WIDTH]) + '\n'
        y += WIDTH

    return table
"
How to print varible name in python,"fruit 13
"
flask : how to architect the project with multiple apps?,"facebook/
        runserver.py
        feed/
            __init__.py
            views.py
        chat/
            __init__.py
            views.py
"
Trim (remove frames from) a video using Python,"import subprocess
seconds = ""1"" # has to be a string
subprocess.call(['ffmpeg', '-i', inputfilename, '-ss', seconds, outputfilename])
"
Arbitrary host name resolution in Ansible,"import ansible.utils as utils
import ansible.errors as errors
import socket

class LookupModule(object):

    def __init__(self, basedir=None, **kwargs):
        self.basedir = basedir

    def run(self, terms, inject=None, **kwargs):

        if not isinstance(terms, basestring):
            raise errors.AnsibleError(""ip lookup expects a string (hostname)"")

        return [socket.gethostbyname(terms)]
"
Search data object and concatenate items in array of strings,"def joinItems(myList, version)
    toConcate = []
    for dct in filter(lambda dct: dct[u""version""] == version, myList):
       toConcate.extend(dct[u""items""])

    return ""seperator"".join(toConcate)
"
"numpys argsort, sorting column based on another one","a.sort(0)
"
How to sort object attributes,"s_tuples = zip(finger_lengths, finger_names)
s_tuples.sort()
finger_lengths, finger_names = zip(*temp)
"
Is it possible to use reflection to examine a function's decorators in Python 2.5?,"@reversable
def my_decorator(f):
    def wrapper(x):
        return f(x + 1)
    return wrapper
"
retrieving substrings which are not matched by re.findall,"exp2 = re.compile(exp)
unmatched = []
prev_match_end = 0
for match in exp2.finditer(s):
    unmatched.append(s[prev_match_end: match.start()])
    prev_match_end = match.end()

# Deal with unmatched text after last match:
unmatched.append(s[prev_match_end:])
"
Duplication of settings for multi-site django setup,"/Project/
    /app1/
    /app2/
    /project/ (the project app that gets auto created in Django 1.4+)
        /settings/
            __init__.py <- general site inspecific settings
            sitea.py <- site A's specific settings
            siteb.py <- site B's specific settings
"
n-sphere coordinate system to Cartesian coordinate system,"def ct(r, arr):
    a = np.concatenate((np.array([2*np.pi]), arr))
    si = np.sin(a)
    si[0] = 1
    si = np.cumprod(si)
    co = np.cos(a)
    co = np.roll(co, -1)
    return si*co*r

>>> n = 10
>>> c = np.random.random_sample(n)*np.pi
>>> all(ct(1,c) == ct_dynamic(1,c))
True

>>> timeit.timeit('from __main__ import coord_transform_n as f, c; f(2.4,c)', number=10000)
2.213547945022583

>>> timeit.timeit('from __main__ import ct_dynamic as f, c; f(2.4,c)', number=10000)
0.9227950572967529

>>> timeit.timeit('from __main__ import ct as f, c; f(2.4,c)', number=10000)
0.5197498798370361
"
Generate all permutations of cyclic shift of length K in a list of length N efficiently,"def get_cyclics(p, k):
  found = set()      # set of tuples we have seen so far
  todo = [tuple(p)]  # list of tuples we still need to explore
  n = len(p)
  while todo:
    x = todo.pop()
    for i in range(n - k + 1):
      perm = ( x[:i]                    # Prefix
             + x[i+1:i+k] + x[i:i+1]    # Rotated middle
             + x[i+k:]                  # Suffix
             )
      if perm not in found:
        found.add(perm)
        todo.append(perm)
  for x in found:
    print(x)
"
Applying colormaps to custom axis in Matplotlib 3D surface,"plt.draw() # you need this to get the edge color
lines = np.array(surf2.get_edgecolor())
surf2.set_edgecolor(lines*np.array([0,0,0,0])+1) # make lines white, and keep alpha==1. It's an array of colors like this: [r,g,b,alpha]
"
PHP equivalent for Python's repr(),"$data = ['foo', 'bar', 1, 2, 3];
$repr = serialize($data); 
// -> a:5:{i:0;s:3:""foo"";i:1;s:3:""bar"";i:2;i:1;i:3;i:2;i:4;i:3;}
var_dump( unserialize($repr) == $data ); // true
"
Pygame sprites timer,"for sprite in sprites:
    sprite.timer = pygame.Clock()
"
Pygame keyboard layouts mixed up,"keydown d pressed
keyup d pressed
keydown e pressed
keyup e pressed
"
Drop values below group means with Pandas DataFrame,">>> s.loc[s >= s.groupby(level=[0,1]).transform(""mean"")]
first  second
a      c          4
       c          5
       d          6
       d          7
b      c         12
       c         13
       d         14
       d         15
dtype: int64
"
Regex in Python for html,"soup = BeautifulSoup(page)
for td in soup.find_all('td', class_='prodSpecAtribute'):
    print td.contents[0]
"
Getting rid of few entities using regex python,"import re
text = 'I have a problem in Regex, How do I get rid of the Capital I\'s provided I want to retain words occurring together as logical entity with a Capital letter in the beginning of each word like International Business Machine'
found = re.findall('(?:[A-Z](?:[\w]|(?<=\w\w)\')+\s?)+',text)
print found
"
How do you sort multiple columns of a CSV file using python?,"[[-3.0, 1.0, 4.07, -0.81185718], 
 [-2.8, -1.0, 3.27, 1.29303723], 
 [-2.8, -0.4, 4.87, -0.51165026]]
"
Python counterpart to partial for ignoring an argument,">>> def test(a, b):
        print(a, b)
>>> test3 = ignoreargs(test, 3)
>>> test3(1, 2, 3, 4, 5)
4 5
"
Delaying declaring static files/folders with CherryPy,"def staticroot(debug=False):
    root = my_domain_map[cherrypy.request.headers['Host']]
    cherrypy.request.toolmaps['tools']['staticdir']['root'] = root
cherrypy.tools.staticroot = cherrypy.Tool(
    staticroot, point='before_handler', priority=30)
"
"IPython workflow (edit, run)","In [72]: %ed
IPython will make a temporary file named: c:\docume~1\wjwe312\locals~1\temp\ipython_edit_ar8veu.py
"
Parent changing child's attribute,">>> class Parent(object):
...   counter = 0
...   def __init__(self):
...     type(self).counter += 1
... 
>>> class C1(Parent): pass
... 
>>> class C2(Parent): pass
... 
>>> C1().counter
1
>>> C1().counter
2
>>> C1().counter
3
>>> C2().counter
1
>>> C2().counter
2
>>> C2().counter
3
"
Extract a value out of n,">>> l[::3]
[0, 3, 6, 9]
"
progress bar properties python2.72 pywinauto,"window['Progress1'].Texts()
"
Using Pandas Joins to count records that meet conditions,"In [76]:
merged_pds.loc[(merged_pds['Project Type'] == 'Type 1') & (merged_pds['Month'] == 'May'), 'Month'].count()

Out[76]:
2
"
regex to match the last five numbers in a row,"[0-9]{5}(?![0-9])(?!.*[0-9]{5})
"
Regex matching text between two constant strings,"^Copied file (.+?Application Folder)
"
Assigning classes as variables,"    derived.value = 0
    for i in Input:
        derived.value = derived.value + derived.value
    return derived
"
2d dictionary with many keys that will return the same value,"from collections import Iterable

class AliasDefaultDict():
    def __init__(self, default_factory, initial=[]):
        self.aliases = {}
        self.data = {}
        self.factory = default_factory
        for aliases, value in initial:
            self[aliases] = value

    @staticmethod
    def distinguish_keys(key):
        if isinstance(key, Iterable) and not isinstance(key, str):
            return set(key)
        else:
            return {key}

    def __getitem__(self, key):
        keys = self.distinguish_keys(key)
        if keys & self.aliases.keys():
            return self.data[self.aliases[keys.pop()]]
        else:
            value = self.factory()
            self[keys] = value
            return value

    def __setitem__(self, key, value):
        keys = self.distinguish_keys(key)
        if keys & self.aliases.keys():
            self.data[self.aliases[keys.pop()]] = value
        else:
            new_key = object()
            self.data[new_key] = value
            for key in keys:
                self.aliases[key] = new_key
            return value

    def __repr__(self):
        representation = defaultdict(list)
        for alias, value in self.aliases.items():
            representation[value].append(alias)
        return ""AliasDefaultDict({}, {})"".format(repr(self.factory), repr([(aliases, self.data[value]) for value, aliases in representation.items()]))
"
sorting arrays in numpy by column,"In [1]: import numpy as np

In [2]: a = np.array([[1,2,3],[4,5,6],[0,0,1]])

In [3]: np.sort(a.view('i8,i8,i8'), order=['f1'], axis=0).view(np.int)
Out[3]: 
array([[0, 0, 1],
       [1, 2, 3],
       [4, 5, 6]])
"
"Building a tree ""backwards""","def build_tree(node):
    return [node,[build_tree(child) for child in get(node)]]
"
Visitor pattern in python," class visited(object):
     ....
     def accept(visitor):
         visitor.visit(self)
         for child in self.children():
             child.accept(visitor)

 class typeA(visited):
    ....
"
string slicing python in lists,"string=  input(""Enter string:"").slice(',')
"
Unzipping with python's ZipFile lib give a strange result,"$ls
globalize-master.zip
$unzip globalize-master.zip 
Archive:  globalize-master.zip
300a9dc6cb4a08eb847c8565ee01eae4cd9aa35c
   creating: globalize-master/
 extracting: globalize-master/.bowerrc  
  [...]
  inflating: globalize-master/test/util.js  
$ls -l
totale 116
drwxrwxr-x 5 username username   4096 lug 13 07:35 globalize-master
-rw-r--r-- 1 username username 113313 lug 21 12:44 globalize-master.zip
"
cannot dump data by using python ./manage.py dumpdata app,"python manage.py dumpdata [app_name] > [app_name]/fixtures/initial_data.json
"
Multiplication Table program won't work,"def findthetable(multi):
    # table = tablechoice
    # table = int()
    table = int(multi)
    one = table * 1
    two = table * 2
    three = table * 3
    four = table * 4
    five = table * 5
    six = table * 6
    seven = table * 7
    eight = table * 8
    nine = table * 9
    ten = table * 10
    eleven = table * 11
    twelve = table * 12

    multi = [one,two,three,four,five,six,seven,eight,nine,ten,eleven,twelve]
    print(multi)

    return multi

>>> tablechoice = input(""Please enter a number that you would like to find the times tables for: "")
>>> findthetable(tablechoice)
2
4
6
8
10
12
14
16
18
20
22
24
"
Convert Integer to Hex with result always having 2 bytes,"new_data = ('%02X' %i for i in data)
print ''.join(new_data)
"
Best way to print every stage of Binary Tree insertion in Python,"2 3 None
3 5 None
"
Python formatting string escape,"query = (""INSERT INTO `python`.`UDP` (`Packet`, `Destination`, `Source`, `Protocol`, ""
         ""`Version`, `Header_Length`, `TTL`, `Protocol_UDP`, `Target`, `Source_Port`, ""
         ""`Destination_Port`, `Length`) VALUES (NULL, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?))"")
"
How do I print this class variable?,"class Contacts:
    all_contacts = []

    def __init__(self, name, email):
       self.name = name
       self.email = email
       Contacts.all_contacts.append(self)

    def __str__(self):
       return '%s, <%s>' % (self.name, self.email)

    def __repr__(self):
        return str(self)
"
Best way to require exactly one of a set of keyword arguments in Python?,"def get_widget_by_id(id): pass  # your code here


def get_widget_by_name(name): pass  # your code here
"
Loading modules that change sys.path,"import sys
_opath = sys.path[:] #get a copy of whatever sys.path is at this point

#do imports

sys.path = _opath
"
Python numba.jit types,"import numba
import numpy as np

@numba.jit
class name(object):
    @numba.object_(numba.double[:], numba.double)
    def solve(self, x, a):
        y = np.empty(x.shape[0], dtype=np.float64)
        z = np.empty(x.shape[0], dtype=np.float64)
        for k in xrange(x.shape[0]):
            y[k] = x[k] * a
            z[k] = x[k] + a

        return y, z 
"
django save data in database only when certain conditions are met,"class Speech(models.Model):
    location = models.ForeignKey(Location)
    speaker = models.CharField(max_length=100)
    date = models.DateField()

    class Meta:
        unique_together = ('location', 'date')
"
How can I locate a onmouseover element using Selenium in Python?,"from selenium import webdriver
from selenium.webdriver.common.action_chains import ActionChains
driver = webdriver.Firefox()
driver.get(""Your URL HERE"")
"
Changing ASCII values in a list,"word=""HELLO WORLD""
word2=[ord(c) for c in word]
print(word2)

shifted_by_3 = [num + 3 for num in word2]
print(shifted_by_3)

word3 = [chr(num) for num in shifted_by_3]
print word3
"
How to iterate through a module's functions,"import math
[name for name, val in math.__dict__.iteritems() if callable(val)]
['pow',
 'fsum',
 'cosh',
 'ldexp',
 ...]
"
How to check function argument values in python?,"class SomeClass(object):
    @reset_to_none
    def __init__(self, first, middle, last):
        # any of `first`, `middle` or `last` being empty strings will be set to `None`
"
Convert dataframe with odd timestamp to timeseries with pandas,">>> ts = ts.str.replace(r'(\d\d):(\d\d)$', r'\1\2')
>>> ts
0    25/07/14 09 h 31 min 00 s +0200
1    25/07/14 09 h 32 min 00 s +0200
2    25/07/14 09 h 33 min 00 s +0200
dtype: object
>>> ts.map(lambda t: dt.datetime.strptime(t, '%d/%m/%y %H h %M min %S s %z'))
0    2014-07-25 09:31:00+02:00
1    2014-07-25 09:32:00+02:00
2    2014-07-25 09:33:00+02:00
dtype: object
"
python - intersection point of two great circles (lat/long),"(p1_lat1, p1_long1) = (0, 0)
(p1_lat2, p1_long2) = (90, 0)
(p2_lat1, p2_long1) = (0, 0)
(p2_lat2, p2_long2) = (0, 90)
"
NumPy: Vectorize finding closest value in an array for each element in another array,">>> known_array = np.array([-24, -18, -13, -30,  29])
>>> test_array = np.array([-6,  4, -6,  4,  8, -4,  8, -6,  2,  8])
"
